// source: src/utils/ei.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global =
    (typeof globalThis !== 'undefined' && globalThis) ||
    (typeof window !== 'undefined' && window) ||
    (typeof global !== 'undefined' && global) ||
    (typeof self !== 'undefined' && self) ||
    (function () { return this; }).call(null) ||
    Function('return this')();

goog.exportSymbol('proto.ei.AccountTransferPayload', null, global);
goog.exportSymbol('proto.ei.ActionKeyValuePair', null, global);
goog.exportSymbol('proto.ei.AdAttributionInfo', null, global);
goog.exportSymbol('proto.ei.AdAttributionRawData', null, global);
goog.exportSymbol('proto.ei.AdAttributionRow', null, global);
goog.exportSymbol('proto.ei.AdNetwork', null, global);
goog.exportSymbol('proto.ei.AppInfo', null, global);
goog.exportSymbol('proto.ei.ArtifactInventoryItem', null, global);
goog.exportSymbol('proto.ei.ArtifactSpec', null, global);
goog.exportSymbol('proto.ei.ArtifactSpec.Level', null, global);
goog.exportSymbol('proto.ei.ArtifactSpec.Name', null, global);
goog.exportSymbol('proto.ei.ArtifactSpec.Rarity', null, global);
goog.exportSymbol('proto.ei.ArtifactSpec.Type', null, global);
goog.exportSymbol('proto.ei.ArtifactsClientInfo', null, global);
goog.exportSymbol('proto.ei.ArtifactsClientInfo.LaunchCount', null, global);
goog.exportSymbol('proto.ei.ArtifactsConfigurationRequest', null, global);
goog.exportSymbol('proto.ei.ArtifactsConfigurationResponse', null, global);
goog.exportSymbol('proto.ei.ArtifactsConfigurationResponse.ArtifactParameters', null, global);
goog.exportSymbol('proto.ei.ArtifactsConfigurationResponse.CraftingLevelInfo', null, global);
goog.exportSymbol('proto.ei.ArtifactsConfigurationResponse.MissionParameters', null, global);
goog.exportSymbol('proto.ei.ArtifactsConfigurationResponse.MissionParameters.Duration', null, global);
goog.exportSymbol('proto.ei.ArtifactsDB', null, global);
goog.exportSymbol('proto.ei.ArtifactsDB.ActiveArtifactSet', null, global);
goog.exportSymbol('proto.ei.ArtifactsDB.ActiveArtifactSlot', null, global);
goog.exportSymbol('proto.ei.ArtifactsDB.CraftableArtifact', null, global);
goog.exportSymbol('proto.ei.AuthenticateArtifactResponse', null, global);
goog.exportSymbol('proto.ei.AuthenticatedMessage', null, global);
goog.exportSymbol('proto.ei.AutoJoinCoopRequest', null, global);
goog.exportSymbol('proto.ei.Backup', null, global);
goog.exportSymbol('proto.ei.Backup.AchievementInfo', null, global);
goog.exportSymbol('proto.ei.Backup.ActiveBoost', null, global);
goog.exportSymbol('proto.ei.Backup.Artifacts', null, global);
goog.exportSymbol('proto.ei.Backup.Game', null, global);
goog.exportSymbol('proto.ei.Backup.Misc', null, global);
goog.exportSymbol('proto.ei.Backup.Mission', null, global);
goog.exportSymbol('proto.ei.Backup.MissionInfo', null, global);
goog.exportSymbol('proto.ei.Backup.NewsHeadline', null, global);
goog.exportSymbol('proto.ei.Backup.OwnedBoost', null, global);
goog.exportSymbol('proto.ei.Backup.ResearchItem', null, global);
goog.exportSymbol('proto.ei.Backup.Settings', null, global);
goog.exportSymbol('proto.ei.Backup.Shells', null, global);
goog.exportSymbol('proto.ei.Backup.Simulation', null, global);
goog.exportSymbol('proto.ei.Backup.Stats', null, global);
goog.exportSymbol('proto.ei.Backup.Tutorial', null, global);
goog.exportSymbol('proto.ei.BasicRequestInfo', null, global);
goog.exportSymbol('proto.ei.CXPEvalRolloutInfo', null, global);
goog.exportSymbol('proto.ei.CleanAccountRequest', null, global);
goog.exportSymbol('proto.ei.ClearAllUserDataRequest', null, global);
goog.exportSymbol('proto.ei.CollectContractArtifactRewardsRequest', null, global);
goog.exportSymbol('proto.ei.CompleteArtifact', null, global);
goog.exportSymbol('proto.ei.CompleteMissionResponse', null, global);
goog.exportSymbol('proto.ei.CompleteMissionResponse.SecureArtifactSpec', null, global);
goog.exportSymbol('proto.ei.ConfigRequest', null, global);
goog.exportSymbol('proto.ei.ConfigResponse', null, global);
goog.exportSymbol('proto.ei.ConsumeArtifactRequest', null, global);
goog.exportSymbol('proto.ei.ConsumeArtifactResponse', null, global);
goog.exportSymbol('proto.ei.Contract', null, global);
goog.exportSymbol('proto.ei.Contract.Goal', null, global);
goog.exportSymbol('proto.ei.Contract.GoalSet', null, global);
goog.exportSymbol('proto.ei.Contract.GradeSpec', null, global);
goog.exportSymbol('proto.ei.Contract.PlayerGrade', null, global);
goog.exportSymbol('proto.ei.ContractAction', null, global);
goog.exportSymbol('proto.ei.ContractCitation', null, global);
goog.exportSymbol('proto.ei.ContractCoopStatusRequest', null, global);
goog.exportSymbol('proto.ei.ContractCoopStatusResponse', null, global);
goog.exportSymbol('proto.ei.ContractCoopStatusResponse.ChickenRun', null, global);
goog.exportSymbol('proto.ei.ContractCoopStatusResponse.ContributionInfo', null, global);
goog.exportSymbol('proto.ei.ContractCoopStatusResponse.CoopGift', null, global);
goog.exportSymbol('proto.ei.ContractCoopStatusResponse.MemberStatus', null, global);
goog.exportSymbol('proto.ei.ContractCoopStatusResponse.ResponseStatus', null, global);
goog.exportSymbol('proto.ei.ContractCoopStatusResponse.Status', null, global);
goog.exportSymbol('proto.ei.ContractCoopStatusUpdateRequest', null, global);
goog.exportSymbol('proto.ei.ContractCoopStatusUpdateResponse', null, global);
goog.exportSymbol('proto.ei.ContractEvaluation', null, global);
goog.exportSymbol('proto.ei.ContractEvaluation.PoorBehavior', null, global);
goog.exportSymbol('proto.ei.ContractEvaluation.Status', null, global);
goog.exportSymbol('proto.ei.ContractEvaluationBatch', null, global);
goog.exportSymbol('proto.ei.ContractEvaluationBatch.Pair', null, global);
goog.exportSymbol('proto.ei.ContractPlayerInfo', null, global);
goog.exportSymbol('proto.ei.ContractPlayerInfo.Status', null, global);
goog.exportSymbol('proto.ei.ContractSimConfig', null, global);
goog.exportSymbol('proto.ei.ContractSimConfig.ContractGradeSimConfig', null, global);
goog.exportSymbol('proto.ei.ContractSimConfig.ContractGradeSimConfig.GoalParams', null, global);
goog.exportSymbol('proto.ei.ContractSimPoll', null, global);
goog.exportSymbol('proto.ei.ContractSimPollResponse', null, global);
goog.exportSymbol('proto.ei.ContractSimResultUpdate', null, global);
goog.exportSymbol('proto.ei.ContractSimResultUpdate.GoalInfo', null, global);
goog.exportSymbol('proto.ei.ContractsArchive', null, global);
goog.exportSymbol('proto.ei.ContractsRequest', null, global);
goog.exportSymbol('proto.ei.ContractsResponse', null, global);
goog.exportSymbol('proto.ei.CoopBuffHistory', null, global);
goog.exportSymbol('proto.ei.CoopBuffState', null, global);
goog.exportSymbol('proto.ei.CoopChickenRunEntry', null, global);
goog.exportSymbol('proto.ei.CoopCompletionSnapshot', null, global);
goog.exportSymbol('proto.ei.CoopCompletionSnapshot.ContributorSnapshot', null, global);
goog.exportSymbol('proto.ei.CoopLastChickenRunTimes', null, global);
goog.exportSymbol('proto.ei.CraftArtifactRequest', null, global);
goog.exportSymbol('proto.ei.CraftArtifactResponse', null, global);
goog.exportSymbol('proto.ei.CreateCoopRequest', null, global);
goog.exportSymbol('proto.ei.CreateCoopResponse', null, global);
goog.exportSymbol('proto.ei.CurrencyFlowBatchRequest', null, global);
goog.exportSymbol('proto.ei.CurrencyFlowLog', null, global);
goog.exportSymbol('proto.ei.DLCCatalog', null, global);
goog.exportSymbol('proto.ei.DLCItem', null, global);
goog.exportSymbol('proto.ei.DailyGiftInfo', null, global);
goog.exportSymbol('proto.ei.DeviceFormFactor', null, global);
goog.exportSymbol('proto.ei.DeviceInfo', null, global);
goog.exportSymbol('proto.ei.Egg', null, global);
goog.exportSymbol('proto.ei.EggIncAdConfig', null, global);
goog.exportSymbol('proto.ei.EggIncCurrentEvents', null, global);
goog.exportSymbol('proto.ei.EggIncEvent', null, global);
goog.exportSymbol('proto.ei.EggIncFirstContactRequest', null, global);
goog.exportSymbol('proto.ei.EggIncFirstContactResponse', null, global);
goog.exportSymbol('proto.ei.EggIncFirstContactResponse.ErrorCodes', null, global);
goog.exportSymbol('proto.ei.FarmProductionParams', null, global);
goog.exportSymbol('proto.ei.FarmType', null, global);
goog.exportSymbol('proto.ei.GameModifier', null, global);
goog.exportSymbol('proto.ei.GameModifier.GameDimension', null, global);
goog.exportSymbol('proto.ei.GenericAction', null, global);
goog.exportSymbol('proto.ei.GenericActionBatchRequest', null, global);
goog.exportSymbol('proto.ei.GetActiveMissionsResponse', null, global);
goog.exportSymbol('proto.ei.GetPeriodicalsRequest', null, global);
goog.exportSymbol('proto.ei.GiftPlayerCoopRequest', null, global);
goog.exportSymbol('proto.ei.GoalType', null, global);
goog.exportSymbol('proto.ei.IAPSaleEntry', null, global);
goog.exportSymbol('proto.ei.InGameMail', null, global);
goog.exportSymbol('proto.ei.InventorySlot', null, global);
goog.exportSymbol('proto.ei.JoinCoopRequest', null, global);
goog.exportSymbol('proto.ei.JoinCoopResponse', null, global);
goog.exportSymbol('proto.ei.KickPlayerCoopRequest', null, global);
goog.exportSymbol('proto.ei.KickPlayerCoopRequest.Reason', null, global);
goog.exportSymbol('proto.ei.LeaderboardAnalysis', null, global);
goog.exportSymbol('proto.ei.LeaderboardAnalysis.Chunk', null, global);
goog.exportSymbol('proto.ei.LeaderboardInfo', null, global);
goog.exportSymbol('proto.ei.LeaderboardInfo.Season', null, global);
goog.exportSymbol('proto.ei.LeaderboardRequest', null, global);
goog.exportSymbol('proto.ei.LeaderboardResponse', null, global);
goog.exportSymbol('proto.ei.LeaderboardResponse.Entry', null, global);
goog.exportSymbol('proto.ei.LeaderboardScope', null, global);
goog.exportSymbol('proto.ei.LeaveCoopRequest', null, global);
goog.exportSymbol('proto.ei.LiveConfig', null, global);
goog.exportSymbol('proto.ei.LiveConfig.BoostsConfig', null, global);
goog.exportSymbol('proto.ei.LiveConfig.BoostsConfig.ItemConfig', null, global);
goog.exportSymbol('proto.ei.LiveConfig.GiftConfig', null, global);
goog.exportSymbol('proto.ei.LiveConfig.GiftConfig.GiftMuConfig', null, global);
goog.exportSymbol('proto.ei.LiveConfig.GiftConfig.GiftValueConfig', null, global);
goog.exportSymbol('proto.ei.LiveConfig.HelpConfig', null, global);
goog.exportSymbol('proto.ei.LiveConfig.HelpConfig.HowToVideoInfo', null, global);
goog.exportSymbol('proto.ei.LiveConfig.HelpConfig.HowToVideoInfo.Type', null, global);
goog.exportSymbol('proto.ei.LiveConfig.MiscConfig', null, global);
goog.exportSymbol('proto.ei.LocalContract', null, global);
goog.exportSymbol('proto.ei.LogCompleteMissionPayload', null, global);
goog.exportSymbol('proto.ei.LogConsumeArtifactPayload', null, global);
goog.exportSymbol('proto.ei.LogCraftArtifactPayload', null, global);
goog.exportSymbol('proto.ei.LogSetArtifactPayload', null, global);
goog.exportSymbol('proto.ei.MailDB', null, global);
goog.exportSymbol('proto.ei.MailState', null, global);
goog.exportSymbol('proto.ei.MailState.TipState', null, global);
goog.exportSymbol('proto.ei.MissionInfo', null, global);
goog.exportSymbol('proto.ei.MissionInfo.DurationType', null, global);
goog.exportSymbol('proto.ei.MissionInfo.Fuel', null, global);
goog.exportSymbol('proto.ei.MissionInfo.Spaceship', null, global);
goog.exportSymbol('proto.ei.MissionInfo.Status', null, global);
goog.exportSymbol('proto.ei.MissionRequest', null, global);
goog.exportSymbol('proto.ei.MissionResponse', null, global);
goog.exportSymbol('proto.ei.MyContracts', null, global);
goog.exportSymbol('proto.ei.PeriodicalsResponse', null, global);
goog.exportSymbol('proto.ei.PeriodicalsResponse.RoyaltyInfo', null, global);
goog.exportSymbol('proto.ei.Platform', null, global);
goog.exportSymbol('proto.ei.PlayerFarmInfo', null, global);
goog.exportSymbol('proto.ei.QueryCoopRequest', null, global);
goog.exportSymbol('proto.ei.QueryCoopResponse', null, global);
goog.exportSymbol('proto.ei.ReportPlayerCoopRequest', null, global);
goog.exportSymbol('proto.ei.ReportPlayerCoopRequest.Reason', null, global);
goog.exportSymbol('proto.ei.ReturnEDTPayload', null, global);
goog.exportSymbol('proto.ei.Reward', null, global);
goog.exportSymbol('proto.ei.RewardType', null, global);
goog.exportSymbol('proto.ei.SalesInfo', null, global);
goog.exportSymbol('proto.ei.SalesInfoRequest', null, global);
goog.exportSymbol('proto.ei.SaveBackupResponse', null, global);
goog.exportSymbol('proto.ei.SaveBackupResponse.ErrorCodes', null, global);
goog.exportSymbol('proto.ei.SendChickenRunCoopRequest', null, global);
goog.exportSymbol('proto.ei.ServerGift', null, global);
goog.exportSymbol('proto.ei.SetArtifactRequest', null, global);
goog.exportSymbol('proto.ei.SetArtifactResponse', null, global);
goog.exportSymbol('proto.ei.ShellDB', null, global);
goog.exportSymbol('proto.ei.ShellDB.ChickenConfig', null, global);
goog.exportSymbol('proto.ei.ShellDB.FarmConfiguration', null, global);
goog.exportSymbol('proto.ei.ShellDB.FarmElement', null, global);
goog.exportSymbol('proto.ei.ShellDB.LightingConfig', null, global);
goog.exportSymbol('proto.ei.ShellDB.SavedFarmConfiguration', null, global);
goog.exportSymbol('proto.ei.ShellDB.ShellConfiguration', null, global);
goog.exportSymbol('proto.ei.ShellDB.ShellElementStatus', null, global);
goog.exportSymbol('proto.ei.ShellDB.ShellGroupConfiguration', null, global);
goog.exportSymbol('proto.ei.ShellDB.ShellSetConfiguration', null, global);
goog.exportSymbol('proto.ei.ShellDB.ShellSetVariationStatus', null, global);
goog.exportSymbol('proto.ei.ShellDB.ShellStatus', null, global);
goog.exportSymbol('proto.ei.ShellGroupSpec', null, global);
goog.exportSymbol('proto.ei.ShellObjectSpec', null, global);
goog.exportSymbol('proto.ei.ShellObjectSpec.ChickenAnimation', null, global);
goog.exportSymbol('proto.ei.ShellObjectSpec.LODPiece', null, global);
goog.exportSymbol('proto.ei.ShellPopularityStats', null, global);
goog.exportSymbol('proto.ei.ShellPopularityStats.Entry', null, global);
goog.exportSymbol('proto.ei.ShellSetSpec', null, global);
goog.exportSymbol('proto.ei.ShellSetSpec.VariationSpec', null, global);
goog.exportSymbol('proto.ei.ShellShowcase', null, global);
goog.exportSymbol('proto.ei.ShellShowcaseListingInfo', null, global);
goog.exportSymbol('proto.ei.ShellShowcaseListingInfo.Status', null, global);
goog.exportSymbol('proto.ei.ShellShowcaseListingSet', null, global);
goog.exportSymbol('proto.ei.ShellSpec', null, global);
goog.exportSymbol('proto.ei.ShellSpec.AssetType', null, global);
goog.exportSymbol('proto.ei.ShellSpec.ShellPiece', null, global);
goog.exportSymbol('proto.ei.ShellsActionBatch', null, global);
goog.exportSymbol('proto.ei.ShellsActionLog', null, global);
goog.exportSymbol('proto.ei.ShowcaseRoyaltyDeliveryConfirmation', null, global);
goog.exportSymbol('proto.ei.SubmitShellShowcaseRequest', null, global);
goog.exportSymbol('proto.ei.SubscriptionChangeHintRequest', null, global);
goog.exportSymbol('proto.ei.TipsDB', null, global);
goog.exportSymbol('proto.ei.UILocation', null, global);
goog.exportSymbol('proto.ei.UpdateCoopPermissionsRequest', null, global);
goog.exportSymbol('proto.ei.UpdateCoopPermissionsResponse', null, global);
goog.exportSymbol('proto.ei.UserDataInfoRequest', null, global);
goog.exportSymbol('proto.ei.UserDataInfoResponse', null, global);
goog.exportSymbol('proto.ei.UserSubscriptionInfo', null, global);
goog.exportSymbol('proto.ei.UserSubscriptionInfo.HistoryEntry', null, global);
goog.exportSymbol('proto.ei.UserSubscriptionInfo.Level', null, global);
goog.exportSymbol('proto.ei.UserSubscriptionInfo.Status', null, global);
goog.exportSymbol('proto.ei.UserType', null, global);
goog.exportSymbol('proto.ei.UserVerificationAnalysis', null, global);
goog.exportSymbol('proto.ei.UserVerificationAnalysis.Status', null, global);
goog.exportSymbol('proto.ei.Vector3', null, global);
goog.exportSymbol('proto.ei.Vector4', null, global);
goog.exportSymbol('proto.ei.VerifyPurchaseRequest', null, global);
goog.exportSymbol('proto.ei.VerifyPurchaseResponse', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ei.Vector3 = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ei.Vector3, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ei.Vector3.displayName = 'proto.ei.Vector3';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ei.Vector4 = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ei.Vector4, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ei.Vector4.displayName = 'proto.ei.Vector4';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ei.Backup = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.ei.Backup.repeatedFields_, null);
};
goog.inherits(proto.ei.Backup, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ei.Backup.displayName = 'proto.ei.Backup';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ei.Backup.Settings = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ei.Backup.Settings, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ei.Backup.Settings.displayName = 'proto.ei.Backup.Settings';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ei.Backup.Tutorial = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.ei.Backup.Tutorial.repeatedFields_, null);
};
goog.inherits(proto.ei.Backup.Tutorial, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ei.Backup.Tutorial.displayName = 'proto.ei.Backup.Tutorial';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ei.Backup.Stats = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.ei.Backup.Stats.repeatedFields_, null);
};
goog.inherits(proto.ei.Backup.Stats, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ei.Backup.Stats.displayName = 'proto.ei.Backup.Stats';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ei.Backup.Game = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.ei.Backup.Game.repeatedFields_, null);
};
goog.inherits(proto.ei.Backup.Game, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ei.Backup.Game.displayName = 'proto.ei.Backup.Game';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ei.Backup.Artifacts = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.ei.Backup.Artifacts.repeatedFields_, null);
};
goog.inherits(proto.ei.Backup.Artifacts, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ei.Backup.Artifacts.displayName = 'proto.ei.Backup.Artifacts';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ei.Backup.Shells = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.ei.Backup.Shells.repeatedFields_, null);
};
goog.inherits(proto.ei.Backup.Shells, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ei.Backup.Shells.displayName = 'proto.ei.Backup.Shells';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ei.Backup.Simulation = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.ei.Backup.Simulation.repeatedFields_, null);
};
goog.inherits(proto.ei.Backup.Simulation, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ei.Backup.Simulation.displayName = 'proto.ei.Backup.Simulation';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ei.Backup.Mission = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.ei.Backup.Mission.repeatedFields_, null);
};
goog.inherits(proto.ei.Backup.Mission, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ei.Backup.Mission.displayName = 'proto.ei.Backup.Mission';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ei.Backup.Misc = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ei.Backup.Misc, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ei.Backup.Misc.displayName = 'proto.ei.Backup.Misc';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ei.Backup.ResearchItem = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ei.Backup.ResearchItem, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ei.Backup.ResearchItem.displayName = 'proto.ei.Backup.ResearchItem';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ei.Backup.NewsHeadline = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ei.Backup.NewsHeadline, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ei.Backup.NewsHeadline.displayName = 'proto.ei.Backup.NewsHeadline';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ei.Backup.AchievementInfo = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ei.Backup.AchievementInfo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ei.Backup.AchievementInfo.displayName = 'proto.ei.Backup.AchievementInfo';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ei.Backup.ActiveBoost = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ei.Backup.ActiveBoost, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ei.Backup.ActiveBoost.displayName = 'proto.ei.Backup.ActiveBoost';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ei.Backup.OwnedBoost = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ei.Backup.OwnedBoost, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ei.Backup.OwnedBoost.displayName = 'proto.ei.Backup.OwnedBoost';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ei.Backup.MissionInfo = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ei.Backup.MissionInfo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ei.Backup.MissionInfo.displayName = 'proto.ei.Backup.MissionInfo';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ei.EggIncFirstContactRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ei.EggIncFirstContactRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ei.EggIncFirstContactRequest.displayName = 'proto.ei.EggIncFirstContactRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ei.EggIncFirstContactResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.ei.EggIncFirstContactResponse.repeatedFields_, null);
};
goog.inherits(proto.ei.EggIncFirstContactResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ei.EggIncFirstContactResponse.displayName = 'proto.ei.EggIncFirstContactResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ei.EggIncAdConfig = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.ei.EggIncAdConfig.repeatedFields_, null);
};
goog.inherits(proto.ei.EggIncAdConfig, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ei.EggIncAdConfig.displayName = 'proto.ei.EggIncAdConfig';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ei.DailyGiftInfo = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ei.DailyGiftInfo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ei.DailyGiftInfo.displayName = 'proto.ei.DailyGiftInfo';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ei.SalesInfoRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ei.SalesInfoRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ei.SalesInfoRequest.displayName = 'proto.ei.SalesInfoRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ei.IAPSaleEntry = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ei.IAPSaleEntry, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ei.IAPSaleEntry.displayName = 'proto.ei.IAPSaleEntry';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ei.SalesInfo = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.ei.SalesInfo.repeatedFields_, null);
};
goog.inherits(proto.ei.SalesInfo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ei.SalesInfo.displayName = 'proto.ei.SalesInfo';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ei.EggIncEvent = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ei.EggIncEvent, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ei.EggIncEvent.displayName = 'proto.ei.EggIncEvent';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ei.EggIncCurrentEvents = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.ei.EggIncCurrentEvents.repeatedFields_, null);
};
goog.inherits(proto.ei.EggIncCurrentEvents, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ei.EggIncCurrentEvents.displayName = 'proto.ei.EggIncCurrentEvents';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ei.DeviceInfo = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ei.DeviceInfo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ei.DeviceInfo.displayName = 'proto.ei.DeviceInfo';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ei.AppInfo = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ei.AppInfo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ei.AppInfo.displayName = 'proto.ei.AppInfo';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ei.ActionKeyValuePair = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ei.ActionKeyValuePair, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ei.ActionKeyValuePair.displayName = 'proto.ei.ActionKeyValuePair';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ei.GenericAction = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.ei.GenericAction.repeatedFields_, null);
};
goog.inherits(proto.ei.GenericAction, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ei.GenericAction.displayName = 'proto.ei.GenericAction';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ei.GenericActionBatchRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.ei.GenericActionBatchRequest.repeatedFields_, null);
};
goog.inherits(proto.ei.GenericActionBatchRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ei.GenericActionBatchRequest.displayName = 'proto.ei.GenericActionBatchRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ei.VerifyPurchaseRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ei.VerifyPurchaseRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ei.VerifyPurchaseRequest.displayName = 'proto.ei.VerifyPurchaseRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ei.VerifyPurchaseResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ei.VerifyPurchaseResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ei.VerifyPurchaseResponse.displayName = 'proto.ei.VerifyPurchaseResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ei.CurrencyFlowLog = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ei.CurrencyFlowLog, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ei.CurrencyFlowLog.displayName = 'proto.ei.CurrencyFlowLog';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ei.CurrencyFlowBatchRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.ei.CurrencyFlowBatchRequest.repeatedFields_, null);
};
goog.inherits(proto.ei.CurrencyFlowBatchRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ei.CurrencyFlowBatchRequest.displayName = 'proto.ei.CurrencyFlowBatchRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ei.Reward = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ei.Reward, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ei.Reward.displayName = 'proto.ei.Reward';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ei.GameModifier = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ei.GameModifier, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ei.GameModifier.displayName = 'proto.ei.GameModifier';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ei.Contract = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.ei.Contract.repeatedFields_, null);
};
goog.inherits(proto.ei.Contract, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ei.Contract.displayName = 'proto.ei.Contract';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ei.Contract.Goal = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ei.Contract.Goal, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ei.Contract.Goal.displayName = 'proto.ei.Contract.Goal';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ei.Contract.GoalSet = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.ei.Contract.GoalSet.repeatedFields_, null);
};
goog.inherits(proto.ei.Contract.GoalSet, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ei.Contract.GoalSet.displayName = 'proto.ei.Contract.GoalSet';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ei.Contract.GradeSpec = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.ei.Contract.GradeSpec.repeatedFields_, null);
};
goog.inherits(proto.ei.Contract.GradeSpec, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ei.Contract.GradeSpec.displayName = 'proto.ei.Contract.GradeSpec';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ei.ContractPlayerInfo = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.ei.ContractPlayerInfo.repeatedFields_, null);
};
goog.inherits(proto.ei.ContractPlayerInfo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ei.ContractPlayerInfo.displayName = 'proto.ei.ContractPlayerInfo';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ei.ContractEvaluation = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.ei.ContractEvaluation.repeatedFields_, null);
};
goog.inherits(proto.ei.ContractEvaluation, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ei.ContractEvaluation.displayName = 'proto.ei.ContractEvaluation';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ei.ContractCitation = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ei.ContractCitation, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ei.ContractCitation.displayName = 'proto.ei.ContractCitation';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ei.ContractEvaluationBatch = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.ei.ContractEvaluationBatch.repeatedFields_, null);
};
goog.inherits(proto.ei.ContractEvaluationBatch, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ei.ContractEvaluationBatch.displayName = 'proto.ei.ContractEvaluationBatch';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ei.ContractEvaluationBatch.Pair = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ei.ContractEvaluationBatch.Pair, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ei.ContractEvaluationBatch.Pair.displayName = 'proto.ei.ContractEvaluationBatch.Pair';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ei.CoopCompletionSnapshot = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.ei.CoopCompletionSnapshot.repeatedFields_, null);
};
goog.inherits(proto.ei.CoopCompletionSnapshot, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ei.CoopCompletionSnapshot.displayName = 'proto.ei.CoopCompletionSnapshot';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ei.CoopCompletionSnapshot.ContributorSnapshot = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ei.CoopCompletionSnapshot.ContributorSnapshot, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ei.CoopCompletionSnapshot.ContributorSnapshot.displayName = 'proto.ei.CoopCompletionSnapshot.ContributorSnapshot';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ei.BasicRequestInfo = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ei.BasicRequestInfo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ei.BasicRequestInfo.displayName = 'proto.ei.BasicRequestInfo';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ei.ContractSimConfig = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.ei.ContractSimConfig.repeatedFields_, null);
};
goog.inherits(proto.ei.ContractSimConfig, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ei.ContractSimConfig.displayName = 'proto.ei.ContractSimConfig';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ei.ContractSimConfig.ContractGradeSimConfig = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.ei.ContractSimConfig.ContractGradeSimConfig.repeatedFields_, null);
};
goog.inherits(proto.ei.ContractSimConfig.ContractGradeSimConfig, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ei.ContractSimConfig.ContractGradeSimConfig.displayName = 'proto.ei.ContractSimConfig.ContractGradeSimConfig';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ei.ContractSimConfig.ContractGradeSimConfig.GoalParams = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ei.ContractSimConfig.ContractGradeSimConfig.GoalParams, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ei.ContractSimConfig.ContractGradeSimConfig.GoalParams.displayName = 'proto.ei.ContractSimConfig.ContractGradeSimConfig.GoalParams';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ei.ContractSimPoll = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ei.ContractSimPoll, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ei.ContractSimPoll.displayName = 'proto.ei.ContractSimPoll';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ei.ContractSimPollResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ei.ContractSimPollResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ei.ContractSimPollResponse.displayName = 'proto.ei.ContractSimPollResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ei.ContractSimResultUpdate = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.ei.ContractSimResultUpdate.repeatedFields_, null);
};
goog.inherits(proto.ei.ContractSimResultUpdate, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ei.ContractSimResultUpdate.displayName = 'proto.ei.ContractSimResultUpdate';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ei.ContractSimResultUpdate.GoalInfo = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ei.ContractSimResultUpdate.GoalInfo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ei.ContractSimResultUpdate.GoalInfo.displayName = 'proto.ei.ContractSimResultUpdate.GoalInfo';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ei.ContractsRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ei.ContractsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ei.ContractsRequest.displayName = 'proto.ei.ContractsRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ei.ContractsResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.ei.ContractsResponse.repeatedFields_, null);
};
goog.inherits(proto.ei.ContractsResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ei.ContractsResponse.displayName = 'proto.ei.ContractsResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ei.ContractCoopStatusRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ei.ContractCoopStatusRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ei.ContractCoopStatusRequest.displayName = 'proto.ei.ContractCoopStatusRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ei.FarmProductionParams = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ei.FarmProductionParams, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ei.FarmProductionParams.displayName = 'proto.ei.FarmProductionParams';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ei.PlayerFarmInfo = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.ei.PlayerFarmInfo.repeatedFields_, null);
};
goog.inherits(proto.ei.PlayerFarmInfo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ei.PlayerFarmInfo.displayName = 'proto.ei.PlayerFarmInfo';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ei.ContractCoopStatusResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.ei.ContractCoopStatusResponse.repeatedFields_, null);
};
goog.inherits(proto.ei.ContractCoopStatusResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ei.ContractCoopStatusResponse.displayName = 'proto.ei.ContractCoopStatusResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ei.ContractCoopStatusResponse.ContributionInfo = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.ei.ContractCoopStatusResponse.ContributionInfo.repeatedFields_, null);
};
goog.inherits(proto.ei.ContractCoopStatusResponse.ContributionInfo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ei.ContractCoopStatusResponse.ContributionInfo.displayName = 'proto.ei.ContractCoopStatusResponse.ContributionInfo';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ei.ContractCoopStatusResponse.CoopGift = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ei.ContractCoopStatusResponse.CoopGift, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ei.ContractCoopStatusResponse.CoopGift.displayName = 'proto.ei.ContractCoopStatusResponse.CoopGift';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ei.ContractCoopStatusResponse.ChickenRun = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ei.ContractCoopStatusResponse.ChickenRun, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ei.ContractCoopStatusResponse.ChickenRun.displayName = 'proto.ei.ContractCoopStatusResponse.ChickenRun';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ei.LocalContract = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.ei.LocalContract.repeatedFields_, null);
};
goog.inherits(proto.ei.LocalContract, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ei.LocalContract.displayName = 'proto.ei.LocalContract';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ei.MyContracts = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.ei.MyContracts.repeatedFields_, null);
};
goog.inherits(proto.ei.MyContracts, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ei.MyContracts.displayName = 'proto.ei.MyContracts';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ei.QueryCoopRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ei.QueryCoopRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ei.QueryCoopRequest.displayName = 'proto.ei.QueryCoopRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ei.QueryCoopResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ei.QueryCoopResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ei.QueryCoopResponse.displayName = 'proto.ei.QueryCoopResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ei.CreateCoopRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ei.CreateCoopRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ei.CreateCoopRequest.displayName = 'proto.ei.CreateCoopRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ei.CreateCoopResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ei.CreateCoopResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ei.CreateCoopResponse.displayName = 'proto.ei.CreateCoopResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ei.JoinCoopRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ei.JoinCoopRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ei.JoinCoopRequest.displayName = 'proto.ei.JoinCoopRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ei.JoinCoopResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ei.JoinCoopResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ei.JoinCoopResponse.displayName = 'proto.ei.JoinCoopResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ei.AutoJoinCoopRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ei.AutoJoinCoopRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ei.AutoJoinCoopRequest.displayName = 'proto.ei.AutoJoinCoopRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ei.UpdateCoopPermissionsRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ei.UpdateCoopPermissionsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ei.UpdateCoopPermissionsRequest.displayName = 'proto.ei.UpdateCoopPermissionsRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ei.UpdateCoopPermissionsResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ei.UpdateCoopPermissionsResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ei.UpdateCoopPermissionsResponse.displayName = 'proto.ei.UpdateCoopPermissionsResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ei.LeaveCoopRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ei.LeaveCoopRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ei.LeaveCoopRequest.displayName = 'proto.ei.LeaveCoopRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ei.GiftPlayerCoopRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ei.GiftPlayerCoopRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ei.GiftPlayerCoopRequest.displayName = 'proto.ei.GiftPlayerCoopRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ei.SendChickenRunCoopRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ei.SendChickenRunCoopRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ei.SendChickenRunCoopRequest.displayName = 'proto.ei.SendChickenRunCoopRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ei.ReportPlayerCoopRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ei.ReportPlayerCoopRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ei.ReportPlayerCoopRequest.displayName = 'proto.ei.ReportPlayerCoopRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ei.KickPlayerCoopRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ei.KickPlayerCoopRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ei.KickPlayerCoopRequest.displayName = 'proto.ei.KickPlayerCoopRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ei.ContractCoopStatusUpdateRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ei.ContractCoopStatusUpdateRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ei.ContractCoopStatusUpdateRequest.displayName = 'proto.ei.ContractCoopStatusUpdateRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ei.ContractCoopStatusUpdateResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ei.ContractCoopStatusUpdateResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ei.ContractCoopStatusUpdateResponse.displayName = 'proto.ei.ContractCoopStatusUpdateResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ei.CoopBuffState = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ei.CoopBuffState, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ei.CoopBuffState.displayName = 'proto.ei.CoopBuffState';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ei.CoopBuffHistory = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.ei.CoopBuffHistory.repeatedFields_, null);
};
goog.inherits(proto.ei.CoopBuffHistory, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ei.CoopBuffHistory.displayName = 'proto.ei.CoopBuffHistory';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ei.CoopChickenRunEntry = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ei.CoopChickenRunEntry, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ei.CoopChickenRunEntry.displayName = 'proto.ei.CoopChickenRunEntry';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ei.CoopLastChickenRunTimes = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.ei.CoopLastChickenRunTimes.repeatedFields_, null);
};
goog.inherits(proto.ei.CoopLastChickenRunTimes, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ei.CoopLastChickenRunTimes.displayName = 'proto.ei.CoopLastChickenRunTimes';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ei.LeaderboardAnalysis = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.ei.LeaderboardAnalysis.repeatedFields_, null);
};
goog.inherits(proto.ei.LeaderboardAnalysis, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ei.LeaderboardAnalysis.displayName = 'proto.ei.LeaderboardAnalysis';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ei.LeaderboardAnalysis.Chunk = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ei.LeaderboardAnalysis.Chunk, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ei.LeaderboardAnalysis.Chunk.displayName = 'proto.ei.LeaderboardAnalysis.Chunk';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ei.LeaderboardInfo = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.ei.LeaderboardInfo.repeatedFields_, null);
};
goog.inherits(proto.ei.LeaderboardInfo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ei.LeaderboardInfo.displayName = 'proto.ei.LeaderboardInfo';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ei.LeaderboardInfo.Season = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ei.LeaderboardInfo.Season, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ei.LeaderboardInfo.Season.displayName = 'proto.ei.LeaderboardInfo.Season';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ei.LeaderboardRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ei.LeaderboardRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ei.LeaderboardRequest.displayName = 'proto.ei.LeaderboardRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ei.LeaderboardResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.ei.LeaderboardResponse.repeatedFields_, null);
};
goog.inherits(proto.ei.LeaderboardResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ei.LeaderboardResponse.displayName = 'proto.ei.LeaderboardResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ei.LeaderboardResponse.Entry = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ei.LeaderboardResponse.Entry, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ei.LeaderboardResponse.Entry.displayName = 'proto.ei.LeaderboardResponse.Entry';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ei.ContractsArchive = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.ei.ContractsArchive.repeatedFields_, null);
};
goog.inherits(proto.ei.ContractsArchive, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ei.ContractsArchive.displayName = 'proto.ei.ContractsArchive';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ei.ContractAction = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ei.ContractAction, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ei.ContractAction.displayName = 'proto.ei.ContractAction';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ei.UserDataInfoRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ei.UserDataInfoRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ei.UserDataInfoRequest.displayName = 'proto.ei.UserDataInfoRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ei.UserDataInfoResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.ei.UserDataInfoResponse.repeatedFields_, null);
};
goog.inherits(proto.ei.UserDataInfoResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ei.UserDataInfoResponse.displayName = 'proto.ei.UserDataInfoResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ei.ClearAllUserDataRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ei.ClearAllUserDataRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ei.ClearAllUserDataRequest.displayName = 'proto.ei.ClearAllUserDataRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ei.ServerGift = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ei.ServerGift, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ei.ServerGift.displayName = 'proto.ei.ServerGift';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ei.LiveConfig = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ei.LiveConfig, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ei.LiveConfig.displayName = 'proto.ei.LiveConfig';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ei.LiveConfig.BoostsConfig = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.ei.LiveConfig.BoostsConfig.repeatedFields_, null);
};
goog.inherits(proto.ei.LiveConfig.BoostsConfig, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ei.LiveConfig.BoostsConfig.displayName = 'proto.ei.LiveConfig.BoostsConfig';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ei.LiveConfig.BoostsConfig.ItemConfig = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ei.LiveConfig.BoostsConfig.ItemConfig, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ei.LiveConfig.BoostsConfig.ItemConfig.displayName = 'proto.ei.LiveConfig.BoostsConfig.ItemConfig';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ei.LiveConfig.GiftConfig = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.ei.LiveConfig.GiftConfig.repeatedFields_, null);
};
goog.inherits(proto.ei.LiveConfig.GiftConfig, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ei.LiveConfig.GiftConfig.displayName = 'proto.ei.LiveConfig.GiftConfig';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ei.LiveConfig.GiftConfig.GiftValueConfig = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ei.LiveConfig.GiftConfig.GiftValueConfig, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ei.LiveConfig.GiftConfig.GiftValueConfig.displayName = 'proto.ei.LiveConfig.GiftConfig.GiftValueConfig';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ei.LiveConfig.GiftConfig.GiftMuConfig = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ei.LiveConfig.GiftConfig.GiftMuConfig, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ei.LiveConfig.GiftConfig.GiftMuConfig.displayName = 'proto.ei.LiveConfig.GiftConfig.GiftMuConfig';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ei.LiveConfig.MiscConfig = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ei.LiveConfig.MiscConfig, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ei.LiveConfig.MiscConfig.displayName = 'proto.ei.LiveConfig.MiscConfig';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ei.LiveConfig.HelpConfig = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.ei.LiveConfig.HelpConfig.repeatedFields_, null);
};
goog.inherits(proto.ei.LiveConfig.HelpConfig, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ei.LiveConfig.HelpConfig.displayName = 'proto.ei.LiveConfig.HelpConfig';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ei.LiveConfig.HelpConfig.HowToVideoInfo = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ei.LiveConfig.HelpConfig.HowToVideoInfo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ei.LiveConfig.HelpConfig.HowToVideoInfo.displayName = 'proto.ei.LiveConfig.HelpConfig.HowToVideoInfo';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ei.InGameMail = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.ei.InGameMail.repeatedFields_, null);
};
goog.inherits(proto.ei.InGameMail, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ei.InGameMail.displayName = 'proto.ei.InGameMail';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ei.MailDB = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.ei.MailDB.repeatedFields_, null);
};
goog.inherits(proto.ei.MailDB, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ei.MailDB.displayName = 'proto.ei.MailDB';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ei.TipsDB = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.ei.TipsDB.repeatedFields_, null);
};
goog.inherits(proto.ei.TipsDB, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ei.TipsDB.displayName = 'proto.ei.TipsDB';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ei.MailState = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.ei.MailState.repeatedFields_, null);
};
goog.inherits(proto.ei.MailState, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ei.MailState.displayName = 'proto.ei.MailState';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ei.MailState.TipState = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ei.MailState.TipState, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ei.MailState.TipState.displayName = 'proto.ei.MailState.TipState';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ei.PeriodicalsResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.ei.PeriodicalsResponse.repeatedFields_, null);
};
goog.inherits(proto.ei.PeriodicalsResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ei.PeriodicalsResponse.displayName = 'proto.ei.PeriodicalsResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ei.PeriodicalsResponse.RoyaltyInfo = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ei.PeriodicalsResponse.RoyaltyInfo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ei.PeriodicalsResponse.RoyaltyInfo.displayName = 'proto.ei.PeriodicalsResponse.RoyaltyInfo';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ei.GetPeriodicalsRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ei.GetPeriodicalsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ei.GetPeriodicalsRequest.displayName = 'proto.ei.GetPeriodicalsRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ei.ConfigRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ei.ConfigRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ei.ConfigRequest.displayName = 'proto.ei.ConfigRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ei.ConfigResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ei.ConfigResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ei.ConfigResponse.displayName = 'proto.ei.ConfigResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ei.AdAttributionRawData = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ei.AdAttributionRawData, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ei.AdAttributionRawData.displayName = 'proto.ei.AdAttributionRawData';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ei.AdAttributionRow = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ei.AdAttributionRow, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ei.AdAttributionRow.displayName = 'proto.ei.AdAttributionRow';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ei.AdAttributionInfo = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ei.AdAttributionInfo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ei.AdAttributionInfo.displayName = 'proto.ei.AdAttributionInfo';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ei.ArtifactsClientInfo = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.ei.ArtifactsClientInfo.repeatedFields_, null);
};
goog.inherits(proto.ei.ArtifactsClientInfo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ei.ArtifactsClientInfo.displayName = 'proto.ei.ArtifactsClientInfo';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ei.ArtifactsClientInfo.LaunchCount = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ei.ArtifactsClientInfo.LaunchCount, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ei.ArtifactsClientInfo.LaunchCount.displayName = 'proto.ei.ArtifactsClientInfo.LaunchCount';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ei.MissionInfo = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.ei.MissionInfo.repeatedFields_, null);
};
goog.inherits(proto.ei.MissionInfo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ei.MissionInfo.displayName = 'proto.ei.MissionInfo';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ei.MissionInfo.Fuel = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ei.MissionInfo.Fuel, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ei.MissionInfo.Fuel.displayName = 'proto.ei.MissionInfo.Fuel';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ei.ArtifactSpec = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ei.ArtifactSpec, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ei.ArtifactSpec.displayName = 'proto.ei.ArtifactSpec';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ei.CompleteArtifact = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.ei.CompleteArtifact.repeatedFields_, null);
};
goog.inherits(proto.ei.CompleteArtifact, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ei.CompleteArtifact.displayName = 'proto.ei.CompleteArtifact';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ei.ArtifactInventoryItem = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ei.ArtifactInventoryItem, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ei.ArtifactInventoryItem.displayName = 'proto.ei.ArtifactInventoryItem';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ei.InventorySlot = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ei.InventorySlot, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ei.InventorySlot.displayName = 'proto.ei.InventorySlot';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ei.ArtifactsConfigurationRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ei.ArtifactsConfigurationRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ei.ArtifactsConfigurationRequest.displayName = 'proto.ei.ArtifactsConfigurationRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ei.ArtifactsConfigurationResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.ei.ArtifactsConfigurationResponse.repeatedFields_, null);
};
goog.inherits(proto.ei.ArtifactsConfigurationResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ei.ArtifactsConfigurationResponse.displayName = 'proto.ei.ArtifactsConfigurationResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ei.ArtifactsConfigurationResponse.MissionParameters = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.ei.ArtifactsConfigurationResponse.MissionParameters.repeatedFields_, null);
};
goog.inherits(proto.ei.ArtifactsConfigurationResponse.MissionParameters, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ei.ArtifactsConfigurationResponse.MissionParameters.displayName = 'proto.ei.ArtifactsConfigurationResponse.MissionParameters';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ei.ArtifactsConfigurationResponse.MissionParameters.Duration = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ei.ArtifactsConfigurationResponse.MissionParameters.Duration, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ei.ArtifactsConfigurationResponse.MissionParameters.Duration.displayName = 'proto.ei.ArtifactsConfigurationResponse.MissionParameters.Duration';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ei.ArtifactsConfigurationResponse.ArtifactParameters = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ei.ArtifactsConfigurationResponse.ArtifactParameters, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ei.ArtifactsConfigurationResponse.ArtifactParameters.displayName = 'proto.ei.ArtifactsConfigurationResponse.ArtifactParameters';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ei.ArtifactsConfigurationResponse.CraftingLevelInfo = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ei.ArtifactsConfigurationResponse.CraftingLevelInfo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ei.ArtifactsConfigurationResponse.CraftingLevelInfo.displayName = 'proto.ei.ArtifactsConfigurationResponse.CraftingLevelInfo';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ei.MissionRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ei.MissionRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ei.MissionRequest.displayName = 'proto.ei.MissionRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ei.MissionResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ei.MissionResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ei.MissionResponse.displayName = 'proto.ei.MissionResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ei.GetActiveMissionsResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.ei.GetActiveMissionsResponse.repeatedFields_, null);
};
goog.inherits(proto.ei.GetActiveMissionsResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ei.GetActiveMissionsResponse.displayName = 'proto.ei.GetActiveMissionsResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ei.CompleteMissionResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.ei.CompleteMissionResponse.repeatedFields_, null);
};
goog.inherits(proto.ei.CompleteMissionResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ei.CompleteMissionResponse.displayName = 'proto.ei.CompleteMissionResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ei.CompleteMissionResponse.SecureArtifactSpec = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ei.CompleteMissionResponse.SecureArtifactSpec, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ei.CompleteMissionResponse.SecureArtifactSpec.displayName = 'proto.ei.CompleteMissionResponse.SecureArtifactSpec';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ei.CollectContractArtifactRewardsRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ei.CollectContractArtifactRewardsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ei.CollectContractArtifactRewardsRequest.displayName = 'proto.ei.CollectContractArtifactRewardsRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ei.CraftArtifactRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.ei.CraftArtifactRequest.repeatedFields_, null);
};
goog.inherits(proto.ei.CraftArtifactRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ei.CraftArtifactRequest.displayName = 'proto.ei.CraftArtifactRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ei.CraftArtifactResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ei.CraftArtifactResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ei.CraftArtifactResponse.displayName = 'proto.ei.CraftArtifactResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ei.ConsumeArtifactRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.ei.ConsumeArtifactRequest.repeatedFields_, null);
};
goog.inherits(proto.ei.ConsumeArtifactRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ei.ConsumeArtifactRequest.displayName = 'proto.ei.ConsumeArtifactRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ei.ConsumeArtifactResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.ei.ConsumeArtifactResponse.repeatedFields_, null);
};
goog.inherits(proto.ei.ConsumeArtifactResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ei.ConsumeArtifactResponse.displayName = 'proto.ei.ConsumeArtifactResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ei.AuthenticateArtifactResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ei.AuthenticateArtifactResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ei.AuthenticateArtifactResponse.displayName = 'proto.ei.AuthenticateArtifactResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ei.SetArtifactRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.ei.SetArtifactRequest.repeatedFields_, null);
};
goog.inherits(proto.ei.SetArtifactRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ei.SetArtifactRequest.displayName = 'proto.ei.SetArtifactRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ei.SetArtifactResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ei.SetArtifactResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ei.SetArtifactResponse.displayName = 'proto.ei.SetArtifactResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ei.ArtifactsDB = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.ei.ArtifactsDB.repeatedFields_, null);
};
goog.inherits(proto.ei.ArtifactsDB, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ei.ArtifactsDB.displayName = 'proto.ei.ArtifactsDB';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ei.ArtifactsDB.ActiveArtifactSlot = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ei.ArtifactsDB.ActiveArtifactSlot, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ei.ArtifactsDB.ActiveArtifactSlot.displayName = 'proto.ei.ArtifactsDB.ActiveArtifactSlot';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ei.ArtifactsDB.ActiveArtifactSet = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.ei.ArtifactsDB.ActiveArtifactSet.repeatedFields_, null);
};
goog.inherits(proto.ei.ArtifactsDB.ActiveArtifactSet, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ei.ArtifactsDB.ActiveArtifactSet.displayName = 'proto.ei.ArtifactsDB.ActiveArtifactSet';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ei.ArtifactsDB.CraftableArtifact = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ei.ArtifactsDB.CraftableArtifact, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ei.ArtifactsDB.CraftableArtifact.displayName = 'proto.ei.ArtifactsDB.CraftableArtifact';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ei.AuthenticatedMessage = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ei.AuthenticatedMessage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ei.AuthenticatedMessage.displayName = 'proto.ei.AuthenticatedMessage';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ei.LogCompleteMissionPayload = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ei.LogCompleteMissionPayload, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ei.LogCompleteMissionPayload.displayName = 'proto.ei.LogCompleteMissionPayload';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ei.LogCraftArtifactPayload = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ei.LogCraftArtifactPayload, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ei.LogCraftArtifactPayload.displayName = 'proto.ei.LogCraftArtifactPayload';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ei.LogConsumeArtifactPayload = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ei.LogConsumeArtifactPayload, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ei.LogConsumeArtifactPayload.displayName = 'proto.ei.LogConsumeArtifactPayload';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ei.LogSetArtifactPayload = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ei.LogSetArtifactPayload, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ei.LogSetArtifactPayload.displayName = 'proto.ei.LogSetArtifactPayload';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ei.AccountTransferPayload = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ei.AccountTransferPayload, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ei.AccountTransferPayload.displayName = 'proto.ei.AccountTransferPayload';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ei.SaveBackupResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ei.SaveBackupResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ei.SaveBackupResponse.displayName = 'proto.ei.SaveBackupResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ei.CleanAccountRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ei.CleanAccountRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ei.CleanAccountRequest.displayName = 'proto.ei.CleanAccountRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ei.ReturnEDTPayload = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ei.ReturnEDTPayload, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ei.ReturnEDTPayload.displayName = 'proto.ei.ReturnEDTPayload';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ei.DLCItem = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ei.DLCItem, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ei.DLCItem.displayName = 'proto.ei.DLCItem';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ei.ShellSpec = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.ei.ShellSpec.repeatedFields_, null);
};
goog.inherits(proto.ei.ShellSpec, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ei.ShellSpec.displayName = 'proto.ei.ShellSpec';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ei.ShellSpec.ShellPiece = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ei.ShellSpec.ShellPiece, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ei.ShellSpec.ShellPiece.displayName = 'proto.ei.ShellSpec.ShellPiece';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ei.ShellSetSpec = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.ei.ShellSetSpec.repeatedFields_, null);
};
goog.inherits(proto.ei.ShellSetSpec, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ei.ShellSetSpec.displayName = 'proto.ei.ShellSetSpec';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ei.ShellSetSpec.VariationSpec = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ei.ShellSetSpec.VariationSpec, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ei.ShellSetSpec.VariationSpec.displayName = 'proto.ei.ShellSetSpec.VariationSpec';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ei.ShellObjectSpec = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.ei.ShellObjectSpec.repeatedFields_, null);
};
goog.inherits(proto.ei.ShellObjectSpec, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ei.ShellObjectSpec.displayName = 'proto.ei.ShellObjectSpec';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ei.ShellObjectSpec.LODPiece = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ei.ShellObjectSpec.LODPiece, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ei.ShellObjectSpec.LODPiece.displayName = 'proto.ei.ShellObjectSpec.LODPiece';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ei.ShellGroupSpec = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.ei.ShellGroupSpec.repeatedFields_, null);
};
goog.inherits(proto.ei.ShellGroupSpec, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ei.ShellGroupSpec.displayName = 'proto.ei.ShellGroupSpec';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ei.DLCCatalog = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.ei.DLCCatalog.repeatedFields_, null);
};
goog.inherits(proto.ei.DLCCatalog, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ei.DLCCatalog.displayName = 'proto.ei.DLCCatalog';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ei.ShellDB = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.ei.ShellDB.repeatedFields_, null);
};
goog.inherits(proto.ei.ShellDB, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ei.ShellDB.displayName = 'proto.ei.ShellDB';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ei.ShellDB.ShellStatus = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ei.ShellDB.ShellStatus, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ei.ShellDB.ShellStatus.displayName = 'proto.ei.ShellDB.ShellStatus';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ei.ShellDB.ShellElementStatus = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ei.ShellDB.ShellElementStatus, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ei.ShellDB.ShellElementStatus.displayName = 'proto.ei.ShellDB.ShellElementStatus';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ei.ShellDB.ShellSetVariationStatus = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.ei.ShellDB.ShellSetVariationStatus.repeatedFields_, null);
};
goog.inherits(proto.ei.ShellDB.ShellSetVariationStatus, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ei.ShellDB.ShellSetVariationStatus.displayName = 'proto.ei.ShellDB.ShellSetVariationStatus';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ei.ShellDB.FarmConfiguration = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.ei.ShellDB.FarmConfiguration.repeatedFields_, null);
};
goog.inherits(proto.ei.ShellDB.FarmConfiguration, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ei.ShellDB.FarmConfiguration.displayName = 'proto.ei.ShellDB.FarmConfiguration';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ei.ShellDB.SavedFarmConfiguration = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ei.ShellDB.SavedFarmConfiguration, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ei.ShellDB.SavedFarmConfiguration.displayName = 'proto.ei.ShellDB.SavedFarmConfiguration';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ei.ShellDB.ShellConfiguration = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ei.ShellDB.ShellConfiguration, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ei.ShellDB.ShellConfiguration.displayName = 'proto.ei.ShellDB.ShellConfiguration';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ei.ShellDB.ShellSetConfiguration = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ei.ShellDB.ShellSetConfiguration, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ei.ShellDB.ShellSetConfiguration.displayName = 'proto.ei.ShellDB.ShellSetConfiguration';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ei.ShellDB.ShellGroupConfiguration = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ei.ShellDB.ShellGroupConfiguration, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ei.ShellDB.ShellGroupConfiguration.displayName = 'proto.ei.ShellDB.ShellGroupConfiguration';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ei.ShellDB.ChickenConfig = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ei.ShellDB.ChickenConfig, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ei.ShellDB.ChickenConfig.displayName = 'proto.ei.ShellDB.ChickenConfig';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ei.ShellDB.LightingConfig = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ei.ShellDB.LightingConfig, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ei.ShellDB.LightingConfig.displayName = 'proto.ei.ShellDB.LightingConfig';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ei.ShellPopularityStats = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.ei.ShellPopularityStats.repeatedFields_, null);
};
goog.inherits(proto.ei.ShellPopularityStats, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ei.ShellPopularityStats.displayName = 'proto.ei.ShellPopularityStats';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ei.ShellPopularityStats.Entry = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ei.ShellPopularityStats.Entry, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ei.ShellPopularityStats.Entry.displayName = 'proto.ei.ShellPopularityStats.Entry';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ei.ShellsActionLog = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ei.ShellsActionLog, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ei.ShellsActionLog.displayName = 'proto.ei.ShellsActionLog';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ei.SubmitShellShowcaseRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ei.SubmitShellShowcaseRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ei.SubmitShellShowcaseRequest.displayName = 'proto.ei.SubmitShellShowcaseRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ei.ShellShowcase = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.ei.ShellShowcase.repeatedFields_, null);
};
goog.inherits(proto.ei.ShellShowcase, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ei.ShellShowcase.displayName = 'proto.ei.ShellShowcase';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ei.ShellShowcaseListingInfo = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ei.ShellShowcaseListingInfo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ei.ShellShowcaseListingInfo.displayName = 'proto.ei.ShellShowcaseListingInfo';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ei.ShowcaseRoyaltyDeliveryConfirmation = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.ei.ShowcaseRoyaltyDeliveryConfirmation.repeatedFields_, null);
};
goog.inherits(proto.ei.ShowcaseRoyaltyDeliveryConfirmation, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ei.ShowcaseRoyaltyDeliveryConfirmation.displayName = 'proto.ei.ShowcaseRoyaltyDeliveryConfirmation';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ei.ShellShowcaseListingSet = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.ei.ShellShowcaseListingSet.repeatedFields_, null);
};
goog.inherits(proto.ei.ShellShowcaseListingSet, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ei.ShellShowcaseListingSet.displayName = 'proto.ei.ShellShowcaseListingSet';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ei.ShellsActionBatch = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.ei.ShellsActionBatch.repeatedFields_, null);
};
goog.inherits(proto.ei.ShellsActionBatch, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ei.ShellsActionBatch.displayName = 'proto.ei.ShellsActionBatch';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ei.UserVerificationAnalysis = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.ei.UserVerificationAnalysis.repeatedFields_, null);
};
goog.inherits(proto.ei.UserVerificationAnalysis, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ei.UserVerificationAnalysis.displayName = 'proto.ei.UserVerificationAnalysis';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ei.UserSubscriptionInfo = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.ei.UserSubscriptionInfo.repeatedFields_, null);
};
goog.inherits(proto.ei.UserSubscriptionInfo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ei.UserSubscriptionInfo.displayName = 'proto.ei.UserSubscriptionInfo';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ei.UserSubscriptionInfo.HistoryEntry = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ei.UserSubscriptionInfo.HistoryEntry, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ei.UserSubscriptionInfo.HistoryEntry.displayName = 'proto.ei.UserSubscriptionInfo.HistoryEntry';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ei.SubscriptionChangeHintRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ei.SubscriptionChangeHintRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ei.SubscriptionChangeHintRequest.displayName = 'proto.ei.SubscriptionChangeHintRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ei.CXPEvalRolloutInfo = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ei.CXPEvalRolloutInfo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ei.CXPEvalRolloutInfo.displayName = 'proto.ei.CXPEvalRolloutInfo';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ei.Vector3.prototype.toObject = function(opt_includeInstance) {
  return proto.ei.Vector3.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ei.Vector3} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.Vector3.toObject = function(includeInstance, msg) {
  var f, obj = {
    x: (f = jspb.Message.getOptionalFloatingPointField(msg, 1)) == null ? undefined : f,
    y: (f = jspb.Message.getOptionalFloatingPointField(msg, 2)) == null ? undefined : f,
    z: (f = jspb.Message.getOptionalFloatingPointField(msg, 3)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ei.Vector3}
 */
proto.ei.Vector3.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ei.Vector3;
  return proto.ei.Vector3.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ei.Vector3} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ei.Vector3}
 */
proto.ei.Vector3.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setX(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setY(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setZ(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ei.Vector3.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ei.Vector3.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ei.Vector3} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.Vector3.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {number} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeFloat(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeFloat(
      2,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeFloat(
      3,
      f
    );
  }
};


/**
 * optional float x = 1;
 * @return {number}
 */
proto.ei.Vector3.prototype.getX = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 1, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.ei.Vector3} returns this
 */
proto.ei.Vector3.prototype.setX = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.Vector3} returns this
 */
proto.ei.Vector3.prototype.clearX = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.Vector3.prototype.hasX = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional float y = 2;
 * @return {number}
 */
proto.ei.Vector3.prototype.getY = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 2, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.ei.Vector3} returns this
 */
proto.ei.Vector3.prototype.setY = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.Vector3} returns this
 */
proto.ei.Vector3.prototype.clearY = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.Vector3.prototype.hasY = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional float z = 3;
 * @return {number}
 */
proto.ei.Vector3.prototype.getZ = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 3, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.ei.Vector3} returns this
 */
proto.ei.Vector3.prototype.setZ = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.Vector3} returns this
 */
proto.ei.Vector3.prototype.clearZ = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.Vector3.prototype.hasZ = function() {
  return jspb.Message.getField(this, 3) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ei.Vector4.prototype.toObject = function(opt_includeInstance) {
  return proto.ei.Vector4.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ei.Vector4} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.Vector4.toObject = function(includeInstance, msg) {
  var f, obj = {
    x: (f = jspb.Message.getOptionalFloatingPointField(msg, 1)) == null ? undefined : f,
    y: (f = jspb.Message.getOptionalFloatingPointField(msg, 2)) == null ? undefined : f,
    z: (f = jspb.Message.getOptionalFloatingPointField(msg, 3)) == null ? undefined : f,
    w: (f = jspb.Message.getOptionalFloatingPointField(msg, 4)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ei.Vector4}
 */
proto.ei.Vector4.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ei.Vector4;
  return proto.ei.Vector4.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ei.Vector4} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ei.Vector4}
 */
proto.ei.Vector4.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setX(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setY(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setZ(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setW(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ei.Vector4.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ei.Vector4.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ei.Vector4} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.Vector4.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {number} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeFloat(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeFloat(
      2,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeFloat(
      3,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeFloat(
      4,
      f
    );
  }
};


/**
 * optional float x = 1;
 * @return {number}
 */
proto.ei.Vector4.prototype.getX = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 1, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.ei.Vector4} returns this
 */
proto.ei.Vector4.prototype.setX = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.Vector4} returns this
 */
proto.ei.Vector4.prototype.clearX = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.Vector4.prototype.hasX = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional float y = 2;
 * @return {number}
 */
proto.ei.Vector4.prototype.getY = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 2, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.ei.Vector4} returns this
 */
proto.ei.Vector4.prototype.setY = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.Vector4} returns this
 */
proto.ei.Vector4.prototype.clearY = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.Vector4.prototype.hasY = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional float z = 3;
 * @return {number}
 */
proto.ei.Vector4.prototype.getZ = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 3, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.ei.Vector4} returns this
 */
proto.ei.Vector4.prototype.setZ = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.Vector4} returns this
 */
proto.ei.Vector4.prototype.clearZ = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.Vector4.prototype.hasZ = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional float w = 4;
 * @return {number}
 */
proto.ei.Vector4.prototype.getW = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 4, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.ei.Vector4} returns this
 */
proto.ei.Vector4.prototype.setW = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.Vector4} returns this
 */
proto.ei.Vector4.prototype.clearW = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.Vector4.prototype.hasW = function() {
  return jspb.Message.getField(this, 4) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.ei.Backup.repeatedFields_ = [12,23];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ei.Backup.prototype.toObject = function(opt_includeInstance) {
  return proto.ei.Backup.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ei.Backup} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.Backup.toObject = function(includeInstance, msg) {
  var f, obj = {
    userId: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    eiUserId: (f = jspb.Message.getField(msg, 18)) == null ? undefined : f,
    gameServicesId: (f = jspb.Message.getField(msg, 16)) == null ? undefined : f,
    pushUserId: (f = jspb.Message.getField(msg, 26)) == null ? undefined : f,
    deviceId: (f = jspb.Message.getField(msg, 17)) == null ? undefined : f,
    userName: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,
    approxTime: (f = jspb.Message.getOptionalFloatingPointField(msg, 3)) == null ? undefined : f,
    version: jspb.Message.getFieldWithDefault(msg, 21, 0),
    forceOfferBackup: (f = jspb.Message.getBooleanField(msg, 20)) == null ? undefined : f,
    forceBackup: (f = jspb.Message.getBooleanField(msg, 22)) == null ? undefined : f,
    settings: (f = msg.getSettings()) && proto.ei.Backup.Settings.toObject(includeInstance, f),
    tutorial: (f = msg.getTutorial()) && proto.ei.Backup.Tutorial.toObject(includeInstance, f),
    stats: (f = msg.getStats()) && proto.ei.Backup.Stats.toObject(includeInstance, f),
    game: (f = msg.getGame()) && proto.ei.Backup.Game.toObject(includeInstance, f),
    artifacts: (f = msg.getArtifacts()) && proto.ei.Backup.Artifacts.toObject(includeInstance, f),
    shells: (f = msg.getShells()) && proto.ei.Backup.Shells.toObject(includeInstance, f),
    sim: (f = msg.getSim()) && proto.ei.Backup.Simulation.toObject(includeInstance, f),
    farmsList: jspb.Message.toObjectList(msg.getFarmsList(),
    proto.ei.Backup.Simulation.toObject, includeInstance),
    mission: (f = msg.getMission()) && proto.ei.Backup.Mission.toObject(includeInstance, f),
    misc: (f = msg.getMisc()) && proto.ei.Backup.Misc.toObject(includeInstance, f),
    contracts: (f = msg.getContracts()) && proto.ei.MyContracts.toObject(includeInstance, f),
    artifactsDb: (f = msg.getArtifactsDb()) && proto.ei.ArtifactsDB.toObject(includeInstance, f),
    shellDb: (f = msg.getShellDb()) && proto.ei.ShellDB.toObject(includeInstance, f),
    readMailIdsList: (f = jspb.Message.getRepeatedField(msg, 23)) == null ? undefined : f,
    mailState: (f = msg.getMailState()) && proto.ei.MailState.toObject(includeInstance, f),
    checksum: (f = jspb.Message.getField(msg, 100)) == null ? undefined : f,
    signature: (f = jspb.Message.getField(msg, 101)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ei.Backup}
 */
proto.ei.Backup.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ei.Backup;
  return proto.ei.Backup.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ei.Backup} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ei.Backup}
 */
proto.ei.Backup.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserId(value);
      break;
    case 18:
      var value = /** @type {string} */ (reader.readString());
      msg.setEiUserId(value);
      break;
    case 16:
      var value = /** @type {string} */ (reader.readString());
      msg.setGameServicesId(value);
      break;
    case 26:
      var value = /** @type {string} */ (reader.readString());
      msg.setPushUserId(value);
      break;
    case 17:
      var value = /** @type {string} */ (reader.readString());
      msg.setDeviceId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserName(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setApproxTime(value);
      break;
    case 21:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setVersion(value);
      break;
    case 20:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setForceOfferBackup(value);
      break;
    case 22:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setForceBackup(value);
      break;
    case 4:
      var value = new proto.ei.Backup.Settings;
      reader.readMessage(value,proto.ei.Backup.Settings.deserializeBinaryFromReader);
      msg.setSettings(value);
      break;
    case 5:
      var value = new proto.ei.Backup.Tutorial;
      reader.readMessage(value,proto.ei.Backup.Tutorial.deserializeBinaryFromReader);
      msg.setTutorial(value);
      break;
    case 6:
      var value = new proto.ei.Backup.Stats;
      reader.readMessage(value,proto.ei.Backup.Stats.deserializeBinaryFromReader);
      msg.setStats(value);
      break;
    case 7:
      var value = new proto.ei.Backup.Game;
      reader.readMessage(value,proto.ei.Backup.Game.deserializeBinaryFromReader);
      msg.setGame(value);
      break;
    case 14:
      var value = new proto.ei.Backup.Artifacts;
      reader.readMessage(value,proto.ei.Backup.Artifacts.deserializeBinaryFromReader);
      msg.setArtifacts(value);
      break;
    case 25:
      var value = new proto.ei.Backup.Shells;
      reader.readMessage(value,proto.ei.Backup.Shells.deserializeBinaryFromReader);
      msg.setShells(value);
      break;
    case 8:
      var value = new proto.ei.Backup.Simulation;
      reader.readMessage(value,proto.ei.Backup.Simulation.deserializeBinaryFromReader);
      msg.setSim(value);
      break;
    case 12:
      var value = new proto.ei.Backup.Simulation;
      reader.readMessage(value,proto.ei.Backup.Simulation.deserializeBinaryFromReader);
      msg.addFarms(value);
      break;
    case 9:
      var value = new proto.ei.Backup.Mission;
      reader.readMessage(value,proto.ei.Backup.Mission.deserializeBinaryFromReader);
      msg.setMission(value);
      break;
    case 10:
      var value = new proto.ei.Backup.Misc;
      reader.readMessage(value,proto.ei.Backup.Misc.deserializeBinaryFromReader);
      msg.setMisc(value);
      break;
    case 13:
      var value = new proto.ei.MyContracts;
      reader.readMessage(value,proto.ei.MyContracts.deserializeBinaryFromReader);
      msg.setContracts(value);
      break;
    case 15:
      var value = new proto.ei.ArtifactsDB;
      reader.readMessage(value,proto.ei.ArtifactsDB.deserializeBinaryFromReader);
      msg.setArtifactsDb(value);
      break;
    case 24:
      var value = new proto.ei.ShellDB;
      reader.readMessage(value,proto.ei.ShellDB.deserializeBinaryFromReader);
      msg.setShellDb(value);
      break;
    case 23:
      var value = /** @type {string} */ (reader.readString());
      msg.addReadMailIds(value);
      break;
    case 27:
      var value = new proto.ei.MailState;
      reader.readMessage(value,proto.ei.MailState.deserializeBinaryFromReader);
      msg.setMailState(value);
      break;
    case 100:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setChecksum(value);
      break;
    case 101:
      var value = /** @type {string} */ (reader.readString());
      msg.setSignature(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ei.Backup.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ei.Backup.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ei.Backup} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.Backup.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 18));
  if (f != null) {
    writer.writeString(
      18,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 16));
  if (f != null) {
    writer.writeString(
      16,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 26));
  if (f != null) {
    writer.writeString(
      26,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 17));
  if (f != null) {
    writer.writeString(
      17,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeDouble(
      3,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 21));
  if (f != null) {
    writer.writeUint32(
      21,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 20));
  if (f != null) {
    writer.writeBool(
      20,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 22));
  if (f != null) {
    writer.writeBool(
      22,
      f
    );
  }
  f = message.getSettings();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.ei.Backup.Settings.serializeBinaryToWriter
    );
  }
  f = message.getTutorial();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.ei.Backup.Tutorial.serializeBinaryToWriter
    );
  }
  f = message.getStats();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      proto.ei.Backup.Stats.serializeBinaryToWriter
    );
  }
  f = message.getGame();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      proto.ei.Backup.Game.serializeBinaryToWriter
    );
  }
  f = message.getArtifacts();
  if (f != null) {
    writer.writeMessage(
      14,
      f,
      proto.ei.Backup.Artifacts.serializeBinaryToWriter
    );
  }
  f = message.getShells();
  if (f != null) {
    writer.writeMessage(
      25,
      f,
      proto.ei.Backup.Shells.serializeBinaryToWriter
    );
  }
  f = message.getSim();
  if (f != null) {
    writer.writeMessage(
      8,
      f,
      proto.ei.Backup.Simulation.serializeBinaryToWriter
    );
  }
  f = message.getFarmsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      12,
      f,
      proto.ei.Backup.Simulation.serializeBinaryToWriter
    );
  }
  f = message.getMission();
  if (f != null) {
    writer.writeMessage(
      9,
      f,
      proto.ei.Backup.Mission.serializeBinaryToWriter
    );
  }
  f = message.getMisc();
  if (f != null) {
    writer.writeMessage(
      10,
      f,
      proto.ei.Backup.Misc.serializeBinaryToWriter
    );
  }
  f = message.getContracts();
  if (f != null) {
    writer.writeMessage(
      13,
      f,
      proto.ei.MyContracts.serializeBinaryToWriter
    );
  }
  f = message.getArtifactsDb();
  if (f != null) {
    writer.writeMessage(
      15,
      f,
      proto.ei.ArtifactsDB.serializeBinaryToWriter
    );
  }
  f = message.getShellDb();
  if (f != null) {
    writer.writeMessage(
      24,
      f,
      proto.ei.ShellDB.serializeBinaryToWriter
    );
  }
  f = message.getReadMailIdsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      23,
      f
    );
  }
  f = message.getMailState();
  if (f != null) {
    writer.writeMessage(
      27,
      f,
      proto.ei.MailState.serializeBinaryToWriter
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 100));
  if (f != null) {
    writer.writeUint64(
      100,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 101));
  if (f != null) {
    writer.writeString(
      101,
      f
    );
  }
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ei.Backup.Settings.prototype.toObject = function(opt_includeInstance) {
  return proto.ei.Backup.Settings.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ei.Backup.Settings} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.Backup.Settings.toObject = function(includeInstance, msg) {
  var f, obj = {
    sfx: (f = jspb.Message.getBooleanField(msg, 1)) == null ? undefined : f,
    music: (f = jspb.Message.getBooleanField(msg, 2)) == null ? undefined : f,
    lowBatteryMode: (f = jspb.Message.getBooleanField(msg, 3)) == null ? undefined : f,
    lowPerformanceMode: (f = jspb.Message.getBooleanField(msg, 4)) == null ? undefined : f,
    forceTouchChickenBtn: (f = jspb.Message.getBooleanField(msg, 9)) == null ? undefined : f,
    notificationsQueried: (f = jspb.Message.getBooleanField(msg, 5)) == null ? undefined : f,
    lastNotificationQueryTime: (f = jspb.Message.getOptionalFloatingPointField(msg, 27)) == null ? undefined : f,
    notificationsOn: (f = jspb.Message.getBooleanField(msg, 6)) == null ? undefined : f,
    notifyDailyGift: (f = jspb.Message.getBooleanField(msg, 11)) == null ? undefined : f,
    lowPerformance: (f = jspb.Message.getBooleanField(msg, 10)) == null ? undefined : f,
    autoStopFueling: (f = jspb.Message.getBooleanField(msg, 25)) == null ? undefined : f,
    maxEnabled: (f = jspb.Message.getBooleanField(msg, 26)) == null ? undefined : f,
    hideCcStatus: (f = jspb.Message.getBooleanField(msg, 28)) == null ? undefined : f,
    contractsWidgetEnabled: (f = jspb.Message.getBooleanField(msg, 29)) == null ? undefined : f,
    artifactSparkle: (f = jspb.Message.getBooleanField(msg, 30)) == null ? undefined : f,
    lastBackupTime: (f = jspb.Message.getOptionalFloatingPointField(msg, 24)) == null ? undefined : f,
    coppaQueried: (f = jspb.Message.getBooleanField(msg, 7)) == null ? undefined : f,
    coppaRestricted: (f = jspb.Message.getBooleanField(msg, 8)) == null ? undefined : f,
    gdprConsentQueried: (f = jspb.Message.getBooleanField(msg, 12)) == null ? undefined : f,
    gdprAgeRestricted: (f = jspb.Message.getBooleanField(msg, 16)) == null ? undefined : f,
    gdprConsentGiven: (f = jspb.Message.getBooleanField(msg, 13)) == null ? undefined : f,
    ageQueried: (f = jspb.Message.getBooleanField(msg, 18)) == null ? undefined : f,
    ageRestricted: jspb.Message.getBooleanFieldWithDefault(msg, 19, false),
    dataCollectionConsentQueried: (f = jspb.Message.getBooleanField(msg, 20)) == null ? undefined : f,
    dataCollectionConsentGiven: (f = jspb.Message.getBooleanField(msg, 21)) == null ? undefined : f,
    lastDayAgeQueried: (f = jspb.Message.getField(msg, 17)) == null ? undefined : f,
    userAdsEnabled: jspb.Message.getBooleanFieldWithDefault(msg, 14, true),
    userCloudEnabled: jspb.Message.getBooleanFieldWithDefault(msg, 15, true),
    userAnalyticsEnabled: jspb.Message.getBooleanFieldWithDefault(msg, 22, true),
    userPersonalizedAdsEnabled: jspb.Message.getBooleanFieldWithDefault(msg, 23, true)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ei.Backup.Settings}
 */
proto.ei.Backup.Settings.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ei.Backup.Settings;
  return proto.ei.Backup.Settings.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ei.Backup.Settings} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ei.Backup.Settings}
 */
proto.ei.Backup.Settings.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setSfx(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setMusic(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setLowBatteryMode(value);
      break;
    case 4:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setLowPerformanceMode(value);
      break;
    case 9:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setForceTouchChickenBtn(value);
      break;
    case 5:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setNotificationsQueried(value);
      break;
    case 27:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setLastNotificationQueryTime(value);
      break;
    case 6:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setNotificationsOn(value);
      break;
    case 11:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setNotifyDailyGift(value);
      break;
    case 10:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setLowPerformance(value);
      break;
    case 25:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setAutoStopFueling(value);
      break;
    case 26:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setMaxEnabled(value);
      break;
    case 28:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setHideCcStatus(value);
      break;
    case 29:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setContractsWidgetEnabled(value);
      break;
    case 30:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setArtifactSparkle(value);
      break;
    case 24:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setLastBackupTime(value);
      break;
    case 7:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setCoppaQueried(value);
      break;
    case 8:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setCoppaRestricted(value);
      break;
    case 12:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setGdprConsentQueried(value);
      break;
    case 16:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setGdprAgeRestricted(value);
      break;
    case 13:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setGdprConsentGiven(value);
      break;
    case 18:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setAgeQueried(value);
      break;
    case 19:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setAgeRestricted(value);
      break;
    case 20:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setDataCollectionConsentQueried(value);
      break;
    case 21:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setDataCollectionConsentGiven(value);
      break;
    case 17:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setLastDayAgeQueried(value);
      break;
    case 14:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setUserAdsEnabled(value);
      break;
    case 15:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setUserCloudEnabled(value);
      break;
    case 22:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setUserAnalyticsEnabled(value);
      break;
    case 23:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setUserPersonalizedAdsEnabled(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ei.Backup.Settings.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ei.Backup.Settings.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ei.Backup.Settings} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.Backup.Settings.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {boolean} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeBool(
      1,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeBool(
      2,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeBool(
      3,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeBool(
      4,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 9));
  if (f != null) {
    writer.writeBool(
      9,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeBool(
      5,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 27));
  if (f != null) {
    writer.writeDouble(
      27,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeBool(
      6,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 11));
  if (f != null) {
    writer.writeBool(
      11,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 10));
  if (f != null) {
    writer.writeBool(
      10,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 25));
  if (f != null) {
    writer.writeBool(
      25,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 26));
  if (f != null) {
    writer.writeBool(
      26,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 28));
  if (f != null) {
    writer.writeBool(
      28,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 29));
  if (f != null) {
    writer.writeBool(
      29,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 30));
  if (f != null) {
    writer.writeBool(
      30,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 24));
  if (f != null) {
    writer.writeDouble(
      24,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 7));
  if (f != null) {
    writer.writeBool(
      7,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 8));
  if (f != null) {
    writer.writeBool(
      8,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 12));
  if (f != null) {
    writer.writeBool(
      12,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 16));
  if (f != null) {
    writer.writeBool(
      16,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 13));
  if (f != null) {
    writer.writeBool(
      13,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 18));
  if (f != null) {
    writer.writeBool(
      18,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 19));
  if (f != null) {
    writer.writeBool(
      19,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 20));
  if (f != null) {
    writer.writeBool(
      20,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 21));
  if (f != null) {
    writer.writeBool(
      21,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 17));
  if (f != null) {
    writer.writeUint32(
      17,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 14));
  if (f != null) {
    writer.writeBool(
      14,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 15));
  if (f != null) {
    writer.writeBool(
      15,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 22));
  if (f != null) {
    writer.writeBool(
      22,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 23));
  if (f != null) {
    writer.writeBool(
      23,
      f
    );
  }
};


/**
 * optional bool sfx = 1;
 * @return {boolean}
 */
proto.ei.Backup.Settings.prototype.getSfx = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.ei.Backup.Settings} returns this
 */
proto.ei.Backup.Settings.prototype.setSfx = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.Backup.Settings} returns this
 */
proto.ei.Backup.Settings.prototype.clearSfx = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.Backup.Settings.prototype.hasSfx = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional bool music = 2;
 * @return {boolean}
 */
proto.ei.Backup.Settings.prototype.getMusic = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));
};


/**
 * @param {boolean} value
 * @return {!proto.ei.Backup.Settings} returns this
 */
proto.ei.Backup.Settings.prototype.setMusic = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.Backup.Settings} returns this
 */
proto.ei.Backup.Settings.prototype.clearMusic = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.Backup.Settings.prototype.hasMusic = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional bool low_battery_mode = 3;
 * @return {boolean}
 */
proto.ei.Backup.Settings.prototype.getLowBatteryMode = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 3, false));
};


/**
 * @param {boolean} value
 * @return {!proto.ei.Backup.Settings} returns this
 */
proto.ei.Backup.Settings.prototype.setLowBatteryMode = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.Backup.Settings} returns this
 */
proto.ei.Backup.Settings.prototype.clearLowBatteryMode = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.Backup.Settings.prototype.hasLowBatteryMode = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional bool low_performance_mode = 4;
 * @return {boolean}
 */
proto.ei.Backup.Settings.prototype.getLowPerformanceMode = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 4, false));
};


/**
 * @param {boolean} value
 * @return {!proto.ei.Backup.Settings} returns this
 */
proto.ei.Backup.Settings.prototype.setLowPerformanceMode = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.Backup.Settings} returns this
 */
proto.ei.Backup.Settings.prototype.clearLowPerformanceMode = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.Backup.Settings.prototype.hasLowPerformanceMode = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional bool force_touch_chicken_btn = 9;
 * @return {boolean}
 */
proto.ei.Backup.Settings.prototype.getForceTouchChickenBtn = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 9, false));
};


/**
 * @param {boolean} value
 * @return {!proto.ei.Backup.Settings} returns this
 */
proto.ei.Backup.Settings.prototype.setForceTouchChickenBtn = function(value) {
  return jspb.Message.setField(this, 9, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.Backup.Settings} returns this
 */
proto.ei.Backup.Settings.prototype.clearForceTouchChickenBtn = function() {
  return jspb.Message.setField(this, 9, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.Backup.Settings.prototype.hasForceTouchChickenBtn = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional bool notifications_queried = 5;
 * @return {boolean}
 */
proto.ei.Backup.Settings.prototype.getNotificationsQueried = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 5, false));
};


/**
 * @param {boolean} value
 * @return {!proto.ei.Backup.Settings} returns this
 */
proto.ei.Backup.Settings.prototype.setNotificationsQueried = function(value) {
  return jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.Backup.Settings} returns this
 */
proto.ei.Backup.Settings.prototype.clearNotificationsQueried = function() {
  return jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.Backup.Settings.prototype.hasNotificationsQueried = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional double last_notification_query_time = 27;
 * @return {number}
 */
proto.ei.Backup.Settings.prototype.getLastNotificationQueryTime = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 27, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.ei.Backup.Settings} returns this
 */
proto.ei.Backup.Settings.prototype.setLastNotificationQueryTime = function(value) {
  return jspb.Message.setField(this, 27, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.Backup.Settings} returns this
 */
proto.ei.Backup.Settings.prototype.clearLastNotificationQueryTime = function() {
  return jspb.Message.setField(this, 27, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.Backup.Settings.prototype.hasLastNotificationQueryTime = function() {
  return jspb.Message.getField(this, 27) != null;
};


/**
 * optional bool notifications_on = 6;
 * @return {boolean}
 */
proto.ei.Backup.Settings.prototype.getNotificationsOn = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 6, false));
};


/**
 * @param {boolean} value
 * @return {!proto.ei.Backup.Settings} returns this
 */
proto.ei.Backup.Settings.prototype.setNotificationsOn = function(value) {
  return jspb.Message.setField(this, 6, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.Backup.Settings} returns this
 */
proto.ei.Backup.Settings.prototype.clearNotificationsOn = function() {
  return jspb.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.Backup.Settings.prototype.hasNotificationsOn = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional bool notify_daily_gift = 11;
 * @return {boolean}
 */
proto.ei.Backup.Settings.prototype.getNotifyDailyGift = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 11, false));
};


/**
 * @param {boolean} value
 * @return {!proto.ei.Backup.Settings} returns this
 */
proto.ei.Backup.Settings.prototype.setNotifyDailyGift = function(value) {
  return jspb.Message.setField(this, 11, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.Backup.Settings} returns this
 */
proto.ei.Backup.Settings.prototype.clearNotifyDailyGift = function() {
  return jspb.Message.setField(this, 11, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.Backup.Settings.prototype.hasNotifyDailyGift = function() {
  return jspb.Message.getField(this, 11) != null;
};


/**
 * optional bool low_performance = 10;
 * @return {boolean}
 */
proto.ei.Backup.Settings.prototype.getLowPerformance = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 10, false));
};


/**
 * @param {boolean} value
 * @return {!proto.ei.Backup.Settings} returns this
 */
proto.ei.Backup.Settings.prototype.setLowPerformance = function(value) {
  return jspb.Message.setField(this, 10, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.Backup.Settings} returns this
 */
proto.ei.Backup.Settings.prototype.clearLowPerformance = function() {
  return jspb.Message.setField(this, 10, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.Backup.Settings.prototype.hasLowPerformance = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * optional bool auto_stop_fueling = 25;
 * @return {boolean}
 */
proto.ei.Backup.Settings.prototype.getAutoStopFueling = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 25, false));
};


/**
 * @param {boolean} value
 * @return {!proto.ei.Backup.Settings} returns this
 */
proto.ei.Backup.Settings.prototype.setAutoStopFueling = function(value) {
  return jspb.Message.setField(this, 25, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.Backup.Settings} returns this
 */
proto.ei.Backup.Settings.prototype.clearAutoStopFueling = function() {
  return jspb.Message.setField(this, 25, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.Backup.Settings.prototype.hasAutoStopFueling = function() {
  return jspb.Message.getField(this, 25) != null;
};


/**
 * optional bool max_enabled = 26;
 * @return {boolean}
 */
proto.ei.Backup.Settings.prototype.getMaxEnabled = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 26, false));
};


/**
 * @param {boolean} value
 * @return {!proto.ei.Backup.Settings} returns this
 */
proto.ei.Backup.Settings.prototype.setMaxEnabled = function(value) {
  return jspb.Message.setField(this, 26, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.Backup.Settings} returns this
 */
proto.ei.Backup.Settings.prototype.clearMaxEnabled = function() {
  return jspb.Message.setField(this, 26, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.Backup.Settings.prototype.hasMaxEnabled = function() {
  return jspb.Message.getField(this, 26) != null;
};


/**
 * optional bool hide_cc_status = 28;
 * @return {boolean}
 */
proto.ei.Backup.Settings.prototype.getHideCcStatus = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 28, false));
};


/**
 * @param {boolean} value
 * @return {!proto.ei.Backup.Settings} returns this
 */
proto.ei.Backup.Settings.prototype.setHideCcStatus = function(value) {
  return jspb.Message.setField(this, 28, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.Backup.Settings} returns this
 */
proto.ei.Backup.Settings.prototype.clearHideCcStatus = function() {
  return jspb.Message.setField(this, 28, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.Backup.Settings.prototype.hasHideCcStatus = function() {
  return jspb.Message.getField(this, 28) != null;
};


/**
 * optional bool contracts_widget_enabled = 29;
 * @return {boolean}
 */
proto.ei.Backup.Settings.prototype.getContractsWidgetEnabled = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 29, false));
};


/**
 * @param {boolean} value
 * @return {!proto.ei.Backup.Settings} returns this
 */
proto.ei.Backup.Settings.prototype.setContractsWidgetEnabled = function(value) {
  return jspb.Message.setField(this, 29, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.Backup.Settings} returns this
 */
proto.ei.Backup.Settings.prototype.clearContractsWidgetEnabled = function() {
  return jspb.Message.setField(this, 29, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.Backup.Settings.prototype.hasContractsWidgetEnabled = function() {
  return jspb.Message.getField(this, 29) != null;
};


/**
 * optional bool artifact_sparkle = 30;
 * @return {boolean}
 */
proto.ei.Backup.Settings.prototype.getArtifactSparkle = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 30, false));
};


/**
 * @param {boolean} value
 * @return {!proto.ei.Backup.Settings} returns this
 */
proto.ei.Backup.Settings.prototype.setArtifactSparkle = function(value) {
  return jspb.Message.setField(this, 30, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.Backup.Settings} returns this
 */
proto.ei.Backup.Settings.prototype.clearArtifactSparkle = function() {
  return jspb.Message.setField(this, 30, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.Backup.Settings.prototype.hasArtifactSparkle = function() {
  return jspb.Message.getField(this, 30) != null;
};


/**
 * optional double last_backup_time = 24;
 * @return {number}
 */
proto.ei.Backup.Settings.prototype.getLastBackupTime = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 24, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.ei.Backup.Settings} returns this
 */
proto.ei.Backup.Settings.prototype.setLastBackupTime = function(value) {
  return jspb.Message.setField(this, 24, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.Backup.Settings} returns this
 */
proto.ei.Backup.Settings.prototype.clearLastBackupTime = function() {
  return jspb.Message.setField(this, 24, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.Backup.Settings.prototype.hasLastBackupTime = function() {
  return jspb.Message.getField(this, 24) != null;
};


/**
 * optional bool coppa_queried = 7;
 * @return {boolean}
 */
proto.ei.Backup.Settings.prototype.getCoppaQueried = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 7, false));
};


/**
 * @param {boolean} value
 * @return {!proto.ei.Backup.Settings} returns this
 */
proto.ei.Backup.Settings.prototype.setCoppaQueried = function(value) {
  return jspb.Message.setField(this, 7, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.Backup.Settings} returns this
 */
proto.ei.Backup.Settings.prototype.clearCoppaQueried = function() {
  return jspb.Message.setField(this, 7, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.Backup.Settings.prototype.hasCoppaQueried = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional bool coppa_restricted = 8;
 * @return {boolean}
 */
proto.ei.Backup.Settings.prototype.getCoppaRestricted = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 8, false));
};


/**
 * @param {boolean} value
 * @return {!proto.ei.Backup.Settings} returns this
 */
proto.ei.Backup.Settings.prototype.setCoppaRestricted = function(value) {
  return jspb.Message.setField(this, 8, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.Backup.Settings} returns this
 */
proto.ei.Backup.Settings.prototype.clearCoppaRestricted = function() {
  return jspb.Message.setField(this, 8, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.Backup.Settings.prototype.hasCoppaRestricted = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional bool gdpr_consent_queried = 12;
 * @return {boolean}
 */
proto.ei.Backup.Settings.prototype.getGdprConsentQueried = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 12, false));
};


/**
 * @param {boolean} value
 * @return {!proto.ei.Backup.Settings} returns this
 */
proto.ei.Backup.Settings.prototype.setGdprConsentQueried = function(value) {
  return jspb.Message.setField(this, 12, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.Backup.Settings} returns this
 */
proto.ei.Backup.Settings.prototype.clearGdprConsentQueried = function() {
  return jspb.Message.setField(this, 12, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.Backup.Settings.prototype.hasGdprConsentQueried = function() {
  return jspb.Message.getField(this, 12) != null;
};


/**
 * optional bool gdpr_age_restricted = 16;
 * @return {boolean}
 */
proto.ei.Backup.Settings.prototype.getGdprAgeRestricted = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 16, false));
};


/**
 * @param {boolean} value
 * @return {!proto.ei.Backup.Settings} returns this
 */
proto.ei.Backup.Settings.prototype.setGdprAgeRestricted = function(value) {
  return jspb.Message.setField(this, 16, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.Backup.Settings} returns this
 */
proto.ei.Backup.Settings.prototype.clearGdprAgeRestricted = function() {
  return jspb.Message.setField(this, 16, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.Backup.Settings.prototype.hasGdprAgeRestricted = function() {
  return jspb.Message.getField(this, 16) != null;
};


/**
 * optional bool gdpr_consent_given = 13;
 * @return {boolean}
 */
proto.ei.Backup.Settings.prototype.getGdprConsentGiven = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 13, false));
};


/**
 * @param {boolean} value
 * @return {!proto.ei.Backup.Settings} returns this
 */
proto.ei.Backup.Settings.prototype.setGdprConsentGiven = function(value) {
  return jspb.Message.setField(this, 13, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.Backup.Settings} returns this
 */
proto.ei.Backup.Settings.prototype.clearGdprConsentGiven = function() {
  return jspb.Message.setField(this, 13, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.Backup.Settings.prototype.hasGdprConsentGiven = function() {
  return jspb.Message.getField(this, 13) != null;
};


/**
 * optional bool age_queried = 18;
 * @return {boolean}
 */
proto.ei.Backup.Settings.prototype.getAgeQueried = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 18, false));
};


/**
 * @param {boolean} value
 * @return {!proto.ei.Backup.Settings} returns this
 */
proto.ei.Backup.Settings.prototype.setAgeQueried = function(value) {
  return jspb.Message.setField(this, 18, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.Backup.Settings} returns this
 */
proto.ei.Backup.Settings.prototype.clearAgeQueried = function() {
  return jspb.Message.setField(this, 18, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.Backup.Settings.prototype.hasAgeQueried = function() {
  return jspb.Message.getField(this, 18) != null;
};


/**
 * optional bool age_restricted = 19;
 * @return {boolean}
 */
proto.ei.Backup.Settings.prototype.getAgeRestricted = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 19, false));
};


/**
 * @param {boolean} value
 * @return {!proto.ei.Backup.Settings} returns this
 */
proto.ei.Backup.Settings.prototype.setAgeRestricted = function(value) {
  return jspb.Message.setField(this, 19, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.Backup.Settings} returns this
 */
proto.ei.Backup.Settings.prototype.clearAgeRestricted = function() {
  return jspb.Message.setField(this, 19, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.Backup.Settings.prototype.hasAgeRestricted = function() {
  return jspb.Message.getField(this, 19) != null;
};


/**
 * optional bool data_collection_consent_queried = 20;
 * @return {boolean}
 */
proto.ei.Backup.Settings.prototype.getDataCollectionConsentQueried = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 20, false));
};


/**
 * @param {boolean} value
 * @return {!proto.ei.Backup.Settings} returns this
 */
proto.ei.Backup.Settings.prototype.setDataCollectionConsentQueried = function(value) {
  return jspb.Message.setField(this, 20, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.Backup.Settings} returns this
 */
proto.ei.Backup.Settings.prototype.clearDataCollectionConsentQueried = function() {
  return jspb.Message.setField(this, 20, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.Backup.Settings.prototype.hasDataCollectionConsentQueried = function() {
  return jspb.Message.getField(this, 20) != null;
};


/**
 * optional bool data_collection_consent_given = 21;
 * @return {boolean}
 */
proto.ei.Backup.Settings.prototype.getDataCollectionConsentGiven = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 21, false));
};


/**
 * @param {boolean} value
 * @return {!proto.ei.Backup.Settings} returns this
 */
proto.ei.Backup.Settings.prototype.setDataCollectionConsentGiven = function(value) {
  return jspb.Message.setField(this, 21, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.Backup.Settings} returns this
 */
proto.ei.Backup.Settings.prototype.clearDataCollectionConsentGiven = function() {
  return jspb.Message.setField(this, 21, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.Backup.Settings.prototype.hasDataCollectionConsentGiven = function() {
  return jspb.Message.getField(this, 21) != null;
};


/**
 * optional uint32 last_day_age_queried = 17;
 * @return {number}
 */
proto.ei.Backup.Settings.prototype.getLastDayAgeQueried = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 17, 0));
};


/**
 * @param {number} value
 * @return {!proto.ei.Backup.Settings} returns this
 */
proto.ei.Backup.Settings.prototype.setLastDayAgeQueried = function(value) {
  return jspb.Message.setField(this, 17, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.Backup.Settings} returns this
 */
proto.ei.Backup.Settings.prototype.clearLastDayAgeQueried = function() {
  return jspb.Message.setField(this, 17, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.Backup.Settings.prototype.hasLastDayAgeQueried = function() {
  return jspb.Message.getField(this, 17) != null;
};


/**
 * optional bool user_ads_enabled = 14;
 * @return {boolean}
 */
proto.ei.Backup.Settings.prototype.getUserAdsEnabled = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 14, true));
};


/**
 * @param {boolean} value
 * @return {!proto.ei.Backup.Settings} returns this
 */
proto.ei.Backup.Settings.prototype.setUserAdsEnabled = function(value) {
  return jspb.Message.setField(this, 14, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.Backup.Settings} returns this
 */
proto.ei.Backup.Settings.prototype.clearUserAdsEnabled = function() {
  return jspb.Message.setField(this, 14, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.Backup.Settings.prototype.hasUserAdsEnabled = function() {
  return jspb.Message.getField(this, 14) != null;
};


/**
 * optional bool user_cloud_enabled = 15;
 * @return {boolean}
 */
proto.ei.Backup.Settings.prototype.getUserCloudEnabled = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 15, true));
};


/**
 * @param {boolean} value
 * @return {!proto.ei.Backup.Settings} returns this
 */
proto.ei.Backup.Settings.prototype.setUserCloudEnabled = function(value) {
  return jspb.Message.setField(this, 15, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.Backup.Settings} returns this
 */
proto.ei.Backup.Settings.prototype.clearUserCloudEnabled = function() {
  return jspb.Message.setField(this, 15, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.Backup.Settings.prototype.hasUserCloudEnabled = function() {
  return jspb.Message.getField(this, 15) != null;
};


/**
 * optional bool user_analytics_enabled = 22;
 * @return {boolean}
 */
proto.ei.Backup.Settings.prototype.getUserAnalyticsEnabled = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 22, true));
};


/**
 * @param {boolean} value
 * @return {!proto.ei.Backup.Settings} returns this
 */
proto.ei.Backup.Settings.prototype.setUserAnalyticsEnabled = function(value) {
  return jspb.Message.setField(this, 22, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.Backup.Settings} returns this
 */
proto.ei.Backup.Settings.prototype.clearUserAnalyticsEnabled = function() {
  return jspb.Message.setField(this, 22, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.Backup.Settings.prototype.hasUserAnalyticsEnabled = function() {
  return jspb.Message.getField(this, 22) != null;
};


/**
 * optional bool user_personalized_ads_enabled = 23;
 * @return {boolean}
 */
proto.ei.Backup.Settings.prototype.getUserPersonalizedAdsEnabled = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 23, true));
};


/**
 * @param {boolean} value
 * @return {!proto.ei.Backup.Settings} returns this
 */
proto.ei.Backup.Settings.prototype.setUserPersonalizedAdsEnabled = function(value) {
  return jspb.Message.setField(this, 23, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.Backup.Settings} returns this
 */
proto.ei.Backup.Settings.prototype.clearUserPersonalizedAdsEnabled = function() {
  return jspb.Message.setField(this, 23, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.Backup.Settings.prototype.hasUserPersonalizedAdsEnabled = function() {
  return jspb.Message.getField(this, 23) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.ei.Backup.Tutorial.repeatedFields_ = [11];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ei.Backup.Tutorial.prototype.toObject = function(opt_includeInstance) {
  return proto.ei.Backup.Tutorial.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ei.Backup.Tutorial} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.Backup.Tutorial.toObject = function(includeInstance, msg) {
  var f, obj = {
    introShown: (f = jspb.Message.getBooleanField(msg, 1)) == null ? undefined : f,
    clickTutorialShown: (f = jspb.Message.getBooleanField(msg, 2)) == null ? undefined : f,
    buyHabShown: (f = jspb.Message.getBooleanField(msg, 3)) == null ? undefined : f,
    hireVehicleShown: (f = jspb.Message.getBooleanField(msg, 4)) == null ? undefined : f,
    qNumShown: (f = jspb.Message.getBooleanField(msg, 5)) == null ? undefined : f,
    sNumShown: (f = jspb.Message.getBooleanField(msg, 6)) == null ? undefined : f,
    contractsTabShown: (f = jspb.Message.getBooleanField(msg, 7)) == null ? undefined : f,
    contractInfoShown: (f = jspb.Message.getBooleanField(msg, 8)) == null ? undefined : f,
    joinCoopShown: (f = jspb.Message.getBooleanField(msg, 9)) == null ? undefined : f,
    switchFarmShown: (f = jspb.Message.getBooleanField(msg, 10)) == null ? undefined : f,
    tutorialShownList: (f = jspb.Message.getRepeatedBooleanField(msg, 11)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ei.Backup.Tutorial}
 */
proto.ei.Backup.Tutorial.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ei.Backup.Tutorial;
  return proto.ei.Backup.Tutorial.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ei.Backup.Tutorial} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ei.Backup.Tutorial}
 */
proto.ei.Backup.Tutorial.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIntroShown(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setClickTutorialShown(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setBuyHabShown(value);
      break;
    case 4:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setHireVehicleShown(value);
      break;
    case 5:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setQNumShown(value);
      break;
    case 6:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setSNumShown(value);
      break;
    case 7:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setContractsTabShown(value);
      break;
    case 8:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setContractInfoShown(value);
      break;
    case 9:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setJoinCoopShown(value);
      break;
    case 10:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setSwitchFarmShown(value);
      break;
    case 11:
      var values = /** @type {!Array<boolean>} */ (reader.isDelimited() ? reader.readPackedBool() : [reader.readBool()]);
      for (var i = 0; i < values.length; i++) {
        msg.addTutorialShown(values[i]);
      }
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ei.Backup.Tutorial.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ei.Backup.Tutorial.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ei.Backup.Tutorial} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.Backup.Tutorial.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {boolean} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeBool(
      1,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeBool(
      2,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeBool(
      3,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeBool(
      4,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeBool(
      5,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeBool(
      6,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 7));
  if (f != null) {
    writer.writeBool(
      7,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 8));
  if (f != null) {
    writer.writeBool(
      8,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 9));
  if (f != null) {
    writer.writeBool(
      9,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 10));
  if (f != null) {
    writer.writeBool(
      10,
      f
    );
  }
  f = message.getTutorialShownList();
  if (f.length > 0) {
    writer.writeRepeatedBool(
      11,
      f
    );
  }
};


/**
 * optional bool intro_shown = 1;
 * @return {boolean}
 */
proto.ei.Backup.Tutorial.prototype.getIntroShown = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.ei.Backup.Tutorial} returns this
 */
proto.ei.Backup.Tutorial.prototype.setIntroShown = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.Backup.Tutorial} returns this
 */
proto.ei.Backup.Tutorial.prototype.clearIntroShown = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.Backup.Tutorial.prototype.hasIntroShown = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional bool click_tutorial_shown = 2;
 * @return {boolean}
 */
proto.ei.Backup.Tutorial.prototype.getClickTutorialShown = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));
};


/**
 * @param {boolean} value
 * @return {!proto.ei.Backup.Tutorial} returns this
 */
proto.ei.Backup.Tutorial.prototype.setClickTutorialShown = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.Backup.Tutorial} returns this
 */
proto.ei.Backup.Tutorial.prototype.clearClickTutorialShown = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.Backup.Tutorial.prototype.hasClickTutorialShown = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional bool buy_hab_shown = 3;
 * @return {boolean}
 */
proto.ei.Backup.Tutorial.prototype.getBuyHabShown = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 3, false));
};


/**
 * @param {boolean} value
 * @return {!proto.ei.Backup.Tutorial} returns this
 */
proto.ei.Backup.Tutorial.prototype.setBuyHabShown = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.Backup.Tutorial} returns this
 */
proto.ei.Backup.Tutorial.prototype.clearBuyHabShown = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.Backup.Tutorial.prototype.hasBuyHabShown = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional bool hire_vehicle_shown = 4;
 * @return {boolean}
 */
proto.ei.Backup.Tutorial.prototype.getHireVehicleShown = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 4, false));
};


/**
 * @param {boolean} value
 * @return {!proto.ei.Backup.Tutorial} returns this
 */
proto.ei.Backup.Tutorial.prototype.setHireVehicleShown = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.Backup.Tutorial} returns this
 */
proto.ei.Backup.Tutorial.prototype.clearHireVehicleShown = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.Backup.Tutorial.prototype.hasHireVehicleShown = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional bool q_num_shown = 5;
 * @return {boolean}
 */
proto.ei.Backup.Tutorial.prototype.getQNumShown = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 5, false));
};


/**
 * @param {boolean} value
 * @return {!proto.ei.Backup.Tutorial} returns this
 */
proto.ei.Backup.Tutorial.prototype.setQNumShown = function(value) {
  return jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.Backup.Tutorial} returns this
 */
proto.ei.Backup.Tutorial.prototype.clearQNumShown = function() {
  return jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.Backup.Tutorial.prototype.hasQNumShown = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional bool s_num_shown = 6;
 * @return {boolean}
 */
proto.ei.Backup.Tutorial.prototype.getSNumShown = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 6, false));
};


/**
 * @param {boolean} value
 * @return {!proto.ei.Backup.Tutorial} returns this
 */
proto.ei.Backup.Tutorial.prototype.setSNumShown = function(value) {
  return jspb.Message.setField(this, 6, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.Backup.Tutorial} returns this
 */
proto.ei.Backup.Tutorial.prototype.clearSNumShown = function() {
  return jspb.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.Backup.Tutorial.prototype.hasSNumShown = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional bool contracts_tab_shown = 7;
 * @return {boolean}
 */
proto.ei.Backup.Tutorial.prototype.getContractsTabShown = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 7, false));
};


/**
 * @param {boolean} value
 * @return {!proto.ei.Backup.Tutorial} returns this
 */
proto.ei.Backup.Tutorial.prototype.setContractsTabShown = function(value) {
  return jspb.Message.setField(this, 7, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.Backup.Tutorial} returns this
 */
proto.ei.Backup.Tutorial.prototype.clearContractsTabShown = function() {
  return jspb.Message.setField(this, 7, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.Backup.Tutorial.prototype.hasContractsTabShown = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional bool contract_info_shown = 8;
 * @return {boolean}
 */
proto.ei.Backup.Tutorial.prototype.getContractInfoShown = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 8, false));
};


/**
 * @param {boolean} value
 * @return {!proto.ei.Backup.Tutorial} returns this
 */
proto.ei.Backup.Tutorial.prototype.setContractInfoShown = function(value) {
  return jspb.Message.setField(this, 8, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.Backup.Tutorial} returns this
 */
proto.ei.Backup.Tutorial.prototype.clearContractInfoShown = function() {
  return jspb.Message.setField(this, 8, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.Backup.Tutorial.prototype.hasContractInfoShown = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional bool join_coop_shown = 9;
 * @return {boolean}
 */
proto.ei.Backup.Tutorial.prototype.getJoinCoopShown = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 9, false));
};


/**
 * @param {boolean} value
 * @return {!proto.ei.Backup.Tutorial} returns this
 */
proto.ei.Backup.Tutorial.prototype.setJoinCoopShown = function(value) {
  return jspb.Message.setField(this, 9, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.Backup.Tutorial} returns this
 */
proto.ei.Backup.Tutorial.prototype.clearJoinCoopShown = function() {
  return jspb.Message.setField(this, 9, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.Backup.Tutorial.prototype.hasJoinCoopShown = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional bool switch_farm_shown = 10;
 * @return {boolean}
 */
proto.ei.Backup.Tutorial.prototype.getSwitchFarmShown = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 10, false));
};


/**
 * @param {boolean} value
 * @return {!proto.ei.Backup.Tutorial} returns this
 */
proto.ei.Backup.Tutorial.prototype.setSwitchFarmShown = function(value) {
  return jspb.Message.setField(this, 10, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.Backup.Tutorial} returns this
 */
proto.ei.Backup.Tutorial.prototype.clearSwitchFarmShown = function() {
  return jspb.Message.setField(this, 10, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.Backup.Tutorial.prototype.hasSwitchFarmShown = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * repeated bool tutorial_shown = 11;
 * @return {!Array<boolean>}
 */
proto.ei.Backup.Tutorial.prototype.getTutorialShownList = function() {
  return /** @type {!Array<boolean>} */ (jspb.Message.getRepeatedBooleanField(this, 11));
};


/**
 * @param {!Array<boolean>} value
 * @return {!proto.ei.Backup.Tutorial} returns this
 */
proto.ei.Backup.Tutorial.prototype.setTutorialShownList = function(value) {
  return jspb.Message.setField(this, 11, value || []);
};


/**
 * @param {boolean} value
 * @param {number=} opt_index
 * @return {!proto.ei.Backup.Tutorial} returns this
 */
proto.ei.Backup.Tutorial.prototype.addTutorialShown = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 11, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.ei.Backup.Tutorial} returns this
 */
proto.ei.Backup.Tutorial.prototype.clearTutorialShownList = function() {
  return this.setTutorialShownList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.ei.Backup.Stats.repeatedFields_ = [1,8];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ei.Backup.Stats.prototype.toObject = function(opt_includeInstance) {
  return proto.ei.Backup.Stats.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ei.Backup.Stats} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.Backup.Stats.toObject = function(includeInstance, msg) {
  var f, obj = {
    eggTotalsOldList: (f = jspb.Message.getRepeatedField(msg, 1)) == null ? undefined : f,
    eggTotalsList: (f = jspb.Message.getRepeatedFloatingPointField(msg, 8)) == null ? undefined : f,
    unlimitedChickensUses: (f = jspb.Message.getField(msg, 7)) == null ? undefined : f,
    refillUses: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,
    warp1Uses: (f = jspb.Message.getField(msg, 4)) == null ? undefined : f,
    warp8Uses: (f = jspb.Message.getField(msg, 5)) == null ? undefined : f,
    boostsUsed: (f = jspb.Message.getField(msg, 13)) == null ? undefined : f,
    videoDoublerUses: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f,
    droneTakedowns: (f = jspb.Message.getField(msg, 6)) == null ? undefined : f,
    droneTakedownsElite: (f = jspb.Message.getField(msg, 10)) == null ? undefined : f,
    numPrestiges: (f = jspb.Message.getField(msg, 9)) == null ? undefined : f,
    numPiggyBreaks: (f = jspb.Message.getField(msg, 11)) == null ? undefined : f,
    iapPacksPurchased: (f = jspb.Message.getField(msg, 12)) == null ? undefined : f,
    piggyFull: (f = jspb.Message.getBooleanField(msg, 14)) == null ? undefined : f,
    piggyFoundFull: (f = jspb.Message.getBooleanField(msg, 15)) == null ? undefined : f,
    timePiggyFilledRealtime: (f = jspb.Message.getOptionalFloatingPointField(msg, 16)) == null ? undefined : f,
    timePiggyFullGametime: (f = jspb.Message.getOptionalFloatingPointField(msg, 17)) == null ? undefined : f,
    lostPiggyIncrements: (f = jspb.Message.getField(msg, 18)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ei.Backup.Stats}
 */
proto.ei.Backup.Stats.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ei.Backup.Stats;
  return proto.ei.Backup.Stats.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ei.Backup.Stats} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ei.Backup.Stats}
 */
proto.ei.Backup.Stats.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var values = /** @type {!Array<number>} */ (reader.isDelimited() ? reader.readPackedUint64() : [reader.readUint64()]);
      for (var i = 0; i < values.length; i++) {
        msg.addEggTotalsOld(values[i]);
      }
      break;
    case 8:
      var values = /** @type {!Array<number>} */ (reader.isDelimited() ? reader.readPackedDouble() : [reader.readDouble()]);
      for (var i = 0; i < values.length; i++) {
        msg.addEggTotals(values[i]);
      }
      break;
    case 7:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setUnlimitedChickensUses(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setRefillUses(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setWarp1Uses(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setWarp8Uses(value);
      break;
    case 13:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setBoostsUsed(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setVideoDoublerUses(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setDroneTakedowns(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setDroneTakedownsElite(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setNumPrestiges(value);
      break;
    case 11:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setNumPiggyBreaks(value);
      break;
    case 12:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setIapPacksPurchased(value);
      break;
    case 14:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setPiggyFull(value);
      break;
    case 15:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setPiggyFoundFull(value);
      break;
    case 16:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setTimePiggyFilledRealtime(value);
      break;
    case 17:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setTimePiggyFullGametime(value);
      break;
    case 18:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setLostPiggyIncrements(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ei.Backup.Stats.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ei.Backup.Stats.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ei.Backup.Stats} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.Backup.Stats.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEggTotalsOldList();
  if (f.length > 0) {
    writer.writeRepeatedUint64(
      1,
      f
    );
  }
  f = message.getEggTotalsList();
  if (f.length > 0) {
    writer.writeRepeatedDouble(
      8,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 7));
  if (f != null) {
    writer.writeUint64(
      7,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeUint64(
      2,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeUint64(
      4,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeUint64(
      5,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 13));
  if (f != null) {
    writer.writeUint64(
      13,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeUint64(
      3,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeUint64(
      6,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 10));
  if (f != null) {
    writer.writeUint64(
      10,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 9));
  if (f != null) {
    writer.writeUint64(
      9,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 11));
  if (f != null) {
    writer.writeUint64(
      11,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 12));
  if (f != null) {
    writer.writeUint64(
      12,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 14));
  if (f != null) {
    writer.writeBool(
      14,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 15));
  if (f != null) {
    writer.writeBool(
      15,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 16));
  if (f != null) {
    writer.writeDouble(
      16,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 17));
  if (f != null) {
    writer.writeDouble(
      17,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 18));
  if (f != null) {
    writer.writeUint64(
      18,
      f
    );
  }
};


/**
 * repeated uint64 egg_totals_OLD = 1;
 * @return {!Array<number>}
 */
proto.ei.Backup.Stats.prototype.getEggTotalsOldList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 1));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.ei.Backup.Stats} returns this
 */
proto.ei.Backup.Stats.prototype.setEggTotalsOldList = function(value) {
  return jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.ei.Backup.Stats} returns this
 */
proto.ei.Backup.Stats.prototype.addEggTotalsOld = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.ei.Backup.Stats} returns this
 */
proto.ei.Backup.Stats.prototype.clearEggTotalsOldList = function() {
  return this.setEggTotalsOldList([]);
};


/**
 * repeated double egg_totals = 8;
 * @return {!Array<number>}
 */
proto.ei.Backup.Stats.prototype.getEggTotalsList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedFloatingPointField(this, 8));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.ei.Backup.Stats} returns this
 */
proto.ei.Backup.Stats.prototype.setEggTotalsList = function(value) {
  return jspb.Message.setField(this, 8, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.ei.Backup.Stats} returns this
 */
proto.ei.Backup.Stats.prototype.addEggTotals = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 8, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.ei.Backup.Stats} returns this
 */
proto.ei.Backup.Stats.prototype.clearEggTotalsList = function() {
  return this.setEggTotalsList([]);
};


/**
 * optional uint64 unlimited_chickens_uses = 7;
 * @return {number}
 */
proto.ei.Backup.Stats.prototype.getUnlimitedChickensUses = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {number} value
 * @return {!proto.ei.Backup.Stats} returns this
 */
proto.ei.Backup.Stats.prototype.setUnlimitedChickensUses = function(value) {
  return jspb.Message.setField(this, 7, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.Backup.Stats} returns this
 */
proto.ei.Backup.Stats.prototype.clearUnlimitedChickensUses = function() {
  return jspb.Message.setField(this, 7, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.Backup.Stats.prototype.hasUnlimitedChickensUses = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional uint64 refill_uses = 2;
 * @return {number}
 */
proto.ei.Backup.Stats.prototype.getRefillUses = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.ei.Backup.Stats} returns this
 */
proto.ei.Backup.Stats.prototype.setRefillUses = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.Backup.Stats} returns this
 */
proto.ei.Backup.Stats.prototype.clearRefillUses = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.Backup.Stats.prototype.hasRefillUses = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional uint64 warp_1_uses = 4;
 * @return {number}
 */
proto.ei.Backup.Stats.prototype.getWarp1Uses = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.ei.Backup.Stats} returns this
 */
proto.ei.Backup.Stats.prototype.setWarp1Uses = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.Backup.Stats} returns this
 */
proto.ei.Backup.Stats.prototype.clearWarp1Uses = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.Backup.Stats.prototype.hasWarp1Uses = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional uint64 warp_8_uses = 5;
 * @return {number}
 */
proto.ei.Backup.Stats.prototype.getWarp8Uses = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.ei.Backup.Stats} returns this
 */
proto.ei.Backup.Stats.prototype.setWarp8Uses = function(value) {
  return jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.Backup.Stats} returns this
 */
proto.ei.Backup.Stats.prototype.clearWarp8Uses = function() {
  return jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.Backup.Stats.prototype.hasWarp8Uses = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional uint64 boosts_used = 13;
 * @return {number}
 */
proto.ei.Backup.Stats.prototype.getBoostsUsed = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 13, 0));
};


/**
 * @param {number} value
 * @return {!proto.ei.Backup.Stats} returns this
 */
proto.ei.Backup.Stats.prototype.setBoostsUsed = function(value) {
  return jspb.Message.setField(this, 13, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.Backup.Stats} returns this
 */
proto.ei.Backup.Stats.prototype.clearBoostsUsed = function() {
  return jspb.Message.setField(this, 13, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.Backup.Stats.prototype.hasBoostsUsed = function() {
  return jspb.Message.getField(this, 13) != null;
};


/**
 * optional uint64 video_doubler_uses = 3;
 * @return {number}
 */
proto.ei.Backup.Stats.prototype.getVideoDoublerUses = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.ei.Backup.Stats} returns this
 */
proto.ei.Backup.Stats.prototype.setVideoDoublerUses = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.Backup.Stats} returns this
 */
proto.ei.Backup.Stats.prototype.clearVideoDoublerUses = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.Backup.Stats.prototype.hasVideoDoublerUses = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional uint64 drone_takedowns = 6;
 * @return {number}
 */
proto.ei.Backup.Stats.prototype.getDroneTakedowns = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.ei.Backup.Stats} returns this
 */
proto.ei.Backup.Stats.prototype.setDroneTakedowns = function(value) {
  return jspb.Message.setField(this, 6, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.Backup.Stats} returns this
 */
proto.ei.Backup.Stats.prototype.clearDroneTakedowns = function() {
  return jspb.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.Backup.Stats.prototype.hasDroneTakedowns = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional uint64 drone_takedowns_elite = 10;
 * @return {number}
 */
proto.ei.Backup.Stats.prototype.getDroneTakedownsElite = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 10, 0));
};


/**
 * @param {number} value
 * @return {!proto.ei.Backup.Stats} returns this
 */
proto.ei.Backup.Stats.prototype.setDroneTakedownsElite = function(value) {
  return jspb.Message.setField(this, 10, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.Backup.Stats} returns this
 */
proto.ei.Backup.Stats.prototype.clearDroneTakedownsElite = function() {
  return jspb.Message.setField(this, 10, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.Backup.Stats.prototype.hasDroneTakedownsElite = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * optional uint64 num_prestiges = 9;
 * @return {number}
 */
proto.ei.Backup.Stats.prototype.getNumPrestiges = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};


/**
 * @param {number} value
 * @return {!proto.ei.Backup.Stats} returns this
 */
proto.ei.Backup.Stats.prototype.setNumPrestiges = function(value) {
  return jspb.Message.setField(this, 9, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.Backup.Stats} returns this
 */
proto.ei.Backup.Stats.prototype.clearNumPrestiges = function() {
  return jspb.Message.setField(this, 9, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.Backup.Stats.prototype.hasNumPrestiges = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional uint64 num_piggy_breaks = 11;
 * @return {number}
 */
proto.ei.Backup.Stats.prototype.getNumPiggyBreaks = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 11, 0));
};


/**
 * @param {number} value
 * @return {!proto.ei.Backup.Stats} returns this
 */
proto.ei.Backup.Stats.prototype.setNumPiggyBreaks = function(value) {
  return jspb.Message.setField(this, 11, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.Backup.Stats} returns this
 */
proto.ei.Backup.Stats.prototype.clearNumPiggyBreaks = function() {
  return jspb.Message.setField(this, 11, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.Backup.Stats.prototype.hasNumPiggyBreaks = function() {
  return jspb.Message.getField(this, 11) != null;
};


/**
 * optional uint64 iap_packs_purchased = 12;
 * @return {number}
 */
proto.ei.Backup.Stats.prototype.getIapPacksPurchased = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 12, 0));
};


/**
 * @param {number} value
 * @return {!proto.ei.Backup.Stats} returns this
 */
proto.ei.Backup.Stats.prototype.setIapPacksPurchased = function(value) {
  return jspb.Message.setField(this, 12, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.Backup.Stats} returns this
 */
proto.ei.Backup.Stats.prototype.clearIapPacksPurchased = function() {
  return jspb.Message.setField(this, 12, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.Backup.Stats.prototype.hasIapPacksPurchased = function() {
  return jspb.Message.getField(this, 12) != null;
};


/**
 * optional bool piggy_full = 14;
 * @return {boolean}
 */
proto.ei.Backup.Stats.prototype.getPiggyFull = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 14, false));
};


/**
 * @param {boolean} value
 * @return {!proto.ei.Backup.Stats} returns this
 */
proto.ei.Backup.Stats.prototype.setPiggyFull = function(value) {
  return jspb.Message.setField(this, 14, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.Backup.Stats} returns this
 */
proto.ei.Backup.Stats.prototype.clearPiggyFull = function() {
  return jspb.Message.setField(this, 14, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.Backup.Stats.prototype.hasPiggyFull = function() {
  return jspb.Message.getField(this, 14) != null;
};


/**
 * optional bool piggy_found_full = 15;
 * @return {boolean}
 */
proto.ei.Backup.Stats.prototype.getPiggyFoundFull = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 15, false));
};


/**
 * @param {boolean} value
 * @return {!proto.ei.Backup.Stats} returns this
 */
proto.ei.Backup.Stats.prototype.setPiggyFoundFull = function(value) {
  return jspb.Message.setField(this, 15, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.Backup.Stats} returns this
 */
proto.ei.Backup.Stats.prototype.clearPiggyFoundFull = function() {
  return jspb.Message.setField(this, 15, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.Backup.Stats.prototype.hasPiggyFoundFull = function() {
  return jspb.Message.getField(this, 15) != null;
};


/**
 * optional double time_piggy_filled_realtime = 16;
 * @return {number}
 */
proto.ei.Backup.Stats.prototype.getTimePiggyFilledRealtime = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 16, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.ei.Backup.Stats} returns this
 */
proto.ei.Backup.Stats.prototype.setTimePiggyFilledRealtime = function(value) {
  return jspb.Message.setField(this, 16, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.Backup.Stats} returns this
 */
proto.ei.Backup.Stats.prototype.clearTimePiggyFilledRealtime = function() {
  return jspb.Message.setField(this, 16, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.Backup.Stats.prototype.hasTimePiggyFilledRealtime = function() {
  return jspb.Message.getField(this, 16) != null;
};


/**
 * optional double time_piggy_full_gametime = 17;
 * @return {number}
 */
proto.ei.Backup.Stats.prototype.getTimePiggyFullGametime = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 17, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.ei.Backup.Stats} returns this
 */
proto.ei.Backup.Stats.prototype.setTimePiggyFullGametime = function(value) {
  return jspb.Message.setField(this, 17, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.Backup.Stats} returns this
 */
proto.ei.Backup.Stats.prototype.clearTimePiggyFullGametime = function() {
  return jspb.Message.setField(this, 17, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.Backup.Stats.prototype.hasTimePiggyFullGametime = function() {
  return jspb.Message.getField(this, 17) != null;
};


/**
 * optional uint64 lost_piggy_increments = 18;
 * @return {number}
 */
proto.ei.Backup.Stats.prototype.getLostPiggyIncrements = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 18, 0));
};


/**
 * @param {number} value
 * @return {!proto.ei.Backup.Stats} returns this
 */
proto.ei.Backup.Stats.prototype.setLostPiggyIncrements = function(value) {
  return jspb.Message.setField(this, 18, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.Backup.Stats} returns this
 */
proto.ei.Backup.Stats.prototype.clearLostPiggyIncrements = function() {
  return jspb.Message.setField(this, 18, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.Backup.Stats.prototype.hasLostPiggyIncrements = function() {
  return jspb.Message.getField(this, 18) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.ei.Backup.Game.repeatedFields_ = [9,11,15,18,19,30];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ei.Backup.Game.prototype.toObject = function(opt_includeInstance) {
  return proto.ei.Backup.Game.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ei.Backup.Game} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.Backup.Game.toObject = function(includeInstance, msg) {
  var f, obj = {
    currentFarm: jspb.Message.getFieldWithDefault(msg, 22, 0),
    maxEggReached: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    goldenEggsEarned: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,
    goldenEggsSpent: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f,
    uncliamedGoldenEggs: (f = jspb.Message.getField(msg, 16)) == null ? undefined : f,
    soulEggs: (f = jspb.Message.getField(msg, 4)) == null ? undefined : f,
    unclaimedSoulEggs: (f = jspb.Message.getField(msg, 17)) == null ? undefined : f,
    soulEggsD: (f = jspb.Message.getOptionalFloatingPointField(msg, 34)) == null ? undefined : f,
    unclaimedSoulEggsD: (f = jspb.Message.getOptionalFloatingPointField(msg, 35)) == null ? undefined : f,
    eggsOfProphecy: (f = jspb.Message.getField(msg, 23)) == null ? undefined : f,
    unclaimedEggsOfProphecy: (f = jspb.Message.getField(msg, 24)) == null ? undefined : f,
    shellScriptsEarned: (f = jspb.Message.getField(msg, 38)) == null ? undefined : f,
    shellScriptsSpent: (f = jspb.Message.getField(msg, 39)) == null ? undefined : f,
    unclaimedShellScripts: (f = jspb.Message.getField(msg, 40)) == null ? undefined : f,
    prestigeCashEarned: (f = jspb.Message.getOptionalFloatingPointField(msg, 5)) == null ? undefined : f,
    prestigeSoulBoostCash: (f = jspb.Message.getOptionalFloatingPointField(msg, 33)) == null ? undefined : f,
    lifetimeCashEarned: (f = jspb.Message.getOptionalFloatingPointField(msg, 6)) == null ? undefined : f,
    piggyBank: (f = jspb.Message.getField(msg, 7)) == null ? undefined : f,
    piggyFullAlertShown: (f = jspb.Message.getBooleanField(msg, 31)) == null ? undefined : f,
    permitLevel: (f = jspb.Message.getField(msg, 8)) == null ? undefined : f,
    epicResearchList: jspb.Message.toObjectList(msg.getEpicResearchList(),
    proto.ei.Backup.ResearchItem.toObject, includeInstance),
    hyperloopStation: (f = jspb.Message.getBooleanField(msg, 29)) == null ? undefined : f,
    nextDailyGiftTime: (f = jspb.Message.getOptionalFloatingPointField(msg, 10)) == null ? undefined : f,
    lastDailyGiftCollectedDay: (f = jspb.Message.getField(msg, 20)) == null ? undefined : f,
    numDailyGiftsCollected: (f = jspb.Message.getField(msg, 28)) == null ? undefined : f,
    newsList: jspb.Message.toObjectList(msg.getNewsList(),
    proto.ei.Backup.NewsHeadline.toObject, includeInstance),
    lastNewsTime: (f = jspb.Message.getOptionalFloatingPointField(msg, 12)) == null ? undefined : f,
    currentMultiplier: (f = jspb.Message.getOptionalFloatingPointField(msg, 13)) == null ? undefined : f,
    currentMultiplierExpiration: (f = jspb.Message.getOptionalFloatingPointField(msg, 14)) == null ? undefined : f,
    achievementsList: jspb.Message.toObjectList(msg.getAchievementsList(),
    proto.ei.Backup.AchievementInfo.toObject, includeInstance),
    maxFarmSizeReachedList: (f = jspb.Message.getRepeatedField(msg, 18)) == null ? undefined : f,
    eggMedalLevelList: (f = jspb.Message.getRepeatedField(msg, 19)) == null ? undefined : f,
    longIdleNotificationSet: (f = jspb.Message.getBooleanField(msg, 25)) == null ? undefined : f,
    longIdleNotificationThreshold: (f = jspb.Message.getOptionalFloatingPointField(msg, 26)) == null ? undefined : f,
    longIdleReward: (f = jspb.Message.getOptionalFloatingPointField(msg, 27)) == null ? undefined : f,
    boostsList: jspb.Message.toObjectList(msg.getBoostsList(),
    proto.ei.Backup.OwnedBoost.toObject, includeInstance),
    totalTimeCheatsDetected: (f = jspb.Message.getField(msg, 32)) == null ? undefined : f,
    forceEliteContracts: (f = jspb.Message.getBooleanField(msg, 36)) == null ? undefined : f,
    newPlayerEventEndTime: (f = jspb.Message.getOptionalFloatingPointField(msg, 37)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ei.Backup.Game}
 */
proto.ei.Backup.Game.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ei.Backup.Game;
  return proto.ei.Backup.Game.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ei.Backup.Game} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ei.Backup.Game}
 */
proto.ei.Backup.Game.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 22:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setCurrentFarm(value);
      break;
    case 1:
      var value = /** @type {!proto.ei.Egg} */ (reader.readEnum());
      msg.setMaxEggReached(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setGoldenEggsEarned(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setGoldenEggsSpent(value);
      break;
    case 16:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setUncliamedGoldenEggs(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setSoulEggs(value);
      break;
    case 17:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setUnclaimedSoulEggs(value);
      break;
    case 34:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setSoulEggsD(value);
      break;
    case 35:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setUnclaimedSoulEggsD(value);
      break;
    case 23:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setEggsOfProphecy(value);
      break;
    case 24:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setUnclaimedEggsOfProphecy(value);
      break;
    case 38:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setShellScriptsEarned(value);
      break;
    case 39:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setShellScriptsSpent(value);
      break;
    case 40:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setUnclaimedShellScripts(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setPrestigeCashEarned(value);
      break;
    case 33:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setPrestigeSoulBoostCash(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setLifetimeCashEarned(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setPiggyBank(value);
      break;
    case 31:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setPiggyFullAlertShown(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setPermitLevel(value);
      break;
    case 9:
      var value = new proto.ei.Backup.ResearchItem;
      reader.readMessage(value,proto.ei.Backup.ResearchItem.deserializeBinaryFromReader);
      msg.addEpicResearch(value);
      break;
    case 29:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setHyperloopStation(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setNextDailyGiftTime(value);
      break;
    case 20:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setLastDailyGiftCollectedDay(value);
      break;
    case 28:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setNumDailyGiftsCollected(value);
      break;
    case 11:
      var value = new proto.ei.Backup.NewsHeadline;
      reader.readMessage(value,proto.ei.Backup.NewsHeadline.deserializeBinaryFromReader);
      msg.addNews(value);
      break;
    case 12:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setLastNewsTime(value);
      break;
    case 13:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setCurrentMultiplier(value);
      break;
    case 14:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setCurrentMultiplierExpiration(value);
      break;
    case 15:
      var value = new proto.ei.Backup.AchievementInfo;
      reader.readMessage(value,proto.ei.Backup.AchievementInfo.deserializeBinaryFromReader);
      msg.addAchievements(value);
      break;
    case 18:
      var values = /** @type {!Array<number>} */ (reader.isDelimited() ? reader.readPackedUint64() : [reader.readUint64()]);
      for (var i = 0; i < values.length; i++) {
        msg.addMaxFarmSizeReached(values[i]);
      }
      break;
    case 19:
      var values = /** @type {!Array<number>} */ (reader.isDelimited() ? reader.readPackedUint32() : [reader.readUint32()]);
      for (var i = 0; i < values.length; i++) {
        msg.addEggMedalLevel(values[i]);
      }
      break;
    case 25:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setLongIdleNotificationSet(value);
      break;
    case 26:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setLongIdleNotificationThreshold(value);
      break;
    case 27:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setLongIdleReward(value);
      break;
    case 30:
      var value = new proto.ei.Backup.OwnedBoost;
      reader.readMessage(value,proto.ei.Backup.OwnedBoost.deserializeBinaryFromReader);
      msg.addBoosts(value);
      break;
    case 32:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setTotalTimeCheatsDetected(value);
      break;
    case 36:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setForceEliteContracts(value);
      break;
    case 37:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setNewPlayerEventEndTime(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ei.Backup.Game.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ei.Backup.Game.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ei.Backup.Game} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.Backup.Game.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {number} */ (jspb.Message.getField(message, 22));
  if (f != null) {
    writer.writeUint32(
      22,
      f
    );
  }
  f = /** @type {!proto.ei.Egg} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeUint64(
      2,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeUint64(
      3,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 16));
  if (f != null) {
    writer.writeUint64(
      16,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeUint64(
      4,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 17));
  if (f != null) {
    writer.writeUint64(
      17,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 34));
  if (f != null) {
    writer.writeDouble(
      34,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 35));
  if (f != null) {
    writer.writeDouble(
      35,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 23));
  if (f != null) {
    writer.writeUint64(
      23,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 24));
  if (f != null) {
    writer.writeUint64(
      24,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 38));
  if (f != null) {
    writer.writeUint64(
      38,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 39));
  if (f != null) {
    writer.writeUint64(
      39,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 40));
  if (f != null) {
    writer.writeUint64(
      40,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeDouble(
      5,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 33));
  if (f != null) {
    writer.writeDouble(
      33,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeDouble(
      6,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 7));
  if (f != null) {
    writer.writeUint64(
      7,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 31));
  if (f != null) {
    writer.writeBool(
      31,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 8));
  if (f != null) {
    writer.writeUint32(
      8,
      f
    );
  }
  f = message.getEpicResearchList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      9,
      f,
      proto.ei.Backup.ResearchItem.serializeBinaryToWriter
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 29));
  if (f != null) {
    writer.writeBool(
      29,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 10));
  if (f != null) {
    writer.writeDouble(
      10,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 20));
  if (f != null) {
    writer.writeUint32(
      20,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 28));
  if (f != null) {
    writer.writeUint32(
      28,
      f
    );
  }
  f = message.getNewsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      11,
      f,
      proto.ei.Backup.NewsHeadline.serializeBinaryToWriter
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 12));
  if (f != null) {
    writer.writeDouble(
      12,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 13));
  if (f != null) {
    writer.writeDouble(
      13,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 14));
  if (f != null) {
    writer.writeDouble(
      14,
      f
    );
  }
  f = message.getAchievementsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      15,
      f,
      proto.ei.Backup.AchievementInfo.serializeBinaryToWriter
    );
  }
  f = message.getMaxFarmSizeReachedList();
  if (f.length > 0) {
    writer.writeRepeatedUint64(
      18,
      f
    );
  }
  f = message.getEggMedalLevelList();
  if (f.length > 0) {
    writer.writeRepeatedUint32(
      19,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 25));
  if (f != null) {
    writer.writeBool(
      25,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 26));
  if (f != null) {
    writer.writeDouble(
      26,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 27));
  if (f != null) {
    writer.writeDouble(
      27,
      f
    );
  }
  f = message.getBoostsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      30,
      f,
      proto.ei.Backup.OwnedBoost.serializeBinaryToWriter
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 32));
  if (f != null) {
    writer.writeUint32(
      32,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 36));
  if (f != null) {
    writer.writeBool(
      36,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 37));
  if (f != null) {
    writer.writeDouble(
      37,
      f
    );
  }
};


/**
 * optional uint32 current_farm = 22;
 * @return {number}
 */
proto.ei.Backup.Game.prototype.getCurrentFarm = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 22, 0));
};


/**
 * @param {number} value
 * @return {!proto.ei.Backup.Game} returns this
 */
proto.ei.Backup.Game.prototype.setCurrentFarm = function(value) {
  return jspb.Message.setField(this, 22, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.Backup.Game} returns this
 */
proto.ei.Backup.Game.prototype.clearCurrentFarm = function() {
  return jspb.Message.setField(this, 22, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.Backup.Game.prototype.hasCurrentFarm = function() {
  return jspb.Message.getField(this, 22) != null;
};


/**
 * optional Egg max_egg_reached = 1;
 * @return {!proto.ei.Egg}
 */
proto.ei.Backup.Game.prototype.getMaxEggReached = function() {
  return /** @type {!proto.ei.Egg} */ (jspb.Message.getFieldWithDefault(this, 1, 1));
};


/**
 * @param {!proto.ei.Egg} value
 * @return {!proto.ei.Backup.Game} returns this
 */
proto.ei.Backup.Game.prototype.setMaxEggReached = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.Backup.Game} returns this
 */
proto.ei.Backup.Game.prototype.clearMaxEggReached = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.Backup.Game.prototype.hasMaxEggReached = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional uint64 golden_eggs_earned = 2;
 * @return {number}
 */
proto.ei.Backup.Game.prototype.getGoldenEggsEarned = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.ei.Backup.Game} returns this
 */
proto.ei.Backup.Game.prototype.setGoldenEggsEarned = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.Backup.Game} returns this
 */
proto.ei.Backup.Game.prototype.clearGoldenEggsEarned = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.Backup.Game.prototype.hasGoldenEggsEarned = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional uint64 golden_eggs_spent = 3;
 * @return {number}
 */
proto.ei.Backup.Game.prototype.getGoldenEggsSpent = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.ei.Backup.Game} returns this
 */
proto.ei.Backup.Game.prototype.setGoldenEggsSpent = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.Backup.Game} returns this
 */
proto.ei.Backup.Game.prototype.clearGoldenEggsSpent = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.Backup.Game.prototype.hasGoldenEggsSpent = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional uint64 uncliamed_golden_eggs = 16;
 * @return {number}
 */
proto.ei.Backup.Game.prototype.getUncliamedGoldenEggs = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 16, 0));
};


/**
 * @param {number} value
 * @return {!proto.ei.Backup.Game} returns this
 */
proto.ei.Backup.Game.prototype.setUncliamedGoldenEggs = function(value) {
  return jspb.Message.setField(this, 16, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.Backup.Game} returns this
 */
proto.ei.Backup.Game.prototype.clearUncliamedGoldenEggs = function() {
  return jspb.Message.setField(this, 16, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.Backup.Game.prototype.hasUncliamedGoldenEggs = function() {
  return jspb.Message.getField(this, 16) != null;
};


/**
 * optional uint64 soul_eggs = 4;
 * @return {number}
 */
proto.ei.Backup.Game.prototype.getSoulEggs = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.ei.Backup.Game} returns this
 */
proto.ei.Backup.Game.prototype.setSoulEggs = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.Backup.Game} returns this
 */
proto.ei.Backup.Game.prototype.clearSoulEggs = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.Backup.Game.prototype.hasSoulEggs = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional uint64 unclaimed_soul_eggs = 17;
 * @return {number}
 */
proto.ei.Backup.Game.prototype.getUnclaimedSoulEggs = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 17, 0));
};


/**
 * @param {number} value
 * @return {!proto.ei.Backup.Game} returns this
 */
proto.ei.Backup.Game.prototype.setUnclaimedSoulEggs = function(value) {
  return jspb.Message.setField(this, 17, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.Backup.Game} returns this
 */
proto.ei.Backup.Game.prototype.clearUnclaimedSoulEggs = function() {
  return jspb.Message.setField(this, 17, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.Backup.Game.prototype.hasUnclaimedSoulEggs = function() {
  return jspb.Message.getField(this, 17) != null;
};


/**
 * optional double soul_eggs_d = 34;
 * @return {number}
 */
proto.ei.Backup.Game.prototype.getSoulEggsD = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 34, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.ei.Backup.Game} returns this
 */
proto.ei.Backup.Game.prototype.setSoulEggsD = function(value) {
  return jspb.Message.setField(this, 34, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.Backup.Game} returns this
 */
proto.ei.Backup.Game.prototype.clearSoulEggsD = function() {
  return jspb.Message.setField(this, 34, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.Backup.Game.prototype.hasSoulEggsD = function() {
  return jspb.Message.getField(this, 34) != null;
};


/**
 * optional double unclaimed_soul_eggs_d = 35;
 * @return {number}
 */
proto.ei.Backup.Game.prototype.getUnclaimedSoulEggsD = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 35, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.ei.Backup.Game} returns this
 */
proto.ei.Backup.Game.prototype.setUnclaimedSoulEggsD = function(value) {
  return jspb.Message.setField(this, 35, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.Backup.Game} returns this
 */
proto.ei.Backup.Game.prototype.clearUnclaimedSoulEggsD = function() {
  return jspb.Message.setField(this, 35, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.Backup.Game.prototype.hasUnclaimedSoulEggsD = function() {
  return jspb.Message.getField(this, 35) != null;
};


/**
 * optional uint64 eggs_of_prophecy = 23;
 * @return {number}
 */
proto.ei.Backup.Game.prototype.getEggsOfProphecy = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 23, 0));
};


/**
 * @param {number} value
 * @return {!proto.ei.Backup.Game} returns this
 */
proto.ei.Backup.Game.prototype.setEggsOfProphecy = function(value) {
  return jspb.Message.setField(this, 23, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.Backup.Game} returns this
 */
proto.ei.Backup.Game.prototype.clearEggsOfProphecy = function() {
  return jspb.Message.setField(this, 23, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.Backup.Game.prototype.hasEggsOfProphecy = function() {
  return jspb.Message.getField(this, 23) != null;
};


/**
 * optional uint64 unclaimed_eggs_of_prophecy = 24;
 * @return {number}
 */
proto.ei.Backup.Game.prototype.getUnclaimedEggsOfProphecy = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 24, 0));
};


/**
 * @param {number} value
 * @return {!proto.ei.Backup.Game} returns this
 */
proto.ei.Backup.Game.prototype.setUnclaimedEggsOfProphecy = function(value) {
  return jspb.Message.setField(this, 24, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.Backup.Game} returns this
 */
proto.ei.Backup.Game.prototype.clearUnclaimedEggsOfProphecy = function() {
  return jspb.Message.setField(this, 24, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.Backup.Game.prototype.hasUnclaimedEggsOfProphecy = function() {
  return jspb.Message.getField(this, 24) != null;
};


/**
 * optional uint64 shell_scripts_earned = 38;
 * @return {number}
 */
proto.ei.Backup.Game.prototype.getShellScriptsEarned = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 38, 0));
};


/**
 * @param {number} value
 * @return {!proto.ei.Backup.Game} returns this
 */
proto.ei.Backup.Game.prototype.setShellScriptsEarned = function(value) {
  return jspb.Message.setField(this, 38, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.Backup.Game} returns this
 */
proto.ei.Backup.Game.prototype.clearShellScriptsEarned = function() {
  return jspb.Message.setField(this, 38, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.Backup.Game.prototype.hasShellScriptsEarned = function() {
  return jspb.Message.getField(this, 38) != null;
};


/**
 * optional uint64 shell_scripts_spent = 39;
 * @return {number}
 */
proto.ei.Backup.Game.prototype.getShellScriptsSpent = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 39, 0));
};


/**
 * @param {number} value
 * @return {!proto.ei.Backup.Game} returns this
 */
proto.ei.Backup.Game.prototype.setShellScriptsSpent = function(value) {
  return jspb.Message.setField(this, 39, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.Backup.Game} returns this
 */
proto.ei.Backup.Game.prototype.clearShellScriptsSpent = function() {
  return jspb.Message.setField(this, 39, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.Backup.Game.prototype.hasShellScriptsSpent = function() {
  return jspb.Message.getField(this, 39) != null;
};


/**
 * optional uint64 unclaimed_shell_scripts = 40;
 * @return {number}
 */
proto.ei.Backup.Game.prototype.getUnclaimedShellScripts = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 40, 0));
};


/**
 * @param {number} value
 * @return {!proto.ei.Backup.Game} returns this
 */
proto.ei.Backup.Game.prototype.setUnclaimedShellScripts = function(value) {
  return jspb.Message.setField(this, 40, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.Backup.Game} returns this
 */
proto.ei.Backup.Game.prototype.clearUnclaimedShellScripts = function() {
  return jspb.Message.setField(this, 40, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.Backup.Game.prototype.hasUnclaimedShellScripts = function() {
  return jspb.Message.getField(this, 40) != null;
};


/**
 * optional double prestige_cash_earned = 5;
 * @return {number}
 */
proto.ei.Backup.Game.prototype.getPrestigeCashEarned = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 5, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.ei.Backup.Game} returns this
 */
proto.ei.Backup.Game.prototype.setPrestigeCashEarned = function(value) {
  return jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.Backup.Game} returns this
 */
proto.ei.Backup.Game.prototype.clearPrestigeCashEarned = function() {
  return jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.Backup.Game.prototype.hasPrestigeCashEarned = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional double prestige_soul_boost_cash = 33;
 * @return {number}
 */
proto.ei.Backup.Game.prototype.getPrestigeSoulBoostCash = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 33, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.ei.Backup.Game} returns this
 */
proto.ei.Backup.Game.prototype.setPrestigeSoulBoostCash = function(value) {
  return jspb.Message.setField(this, 33, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.Backup.Game} returns this
 */
proto.ei.Backup.Game.prototype.clearPrestigeSoulBoostCash = function() {
  return jspb.Message.setField(this, 33, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.Backup.Game.prototype.hasPrestigeSoulBoostCash = function() {
  return jspb.Message.getField(this, 33) != null;
};


/**
 * optional double lifetime_cash_earned = 6;
 * @return {number}
 */
proto.ei.Backup.Game.prototype.getLifetimeCashEarned = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 6, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.ei.Backup.Game} returns this
 */
proto.ei.Backup.Game.prototype.setLifetimeCashEarned = function(value) {
  return jspb.Message.setField(this, 6, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.Backup.Game} returns this
 */
proto.ei.Backup.Game.prototype.clearLifetimeCashEarned = function() {
  return jspb.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.Backup.Game.prototype.hasLifetimeCashEarned = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional uint64 piggy_bank = 7;
 * @return {number}
 */
proto.ei.Backup.Game.prototype.getPiggyBank = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {number} value
 * @return {!proto.ei.Backup.Game} returns this
 */
proto.ei.Backup.Game.prototype.setPiggyBank = function(value) {
  return jspb.Message.setField(this, 7, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.Backup.Game} returns this
 */
proto.ei.Backup.Game.prototype.clearPiggyBank = function() {
  return jspb.Message.setField(this, 7, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.Backup.Game.prototype.hasPiggyBank = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional bool piggy_full_alert_shown = 31;
 * @return {boolean}
 */
proto.ei.Backup.Game.prototype.getPiggyFullAlertShown = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 31, false));
};


/**
 * @param {boolean} value
 * @return {!proto.ei.Backup.Game} returns this
 */
proto.ei.Backup.Game.prototype.setPiggyFullAlertShown = function(value) {
  return jspb.Message.setField(this, 31, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.Backup.Game} returns this
 */
proto.ei.Backup.Game.prototype.clearPiggyFullAlertShown = function() {
  return jspb.Message.setField(this, 31, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.Backup.Game.prototype.hasPiggyFullAlertShown = function() {
  return jspb.Message.getField(this, 31) != null;
};


/**
 * optional uint32 permit_level = 8;
 * @return {number}
 */
proto.ei.Backup.Game.prototype.getPermitLevel = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/**
 * @param {number} value
 * @return {!proto.ei.Backup.Game} returns this
 */
proto.ei.Backup.Game.prototype.setPermitLevel = function(value) {
  return jspb.Message.setField(this, 8, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.Backup.Game} returns this
 */
proto.ei.Backup.Game.prototype.clearPermitLevel = function() {
  return jspb.Message.setField(this, 8, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.Backup.Game.prototype.hasPermitLevel = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * repeated ResearchItem epic_research = 9;
 * @return {!Array<!proto.ei.Backup.ResearchItem>}
 */
proto.ei.Backup.Game.prototype.getEpicResearchList = function() {
  return /** @type{!Array<!proto.ei.Backup.ResearchItem>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.ei.Backup.ResearchItem, 9));
};


/**
 * @param {!Array<!proto.ei.Backup.ResearchItem>} value
 * @return {!proto.ei.Backup.Game} returns this
*/
proto.ei.Backup.Game.prototype.setEpicResearchList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 9, value);
};


/**
 * @param {!proto.ei.Backup.ResearchItem=} opt_value
 * @param {number=} opt_index
 * @return {!proto.ei.Backup.ResearchItem}
 */
proto.ei.Backup.Game.prototype.addEpicResearch = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 9, opt_value, proto.ei.Backup.ResearchItem, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.ei.Backup.Game} returns this
 */
proto.ei.Backup.Game.prototype.clearEpicResearchList = function() {
  return this.setEpicResearchList([]);
};


/**
 * optional bool hyperloop_station = 29;
 * @return {boolean}
 */
proto.ei.Backup.Game.prototype.getHyperloopStation = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 29, false));
};


/**
 * @param {boolean} value
 * @return {!proto.ei.Backup.Game} returns this
 */
proto.ei.Backup.Game.prototype.setHyperloopStation = function(value) {
  return jspb.Message.setField(this, 29, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.Backup.Game} returns this
 */
proto.ei.Backup.Game.prototype.clearHyperloopStation = function() {
  return jspb.Message.setField(this, 29, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.Backup.Game.prototype.hasHyperloopStation = function() {
  return jspb.Message.getField(this, 29) != null;
};


/**
 * optional double next_daily_gift_time = 10;
 * @return {number}
 */
proto.ei.Backup.Game.prototype.getNextDailyGiftTime = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 10, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.ei.Backup.Game} returns this
 */
proto.ei.Backup.Game.prototype.setNextDailyGiftTime = function(value) {
  return jspb.Message.setField(this, 10, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.Backup.Game} returns this
 */
proto.ei.Backup.Game.prototype.clearNextDailyGiftTime = function() {
  return jspb.Message.setField(this, 10, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.Backup.Game.prototype.hasNextDailyGiftTime = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * optional uint32 last_daily_gift_collected_day = 20;
 * @return {number}
 */
proto.ei.Backup.Game.prototype.getLastDailyGiftCollectedDay = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 20, 0));
};


/**
 * @param {number} value
 * @return {!proto.ei.Backup.Game} returns this
 */
proto.ei.Backup.Game.prototype.setLastDailyGiftCollectedDay = function(value) {
  return jspb.Message.setField(this, 20, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.Backup.Game} returns this
 */
proto.ei.Backup.Game.prototype.clearLastDailyGiftCollectedDay = function() {
  return jspb.Message.setField(this, 20, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.Backup.Game.prototype.hasLastDailyGiftCollectedDay = function() {
  return jspb.Message.getField(this, 20) != null;
};


/**
 * optional uint32 num_daily_gifts_collected = 28;
 * @return {number}
 */
proto.ei.Backup.Game.prototype.getNumDailyGiftsCollected = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 28, 0));
};


/**
 * @param {number} value
 * @return {!proto.ei.Backup.Game} returns this
 */
proto.ei.Backup.Game.prototype.setNumDailyGiftsCollected = function(value) {
  return jspb.Message.setField(this, 28, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.Backup.Game} returns this
 */
proto.ei.Backup.Game.prototype.clearNumDailyGiftsCollected = function() {
  return jspb.Message.setField(this, 28, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.Backup.Game.prototype.hasNumDailyGiftsCollected = function() {
  return jspb.Message.getField(this, 28) != null;
};


/**
 * repeated NewsHeadline news = 11;
 * @return {!Array<!proto.ei.Backup.NewsHeadline>}
 */
proto.ei.Backup.Game.prototype.getNewsList = function() {
  return /** @type{!Array<!proto.ei.Backup.NewsHeadline>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.ei.Backup.NewsHeadline, 11));
};


/**
 * @param {!Array<!proto.ei.Backup.NewsHeadline>} value
 * @return {!proto.ei.Backup.Game} returns this
*/
proto.ei.Backup.Game.prototype.setNewsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 11, value);
};


/**
 * @param {!proto.ei.Backup.NewsHeadline=} opt_value
 * @param {number=} opt_index
 * @return {!proto.ei.Backup.NewsHeadline}
 */
proto.ei.Backup.Game.prototype.addNews = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 11, opt_value, proto.ei.Backup.NewsHeadline, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.ei.Backup.Game} returns this
 */
proto.ei.Backup.Game.prototype.clearNewsList = function() {
  return this.setNewsList([]);
};


/**
 * optional double last_news_time = 12;
 * @return {number}
 */
proto.ei.Backup.Game.prototype.getLastNewsTime = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 12, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.ei.Backup.Game} returns this
 */
proto.ei.Backup.Game.prototype.setLastNewsTime = function(value) {
  return jspb.Message.setField(this, 12, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.Backup.Game} returns this
 */
proto.ei.Backup.Game.prototype.clearLastNewsTime = function() {
  return jspb.Message.setField(this, 12, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.Backup.Game.prototype.hasLastNewsTime = function() {
  return jspb.Message.getField(this, 12) != null;
};


/**
 * optional double current_multiplier = 13;
 * @return {number}
 */
proto.ei.Backup.Game.prototype.getCurrentMultiplier = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 13, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.ei.Backup.Game} returns this
 */
proto.ei.Backup.Game.prototype.setCurrentMultiplier = function(value) {
  return jspb.Message.setField(this, 13, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.Backup.Game} returns this
 */
proto.ei.Backup.Game.prototype.clearCurrentMultiplier = function() {
  return jspb.Message.setField(this, 13, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.Backup.Game.prototype.hasCurrentMultiplier = function() {
  return jspb.Message.getField(this, 13) != null;
};


/**
 * optional double current_multiplier_expiration = 14;
 * @return {number}
 */
proto.ei.Backup.Game.prototype.getCurrentMultiplierExpiration = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 14, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.ei.Backup.Game} returns this
 */
proto.ei.Backup.Game.prototype.setCurrentMultiplierExpiration = function(value) {
  return jspb.Message.setField(this, 14, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.Backup.Game} returns this
 */
proto.ei.Backup.Game.prototype.clearCurrentMultiplierExpiration = function() {
  return jspb.Message.setField(this, 14, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.Backup.Game.prototype.hasCurrentMultiplierExpiration = function() {
  return jspb.Message.getField(this, 14) != null;
};


/**
 * repeated AchievementInfo achievements = 15;
 * @return {!Array<!proto.ei.Backup.AchievementInfo>}
 */
proto.ei.Backup.Game.prototype.getAchievementsList = function() {
  return /** @type{!Array<!proto.ei.Backup.AchievementInfo>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.ei.Backup.AchievementInfo, 15));
};


/**
 * @param {!Array<!proto.ei.Backup.AchievementInfo>} value
 * @return {!proto.ei.Backup.Game} returns this
*/
proto.ei.Backup.Game.prototype.setAchievementsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 15, value);
};


/**
 * @param {!proto.ei.Backup.AchievementInfo=} opt_value
 * @param {number=} opt_index
 * @return {!proto.ei.Backup.AchievementInfo}
 */
proto.ei.Backup.Game.prototype.addAchievements = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 15, opt_value, proto.ei.Backup.AchievementInfo, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.ei.Backup.Game} returns this
 */
proto.ei.Backup.Game.prototype.clearAchievementsList = function() {
  return this.setAchievementsList([]);
};


/**
 * repeated uint64 max_farm_size_reached = 18;
 * @return {!Array<number>}
 */
proto.ei.Backup.Game.prototype.getMaxFarmSizeReachedList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 18));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.ei.Backup.Game} returns this
 */
proto.ei.Backup.Game.prototype.setMaxFarmSizeReachedList = function(value) {
  return jspb.Message.setField(this, 18, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.ei.Backup.Game} returns this
 */
proto.ei.Backup.Game.prototype.addMaxFarmSizeReached = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 18, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.ei.Backup.Game} returns this
 */
proto.ei.Backup.Game.prototype.clearMaxFarmSizeReachedList = function() {
  return this.setMaxFarmSizeReachedList([]);
};


/**
 * repeated uint32 egg_medal_level = 19;
 * @return {!Array<number>}
 */
proto.ei.Backup.Game.prototype.getEggMedalLevelList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 19));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.ei.Backup.Game} returns this
 */
proto.ei.Backup.Game.prototype.setEggMedalLevelList = function(value) {
  return jspb.Message.setField(this, 19, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.ei.Backup.Game} returns this
 */
proto.ei.Backup.Game.prototype.addEggMedalLevel = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 19, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.ei.Backup.Game} returns this
 */
proto.ei.Backup.Game.prototype.clearEggMedalLevelList = function() {
  return this.setEggMedalLevelList([]);
};


/**
 * optional bool long_idle_notification_set = 25;
 * @return {boolean}
 */
proto.ei.Backup.Game.prototype.getLongIdleNotificationSet = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 25, false));
};


/**
 * @param {boolean} value
 * @return {!proto.ei.Backup.Game} returns this
 */
proto.ei.Backup.Game.prototype.setLongIdleNotificationSet = function(value) {
  return jspb.Message.setField(this, 25, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.Backup.Game} returns this
 */
proto.ei.Backup.Game.prototype.clearLongIdleNotificationSet = function() {
  return jspb.Message.setField(this, 25, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.Backup.Game.prototype.hasLongIdleNotificationSet = function() {
  return jspb.Message.getField(this, 25) != null;
};


/**
 * optional double long_idle_notification_threshold = 26;
 * @return {number}
 */
proto.ei.Backup.Game.prototype.getLongIdleNotificationThreshold = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 26, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.ei.Backup.Game} returns this
 */
proto.ei.Backup.Game.prototype.setLongIdleNotificationThreshold = function(value) {
  return jspb.Message.setField(this, 26, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.Backup.Game} returns this
 */
proto.ei.Backup.Game.prototype.clearLongIdleNotificationThreshold = function() {
  return jspb.Message.setField(this, 26, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.Backup.Game.prototype.hasLongIdleNotificationThreshold = function() {
  return jspb.Message.getField(this, 26) != null;
};


/**
 * optional double long_idle_reward = 27;
 * @return {number}
 */
proto.ei.Backup.Game.prototype.getLongIdleReward = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 27, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.ei.Backup.Game} returns this
 */
proto.ei.Backup.Game.prototype.setLongIdleReward = function(value) {
  return jspb.Message.setField(this, 27, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.Backup.Game} returns this
 */
proto.ei.Backup.Game.prototype.clearLongIdleReward = function() {
  return jspb.Message.setField(this, 27, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.Backup.Game.prototype.hasLongIdleReward = function() {
  return jspb.Message.getField(this, 27) != null;
};


/**
 * repeated OwnedBoost boosts = 30;
 * @return {!Array<!proto.ei.Backup.OwnedBoost>}
 */
proto.ei.Backup.Game.prototype.getBoostsList = function() {
  return /** @type{!Array<!proto.ei.Backup.OwnedBoost>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.ei.Backup.OwnedBoost, 30));
};


/**
 * @param {!Array<!proto.ei.Backup.OwnedBoost>} value
 * @return {!proto.ei.Backup.Game} returns this
*/
proto.ei.Backup.Game.prototype.setBoostsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 30, value);
};


/**
 * @param {!proto.ei.Backup.OwnedBoost=} opt_value
 * @param {number=} opt_index
 * @return {!proto.ei.Backup.OwnedBoost}
 */
proto.ei.Backup.Game.prototype.addBoosts = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 30, opt_value, proto.ei.Backup.OwnedBoost, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.ei.Backup.Game} returns this
 */
proto.ei.Backup.Game.prototype.clearBoostsList = function() {
  return this.setBoostsList([]);
};


/**
 * optional uint32 total_time_cheats_detected = 32;
 * @return {number}
 */
proto.ei.Backup.Game.prototype.getTotalTimeCheatsDetected = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 32, 0));
};


/**
 * @param {number} value
 * @return {!proto.ei.Backup.Game} returns this
 */
proto.ei.Backup.Game.prototype.setTotalTimeCheatsDetected = function(value) {
  return jspb.Message.setField(this, 32, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.Backup.Game} returns this
 */
proto.ei.Backup.Game.prototype.clearTotalTimeCheatsDetected = function() {
  return jspb.Message.setField(this, 32, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.Backup.Game.prototype.hasTotalTimeCheatsDetected = function() {
  return jspb.Message.getField(this, 32) != null;
};


/**
 * optional bool force_elite_contracts = 36;
 * @return {boolean}
 */
proto.ei.Backup.Game.prototype.getForceEliteContracts = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 36, false));
};


/**
 * @param {boolean} value
 * @return {!proto.ei.Backup.Game} returns this
 */
proto.ei.Backup.Game.prototype.setForceEliteContracts = function(value) {
  return jspb.Message.setField(this, 36, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.Backup.Game} returns this
 */
proto.ei.Backup.Game.prototype.clearForceEliteContracts = function() {
  return jspb.Message.setField(this, 36, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.Backup.Game.prototype.hasForceEliteContracts = function() {
  return jspb.Message.getField(this, 36) != null;
};


/**
 * optional double new_player_event_end_time = 37;
 * @return {number}
 */
proto.ei.Backup.Game.prototype.getNewPlayerEventEndTime = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 37, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.ei.Backup.Game} returns this
 */
proto.ei.Backup.Game.prototype.setNewPlayerEventEndTime = function(value) {
  return jspb.Message.setField(this, 37, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.Backup.Game} returns this
 */
proto.ei.Backup.Game.prototype.clearNewPlayerEventEndTime = function() {
  return jspb.Message.setField(this, 37, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.Backup.Game.prototype.hasNewPlayerEventEndTime = function() {
  return jspb.Message.getField(this, 37) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.ei.Backup.Artifacts.repeatedFields_ = [16,18];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ei.Backup.Artifacts.prototype.toObject = function(opt_includeInstance) {
  return proto.ei.Backup.Artifacts.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ei.Backup.Artifacts} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.Backup.Artifacts.toObject = function(includeInstance, msg) {
  var f, obj = {
    infusing: (f = jspb.Message.getBooleanField(msg, 1)) == null ? undefined : f,
    itemBeingInfused: (f = msg.getItemBeingInfused()) && proto.ei.ArtifactInventoryItem.toObject(includeInstance, f),
    specBeingInfused: (f = msg.getSpecBeingInfused()) && proto.ei.ArtifactSpec.toObject(includeInstance, f),
    eggTypeInfusing: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f,
    infusingEggsRequired: (f = jspb.Message.getOptionalFloatingPointField(msg, 4)) == null ? undefined : f,
    eggsInfused: (f = jspb.Message.getOptionalFloatingPointField(msg, 5)) == null ? undefined : f,
    flowPercentageArtifacts: jspb.Message.getFloatingPointFieldWithDefault(msg, 6, 0.5),
    fuelingEnabled: jspb.Message.getBooleanFieldWithDefault(msg, 7, true),
    tankFillingEnabled: (f = jspb.Message.getBooleanField(msg, 14)) == null ? undefined : f,
    tankLevel: (f = jspb.Message.getField(msg, 15)) == null ? undefined : f,
    tankFuelsList: (f = jspb.Message.getRepeatedFloatingPointField(msg, 16)) == null ? undefined : f,
    tankLimitsList: (f = jspb.Message.getRepeatedFloatingPointField(msg, 18)) == null ? undefined : f,
    lastFueledShip: (f = jspb.Message.getField(msg, 9)) == null ? undefined : f,
    inventoryScore: (f = jspb.Message.getOptionalFloatingPointField(msg, 10)) == null ? undefined : f,
    craftingXp: (f = jspb.Message.getOptionalFloatingPointField(msg, 17)) == null ? undefined : f,
    enabled: (f = jspb.Message.getBooleanField(msg, 11)) == null ? undefined : f,
    introShown: (f = jspb.Message.getBooleanField(msg, 12)) == null ? undefined : f,
    infusingEnabledDeprecated: jspb.Message.getBooleanFieldWithDefault(msg, 8, true)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ei.Backup.Artifacts}
 */
proto.ei.Backup.Artifacts.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ei.Backup.Artifacts;
  return proto.ei.Backup.Artifacts.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ei.Backup.Artifacts} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ei.Backup.Artifacts}
 */
proto.ei.Backup.Artifacts.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setInfusing(value);
      break;
    case 2:
      var value = new proto.ei.ArtifactInventoryItem;
      reader.readMessage(value,proto.ei.ArtifactInventoryItem.deserializeBinaryFromReader);
      msg.setItemBeingInfused(value);
      break;
    case 13:
      var value = new proto.ei.ArtifactSpec;
      reader.readMessage(value,proto.ei.ArtifactSpec.deserializeBinaryFromReader);
      msg.setSpecBeingInfused(value);
      break;
    case 3:
      var value = /** @type {!proto.ei.Egg} */ (reader.readEnum());
      msg.setEggTypeInfusing(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setInfusingEggsRequired(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setEggsInfused(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setFlowPercentageArtifacts(value);
      break;
    case 7:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setFuelingEnabled(value);
      break;
    case 14:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setTankFillingEnabled(value);
      break;
    case 15:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setTankLevel(value);
      break;
    case 16:
      var values = /** @type {!Array<number>} */ (reader.isDelimited() ? reader.readPackedDouble() : [reader.readDouble()]);
      for (var i = 0; i < values.length; i++) {
        msg.addTankFuels(values[i]);
      }
      break;
    case 18:
      var values = /** @type {!Array<number>} */ (reader.isDelimited() ? reader.readPackedDouble() : [reader.readDouble()]);
      for (var i = 0; i < values.length; i++) {
        msg.addTankLimits(values[i]);
      }
      break;
    case 9:
      var value = /** @type {!proto.ei.MissionInfo.Spaceship} */ (reader.readEnum());
      msg.setLastFueledShip(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setInventoryScore(value);
      break;
    case 17:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setCraftingXp(value);
      break;
    case 11:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setEnabled(value);
      break;
    case 12:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIntroShown(value);
      break;
    case 8:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setInfusingEnabledDeprecated(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ei.Backup.Artifacts.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ei.Backup.Artifacts.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ei.Backup.Artifacts} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.Backup.Artifacts.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {boolean} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeBool(
      1,
      f
    );
  }
  f = message.getItemBeingInfused();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.ei.ArtifactInventoryItem.serializeBinaryToWriter
    );
  }
  f = message.getSpecBeingInfused();
  if (f != null) {
    writer.writeMessage(
      13,
      f,
      proto.ei.ArtifactSpec.serializeBinaryToWriter
    );
  }
  f = /** @type {!proto.ei.Egg} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeEnum(
      3,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeDouble(
      4,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeDouble(
      5,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeDouble(
      6,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 7));
  if (f != null) {
    writer.writeBool(
      7,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 14));
  if (f != null) {
    writer.writeBool(
      14,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 15));
  if (f != null) {
    writer.writeUint32(
      15,
      f
    );
  }
  f = message.getTankFuelsList();
  if (f.length > 0) {
    writer.writeRepeatedDouble(
      16,
      f
    );
  }
  f = message.getTankLimitsList();
  if (f.length > 0) {
    writer.writeRepeatedDouble(
      18,
      f
    );
  }
  f = /** @type {!proto.ei.MissionInfo.Spaceship} */ (jspb.Message.getField(message, 9));
  if (f != null) {
    writer.writeEnum(
      9,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 10));
  if (f != null) {
    writer.writeDouble(
      10,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 17));
  if (f != null) {
    writer.writeDouble(
      17,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 11));
  if (f != null) {
    writer.writeBool(
      11,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 12));
  if (f != null) {
    writer.writeBool(
      12,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 8));
  if (f != null) {
    writer.writeBool(
      8,
      f
    );
  }
};


/**
 * optional bool infusing = 1;
 * @return {boolean}
 */
proto.ei.Backup.Artifacts.prototype.getInfusing = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.ei.Backup.Artifacts} returns this
 */
proto.ei.Backup.Artifacts.prototype.setInfusing = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.Backup.Artifacts} returns this
 */
proto.ei.Backup.Artifacts.prototype.clearInfusing = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.Backup.Artifacts.prototype.hasInfusing = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional ArtifactInventoryItem item_being_infused = 2;
 * @return {?proto.ei.ArtifactInventoryItem}
 */
proto.ei.Backup.Artifacts.prototype.getItemBeingInfused = function() {
  return /** @type{?proto.ei.ArtifactInventoryItem} */ (
    jspb.Message.getWrapperField(this, proto.ei.ArtifactInventoryItem, 2));
};


/**
 * @param {?proto.ei.ArtifactInventoryItem|undefined} value
 * @return {!proto.ei.Backup.Artifacts} returns this
*/
proto.ei.Backup.Artifacts.prototype.setItemBeingInfused = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.ei.Backup.Artifacts} returns this
 */
proto.ei.Backup.Artifacts.prototype.clearItemBeingInfused = function() {
  return this.setItemBeingInfused(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.Backup.Artifacts.prototype.hasItemBeingInfused = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional ArtifactSpec spec_being_infused = 13;
 * @return {?proto.ei.ArtifactSpec}
 */
proto.ei.Backup.Artifacts.prototype.getSpecBeingInfused = function() {
  return /** @type{?proto.ei.ArtifactSpec} */ (
    jspb.Message.getWrapperField(this, proto.ei.ArtifactSpec, 13));
};


/**
 * @param {?proto.ei.ArtifactSpec|undefined} value
 * @return {!proto.ei.Backup.Artifacts} returns this
*/
proto.ei.Backup.Artifacts.prototype.setSpecBeingInfused = function(value) {
  return jspb.Message.setWrapperField(this, 13, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.ei.Backup.Artifacts} returns this
 */
proto.ei.Backup.Artifacts.prototype.clearSpecBeingInfused = function() {
  return this.setSpecBeingInfused(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.Backup.Artifacts.prototype.hasSpecBeingInfused = function() {
  return jspb.Message.getField(this, 13) != null;
};


/**
 * optional Egg egg_type_infusing = 3;
 * @return {!proto.ei.Egg}
 */
proto.ei.Backup.Artifacts.prototype.getEggTypeInfusing = function() {
  return /** @type {!proto.ei.Egg} */ (jspb.Message.getFieldWithDefault(this, 3, 1));
};


/**
 * @param {!proto.ei.Egg} value
 * @return {!proto.ei.Backup.Artifacts} returns this
 */
proto.ei.Backup.Artifacts.prototype.setEggTypeInfusing = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.Backup.Artifacts} returns this
 */
proto.ei.Backup.Artifacts.prototype.clearEggTypeInfusing = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.Backup.Artifacts.prototype.hasEggTypeInfusing = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional double infusing_eggs_required = 4;
 * @return {number}
 */
proto.ei.Backup.Artifacts.prototype.getInfusingEggsRequired = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 4, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.ei.Backup.Artifacts} returns this
 */
proto.ei.Backup.Artifacts.prototype.setInfusingEggsRequired = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.Backup.Artifacts} returns this
 */
proto.ei.Backup.Artifacts.prototype.clearInfusingEggsRequired = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.Backup.Artifacts.prototype.hasInfusingEggsRequired = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional double eggs_infused = 5;
 * @return {number}
 */
proto.ei.Backup.Artifacts.prototype.getEggsInfused = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 5, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.ei.Backup.Artifacts} returns this
 */
proto.ei.Backup.Artifacts.prototype.setEggsInfused = function(value) {
  return jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.Backup.Artifacts} returns this
 */
proto.ei.Backup.Artifacts.prototype.clearEggsInfused = function() {
  return jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.Backup.Artifacts.prototype.hasEggsInfused = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional double flow_percentage_artifacts = 6;
 * @return {number}
 */
proto.ei.Backup.Artifacts.prototype.getFlowPercentageArtifacts = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 6, 0.5));
};


/**
 * @param {number} value
 * @return {!proto.ei.Backup.Artifacts} returns this
 */
proto.ei.Backup.Artifacts.prototype.setFlowPercentageArtifacts = function(value) {
  return jspb.Message.setField(this, 6, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.Backup.Artifacts} returns this
 */
proto.ei.Backup.Artifacts.prototype.clearFlowPercentageArtifacts = function() {
  return jspb.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.Backup.Artifacts.prototype.hasFlowPercentageArtifacts = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional bool fueling_enabled = 7;
 * @return {boolean}
 */
proto.ei.Backup.Artifacts.prototype.getFuelingEnabled = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 7, true));
};


/**
 * @param {boolean} value
 * @return {!proto.ei.Backup.Artifacts} returns this
 */
proto.ei.Backup.Artifacts.prototype.setFuelingEnabled = function(value) {
  return jspb.Message.setField(this, 7, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.Backup.Artifacts} returns this
 */
proto.ei.Backup.Artifacts.prototype.clearFuelingEnabled = function() {
  return jspb.Message.setField(this, 7, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.Backup.Artifacts.prototype.hasFuelingEnabled = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional bool tank_filling_enabled = 14;
 * @return {boolean}
 */
proto.ei.Backup.Artifacts.prototype.getTankFillingEnabled = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 14, false));
};


/**
 * @param {boolean} value
 * @return {!proto.ei.Backup.Artifacts} returns this
 */
proto.ei.Backup.Artifacts.prototype.setTankFillingEnabled = function(value) {
  return jspb.Message.setField(this, 14, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.Backup.Artifacts} returns this
 */
proto.ei.Backup.Artifacts.prototype.clearTankFillingEnabled = function() {
  return jspb.Message.setField(this, 14, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.Backup.Artifacts.prototype.hasTankFillingEnabled = function() {
  return jspb.Message.getField(this, 14) != null;
};


/**
 * optional uint32 tank_level = 15;
 * @return {number}
 */
proto.ei.Backup.Artifacts.prototype.getTankLevel = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 15, 0));
};


/**
 * @param {number} value
 * @return {!proto.ei.Backup.Artifacts} returns this
 */
proto.ei.Backup.Artifacts.prototype.setTankLevel = function(value) {
  return jspb.Message.setField(this, 15, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.Backup.Artifacts} returns this
 */
proto.ei.Backup.Artifacts.prototype.clearTankLevel = function() {
  return jspb.Message.setField(this, 15, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.Backup.Artifacts.prototype.hasTankLevel = function() {
  return jspb.Message.getField(this, 15) != null;
};


/**
 * repeated double tank_fuels = 16;
 * @return {!Array<number>}
 */
proto.ei.Backup.Artifacts.prototype.getTankFuelsList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedFloatingPointField(this, 16));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.ei.Backup.Artifacts} returns this
 */
proto.ei.Backup.Artifacts.prototype.setTankFuelsList = function(value) {
  return jspb.Message.setField(this, 16, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.ei.Backup.Artifacts} returns this
 */
proto.ei.Backup.Artifacts.prototype.addTankFuels = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 16, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.ei.Backup.Artifacts} returns this
 */
proto.ei.Backup.Artifacts.prototype.clearTankFuelsList = function() {
  return this.setTankFuelsList([]);
};


/**
 * repeated double tank_limits = 18;
 * @return {!Array<number>}
 */
proto.ei.Backup.Artifacts.prototype.getTankLimitsList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedFloatingPointField(this, 18));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.ei.Backup.Artifacts} returns this
 */
proto.ei.Backup.Artifacts.prototype.setTankLimitsList = function(value) {
  return jspb.Message.setField(this, 18, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.ei.Backup.Artifacts} returns this
 */
proto.ei.Backup.Artifacts.prototype.addTankLimits = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 18, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.ei.Backup.Artifacts} returns this
 */
proto.ei.Backup.Artifacts.prototype.clearTankLimitsList = function() {
  return this.setTankLimitsList([]);
};


/**
 * optional MissionInfo.Spaceship last_fueled_ship = 9;
 * @return {!proto.ei.MissionInfo.Spaceship}
 */
proto.ei.Backup.Artifacts.prototype.getLastFueledShip = function() {
  return /** @type {!proto.ei.MissionInfo.Spaceship} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};


/**
 * @param {!proto.ei.MissionInfo.Spaceship} value
 * @return {!proto.ei.Backup.Artifacts} returns this
 */
proto.ei.Backup.Artifacts.prototype.setLastFueledShip = function(value) {
  return jspb.Message.setField(this, 9, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.Backup.Artifacts} returns this
 */
proto.ei.Backup.Artifacts.prototype.clearLastFueledShip = function() {
  return jspb.Message.setField(this, 9, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.Backup.Artifacts.prototype.hasLastFueledShip = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional double inventory_score = 10;
 * @return {number}
 */
proto.ei.Backup.Artifacts.prototype.getInventoryScore = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 10, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.ei.Backup.Artifacts} returns this
 */
proto.ei.Backup.Artifacts.prototype.setInventoryScore = function(value) {
  return jspb.Message.setField(this, 10, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.Backup.Artifacts} returns this
 */
proto.ei.Backup.Artifacts.prototype.clearInventoryScore = function() {
  return jspb.Message.setField(this, 10, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.Backup.Artifacts.prototype.hasInventoryScore = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * optional double crafting_xp = 17;
 * @return {number}
 */
proto.ei.Backup.Artifacts.prototype.getCraftingXp = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 17, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.ei.Backup.Artifacts} returns this
 */
proto.ei.Backup.Artifacts.prototype.setCraftingXp = function(value) {
  return jspb.Message.setField(this, 17, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.Backup.Artifacts} returns this
 */
proto.ei.Backup.Artifacts.prototype.clearCraftingXp = function() {
  return jspb.Message.setField(this, 17, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.Backup.Artifacts.prototype.hasCraftingXp = function() {
  return jspb.Message.getField(this, 17) != null;
};


/**
 * optional bool enabled = 11;
 * @return {boolean}
 */
proto.ei.Backup.Artifacts.prototype.getEnabled = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 11, false));
};


/**
 * @param {boolean} value
 * @return {!proto.ei.Backup.Artifacts} returns this
 */
proto.ei.Backup.Artifacts.prototype.setEnabled = function(value) {
  return jspb.Message.setField(this, 11, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.Backup.Artifacts} returns this
 */
proto.ei.Backup.Artifacts.prototype.clearEnabled = function() {
  return jspb.Message.setField(this, 11, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.Backup.Artifacts.prototype.hasEnabled = function() {
  return jspb.Message.getField(this, 11) != null;
};


/**
 * optional bool intro_shown = 12;
 * @return {boolean}
 */
proto.ei.Backup.Artifacts.prototype.getIntroShown = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 12, false));
};


/**
 * @param {boolean} value
 * @return {!proto.ei.Backup.Artifacts} returns this
 */
proto.ei.Backup.Artifacts.prototype.setIntroShown = function(value) {
  return jspb.Message.setField(this, 12, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.Backup.Artifacts} returns this
 */
proto.ei.Backup.Artifacts.prototype.clearIntroShown = function() {
  return jspb.Message.setField(this, 12, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.Backup.Artifacts.prototype.hasIntroShown = function() {
  return jspb.Message.getField(this, 12) != null;
};


/**
 * optional bool infusing_enabled_DEPRECATED = 8;
 * @return {boolean}
 */
proto.ei.Backup.Artifacts.prototype.getInfusingEnabledDeprecated = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 8, true));
};


/**
 * @param {boolean} value
 * @return {!proto.ei.Backup.Artifacts} returns this
 */
proto.ei.Backup.Artifacts.prototype.setInfusingEnabledDeprecated = function(value) {
  return jspb.Message.setField(this, 8, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.Backup.Artifacts} returns this
 */
proto.ei.Backup.Artifacts.prototype.clearInfusingEnabledDeprecated = function() {
  return jspb.Message.setField(this, 8, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.Backup.Artifacts.prototype.hasInfusingEnabledDeprecated = function() {
  return jspb.Message.getField(this, 8) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.ei.Backup.Shells.repeatedFields_ = [3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ei.Backup.Shells.prototype.toObject = function(opt_includeInstance) {
  return proto.ei.Backup.Shells.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ei.Backup.Shells} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.Backup.Shells.toObject = function(includeInstance, msg) {
  var f, obj = {
    introAlert: (f = jspb.Message.getBooleanField(msg, 1)) == null ? undefined : f,
    contractsIntroAlert: (f = jspb.Message.getBooleanField(msg, 2)) == null ? undefined : f,
    numNewList: (f = jspb.Message.getRepeatedField(msg, 3)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ei.Backup.Shells}
 */
proto.ei.Backup.Shells.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ei.Backup.Shells;
  return proto.ei.Backup.Shells.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ei.Backup.Shells} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ei.Backup.Shells}
 */
proto.ei.Backup.Shells.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIntroAlert(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setContractsIntroAlert(value);
      break;
    case 3:
      var values = /** @type {!Array<number>} */ (reader.isDelimited() ? reader.readPackedInt32() : [reader.readInt32()]);
      for (var i = 0; i < values.length; i++) {
        msg.addNumNew(values[i]);
      }
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ei.Backup.Shells.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ei.Backup.Shells.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ei.Backup.Shells} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.Backup.Shells.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {boolean} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeBool(
      1,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeBool(
      2,
      f
    );
  }
  f = message.getNumNewList();
  if (f.length > 0) {
    writer.writeRepeatedInt32(
      3,
      f
    );
  }
};


/**
 * optional bool intro_alert = 1;
 * @return {boolean}
 */
proto.ei.Backup.Shells.prototype.getIntroAlert = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.ei.Backup.Shells} returns this
 */
proto.ei.Backup.Shells.prototype.setIntroAlert = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.Backup.Shells} returns this
 */
proto.ei.Backup.Shells.prototype.clearIntroAlert = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.Backup.Shells.prototype.hasIntroAlert = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional bool contracts_intro_alert = 2;
 * @return {boolean}
 */
proto.ei.Backup.Shells.prototype.getContractsIntroAlert = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));
};


/**
 * @param {boolean} value
 * @return {!proto.ei.Backup.Shells} returns this
 */
proto.ei.Backup.Shells.prototype.setContractsIntroAlert = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.Backup.Shells} returns this
 */
proto.ei.Backup.Shells.prototype.clearContractsIntroAlert = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.Backup.Shells.prototype.hasContractsIntroAlert = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * repeated int32 num_new = 3;
 * @return {!Array<number>}
 */
proto.ei.Backup.Shells.prototype.getNumNewList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 3));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.ei.Backup.Shells} returns this
 */
proto.ei.Backup.Shells.prototype.setNumNewList = function(value) {
  return jspb.Message.setField(this, 3, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.ei.Backup.Shells} returns this
 */
proto.ei.Backup.Shells.prototype.addNumNew = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 3, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.ei.Backup.Shells} returns this
 */
proto.ei.Backup.Shells.prototype.clearNumNewList = function() {
  return this.setNumNewList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.ei.Backup.Simulation.repeatedFields_ = [12,13,14,15,17,21,18,22];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ei.Backup.Simulation.prototype.toObject = function(opt_includeInstance) {
  return proto.ei.Backup.Simulation.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ei.Backup.Simulation} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.Backup.Simulation.toObject = function(includeInstance, msg) {
  var f, obj = {
    eggType: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    farmType: (f = jspb.Message.getField(msg, 19)) == null ? undefined : f,
    contractId: (f = jspb.Message.getField(msg, 20)) == null ? undefined : f,
    cashEarned: (f = jspb.Message.getOptionalFloatingPointField(msg, 2)) == null ? undefined : f,
    cashSpent: (f = jspb.Message.getOptionalFloatingPointField(msg, 3)) == null ? undefined : f,
    unclaimedCash: (f = jspb.Message.getOptionalFloatingPointField(msg, 4)) == null ? undefined : f,
    lastStepTime: (f = jspb.Message.getOptionalFloatingPointField(msg, 5)) == null ? undefined : f,
    numChickens: (f = jspb.Message.getField(msg, 6)) == null ? undefined : f,
    numChickensUnsettled: (f = jspb.Message.getField(msg, 7)) == null ? undefined : f,
    numChickensRunning: (f = jspb.Message.getField(msg, 8)) == null ? undefined : f,
    eggsLaid: (f = jspb.Message.getOptionalFloatingPointField(msg, 9)) == null ? undefined : f,
    eggsShipped: (f = jspb.Message.getOptionalFloatingPointField(msg, 30)) == null ? undefined : f,
    eggsPaidFor: (f = jspb.Message.getOptionalFloatingPointField(msg, 10)) == null ? undefined : f,
    silosOwned: (f = jspb.Message.getField(msg, 11)) == null ? undefined : f,
    habsList: (f = jspb.Message.getRepeatedField(msg, 12)) == null ? undefined : f,
    habPopulationList: (f = jspb.Message.getRepeatedField(msg, 13)) == null ? undefined : f,
    habPopulationIndoundList: (f = jspb.Message.getRepeatedField(msg, 14)) == null ? undefined : f,
    habIncubatorPopuplationList: (f = jspb.Message.getRepeatedFloatingPointField(msg, 15)) == null ? undefined : f,
    hatcheryPopulation: (f = jspb.Message.getOptionalFloatingPointField(msg, 16)) == null ? undefined : f,
    vehiclesList: (f = jspb.Message.getRepeatedField(msg, 17)) == null ? undefined : f,
    trainLengthList: (f = jspb.Message.getRepeatedField(msg, 21)) == null ? undefined : f,
    commonResearchList: jspb.Message.toObjectList(msg.getCommonResearchList(),
    proto.ei.Backup.ResearchItem.toObject, includeInstance),
    activeBoostsList: jspb.Message.toObjectList(msg.getActiveBoostsList(),
    proto.ei.Backup.ActiveBoost.toObject, includeInstance),
    lastCashBoostTime: (f = jspb.Message.getOptionalFloatingPointField(msg, 31)) == null ? undefined : f,
    timeCheatsDetected: (f = jspb.Message.getField(msg, 23)) == null ? undefined : f,
    timeCheatDebt: (f = jspb.Message.getOptionalFloatingPointField(msg, 24)) == null ? undefined : f,
    boostTokensReceived: (f = jspb.Message.getField(msg, 25)) == null ? undefined : f,
    boostTokensSpent: (f = jspb.Message.getField(msg, 26)) == null ? undefined : f,
    boostTokensGiven: (f = jspb.Message.getField(msg, 28)) == null ? undefined : f,
    unclaimedBoostTokens: (f = jspb.Message.getField(msg, 27)) == null ? undefined : f,
    gametimeUntilNextBoostToken: (f = jspb.Message.getOptionalFloatingPointField(msg, 29)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ei.Backup.Simulation}
 */
proto.ei.Backup.Simulation.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ei.Backup.Simulation;
  return proto.ei.Backup.Simulation.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ei.Backup.Simulation} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ei.Backup.Simulation}
 */
proto.ei.Backup.Simulation.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.ei.Egg} */ (reader.readEnum());
      msg.setEggType(value);
      break;
    case 19:
      var value = /** @type {!proto.ei.FarmType} */ (reader.readEnum());
      msg.setFarmType(value);
      break;
    case 20:
      var value = /** @type {string} */ (reader.readString());
      msg.setContractId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setCashEarned(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setCashSpent(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setUnclaimedCash(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setLastStepTime(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setNumChickens(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setNumChickensUnsettled(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setNumChickensRunning(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setEggsLaid(value);
      break;
    case 30:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setEggsShipped(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setEggsPaidFor(value);
      break;
    case 11:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setSilosOwned(value);
      break;
    case 12:
      var values = /** @type {!Array<number>} */ (reader.isDelimited() ? reader.readPackedUint32() : [reader.readUint32()]);
      for (var i = 0; i < values.length; i++) {
        msg.addHabs(values[i]);
      }
      break;
    case 13:
      var values = /** @type {!Array<number>} */ (reader.isDelimited() ? reader.readPackedUint64() : [reader.readUint64()]);
      for (var i = 0; i < values.length; i++) {
        msg.addHabPopulation(values[i]);
      }
      break;
    case 14:
      var values = /** @type {!Array<number>} */ (reader.isDelimited() ? reader.readPackedUint64() : [reader.readUint64()]);
      for (var i = 0; i < values.length; i++) {
        msg.addHabPopulationIndound(values[i]);
      }
      break;
    case 15:
      var values = /** @type {!Array<number>} */ (reader.isDelimited() ? reader.readPackedDouble() : [reader.readDouble()]);
      for (var i = 0; i < values.length; i++) {
        msg.addHabIncubatorPopuplation(values[i]);
      }
      break;
    case 16:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setHatcheryPopulation(value);
      break;
    case 17:
      var values = /** @type {!Array<number>} */ (reader.isDelimited() ? reader.readPackedUint32() : [reader.readUint32()]);
      for (var i = 0; i < values.length; i++) {
        msg.addVehicles(values[i]);
      }
      break;
    case 21:
      var values = /** @type {!Array<number>} */ (reader.isDelimited() ? reader.readPackedUint32() : [reader.readUint32()]);
      for (var i = 0; i < values.length; i++) {
        msg.addTrainLength(values[i]);
      }
      break;
    case 18:
      var value = new proto.ei.Backup.ResearchItem;
      reader.readMessage(value,proto.ei.Backup.ResearchItem.deserializeBinaryFromReader);
      msg.addCommonResearch(value);
      break;
    case 22:
      var value = new proto.ei.Backup.ActiveBoost;
      reader.readMessage(value,proto.ei.Backup.ActiveBoost.deserializeBinaryFromReader);
      msg.addActiveBoosts(value);
      break;
    case 31:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setLastCashBoostTime(value);
      break;
    case 23:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setTimeCheatsDetected(value);
      break;
    case 24:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setTimeCheatDebt(value);
      break;
    case 25:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setBoostTokensReceived(value);
      break;
    case 26:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setBoostTokensSpent(value);
      break;
    case 28:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setBoostTokensGiven(value);
      break;
    case 27:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setUnclaimedBoostTokens(value);
      break;
    case 29:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setGametimeUntilNextBoostToken(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ei.Backup.Simulation.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ei.Backup.Simulation.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ei.Backup.Simulation} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.Backup.Simulation.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {!proto.ei.Egg} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = /** @type {!proto.ei.FarmType} */ (jspb.Message.getField(message, 19));
  if (f != null) {
    writer.writeEnum(
      19,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 20));
  if (f != null) {
    writer.writeString(
      20,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeDouble(
      2,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeDouble(
      3,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeDouble(
      4,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeDouble(
      5,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeUint64(
      6,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 7));
  if (f != null) {
    writer.writeUint64(
      7,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 8));
  if (f != null) {
    writer.writeUint64(
      8,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 9));
  if (f != null) {
    writer.writeDouble(
      9,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 30));
  if (f != null) {
    writer.writeDouble(
      30,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 10));
  if (f != null) {
    writer.writeDouble(
      10,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 11));
  if (f != null) {
    writer.writeUint32(
      11,
      f
    );
  }
  f = message.getHabsList();
  if (f.length > 0) {
    writer.writeRepeatedUint32(
      12,
      f
    );
  }
  f = message.getHabPopulationList();
  if (f.length > 0) {
    writer.writeRepeatedUint64(
      13,
      f
    );
  }
  f = message.getHabPopulationIndoundList();
  if (f.length > 0) {
    writer.writeRepeatedUint64(
      14,
      f
    );
  }
  f = message.getHabIncubatorPopuplationList();
  if (f.length > 0) {
    writer.writeRepeatedDouble(
      15,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 16));
  if (f != null) {
    writer.writeDouble(
      16,
      f
    );
  }
  f = message.getVehiclesList();
  if (f.length > 0) {
    writer.writeRepeatedUint32(
      17,
      f
    );
  }
  f = message.getTrainLengthList();
  if (f.length > 0) {
    writer.writeRepeatedUint32(
      21,
      f
    );
  }
  f = message.getCommonResearchList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      18,
      f,
      proto.ei.Backup.ResearchItem.serializeBinaryToWriter
    );
  }
  f = message.getActiveBoostsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      22,
      f,
      proto.ei.Backup.ActiveBoost.serializeBinaryToWriter
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 31));
  if (f != null) {
    writer.writeDouble(
      31,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 23));
  if (f != null) {
    writer.writeUint32(
      23,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 24));
  if (f != null) {
    writer.writeDouble(
      24,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 25));
  if (f != null) {
    writer.writeUint32(
      25,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 26));
  if (f != null) {
    writer.writeUint32(
      26,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 28));
  if (f != null) {
    writer.writeUint32(
      28,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 27));
  if (f != null) {
    writer.writeUint32(
      27,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 29));
  if (f != null) {
    writer.writeDouble(
      29,
      f
    );
  }
};


/**
 * optional Egg egg_type = 1;
 * @return {!proto.ei.Egg}
 */
proto.ei.Backup.Simulation.prototype.getEggType = function() {
  return /** @type {!proto.ei.Egg} */ (jspb.Message.getFieldWithDefault(this, 1, 1));
};


/**
 * @param {!proto.ei.Egg} value
 * @return {!proto.ei.Backup.Simulation} returns this
 */
proto.ei.Backup.Simulation.prototype.setEggType = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.Backup.Simulation} returns this
 */
proto.ei.Backup.Simulation.prototype.clearEggType = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.Backup.Simulation.prototype.hasEggType = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional FarmType farm_type = 19;
 * @return {!proto.ei.FarmType}
 */
proto.ei.Backup.Simulation.prototype.getFarmType = function() {
  return /** @type {!proto.ei.FarmType} */ (jspb.Message.getFieldWithDefault(this, 19, 1));
};


/**
 * @param {!proto.ei.FarmType} value
 * @return {!proto.ei.Backup.Simulation} returns this
 */
proto.ei.Backup.Simulation.prototype.setFarmType = function(value) {
  return jspb.Message.setField(this, 19, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.Backup.Simulation} returns this
 */
proto.ei.Backup.Simulation.prototype.clearFarmType = function() {
  return jspb.Message.setField(this, 19, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.Backup.Simulation.prototype.hasFarmType = function() {
  return jspb.Message.getField(this, 19) != null;
};


/**
 * optional string contract_id = 20;
 * @return {string}
 */
proto.ei.Backup.Simulation.prototype.getContractId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 20, ""));
};


/**
 * @param {string} value
 * @return {!proto.ei.Backup.Simulation} returns this
 */
proto.ei.Backup.Simulation.prototype.setContractId = function(value) {
  return jspb.Message.setField(this, 20, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.Backup.Simulation} returns this
 */
proto.ei.Backup.Simulation.prototype.clearContractId = function() {
  return jspb.Message.setField(this, 20, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.Backup.Simulation.prototype.hasContractId = function() {
  return jspb.Message.getField(this, 20) != null;
};


/**
 * optional double cash_earned = 2;
 * @return {number}
 */
proto.ei.Backup.Simulation.prototype.getCashEarned = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 2, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.ei.Backup.Simulation} returns this
 */
proto.ei.Backup.Simulation.prototype.setCashEarned = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.Backup.Simulation} returns this
 */
proto.ei.Backup.Simulation.prototype.clearCashEarned = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.Backup.Simulation.prototype.hasCashEarned = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional double cash_spent = 3;
 * @return {number}
 */
proto.ei.Backup.Simulation.prototype.getCashSpent = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 3, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.ei.Backup.Simulation} returns this
 */
proto.ei.Backup.Simulation.prototype.setCashSpent = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.Backup.Simulation} returns this
 */
proto.ei.Backup.Simulation.prototype.clearCashSpent = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.Backup.Simulation.prototype.hasCashSpent = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional double unclaimed_cash = 4;
 * @return {number}
 */
proto.ei.Backup.Simulation.prototype.getUnclaimedCash = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 4, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.ei.Backup.Simulation} returns this
 */
proto.ei.Backup.Simulation.prototype.setUnclaimedCash = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.Backup.Simulation} returns this
 */
proto.ei.Backup.Simulation.prototype.clearUnclaimedCash = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.Backup.Simulation.prototype.hasUnclaimedCash = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional double last_step_time = 5;
 * @return {number}
 */
proto.ei.Backup.Simulation.prototype.getLastStepTime = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 5, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.ei.Backup.Simulation} returns this
 */
proto.ei.Backup.Simulation.prototype.setLastStepTime = function(value) {
  return jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.Backup.Simulation} returns this
 */
proto.ei.Backup.Simulation.prototype.clearLastStepTime = function() {
  return jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.Backup.Simulation.prototype.hasLastStepTime = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional uint64 num_chickens = 6;
 * @return {number}
 */
proto.ei.Backup.Simulation.prototype.getNumChickens = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.ei.Backup.Simulation} returns this
 */
proto.ei.Backup.Simulation.prototype.setNumChickens = function(value) {
  return jspb.Message.setField(this, 6, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.Backup.Simulation} returns this
 */
proto.ei.Backup.Simulation.prototype.clearNumChickens = function() {
  return jspb.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.Backup.Simulation.prototype.hasNumChickens = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional uint64 num_chickens_unsettled = 7;
 * @return {number}
 */
proto.ei.Backup.Simulation.prototype.getNumChickensUnsettled = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {number} value
 * @return {!proto.ei.Backup.Simulation} returns this
 */
proto.ei.Backup.Simulation.prototype.setNumChickensUnsettled = function(value) {
  return jspb.Message.setField(this, 7, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.Backup.Simulation} returns this
 */
proto.ei.Backup.Simulation.prototype.clearNumChickensUnsettled = function() {
  return jspb.Message.setField(this, 7, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.Backup.Simulation.prototype.hasNumChickensUnsettled = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional uint64 num_chickens_running = 8;
 * @return {number}
 */
proto.ei.Backup.Simulation.prototype.getNumChickensRunning = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/**
 * @param {number} value
 * @return {!proto.ei.Backup.Simulation} returns this
 */
proto.ei.Backup.Simulation.prototype.setNumChickensRunning = function(value) {
  return jspb.Message.setField(this, 8, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.Backup.Simulation} returns this
 */
proto.ei.Backup.Simulation.prototype.clearNumChickensRunning = function() {
  return jspb.Message.setField(this, 8, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.Backup.Simulation.prototype.hasNumChickensRunning = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional double eggs_laid = 9;
 * @return {number}
 */
proto.ei.Backup.Simulation.prototype.getEggsLaid = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 9, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.ei.Backup.Simulation} returns this
 */
proto.ei.Backup.Simulation.prototype.setEggsLaid = function(value) {
  return jspb.Message.setField(this, 9, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.Backup.Simulation} returns this
 */
proto.ei.Backup.Simulation.prototype.clearEggsLaid = function() {
  return jspb.Message.setField(this, 9, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.Backup.Simulation.prototype.hasEggsLaid = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional double eggs_shipped = 30;
 * @return {number}
 */
proto.ei.Backup.Simulation.prototype.getEggsShipped = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 30, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.ei.Backup.Simulation} returns this
 */
proto.ei.Backup.Simulation.prototype.setEggsShipped = function(value) {
  return jspb.Message.setField(this, 30, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.Backup.Simulation} returns this
 */
proto.ei.Backup.Simulation.prototype.clearEggsShipped = function() {
  return jspb.Message.setField(this, 30, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.Backup.Simulation.prototype.hasEggsShipped = function() {
  return jspb.Message.getField(this, 30) != null;
};


/**
 * optional double eggs_paid_for = 10;
 * @return {number}
 */
proto.ei.Backup.Simulation.prototype.getEggsPaidFor = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 10, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.ei.Backup.Simulation} returns this
 */
proto.ei.Backup.Simulation.prototype.setEggsPaidFor = function(value) {
  return jspb.Message.setField(this, 10, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.Backup.Simulation} returns this
 */
proto.ei.Backup.Simulation.prototype.clearEggsPaidFor = function() {
  return jspb.Message.setField(this, 10, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.Backup.Simulation.prototype.hasEggsPaidFor = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * optional uint32 silos_owned = 11;
 * @return {number}
 */
proto.ei.Backup.Simulation.prototype.getSilosOwned = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 11, 0));
};


/**
 * @param {number} value
 * @return {!proto.ei.Backup.Simulation} returns this
 */
proto.ei.Backup.Simulation.prototype.setSilosOwned = function(value) {
  return jspb.Message.setField(this, 11, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.Backup.Simulation} returns this
 */
proto.ei.Backup.Simulation.prototype.clearSilosOwned = function() {
  return jspb.Message.setField(this, 11, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.Backup.Simulation.prototype.hasSilosOwned = function() {
  return jspb.Message.getField(this, 11) != null;
};


/**
 * repeated uint32 habs = 12;
 * @return {!Array<number>}
 */
proto.ei.Backup.Simulation.prototype.getHabsList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 12));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.ei.Backup.Simulation} returns this
 */
proto.ei.Backup.Simulation.prototype.setHabsList = function(value) {
  return jspb.Message.setField(this, 12, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.ei.Backup.Simulation} returns this
 */
proto.ei.Backup.Simulation.prototype.addHabs = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 12, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.ei.Backup.Simulation} returns this
 */
proto.ei.Backup.Simulation.prototype.clearHabsList = function() {
  return this.setHabsList([]);
};


/**
 * repeated uint64 hab_population = 13;
 * @return {!Array<number>}
 */
proto.ei.Backup.Simulation.prototype.getHabPopulationList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 13));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.ei.Backup.Simulation} returns this
 */
proto.ei.Backup.Simulation.prototype.setHabPopulationList = function(value) {
  return jspb.Message.setField(this, 13, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.ei.Backup.Simulation} returns this
 */
proto.ei.Backup.Simulation.prototype.addHabPopulation = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 13, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.ei.Backup.Simulation} returns this
 */
proto.ei.Backup.Simulation.prototype.clearHabPopulationList = function() {
  return this.setHabPopulationList([]);
};


/**
 * repeated uint64 hab_population_indound = 14;
 * @return {!Array<number>}
 */
proto.ei.Backup.Simulation.prototype.getHabPopulationIndoundList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 14));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.ei.Backup.Simulation} returns this
 */
proto.ei.Backup.Simulation.prototype.setHabPopulationIndoundList = function(value) {
  return jspb.Message.setField(this, 14, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.ei.Backup.Simulation} returns this
 */
proto.ei.Backup.Simulation.prototype.addHabPopulationIndound = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 14, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.ei.Backup.Simulation} returns this
 */
proto.ei.Backup.Simulation.prototype.clearHabPopulationIndoundList = function() {
  return this.setHabPopulationIndoundList([]);
};


/**
 * repeated double hab_incubator_popuplation = 15;
 * @return {!Array<number>}
 */
proto.ei.Backup.Simulation.prototype.getHabIncubatorPopuplationList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedFloatingPointField(this, 15));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.ei.Backup.Simulation} returns this
 */
proto.ei.Backup.Simulation.prototype.setHabIncubatorPopuplationList = function(value) {
  return jspb.Message.setField(this, 15, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.ei.Backup.Simulation} returns this
 */
proto.ei.Backup.Simulation.prototype.addHabIncubatorPopuplation = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 15, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.ei.Backup.Simulation} returns this
 */
proto.ei.Backup.Simulation.prototype.clearHabIncubatorPopuplationList = function() {
  return this.setHabIncubatorPopuplationList([]);
};


/**
 * optional double hatchery_population = 16;
 * @return {number}
 */
proto.ei.Backup.Simulation.prototype.getHatcheryPopulation = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 16, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.ei.Backup.Simulation} returns this
 */
proto.ei.Backup.Simulation.prototype.setHatcheryPopulation = function(value) {
  return jspb.Message.setField(this, 16, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.Backup.Simulation} returns this
 */
proto.ei.Backup.Simulation.prototype.clearHatcheryPopulation = function() {
  return jspb.Message.setField(this, 16, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.Backup.Simulation.prototype.hasHatcheryPopulation = function() {
  return jspb.Message.getField(this, 16) != null;
};


/**
 * repeated uint32 vehicles = 17;
 * @return {!Array<number>}
 */
proto.ei.Backup.Simulation.prototype.getVehiclesList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 17));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.ei.Backup.Simulation} returns this
 */
proto.ei.Backup.Simulation.prototype.setVehiclesList = function(value) {
  return jspb.Message.setField(this, 17, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.ei.Backup.Simulation} returns this
 */
proto.ei.Backup.Simulation.prototype.addVehicles = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 17, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.ei.Backup.Simulation} returns this
 */
proto.ei.Backup.Simulation.prototype.clearVehiclesList = function() {
  return this.setVehiclesList([]);
};


/**
 * repeated uint32 train_length = 21;
 * @return {!Array<number>}
 */
proto.ei.Backup.Simulation.prototype.getTrainLengthList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 21));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.ei.Backup.Simulation} returns this
 */
proto.ei.Backup.Simulation.prototype.setTrainLengthList = function(value) {
  return jspb.Message.setField(this, 21, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.ei.Backup.Simulation} returns this
 */
proto.ei.Backup.Simulation.prototype.addTrainLength = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 21, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.ei.Backup.Simulation} returns this
 */
proto.ei.Backup.Simulation.prototype.clearTrainLengthList = function() {
  return this.setTrainLengthList([]);
};


/**
 * repeated ResearchItem common_research = 18;
 * @return {!Array<!proto.ei.Backup.ResearchItem>}
 */
proto.ei.Backup.Simulation.prototype.getCommonResearchList = function() {
  return /** @type{!Array<!proto.ei.Backup.ResearchItem>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.ei.Backup.ResearchItem, 18));
};


/**
 * @param {!Array<!proto.ei.Backup.ResearchItem>} value
 * @return {!proto.ei.Backup.Simulation} returns this
*/
proto.ei.Backup.Simulation.prototype.setCommonResearchList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 18, value);
};


/**
 * @param {!proto.ei.Backup.ResearchItem=} opt_value
 * @param {number=} opt_index
 * @return {!proto.ei.Backup.ResearchItem}
 */
proto.ei.Backup.Simulation.prototype.addCommonResearch = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 18, opt_value, proto.ei.Backup.ResearchItem, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.ei.Backup.Simulation} returns this
 */
proto.ei.Backup.Simulation.prototype.clearCommonResearchList = function() {
  return this.setCommonResearchList([]);
};


/**
 * repeated ActiveBoost active_boosts = 22;
 * @return {!Array<!proto.ei.Backup.ActiveBoost>}
 */
proto.ei.Backup.Simulation.prototype.getActiveBoostsList = function() {
  return /** @type{!Array<!proto.ei.Backup.ActiveBoost>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.ei.Backup.ActiveBoost, 22));
};


/**
 * @param {!Array<!proto.ei.Backup.ActiveBoost>} value
 * @return {!proto.ei.Backup.Simulation} returns this
*/
proto.ei.Backup.Simulation.prototype.setActiveBoostsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 22, value);
};


/**
 * @param {!proto.ei.Backup.ActiveBoost=} opt_value
 * @param {number=} opt_index
 * @return {!proto.ei.Backup.ActiveBoost}
 */
proto.ei.Backup.Simulation.prototype.addActiveBoosts = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 22, opt_value, proto.ei.Backup.ActiveBoost, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.ei.Backup.Simulation} returns this
 */
proto.ei.Backup.Simulation.prototype.clearActiveBoostsList = function() {
  return this.setActiveBoostsList([]);
};


/**
 * optional double last_cash_boost_time = 31;
 * @return {number}
 */
proto.ei.Backup.Simulation.prototype.getLastCashBoostTime = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 31, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.ei.Backup.Simulation} returns this
 */
proto.ei.Backup.Simulation.prototype.setLastCashBoostTime = function(value) {
  return jspb.Message.setField(this, 31, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.Backup.Simulation} returns this
 */
proto.ei.Backup.Simulation.prototype.clearLastCashBoostTime = function() {
  return jspb.Message.setField(this, 31, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.Backup.Simulation.prototype.hasLastCashBoostTime = function() {
  return jspb.Message.getField(this, 31) != null;
};


/**
 * optional uint32 time_cheats_detected = 23;
 * @return {number}
 */
proto.ei.Backup.Simulation.prototype.getTimeCheatsDetected = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 23, 0));
};


/**
 * @param {number} value
 * @return {!proto.ei.Backup.Simulation} returns this
 */
proto.ei.Backup.Simulation.prototype.setTimeCheatsDetected = function(value) {
  return jspb.Message.setField(this, 23, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.Backup.Simulation} returns this
 */
proto.ei.Backup.Simulation.prototype.clearTimeCheatsDetected = function() {
  return jspb.Message.setField(this, 23, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.Backup.Simulation.prototype.hasTimeCheatsDetected = function() {
  return jspb.Message.getField(this, 23) != null;
};


/**
 * optional double time_cheat_debt = 24;
 * @return {number}
 */
proto.ei.Backup.Simulation.prototype.getTimeCheatDebt = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 24, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.ei.Backup.Simulation} returns this
 */
proto.ei.Backup.Simulation.prototype.setTimeCheatDebt = function(value) {
  return jspb.Message.setField(this, 24, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.Backup.Simulation} returns this
 */
proto.ei.Backup.Simulation.prototype.clearTimeCheatDebt = function() {
  return jspb.Message.setField(this, 24, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.Backup.Simulation.prototype.hasTimeCheatDebt = function() {
  return jspb.Message.getField(this, 24) != null;
};


/**
 * optional uint32 boost_tokens_received = 25;
 * @return {number}
 */
proto.ei.Backup.Simulation.prototype.getBoostTokensReceived = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 25, 0));
};


/**
 * @param {number} value
 * @return {!proto.ei.Backup.Simulation} returns this
 */
proto.ei.Backup.Simulation.prototype.setBoostTokensReceived = function(value) {
  return jspb.Message.setField(this, 25, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.Backup.Simulation} returns this
 */
proto.ei.Backup.Simulation.prototype.clearBoostTokensReceived = function() {
  return jspb.Message.setField(this, 25, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.Backup.Simulation.prototype.hasBoostTokensReceived = function() {
  return jspb.Message.getField(this, 25) != null;
};


/**
 * optional uint32 boost_tokens_spent = 26;
 * @return {number}
 */
proto.ei.Backup.Simulation.prototype.getBoostTokensSpent = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 26, 0));
};


/**
 * @param {number} value
 * @return {!proto.ei.Backup.Simulation} returns this
 */
proto.ei.Backup.Simulation.prototype.setBoostTokensSpent = function(value) {
  return jspb.Message.setField(this, 26, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.Backup.Simulation} returns this
 */
proto.ei.Backup.Simulation.prototype.clearBoostTokensSpent = function() {
  return jspb.Message.setField(this, 26, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.Backup.Simulation.prototype.hasBoostTokensSpent = function() {
  return jspb.Message.getField(this, 26) != null;
};


/**
 * optional uint32 boost_tokens_given = 28;
 * @return {number}
 */
proto.ei.Backup.Simulation.prototype.getBoostTokensGiven = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 28, 0));
};


/**
 * @param {number} value
 * @return {!proto.ei.Backup.Simulation} returns this
 */
proto.ei.Backup.Simulation.prototype.setBoostTokensGiven = function(value) {
  return jspb.Message.setField(this, 28, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.Backup.Simulation} returns this
 */
proto.ei.Backup.Simulation.prototype.clearBoostTokensGiven = function() {
  return jspb.Message.setField(this, 28, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.Backup.Simulation.prototype.hasBoostTokensGiven = function() {
  return jspb.Message.getField(this, 28) != null;
};


/**
 * optional uint32 unclaimed_boost_tokens = 27;
 * @return {number}
 */
proto.ei.Backup.Simulation.prototype.getUnclaimedBoostTokens = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 27, 0));
};


/**
 * @param {number} value
 * @return {!proto.ei.Backup.Simulation} returns this
 */
proto.ei.Backup.Simulation.prototype.setUnclaimedBoostTokens = function(value) {
  return jspb.Message.setField(this, 27, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.Backup.Simulation} returns this
 */
proto.ei.Backup.Simulation.prototype.clearUnclaimedBoostTokens = function() {
  return jspb.Message.setField(this, 27, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.Backup.Simulation.prototype.hasUnclaimedBoostTokens = function() {
  return jspb.Message.getField(this, 27) != null;
};


/**
 * optional double gametime_until_next_boost_token = 29;
 * @return {number}
 */
proto.ei.Backup.Simulation.prototype.getGametimeUntilNextBoostToken = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 29, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.ei.Backup.Simulation} returns this
 */
proto.ei.Backup.Simulation.prototype.setGametimeUntilNextBoostToken = function(value) {
  return jspb.Message.setField(this, 29, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.Backup.Simulation} returns this
 */
proto.ei.Backup.Simulation.prototype.clearGametimeUntilNextBoostToken = function() {
  return jspb.Message.setField(this, 29, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.Backup.Simulation.prototype.hasGametimeUntilNextBoostToken = function() {
  return jspb.Message.getField(this, 29) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.ei.Backup.Mission.repeatedFields_ = [4,3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ei.Backup.Mission.prototype.toObject = function(opt_includeInstance) {
  return proto.ei.Backup.Mission.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ei.Backup.Mission} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.Backup.Mission.toObject = function(includeInstance, msg) {
  var f, obj = {
    currentMission: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    referenceValue: (f = jspb.Message.getOptionalFloatingPointField(msg, 2)) == null ? undefined : f,
    currentMissionsList: (f = jspb.Message.getRepeatedField(msg, 4)) == null ? undefined : f,
    missionsList: jspb.Message.toObjectList(msg.getMissionsList(),
    proto.ei.Backup.MissionInfo.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ei.Backup.Mission}
 */
proto.ei.Backup.Mission.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ei.Backup.Mission;
  return proto.ei.Backup.Mission.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ei.Backup.Mission} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ei.Backup.Mission}
 */
proto.ei.Backup.Mission.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setCurrentMission(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setReferenceValue(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.addCurrentMissions(value);
      break;
    case 3:
      var value = new proto.ei.Backup.MissionInfo;
      reader.readMessage(value,proto.ei.Backup.MissionInfo.deserializeBinaryFromReader);
      msg.addMissions(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ei.Backup.Mission.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ei.Backup.Mission.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ei.Backup.Mission} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.Backup.Mission.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeDouble(
      2,
      f
    );
  }
  f = message.getCurrentMissionsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      4,
      f
    );
  }
  f = message.getMissionsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      proto.ei.Backup.MissionInfo.serializeBinaryToWriter
    );
  }
};


/**
 * optional string current_mission = 1;
 * @return {string}
 */
proto.ei.Backup.Mission.prototype.getCurrentMission = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.ei.Backup.Mission} returns this
 */
proto.ei.Backup.Mission.prototype.setCurrentMission = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.Backup.Mission} returns this
 */
proto.ei.Backup.Mission.prototype.clearCurrentMission = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.Backup.Mission.prototype.hasCurrentMission = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional double reference_value = 2;
 * @return {number}
 */
proto.ei.Backup.Mission.prototype.getReferenceValue = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 2, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.ei.Backup.Mission} returns this
 */
proto.ei.Backup.Mission.prototype.setReferenceValue = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.Backup.Mission} returns this
 */
proto.ei.Backup.Mission.prototype.clearReferenceValue = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.Backup.Mission.prototype.hasReferenceValue = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * repeated string current_missions = 4;
 * @return {!Array<string>}
 */
proto.ei.Backup.Mission.prototype.getCurrentMissionsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 4));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.ei.Backup.Mission} returns this
 */
proto.ei.Backup.Mission.prototype.setCurrentMissionsList = function(value) {
  return jspb.Message.setField(this, 4, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.ei.Backup.Mission} returns this
 */
proto.ei.Backup.Mission.prototype.addCurrentMissions = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 4, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.ei.Backup.Mission} returns this
 */
proto.ei.Backup.Mission.prototype.clearCurrentMissionsList = function() {
  return this.setCurrentMissionsList([]);
};


/**
 * repeated MissionInfo missions = 3;
 * @return {!Array<!proto.ei.Backup.MissionInfo>}
 */
proto.ei.Backup.Mission.prototype.getMissionsList = function() {
  return /** @type{!Array<!proto.ei.Backup.MissionInfo>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.ei.Backup.MissionInfo, 3));
};


/**
 * @param {!Array<!proto.ei.Backup.MissionInfo>} value
 * @return {!proto.ei.Backup.Mission} returns this
*/
proto.ei.Backup.Mission.prototype.setMissionsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.ei.Backup.MissionInfo=} opt_value
 * @param {number=} opt_index
 * @return {!proto.ei.Backup.MissionInfo}
 */
proto.ei.Backup.Mission.prototype.addMissions = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.ei.Backup.MissionInfo, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.ei.Backup.Mission} returns this
 */
proto.ei.Backup.Mission.prototype.clearMissionsList = function() {
  return this.setMissionsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ei.Backup.Misc.prototype.toObject = function(opt_includeInstance) {
  return proto.ei.Backup.Misc.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ei.Backup.Misc} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.Backup.Misc.toObject = function(includeInstance, msg) {
  var f, obj = {
    chickenBtnPrefBig: (f = jspb.Message.getBooleanField(msg, 1)) == null ? undefined : f,
    freeHatcheryRefillGiven: (f = jspb.Message.getBooleanField(msg, 2)) == null ? undefined : f,
    lastShareFarmValue: jspb.Message.getFloatingPointFieldWithDefault(msg, 3, 10000000.0),
    lastShareSwarmFarmValue: jspb.Message.getFloatingPointFieldWithDefault(msg, 4, 10000000.0),
    lastShareSwarmSize: jspb.Message.getFloatingPointFieldWithDefault(msg, 5, 140.0),
    lastPrestigeAlertSoulEggsDeprecated: jspb.Message.getFieldWithDefault(msg, 10, 45),
    friendRank: (f = jspb.Message.getField(msg, 6)) == null ? undefined : f,
    friendRankPop: (f = jspb.Message.getField(msg, 7)) == null ? undefined : f,
    globalRank: (f = jspb.Message.getField(msg, 8)) == null ? undefined : f,
    globalRankPop: (f = jspb.Message.getField(msg, 9)) == null ? undefined : f,
    challengesAlert: (f = jspb.Message.getBooleanField(msg, 20)) == null ? undefined : f,
    trophyAlert: (f = jspb.Message.getBooleanField(msg, 11)) == null ? undefined : f,
    arAlert: (f = jspb.Message.getBooleanField(msg, 12)) == null ? undefined : f,
    contractsAlert: (f = jspb.Message.getBooleanField(msg, 13)) == null ? undefined : f,
    contractsAlertV2: (f = jspb.Message.getBooleanField(msg, 21)) == null ? undefined : f,
    coopAlert: (f = jspb.Message.getBooleanField(msg, 14)) == null ? undefined : f,
    coopAlertV2: (f = jspb.Message.getBooleanField(msg, 22)) == null ? undefined : f,
    switchAlert: (f = jspb.Message.getBooleanField(msg, 15)) == null ? undefined : f,
    eggOfProphecyAlert: (f = jspb.Message.getBooleanField(msg, 16)) == null ? undefined : f,
    boostTokenAlert: (f = jspb.Message.getBooleanField(msg, 17)) == null ? undefined : f,
    soulEggAlert: (f = jspb.Message.getBooleanField(msg, 18)) == null ? undefined : f,
    backupReminderAlert: (f = jspb.Message.getBooleanField(msg, 19)) == null ? undefined : f,
    maxButtonAlert: (f = jspb.Message.getBooleanField(msg, 23)) == null ? undefined : f,
    missionTargetAlert: (f = jspb.Message.getBooleanField(msg, 24)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ei.Backup.Misc}
 */
proto.ei.Backup.Misc.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ei.Backup.Misc;
  return proto.ei.Backup.Misc.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ei.Backup.Misc} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ei.Backup.Misc}
 */
proto.ei.Backup.Misc.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setChickenBtnPrefBig(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setFreeHatcheryRefillGiven(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setLastShareFarmValue(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setLastShareSwarmFarmValue(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setLastShareSwarmSize(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setLastPrestigeAlertSoulEggsDeprecated(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setFriendRank(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setFriendRankPop(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setGlobalRank(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setGlobalRankPop(value);
      break;
    case 20:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setChallengesAlert(value);
      break;
    case 11:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setTrophyAlert(value);
      break;
    case 12:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setArAlert(value);
      break;
    case 13:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setContractsAlert(value);
      break;
    case 21:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setContractsAlertV2(value);
      break;
    case 14:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setCoopAlert(value);
      break;
    case 22:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setCoopAlertV2(value);
      break;
    case 15:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setSwitchAlert(value);
      break;
    case 16:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setEggOfProphecyAlert(value);
      break;
    case 17:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setBoostTokenAlert(value);
      break;
    case 18:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setSoulEggAlert(value);
      break;
    case 19:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setBackupReminderAlert(value);
      break;
    case 23:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setMaxButtonAlert(value);
      break;
    case 24:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setMissionTargetAlert(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ei.Backup.Misc.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ei.Backup.Misc.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ei.Backup.Misc} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.Backup.Misc.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {boolean} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeBool(
      1,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeBool(
      2,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeDouble(
      3,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeDouble(
      4,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeDouble(
      5,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 10));
  if (f != null) {
    writer.writeUint64(
      10,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeUint64(
      6,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 7));
  if (f != null) {
    writer.writeUint64(
      7,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 8));
  if (f != null) {
    writer.writeUint64(
      8,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 9));
  if (f != null) {
    writer.writeUint64(
      9,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 20));
  if (f != null) {
    writer.writeBool(
      20,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 11));
  if (f != null) {
    writer.writeBool(
      11,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 12));
  if (f != null) {
    writer.writeBool(
      12,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 13));
  if (f != null) {
    writer.writeBool(
      13,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 21));
  if (f != null) {
    writer.writeBool(
      21,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 14));
  if (f != null) {
    writer.writeBool(
      14,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 22));
  if (f != null) {
    writer.writeBool(
      22,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 15));
  if (f != null) {
    writer.writeBool(
      15,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 16));
  if (f != null) {
    writer.writeBool(
      16,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 17));
  if (f != null) {
    writer.writeBool(
      17,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 18));
  if (f != null) {
    writer.writeBool(
      18,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 19));
  if (f != null) {
    writer.writeBool(
      19,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 23));
  if (f != null) {
    writer.writeBool(
      23,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 24));
  if (f != null) {
    writer.writeBool(
      24,
      f
    );
  }
};


/**
 * optional bool chicken_btn_pref_big = 1;
 * @return {boolean}
 */
proto.ei.Backup.Misc.prototype.getChickenBtnPrefBig = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.ei.Backup.Misc} returns this
 */
proto.ei.Backup.Misc.prototype.setChickenBtnPrefBig = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.Backup.Misc} returns this
 */
proto.ei.Backup.Misc.prototype.clearChickenBtnPrefBig = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.Backup.Misc.prototype.hasChickenBtnPrefBig = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional bool free_hatchery_refill_given = 2;
 * @return {boolean}
 */
proto.ei.Backup.Misc.prototype.getFreeHatcheryRefillGiven = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));
};


/**
 * @param {boolean} value
 * @return {!proto.ei.Backup.Misc} returns this
 */
proto.ei.Backup.Misc.prototype.setFreeHatcheryRefillGiven = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.Backup.Misc} returns this
 */
proto.ei.Backup.Misc.prototype.clearFreeHatcheryRefillGiven = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.Backup.Misc.prototype.hasFreeHatcheryRefillGiven = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional double last_share_farm_value = 3;
 * @return {number}
 */
proto.ei.Backup.Misc.prototype.getLastShareFarmValue = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 3, 10000000.0));
};


/**
 * @param {number} value
 * @return {!proto.ei.Backup.Misc} returns this
 */
proto.ei.Backup.Misc.prototype.setLastShareFarmValue = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.Backup.Misc} returns this
 */
proto.ei.Backup.Misc.prototype.clearLastShareFarmValue = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.Backup.Misc.prototype.hasLastShareFarmValue = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional double last_share_swarm_farm_value = 4;
 * @return {number}
 */
proto.ei.Backup.Misc.prototype.getLastShareSwarmFarmValue = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 4, 10000000.0));
};


/**
 * @param {number} value
 * @return {!proto.ei.Backup.Misc} returns this
 */
proto.ei.Backup.Misc.prototype.setLastShareSwarmFarmValue = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.Backup.Misc} returns this
 */
proto.ei.Backup.Misc.prototype.clearLastShareSwarmFarmValue = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.Backup.Misc.prototype.hasLastShareSwarmFarmValue = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional double last_share_swarm_size = 5;
 * @return {number}
 */
proto.ei.Backup.Misc.prototype.getLastShareSwarmSize = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 5, 140.0));
};


/**
 * @param {number} value
 * @return {!proto.ei.Backup.Misc} returns this
 */
proto.ei.Backup.Misc.prototype.setLastShareSwarmSize = function(value) {
  return jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.Backup.Misc} returns this
 */
proto.ei.Backup.Misc.prototype.clearLastShareSwarmSize = function() {
  return jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.Backup.Misc.prototype.hasLastShareSwarmSize = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional uint64 last_prestige_alert_soul_eggs_DEPRECATED = 10;
 * @return {number}
 */
proto.ei.Backup.Misc.prototype.getLastPrestigeAlertSoulEggsDeprecated = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 10, 45));
};


/**
 * @param {number} value
 * @return {!proto.ei.Backup.Misc} returns this
 */
proto.ei.Backup.Misc.prototype.setLastPrestigeAlertSoulEggsDeprecated = function(value) {
  return jspb.Message.setField(this, 10, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.Backup.Misc} returns this
 */
proto.ei.Backup.Misc.prototype.clearLastPrestigeAlertSoulEggsDeprecated = function() {
  return jspb.Message.setField(this, 10, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.Backup.Misc.prototype.hasLastPrestigeAlertSoulEggsDeprecated = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * optional uint64 friend_rank = 6;
 * @return {number}
 */
proto.ei.Backup.Misc.prototype.getFriendRank = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.ei.Backup.Misc} returns this
 */
proto.ei.Backup.Misc.prototype.setFriendRank = function(value) {
  return jspb.Message.setField(this, 6, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.Backup.Misc} returns this
 */
proto.ei.Backup.Misc.prototype.clearFriendRank = function() {
  return jspb.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.Backup.Misc.prototype.hasFriendRank = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional uint64 friend_rank_pop = 7;
 * @return {number}
 */
proto.ei.Backup.Misc.prototype.getFriendRankPop = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {number} value
 * @return {!proto.ei.Backup.Misc} returns this
 */
proto.ei.Backup.Misc.prototype.setFriendRankPop = function(value) {
  return jspb.Message.setField(this, 7, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.Backup.Misc} returns this
 */
proto.ei.Backup.Misc.prototype.clearFriendRankPop = function() {
  return jspb.Message.setField(this, 7, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.Backup.Misc.prototype.hasFriendRankPop = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional uint64 global_rank = 8;
 * @return {number}
 */
proto.ei.Backup.Misc.prototype.getGlobalRank = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/**
 * @param {number} value
 * @return {!proto.ei.Backup.Misc} returns this
 */
proto.ei.Backup.Misc.prototype.setGlobalRank = function(value) {
  return jspb.Message.setField(this, 8, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.Backup.Misc} returns this
 */
proto.ei.Backup.Misc.prototype.clearGlobalRank = function() {
  return jspb.Message.setField(this, 8, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.Backup.Misc.prototype.hasGlobalRank = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional uint64 global_rank_pop = 9;
 * @return {number}
 */
proto.ei.Backup.Misc.prototype.getGlobalRankPop = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};


/**
 * @param {number} value
 * @return {!proto.ei.Backup.Misc} returns this
 */
proto.ei.Backup.Misc.prototype.setGlobalRankPop = function(value) {
  return jspb.Message.setField(this, 9, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.Backup.Misc} returns this
 */
proto.ei.Backup.Misc.prototype.clearGlobalRankPop = function() {
  return jspb.Message.setField(this, 9, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.Backup.Misc.prototype.hasGlobalRankPop = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional bool challenges_alert = 20;
 * @return {boolean}
 */
proto.ei.Backup.Misc.prototype.getChallengesAlert = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 20, false));
};


/**
 * @param {boolean} value
 * @return {!proto.ei.Backup.Misc} returns this
 */
proto.ei.Backup.Misc.prototype.setChallengesAlert = function(value) {
  return jspb.Message.setField(this, 20, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.Backup.Misc} returns this
 */
proto.ei.Backup.Misc.prototype.clearChallengesAlert = function() {
  return jspb.Message.setField(this, 20, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.Backup.Misc.prototype.hasChallengesAlert = function() {
  return jspb.Message.getField(this, 20) != null;
};


/**
 * optional bool trophy_alert = 11;
 * @return {boolean}
 */
proto.ei.Backup.Misc.prototype.getTrophyAlert = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 11, false));
};


/**
 * @param {boolean} value
 * @return {!proto.ei.Backup.Misc} returns this
 */
proto.ei.Backup.Misc.prototype.setTrophyAlert = function(value) {
  return jspb.Message.setField(this, 11, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.Backup.Misc} returns this
 */
proto.ei.Backup.Misc.prototype.clearTrophyAlert = function() {
  return jspb.Message.setField(this, 11, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.Backup.Misc.prototype.hasTrophyAlert = function() {
  return jspb.Message.getField(this, 11) != null;
};


/**
 * optional bool ar_alert = 12;
 * @return {boolean}
 */
proto.ei.Backup.Misc.prototype.getArAlert = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 12, false));
};


/**
 * @param {boolean} value
 * @return {!proto.ei.Backup.Misc} returns this
 */
proto.ei.Backup.Misc.prototype.setArAlert = function(value) {
  return jspb.Message.setField(this, 12, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.Backup.Misc} returns this
 */
proto.ei.Backup.Misc.prototype.clearArAlert = function() {
  return jspb.Message.setField(this, 12, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.Backup.Misc.prototype.hasArAlert = function() {
  return jspb.Message.getField(this, 12) != null;
};


/**
 * optional bool contracts_alert = 13;
 * @return {boolean}
 */
proto.ei.Backup.Misc.prototype.getContractsAlert = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 13, false));
};


/**
 * @param {boolean} value
 * @return {!proto.ei.Backup.Misc} returns this
 */
proto.ei.Backup.Misc.prototype.setContractsAlert = function(value) {
  return jspb.Message.setField(this, 13, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.Backup.Misc} returns this
 */
proto.ei.Backup.Misc.prototype.clearContractsAlert = function() {
  return jspb.Message.setField(this, 13, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.Backup.Misc.prototype.hasContractsAlert = function() {
  return jspb.Message.getField(this, 13) != null;
};


/**
 * optional bool contracts_alert_v2 = 21;
 * @return {boolean}
 */
proto.ei.Backup.Misc.prototype.getContractsAlertV2 = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 21, false));
};


/**
 * @param {boolean} value
 * @return {!proto.ei.Backup.Misc} returns this
 */
proto.ei.Backup.Misc.prototype.setContractsAlertV2 = function(value) {
  return jspb.Message.setField(this, 21, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.Backup.Misc} returns this
 */
proto.ei.Backup.Misc.prototype.clearContractsAlertV2 = function() {
  return jspb.Message.setField(this, 21, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.Backup.Misc.prototype.hasContractsAlertV2 = function() {
  return jspb.Message.getField(this, 21) != null;
};


/**
 * optional bool coop_alert = 14;
 * @return {boolean}
 */
proto.ei.Backup.Misc.prototype.getCoopAlert = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 14, false));
};


/**
 * @param {boolean} value
 * @return {!proto.ei.Backup.Misc} returns this
 */
proto.ei.Backup.Misc.prototype.setCoopAlert = function(value) {
  return jspb.Message.setField(this, 14, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.Backup.Misc} returns this
 */
proto.ei.Backup.Misc.prototype.clearCoopAlert = function() {
  return jspb.Message.setField(this, 14, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.Backup.Misc.prototype.hasCoopAlert = function() {
  return jspb.Message.getField(this, 14) != null;
};


/**
 * optional bool coop_alert_v2 = 22;
 * @return {boolean}
 */
proto.ei.Backup.Misc.prototype.getCoopAlertV2 = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 22, false));
};


/**
 * @param {boolean} value
 * @return {!proto.ei.Backup.Misc} returns this
 */
proto.ei.Backup.Misc.prototype.setCoopAlertV2 = function(value) {
  return jspb.Message.setField(this, 22, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.Backup.Misc} returns this
 */
proto.ei.Backup.Misc.prototype.clearCoopAlertV2 = function() {
  return jspb.Message.setField(this, 22, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.Backup.Misc.prototype.hasCoopAlertV2 = function() {
  return jspb.Message.getField(this, 22) != null;
};


/**
 * optional bool switch_alert = 15;
 * @return {boolean}
 */
proto.ei.Backup.Misc.prototype.getSwitchAlert = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 15, false));
};


/**
 * @param {boolean} value
 * @return {!proto.ei.Backup.Misc} returns this
 */
proto.ei.Backup.Misc.prototype.setSwitchAlert = function(value) {
  return jspb.Message.setField(this, 15, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.Backup.Misc} returns this
 */
proto.ei.Backup.Misc.prototype.clearSwitchAlert = function() {
  return jspb.Message.setField(this, 15, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.Backup.Misc.prototype.hasSwitchAlert = function() {
  return jspb.Message.getField(this, 15) != null;
};


/**
 * optional bool egg_of_prophecy_alert = 16;
 * @return {boolean}
 */
proto.ei.Backup.Misc.prototype.getEggOfProphecyAlert = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 16, false));
};


/**
 * @param {boolean} value
 * @return {!proto.ei.Backup.Misc} returns this
 */
proto.ei.Backup.Misc.prototype.setEggOfProphecyAlert = function(value) {
  return jspb.Message.setField(this, 16, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.Backup.Misc} returns this
 */
proto.ei.Backup.Misc.prototype.clearEggOfProphecyAlert = function() {
  return jspb.Message.setField(this, 16, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.Backup.Misc.prototype.hasEggOfProphecyAlert = function() {
  return jspb.Message.getField(this, 16) != null;
};


/**
 * optional bool boost_token_alert = 17;
 * @return {boolean}
 */
proto.ei.Backup.Misc.prototype.getBoostTokenAlert = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 17, false));
};


/**
 * @param {boolean} value
 * @return {!proto.ei.Backup.Misc} returns this
 */
proto.ei.Backup.Misc.prototype.setBoostTokenAlert = function(value) {
  return jspb.Message.setField(this, 17, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.Backup.Misc} returns this
 */
proto.ei.Backup.Misc.prototype.clearBoostTokenAlert = function() {
  return jspb.Message.setField(this, 17, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.Backup.Misc.prototype.hasBoostTokenAlert = function() {
  return jspb.Message.getField(this, 17) != null;
};


/**
 * optional bool soul_egg_alert = 18;
 * @return {boolean}
 */
proto.ei.Backup.Misc.prototype.getSoulEggAlert = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 18, false));
};


/**
 * @param {boolean} value
 * @return {!proto.ei.Backup.Misc} returns this
 */
proto.ei.Backup.Misc.prototype.setSoulEggAlert = function(value) {
  return jspb.Message.setField(this, 18, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.Backup.Misc} returns this
 */
proto.ei.Backup.Misc.prototype.clearSoulEggAlert = function() {
  return jspb.Message.setField(this, 18, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.Backup.Misc.prototype.hasSoulEggAlert = function() {
  return jspb.Message.getField(this, 18) != null;
};


/**
 * optional bool backup_reminder_alert = 19;
 * @return {boolean}
 */
proto.ei.Backup.Misc.prototype.getBackupReminderAlert = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 19, false));
};


/**
 * @param {boolean} value
 * @return {!proto.ei.Backup.Misc} returns this
 */
proto.ei.Backup.Misc.prototype.setBackupReminderAlert = function(value) {
  return jspb.Message.setField(this, 19, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.Backup.Misc} returns this
 */
proto.ei.Backup.Misc.prototype.clearBackupReminderAlert = function() {
  return jspb.Message.setField(this, 19, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.Backup.Misc.prototype.hasBackupReminderAlert = function() {
  return jspb.Message.getField(this, 19) != null;
};


/**
 * optional bool max_button_alert = 23;
 * @return {boolean}
 */
proto.ei.Backup.Misc.prototype.getMaxButtonAlert = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 23, false));
};


/**
 * @param {boolean} value
 * @return {!proto.ei.Backup.Misc} returns this
 */
proto.ei.Backup.Misc.prototype.setMaxButtonAlert = function(value) {
  return jspb.Message.setField(this, 23, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.Backup.Misc} returns this
 */
proto.ei.Backup.Misc.prototype.clearMaxButtonAlert = function() {
  return jspb.Message.setField(this, 23, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.Backup.Misc.prototype.hasMaxButtonAlert = function() {
  return jspb.Message.getField(this, 23) != null;
};


/**
 * optional bool mission_target_alert = 24;
 * @return {boolean}
 */
proto.ei.Backup.Misc.prototype.getMissionTargetAlert = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 24, false));
};


/**
 * @param {boolean} value
 * @return {!proto.ei.Backup.Misc} returns this
 */
proto.ei.Backup.Misc.prototype.setMissionTargetAlert = function(value) {
  return jspb.Message.setField(this, 24, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.Backup.Misc} returns this
 */
proto.ei.Backup.Misc.prototype.clearMissionTargetAlert = function() {
  return jspb.Message.setField(this, 24, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.Backup.Misc.prototype.hasMissionTargetAlert = function() {
  return jspb.Message.getField(this, 24) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ei.Backup.ResearchItem.prototype.toObject = function(opt_includeInstance) {
  return proto.ei.Backup.ResearchItem.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ei.Backup.ResearchItem} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.Backup.ResearchItem.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    level: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ei.Backup.ResearchItem}
 */
proto.ei.Backup.ResearchItem.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ei.Backup.ResearchItem;
  return proto.ei.Backup.ResearchItem.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ei.Backup.ResearchItem} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ei.Backup.ResearchItem}
 */
proto.ei.Backup.ResearchItem.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setLevel(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ei.Backup.ResearchItem.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ei.Backup.ResearchItem.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ei.Backup.ResearchItem} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.Backup.ResearchItem.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeUint32(
      2,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.ei.Backup.ResearchItem.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.ei.Backup.ResearchItem} returns this
 */
proto.ei.Backup.ResearchItem.prototype.setId = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.Backup.ResearchItem} returns this
 */
proto.ei.Backup.ResearchItem.prototype.clearId = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.Backup.ResearchItem.prototype.hasId = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional uint32 level = 2;
 * @return {number}
 */
proto.ei.Backup.ResearchItem.prototype.getLevel = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.ei.Backup.ResearchItem} returns this
 */
proto.ei.Backup.ResearchItem.prototype.setLevel = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.Backup.ResearchItem} returns this
 */
proto.ei.Backup.ResearchItem.prototype.clearLevel = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.Backup.ResearchItem.prototype.hasLevel = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ei.Backup.NewsHeadline.prototype.toObject = function(opt_includeInstance) {
  return proto.ei.Backup.NewsHeadline.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ei.Backup.NewsHeadline} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.Backup.NewsHeadline.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    read: (f = jspb.Message.getBooleanField(msg, 2)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ei.Backup.NewsHeadline}
 */
proto.ei.Backup.NewsHeadline.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ei.Backup.NewsHeadline;
  return proto.ei.Backup.NewsHeadline.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ei.Backup.NewsHeadline} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ei.Backup.NewsHeadline}
 */
proto.ei.Backup.NewsHeadline.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setRead(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ei.Backup.NewsHeadline.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ei.Backup.NewsHeadline.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ei.Backup.NewsHeadline} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.Backup.NewsHeadline.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeBool(
      2,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.ei.Backup.NewsHeadline.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.ei.Backup.NewsHeadline} returns this
 */
proto.ei.Backup.NewsHeadline.prototype.setId = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.Backup.NewsHeadline} returns this
 */
proto.ei.Backup.NewsHeadline.prototype.clearId = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.Backup.NewsHeadline.prototype.hasId = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional bool read = 2;
 * @return {boolean}
 */
proto.ei.Backup.NewsHeadline.prototype.getRead = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));
};


/**
 * @param {boolean} value
 * @return {!proto.ei.Backup.NewsHeadline} returns this
 */
proto.ei.Backup.NewsHeadline.prototype.setRead = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.Backup.NewsHeadline} returns this
 */
proto.ei.Backup.NewsHeadline.prototype.clearRead = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.Backup.NewsHeadline.prototype.hasRead = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ei.Backup.AchievementInfo.prototype.toObject = function(opt_includeInstance) {
  return proto.ei.Backup.AchievementInfo.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ei.Backup.AchievementInfo} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.Backup.AchievementInfo.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    achieved: (f = jspb.Message.getBooleanField(msg, 2)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ei.Backup.AchievementInfo}
 */
proto.ei.Backup.AchievementInfo.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ei.Backup.AchievementInfo;
  return proto.ei.Backup.AchievementInfo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ei.Backup.AchievementInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ei.Backup.AchievementInfo}
 */
proto.ei.Backup.AchievementInfo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setAchieved(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ei.Backup.AchievementInfo.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ei.Backup.AchievementInfo.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ei.Backup.AchievementInfo} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.Backup.AchievementInfo.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeBool(
      2,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.ei.Backup.AchievementInfo.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.ei.Backup.AchievementInfo} returns this
 */
proto.ei.Backup.AchievementInfo.prototype.setId = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.Backup.AchievementInfo} returns this
 */
proto.ei.Backup.AchievementInfo.prototype.clearId = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.Backup.AchievementInfo.prototype.hasId = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional bool achieved = 2;
 * @return {boolean}
 */
proto.ei.Backup.AchievementInfo.prototype.getAchieved = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));
};


/**
 * @param {boolean} value
 * @return {!proto.ei.Backup.AchievementInfo} returns this
 */
proto.ei.Backup.AchievementInfo.prototype.setAchieved = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.Backup.AchievementInfo} returns this
 */
proto.ei.Backup.AchievementInfo.prototype.clearAchieved = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.Backup.AchievementInfo.prototype.hasAchieved = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ei.Backup.ActiveBoost.prototype.toObject = function(opt_includeInstance) {
  return proto.ei.Backup.ActiveBoost.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ei.Backup.ActiveBoost} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.Backup.ActiveBoost.toObject = function(includeInstance, msg) {
  var f, obj = {
    boostId: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    timeRemaining: (f = jspb.Message.getOptionalFloatingPointField(msg, 2)) == null ? undefined : f,
    referenceValue: (f = jspb.Message.getOptionalFloatingPointField(msg, 3)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ei.Backup.ActiveBoost}
 */
proto.ei.Backup.ActiveBoost.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ei.Backup.ActiveBoost;
  return proto.ei.Backup.ActiveBoost.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ei.Backup.ActiveBoost} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ei.Backup.ActiveBoost}
 */
proto.ei.Backup.ActiveBoost.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setBoostId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setTimeRemaining(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setReferenceValue(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ei.Backup.ActiveBoost.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ei.Backup.ActiveBoost.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ei.Backup.ActiveBoost} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.Backup.ActiveBoost.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeDouble(
      2,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeDouble(
      3,
      f
    );
  }
};


/**
 * optional string boost_id = 1;
 * @return {string}
 */
proto.ei.Backup.ActiveBoost.prototype.getBoostId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.ei.Backup.ActiveBoost} returns this
 */
proto.ei.Backup.ActiveBoost.prototype.setBoostId = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.Backup.ActiveBoost} returns this
 */
proto.ei.Backup.ActiveBoost.prototype.clearBoostId = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.Backup.ActiveBoost.prototype.hasBoostId = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional double time_remaining = 2;
 * @return {number}
 */
proto.ei.Backup.ActiveBoost.prototype.getTimeRemaining = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 2, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.ei.Backup.ActiveBoost} returns this
 */
proto.ei.Backup.ActiveBoost.prototype.setTimeRemaining = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.Backup.ActiveBoost} returns this
 */
proto.ei.Backup.ActiveBoost.prototype.clearTimeRemaining = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.Backup.ActiveBoost.prototype.hasTimeRemaining = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional double reference_value = 3;
 * @return {number}
 */
proto.ei.Backup.ActiveBoost.prototype.getReferenceValue = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 3, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.ei.Backup.ActiveBoost} returns this
 */
proto.ei.Backup.ActiveBoost.prototype.setReferenceValue = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.Backup.ActiveBoost} returns this
 */
proto.ei.Backup.ActiveBoost.prototype.clearReferenceValue = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.Backup.ActiveBoost.prototype.hasReferenceValue = function() {
  return jspb.Message.getField(this, 3) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ei.Backup.OwnedBoost.prototype.toObject = function(opt_includeInstance) {
  return proto.ei.Backup.OwnedBoost.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ei.Backup.OwnedBoost} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.Backup.OwnedBoost.toObject = function(includeInstance, msg) {
  var f, obj = {
    boostId: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    count: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ei.Backup.OwnedBoost}
 */
proto.ei.Backup.OwnedBoost.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ei.Backup.OwnedBoost;
  return proto.ei.Backup.OwnedBoost.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ei.Backup.OwnedBoost} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ei.Backup.OwnedBoost}
 */
proto.ei.Backup.OwnedBoost.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setBoostId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setCount(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ei.Backup.OwnedBoost.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ei.Backup.OwnedBoost.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ei.Backup.OwnedBoost} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.Backup.OwnedBoost.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeUint32(
      2,
      f
    );
  }
};


/**
 * optional string boost_id = 1;
 * @return {string}
 */
proto.ei.Backup.OwnedBoost.prototype.getBoostId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.ei.Backup.OwnedBoost} returns this
 */
proto.ei.Backup.OwnedBoost.prototype.setBoostId = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.Backup.OwnedBoost} returns this
 */
proto.ei.Backup.OwnedBoost.prototype.clearBoostId = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.Backup.OwnedBoost.prototype.hasBoostId = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional uint32 count = 2;
 * @return {number}
 */
proto.ei.Backup.OwnedBoost.prototype.getCount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.ei.Backup.OwnedBoost} returns this
 */
proto.ei.Backup.OwnedBoost.prototype.setCount = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.Backup.OwnedBoost} returns this
 */
proto.ei.Backup.OwnedBoost.prototype.clearCount = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.Backup.OwnedBoost.prototype.hasCount = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ei.Backup.MissionInfo.prototype.toObject = function(opt_includeInstance) {
  return proto.ei.Backup.MissionInfo.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ei.Backup.MissionInfo} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.Backup.MissionInfo.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    completed: (f = jspb.Message.getBooleanField(msg, 2)) == null ? undefined : f,
    referenceValue: (f = jspb.Message.getOptionalFloatingPointField(msg, 3)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ei.Backup.MissionInfo}
 */
proto.ei.Backup.MissionInfo.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ei.Backup.MissionInfo;
  return proto.ei.Backup.MissionInfo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ei.Backup.MissionInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ei.Backup.MissionInfo}
 */
proto.ei.Backup.MissionInfo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setCompleted(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setReferenceValue(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ei.Backup.MissionInfo.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ei.Backup.MissionInfo.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ei.Backup.MissionInfo} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.Backup.MissionInfo.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeBool(
      2,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeDouble(
      3,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.ei.Backup.MissionInfo.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.ei.Backup.MissionInfo} returns this
 */
proto.ei.Backup.MissionInfo.prototype.setId = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.Backup.MissionInfo} returns this
 */
proto.ei.Backup.MissionInfo.prototype.clearId = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.Backup.MissionInfo.prototype.hasId = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional bool completed = 2;
 * @return {boolean}
 */
proto.ei.Backup.MissionInfo.prototype.getCompleted = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));
};


/**
 * @param {boolean} value
 * @return {!proto.ei.Backup.MissionInfo} returns this
 */
proto.ei.Backup.MissionInfo.prototype.setCompleted = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.Backup.MissionInfo} returns this
 */
proto.ei.Backup.MissionInfo.prototype.clearCompleted = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.Backup.MissionInfo.prototype.hasCompleted = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional double reference_value = 3;
 * @return {number}
 */
proto.ei.Backup.MissionInfo.prototype.getReferenceValue = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 3, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.ei.Backup.MissionInfo} returns this
 */
proto.ei.Backup.MissionInfo.prototype.setReferenceValue = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.Backup.MissionInfo} returns this
 */
proto.ei.Backup.MissionInfo.prototype.clearReferenceValue = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.Backup.MissionInfo.prototype.hasReferenceValue = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional string user_id = 1;
 * @return {string}
 */
proto.ei.Backup.prototype.getUserId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.ei.Backup} returns this
 */
proto.ei.Backup.prototype.setUserId = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.Backup} returns this
 */
proto.ei.Backup.prototype.clearUserId = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.Backup.prototype.hasUserId = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string ei_user_id = 18;
 * @return {string}
 */
proto.ei.Backup.prototype.getEiUserId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 18, ""));
};


/**
 * @param {string} value
 * @return {!proto.ei.Backup} returns this
 */
proto.ei.Backup.prototype.setEiUserId = function(value) {
  return jspb.Message.setField(this, 18, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.Backup} returns this
 */
proto.ei.Backup.prototype.clearEiUserId = function() {
  return jspb.Message.setField(this, 18, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.Backup.prototype.hasEiUserId = function() {
  return jspb.Message.getField(this, 18) != null;
};


/**
 * optional string game_services_id = 16;
 * @return {string}
 */
proto.ei.Backup.prototype.getGameServicesId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 16, ""));
};


/**
 * @param {string} value
 * @return {!proto.ei.Backup} returns this
 */
proto.ei.Backup.prototype.setGameServicesId = function(value) {
  return jspb.Message.setField(this, 16, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.Backup} returns this
 */
proto.ei.Backup.prototype.clearGameServicesId = function() {
  return jspb.Message.setField(this, 16, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.Backup.prototype.hasGameServicesId = function() {
  return jspb.Message.getField(this, 16) != null;
};


/**
 * optional string push_user_id = 26;
 * @return {string}
 */
proto.ei.Backup.prototype.getPushUserId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 26, ""));
};


/**
 * @param {string} value
 * @return {!proto.ei.Backup} returns this
 */
proto.ei.Backup.prototype.setPushUserId = function(value) {
  return jspb.Message.setField(this, 26, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.Backup} returns this
 */
proto.ei.Backup.prototype.clearPushUserId = function() {
  return jspb.Message.setField(this, 26, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.Backup.prototype.hasPushUserId = function() {
  return jspb.Message.getField(this, 26) != null;
};


/**
 * optional string device_id = 17;
 * @return {string}
 */
proto.ei.Backup.prototype.getDeviceId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 17, ""));
};


/**
 * @param {string} value
 * @return {!proto.ei.Backup} returns this
 */
proto.ei.Backup.prototype.setDeviceId = function(value) {
  return jspb.Message.setField(this, 17, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.Backup} returns this
 */
proto.ei.Backup.prototype.clearDeviceId = function() {
  return jspb.Message.setField(this, 17, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.Backup.prototype.hasDeviceId = function() {
  return jspb.Message.getField(this, 17) != null;
};


/**
 * optional string user_name = 2;
 * @return {string}
 */
proto.ei.Backup.prototype.getUserName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.ei.Backup} returns this
 */
proto.ei.Backup.prototype.setUserName = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.Backup} returns this
 */
proto.ei.Backup.prototype.clearUserName = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.Backup.prototype.hasUserName = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional double approx_time = 3;
 * @return {number}
 */
proto.ei.Backup.prototype.getApproxTime = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 3, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.ei.Backup} returns this
 */
proto.ei.Backup.prototype.setApproxTime = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.Backup} returns this
 */
proto.ei.Backup.prototype.clearApproxTime = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.Backup.prototype.hasApproxTime = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional uint32 version = 21;
 * @return {number}
 */
proto.ei.Backup.prototype.getVersion = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 21, 0));
};


/**
 * @param {number} value
 * @return {!proto.ei.Backup} returns this
 */
proto.ei.Backup.prototype.setVersion = function(value) {
  return jspb.Message.setField(this, 21, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.Backup} returns this
 */
proto.ei.Backup.prototype.clearVersion = function() {
  return jspb.Message.setField(this, 21, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.Backup.prototype.hasVersion = function() {
  return jspb.Message.getField(this, 21) != null;
};


/**
 * optional bool force_offer_backup = 20;
 * @return {boolean}
 */
proto.ei.Backup.prototype.getForceOfferBackup = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 20, false));
};


/**
 * @param {boolean} value
 * @return {!proto.ei.Backup} returns this
 */
proto.ei.Backup.prototype.setForceOfferBackup = function(value) {
  return jspb.Message.setField(this, 20, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.Backup} returns this
 */
proto.ei.Backup.prototype.clearForceOfferBackup = function() {
  return jspb.Message.setField(this, 20, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.Backup.prototype.hasForceOfferBackup = function() {
  return jspb.Message.getField(this, 20) != null;
};


/**
 * optional bool force_backup = 22;
 * @return {boolean}
 */
proto.ei.Backup.prototype.getForceBackup = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 22, false));
};


/**
 * @param {boolean} value
 * @return {!proto.ei.Backup} returns this
 */
proto.ei.Backup.prototype.setForceBackup = function(value) {
  return jspb.Message.setField(this, 22, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.Backup} returns this
 */
proto.ei.Backup.prototype.clearForceBackup = function() {
  return jspb.Message.setField(this, 22, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.Backup.prototype.hasForceBackup = function() {
  return jspb.Message.getField(this, 22) != null;
};


/**
 * optional Settings settings = 4;
 * @return {?proto.ei.Backup.Settings}
 */
proto.ei.Backup.prototype.getSettings = function() {
  return /** @type{?proto.ei.Backup.Settings} */ (
    jspb.Message.getWrapperField(this, proto.ei.Backup.Settings, 4));
};


/**
 * @param {?proto.ei.Backup.Settings|undefined} value
 * @return {!proto.ei.Backup} returns this
*/
proto.ei.Backup.prototype.setSettings = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.ei.Backup} returns this
 */
proto.ei.Backup.prototype.clearSettings = function() {
  return this.setSettings(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.Backup.prototype.hasSettings = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional Tutorial tutorial = 5;
 * @return {?proto.ei.Backup.Tutorial}
 */
proto.ei.Backup.prototype.getTutorial = function() {
  return /** @type{?proto.ei.Backup.Tutorial} */ (
    jspb.Message.getWrapperField(this, proto.ei.Backup.Tutorial, 5));
};


/**
 * @param {?proto.ei.Backup.Tutorial|undefined} value
 * @return {!proto.ei.Backup} returns this
*/
proto.ei.Backup.prototype.setTutorial = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.ei.Backup} returns this
 */
proto.ei.Backup.prototype.clearTutorial = function() {
  return this.setTutorial(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.Backup.prototype.hasTutorial = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional Stats stats = 6;
 * @return {?proto.ei.Backup.Stats}
 */
proto.ei.Backup.prototype.getStats = function() {
  return /** @type{?proto.ei.Backup.Stats} */ (
    jspb.Message.getWrapperField(this, proto.ei.Backup.Stats, 6));
};


/**
 * @param {?proto.ei.Backup.Stats|undefined} value
 * @return {!proto.ei.Backup} returns this
*/
proto.ei.Backup.prototype.setStats = function(value) {
  return jspb.Message.setWrapperField(this, 6, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.ei.Backup} returns this
 */
proto.ei.Backup.prototype.clearStats = function() {
  return this.setStats(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.Backup.prototype.hasStats = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional Game game = 7;
 * @return {?proto.ei.Backup.Game}
 */
proto.ei.Backup.prototype.getGame = function() {
  return /** @type{?proto.ei.Backup.Game} */ (
    jspb.Message.getWrapperField(this, proto.ei.Backup.Game, 7));
};


/**
 * @param {?proto.ei.Backup.Game|undefined} value
 * @return {!proto.ei.Backup} returns this
*/
proto.ei.Backup.prototype.setGame = function(value) {
  return jspb.Message.setWrapperField(this, 7, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.ei.Backup} returns this
 */
proto.ei.Backup.prototype.clearGame = function() {
  return this.setGame(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.Backup.prototype.hasGame = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional Artifacts artifacts = 14;
 * @return {?proto.ei.Backup.Artifacts}
 */
proto.ei.Backup.prototype.getArtifacts = function() {
  return /** @type{?proto.ei.Backup.Artifacts} */ (
    jspb.Message.getWrapperField(this, proto.ei.Backup.Artifacts, 14));
};


/**
 * @param {?proto.ei.Backup.Artifacts|undefined} value
 * @return {!proto.ei.Backup} returns this
*/
proto.ei.Backup.prototype.setArtifacts = function(value) {
  return jspb.Message.setWrapperField(this, 14, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.ei.Backup} returns this
 */
proto.ei.Backup.prototype.clearArtifacts = function() {
  return this.setArtifacts(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.Backup.prototype.hasArtifacts = function() {
  return jspb.Message.getField(this, 14) != null;
};


/**
 * optional Shells shells = 25;
 * @return {?proto.ei.Backup.Shells}
 */
proto.ei.Backup.prototype.getShells = function() {
  return /** @type{?proto.ei.Backup.Shells} */ (
    jspb.Message.getWrapperField(this, proto.ei.Backup.Shells, 25));
};


/**
 * @param {?proto.ei.Backup.Shells|undefined} value
 * @return {!proto.ei.Backup} returns this
*/
proto.ei.Backup.prototype.setShells = function(value) {
  return jspb.Message.setWrapperField(this, 25, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.ei.Backup} returns this
 */
proto.ei.Backup.prototype.clearShells = function() {
  return this.setShells(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.Backup.prototype.hasShells = function() {
  return jspb.Message.getField(this, 25) != null;
};


/**
 * optional Simulation sim = 8;
 * @return {?proto.ei.Backup.Simulation}
 */
proto.ei.Backup.prototype.getSim = function() {
  return /** @type{?proto.ei.Backup.Simulation} */ (
    jspb.Message.getWrapperField(this, proto.ei.Backup.Simulation, 8));
};


/**
 * @param {?proto.ei.Backup.Simulation|undefined} value
 * @return {!proto.ei.Backup} returns this
*/
proto.ei.Backup.prototype.setSim = function(value) {
  return jspb.Message.setWrapperField(this, 8, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.ei.Backup} returns this
 */
proto.ei.Backup.prototype.clearSim = function() {
  return this.setSim(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.Backup.prototype.hasSim = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * repeated Simulation farms = 12;
 * @return {!Array<!proto.ei.Backup.Simulation>}
 */
proto.ei.Backup.prototype.getFarmsList = function() {
  return /** @type{!Array<!proto.ei.Backup.Simulation>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.ei.Backup.Simulation, 12));
};


/**
 * @param {!Array<!proto.ei.Backup.Simulation>} value
 * @return {!proto.ei.Backup} returns this
*/
proto.ei.Backup.prototype.setFarmsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 12, value);
};


/**
 * @param {!proto.ei.Backup.Simulation=} opt_value
 * @param {number=} opt_index
 * @return {!proto.ei.Backup.Simulation}
 */
proto.ei.Backup.prototype.addFarms = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 12, opt_value, proto.ei.Backup.Simulation, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.ei.Backup} returns this
 */
proto.ei.Backup.prototype.clearFarmsList = function() {
  return this.setFarmsList([]);
};


/**
 * optional Mission mission = 9;
 * @return {?proto.ei.Backup.Mission}
 */
proto.ei.Backup.prototype.getMission = function() {
  return /** @type{?proto.ei.Backup.Mission} */ (
    jspb.Message.getWrapperField(this, proto.ei.Backup.Mission, 9));
};


/**
 * @param {?proto.ei.Backup.Mission|undefined} value
 * @return {!proto.ei.Backup} returns this
*/
proto.ei.Backup.prototype.setMission = function(value) {
  return jspb.Message.setWrapperField(this, 9, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.ei.Backup} returns this
 */
proto.ei.Backup.prototype.clearMission = function() {
  return this.setMission(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.Backup.prototype.hasMission = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional Misc misc = 10;
 * @return {?proto.ei.Backup.Misc}
 */
proto.ei.Backup.prototype.getMisc = function() {
  return /** @type{?proto.ei.Backup.Misc} */ (
    jspb.Message.getWrapperField(this, proto.ei.Backup.Misc, 10));
};


/**
 * @param {?proto.ei.Backup.Misc|undefined} value
 * @return {!proto.ei.Backup} returns this
*/
proto.ei.Backup.prototype.setMisc = function(value) {
  return jspb.Message.setWrapperField(this, 10, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.ei.Backup} returns this
 */
proto.ei.Backup.prototype.clearMisc = function() {
  return this.setMisc(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.Backup.prototype.hasMisc = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * optional MyContracts contracts = 13;
 * @return {?proto.ei.MyContracts}
 */
proto.ei.Backup.prototype.getContracts = function() {
  return /** @type{?proto.ei.MyContracts} */ (
    jspb.Message.getWrapperField(this, proto.ei.MyContracts, 13));
};


/**
 * @param {?proto.ei.MyContracts|undefined} value
 * @return {!proto.ei.Backup} returns this
*/
proto.ei.Backup.prototype.setContracts = function(value) {
  return jspb.Message.setWrapperField(this, 13, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.ei.Backup} returns this
 */
proto.ei.Backup.prototype.clearContracts = function() {
  return this.setContracts(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.Backup.prototype.hasContracts = function() {
  return jspb.Message.getField(this, 13) != null;
};


/**
 * optional ArtifactsDB artifacts_db = 15;
 * @return {?proto.ei.ArtifactsDB}
 */
proto.ei.Backup.prototype.getArtifactsDb = function() {
  return /** @type{?proto.ei.ArtifactsDB} */ (
    jspb.Message.getWrapperField(this, proto.ei.ArtifactsDB, 15));
};


/**
 * @param {?proto.ei.ArtifactsDB|undefined} value
 * @return {!proto.ei.Backup} returns this
*/
proto.ei.Backup.prototype.setArtifactsDb = function(value) {
  return jspb.Message.setWrapperField(this, 15, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.ei.Backup} returns this
 */
proto.ei.Backup.prototype.clearArtifactsDb = function() {
  return this.setArtifactsDb(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.Backup.prototype.hasArtifactsDb = function() {
  return jspb.Message.getField(this, 15) != null;
};


/**
 * optional ShellDB shell_db = 24;
 * @return {?proto.ei.ShellDB}
 */
proto.ei.Backup.prototype.getShellDb = function() {
  return /** @type{?proto.ei.ShellDB} */ (
    jspb.Message.getWrapperField(this, proto.ei.ShellDB, 24));
};


/**
 * @param {?proto.ei.ShellDB|undefined} value
 * @return {!proto.ei.Backup} returns this
*/
proto.ei.Backup.prototype.setShellDb = function(value) {
  return jspb.Message.setWrapperField(this, 24, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.ei.Backup} returns this
 */
proto.ei.Backup.prototype.clearShellDb = function() {
  return this.setShellDb(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.Backup.prototype.hasShellDb = function() {
  return jspb.Message.getField(this, 24) != null;
};


/**
 * repeated string read_mail_ids = 23;
 * @return {!Array<string>}
 */
proto.ei.Backup.prototype.getReadMailIdsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 23));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.ei.Backup} returns this
 */
proto.ei.Backup.prototype.setReadMailIdsList = function(value) {
  return jspb.Message.setField(this, 23, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.ei.Backup} returns this
 */
proto.ei.Backup.prototype.addReadMailIds = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 23, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.ei.Backup} returns this
 */
proto.ei.Backup.prototype.clearReadMailIdsList = function() {
  return this.setReadMailIdsList([]);
};


/**
 * optional MailState mail_state = 27;
 * @return {?proto.ei.MailState}
 */
proto.ei.Backup.prototype.getMailState = function() {
  return /** @type{?proto.ei.MailState} */ (
    jspb.Message.getWrapperField(this, proto.ei.MailState, 27));
};


/**
 * @param {?proto.ei.MailState|undefined} value
 * @return {!proto.ei.Backup} returns this
*/
proto.ei.Backup.prototype.setMailState = function(value) {
  return jspb.Message.setWrapperField(this, 27, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.ei.Backup} returns this
 */
proto.ei.Backup.prototype.clearMailState = function() {
  return this.setMailState(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.Backup.prototype.hasMailState = function() {
  return jspb.Message.getField(this, 27) != null;
};


/**
 * optional uint64 checksum = 100;
 * @return {number}
 */
proto.ei.Backup.prototype.getChecksum = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 100, 0));
};


/**
 * @param {number} value
 * @return {!proto.ei.Backup} returns this
 */
proto.ei.Backup.prototype.setChecksum = function(value) {
  return jspb.Message.setField(this, 100, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.Backup} returns this
 */
proto.ei.Backup.prototype.clearChecksum = function() {
  return jspb.Message.setField(this, 100, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.Backup.prototype.hasChecksum = function() {
  return jspb.Message.getField(this, 100) != null;
};


/**
 * optional string signature = 101;
 * @return {string}
 */
proto.ei.Backup.prototype.getSignature = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 101, ""));
};


/**
 * @param {string} value
 * @return {!proto.ei.Backup} returns this
 */
proto.ei.Backup.prototype.setSignature = function(value) {
  return jspb.Message.setField(this, 101, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.Backup} returns this
 */
proto.ei.Backup.prototype.clearSignature = function() {
  return jspb.Message.setField(this, 101, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.Backup.prototype.hasSignature = function() {
  return jspb.Message.getField(this, 101) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ei.EggIncFirstContactRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.ei.EggIncFirstContactRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ei.EggIncFirstContactRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.EggIncFirstContactRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    rinfo: (f = msg.getRinfo()) && proto.ei.BasicRequestInfo.toObject(includeInstance, f),
    eiUserId: (f = jspb.Message.getField(msg, 4)) == null ? undefined : f,
    userId: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    gameServicesId: (f = jspb.Message.getField(msg, 7)) == null ? undefined : f,
    deviceId: (f = jspb.Message.getField(msg, 5)) == null ? undefined : f,
    username: (f = jspb.Message.getField(msg, 6)) == null ? undefined : f,
    clientVersion: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,
    platform: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ei.EggIncFirstContactRequest}
 */
proto.ei.EggIncFirstContactRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ei.EggIncFirstContactRequest;
  return proto.ei.EggIncFirstContactRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ei.EggIncFirstContactRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ei.EggIncFirstContactRequest}
 */
proto.ei.EggIncFirstContactRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 8:
      var value = new proto.ei.BasicRequestInfo;
      reader.readMessage(value,proto.ei.BasicRequestInfo.deserializeBinaryFromReader);
      msg.setRinfo(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setEiUserId(value);
      break;
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserId(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setGameServicesId(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setDeviceId(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setUsername(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setClientVersion(value);
      break;
    case 3:
      var value = /** @type {!proto.ei.Platform} */ (reader.readEnum());
      msg.setPlatform(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ei.EggIncFirstContactRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ei.EggIncFirstContactRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ei.EggIncFirstContactRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.EggIncFirstContactRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRinfo();
  if (f != null) {
    writer.writeMessage(
      8,
      f,
      proto.ei.BasicRequestInfo.serializeBinaryToWriter
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeString(
      4,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 7));
  if (f != null) {
    writer.writeString(
      7,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeString(
      5,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeString(
      6,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeUint32(
      2,
      f
    );
  }
  f = /** @type {!proto.ei.Platform} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeEnum(
      3,
      f
    );
  }
};


/**
 * optional BasicRequestInfo rinfo = 8;
 * @return {?proto.ei.BasicRequestInfo}
 */
proto.ei.EggIncFirstContactRequest.prototype.getRinfo = function() {
  return /** @type{?proto.ei.BasicRequestInfo} */ (
    jspb.Message.getWrapperField(this, proto.ei.BasicRequestInfo, 8));
};


/**
 * @param {?proto.ei.BasicRequestInfo|undefined} value
 * @return {!proto.ei.EggIncFirstContactRequest} returns this
*/
proto.ei.EggIncFirstContactRequest.prototype.setRinfo = function(value) {
  return jspb.Message.setWrapperField(this, 8, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.ei.EggIncFirstContactRequest} returns this
 */
proto.ei.EggIncFirstContactRequest.prototype.clearRinfo = function() {
  return this.setRinfo(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.EggIncFirstContactRequest.prototype.hasRinfo = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional string ei_user_id = 4;
 * @return {string}
 */
proto.ei.EggIncFirstContactRequest.prototype.getEiUserId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.ei.EggIncFirstContactRequest} returns this
 */
proto.ei.EggIncFirstContactRequest.prototype.setEiUserId = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.EggIncFirstContactRequest} returns this
 */
proto.ei.EggIncFirstContactRequest.prototype.clearEiUserId = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.EggIncFirstContactRequest.prototype.hasEiUserId = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional string user_id = 1;
 * @return {string}
 */
proto.ei.EggIncFirstContactRequest.prototype.getUserId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.ei.EggIncFirstContactRequest} returns this
 */
proto.ei.EggIncFirstContactRequest.prototype.setUserId = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.EggIncFirstContactRequest} returns this
 */
proto.ei.EggIncFirstContactRequest.prototype.clearUserId = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.EggIncFirstContactRequest.prototype.hasUserId = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string game_services_id = 7;
 * @return {string}
 */
proto.ei.EggIncFirstContactRequest.prototype.getGameServicesId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.ei.EggIncFirstContactRequest} returns this
 */
proto.ei.EggIncFirstContactRequest.prototype.setGameServicesId = function(value) {
  return jspb.Message.setField(this, 7, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.EggIncFirstContactRequest} returns this
 */
proto.ei.EggIncFirstContactRequest.prototype.clearGameServicesId = function() {
  return jspb.Message.setField(this, 7, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.EggIncFirstContactRequest.prototype.hasGameServicesId = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional string device_id = 5;
 * @return {string}
 */
proto.ei.EggIncFirstContactRequest.prototype.getDeviceId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.ei.EggIncFirstContactRequest} returns this
 */
proto.ei.EggIncFirstContactRequest.prototype.setDeviceId = function(value) {
  return jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.EggIncFirstContactRequest} returns this
 */
proto.ei.EggIncFirstContactRequest.prototype.clearDeviceId = function() {
  return jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.EggIncFirstContactRequest.prototype.hasDeviceId = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional string username = 6;
 * @return {string}
 */
proto.ei.EggIncFirstContactRequest.prototype.getUsername = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.ei.EggIncFirstContactRequest} returns this
 */
proto.ei.EggIncFirstContactRequest.prototype.setUsername = function(value) {
  return jspb.Message.setField(this, 6, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.EggIncFirstContactRequest} returns this
 */
proto.ei.EggIncFirstContactRequest.prototype.clearUsername = function() {
  return jspb.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.EggIncFirstContactRequest.prototype.hasUsername = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional uint32 client_version = 2;
 * @return {number}
 */
proto.ei.EggIncFirstContactRequest.prototype.getClientVersion = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.ei.EggIncFirstContactRequest} returns this
 */
proto.ei.EggIncFirstContactRequest.prototype.setClientVersion = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.EggIncFirstContactRequest} returns this
 */
proto.ei.EggIncFirstContactRequest.prototype.clearClientVersion = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.EggIncFirstContactRequest.prototype.hasClientVersion = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional Platform platform = 3;
 * @return {!proto.ei.Platform}
 */
proto.ei.EggIncFirstContactRequest.prototype.getPlatform = function() {
  return /** @type {!proto.ei.Platform} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {!proto.ei.Platform} value
 * @return {!proto.ei.EggIncFirstContactRequest} returns this
 */
proto.ei.EggIncFirstContactRequest.prototype.setPlatform = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.EggIncFirstContactRequest} returns this
 */
proto.ei.EggIncFirstContactRequest.prototype.clearPlatform = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.EggIncFirstContactRequest.prototype.hasPlatform = function() {
  return jspb.Message.getField(this, 3) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.ei.EggIncFirstContactResponse.repeatedFields_ = [3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ei.EggIncFirstContactResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.ei.EggIncFirstContactResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ei.EggIncFirstContactResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.EggIncFirstContactResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    eiUserId: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,
    idsTransferredList: (f = jspb.Message.getRepeatedField(msg, 3)) == null ? undefined : f,
    errorCode: jspb.Message.getFieldWithDefault(msg, 4, 0),
    errorMessage: (f = jspb.Message.getField(msg, 5)) == null ? undefined : f,
    backup: (f = msg.getBackup()) && proto.ei.Backup.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ei.EggIncFirstContactResponse}
 */
proto.ei.EggIncFirstContactResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ei.EggIncFirstContactResponse;
  return proto.ei.EggIncFirstContactResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ei.EggIncFirstContactResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ei.EggIncFirstContactResponse}
 */
proto.ei.EggIncFirstContactResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setEiUserId(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.addIdsTransferred(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setErrorCode(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setErrorMessage(value);
      break;
    case 1:
      var value = new proto.ei.Backup;
      reader.readMessage(value,proto.ei.Backup.deserializeBinaryFromReader);
      msg.setBackup(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ei.EggIncFirstContactResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ei.EggIncFirstContactResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ei.EggIncFirstContactResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.EggIncFirstContactResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getIdsTransferredList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      3,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeUint32(
      4,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getBackup();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.ei.Backup.serializeBinaryToWriter
    );
  }
};


/**
 * @enum {number}
 */
proto.ei.EggIncFirstContactResponse.ErrorCodes = {
  NO_ERROR: 0,
  EXISTING_USER_W_GAMER_ID: 1,
  USER_NOT_FOUND: 2,
  BACKUP_CONFLICT: 3
};

/**
 * optional string ei_user_id = 2;
 * @return {string}
 */
proto.ei.EggIncFirstContactResponse.prototype.getEiUserId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.ei.EggIncFirstContactResponse} returns this
 */
proto.ei.EggIncFirstContactResponse.prototype.setEiUserId = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.EggIncFirstContactResponse} returns this
 */
proto.ei.EggIncFirstContactResponse.prototype.clearEiUserId = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.EggIncFirstContactResponse.prototype.hasEiUserId = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * repeated string ids_transferred = 3;
 * @return {!Array<string>}
 */
proto.ei.EggIncFirstContactResponse.prototype.getIdsTransferredList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 3));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.ei.EggIncFirstContactResponse} returns this
 */
proto.ei.EggIncFirstContactResponse.prototype.setIdsTransferredList = function(value) {
  return jspb.Message.setField(this, 3, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.ei.EggIncFirstContactResponse} returns this
 */
proto.ei.EggIncFirstContactResponse.prototype.addIdsTransferred = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 3, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.ei.EggIncFirstContactResponse} returns this
 */
proto.ei.EggIncFirstContactResponse.prototype.clearIdsTransferredList = function() {
  return this.setIdsTransferredList([]);
};


/**
 * optional uint32 error_code = 4;
 * @return {number}
 */
proto.ei.EggIncFirstContactResponse.prototype.getErrorCode = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.ei.EggIncFirstContactResponse} returns this
 */
proto.ei.EggIncFirstContactResponse.prototype.setErrorCode = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.EggIncFirstContactResponse} returns this
 */
proto.ei.EggIncFirstContactResponse.prototype.clearErrorCode = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.EggIncFirstContactResponse.prototype.hasErrorCode = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional string error_message = 5;
 * @return {string}
 */
proto.ei.EggIncFirstContactResponse.prototype.getErrorMessage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.ei.EggIncFirstContactResponse} returns this
 */
proto.ei.EggIncFirstContactResponse.prototype.setErrorMessage = function(value) {
  return jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.EggIncFirstContactResponse} returns this
 */
proto.ei.EggIncFirstContactResponse.prototype.clearErrorMessage = function() {
  return jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.EggIncFirstContactResponse.prototype.hasErrorMessage = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional Backup backup = 1;
 * @return {?proto.ei.Backup}
 */
proto.ei.EggIncFirstContactResponse.prototype.getBackup = function() {
  return /** @type{?proto.ei.Backup} */ (
    jspb.Message.getWrapperField(this, proto.ei.Backup, 1));
};


/**
 * @param {?proto.ei.Backup|undefined} value
 * @return {!proto.ei.EggIncFirstContactResponse} returns this
*/
proto.ei.EggIncFirstContactResponse.prototype.setBackup = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.ei.EggIncFirstContactResponse} returns this
 */
proto.ei.EggIncFirstContactResponse.prototype.clearBackup = function() {
  return this.setBackup(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.EggIncFirstContactResponse.prototype.hasBackup = function() {
  return jspb.Message.getField(this, 1) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.ei.EggIncAdConfig.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ei.EggIncAdConfig.prototype.toObject = function(opt_includeInstance) {
  return proto.ei.EggIncAdConfig.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ei.EggIncAdConfig} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.EggIncAdConfig.toObject = function(includeInstance, msg) {
  var f, obj = {
    networkPriorityList: (f = jspb.Message.getRepeatedField(msg, 1)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ei.EggIncAdConfig}
 */
proto.ei.EggIncAdConfig.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ei.EggIncAdConfig;
  return proto.ei.EggIncAdConfig.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ei.EggIncAdConfig} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ei.EggIncAdConfig}
 */
proto.ei.EggIncAdConfig.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var values = /** @type {!Array<!proto.ei.AdNetwork>} */ (reader.isDelimited() ? reader.readPackedEnum() : [reader.readEnum()]);
      for (var i = 0; i < values.length; i++) {
        msg.addNetworkPriority(values[i]);
      }
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ei.EggIncAdConfig.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ei.EggIncAdConfig.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ei.EggIncAdConfig} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.EggIncAdConfig.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getNetworkPriorityList();
  if (f.length > 0) {
    writer.writeRepeatedEnum(
      1,
      f
    );
  }
};


/**
 * repeated AdNetwork network_priority = 1;
 * @return {!Array<!proto.ei.AdNetwork>}
 */
proto.ei.EggIncAdConfig.prototype.getNetworkPriorityList = function() {
  return /** @type {!Array<!proto.ei.AdNetwork>} */ (jspb.Message.getRepeatedField(this, 1));
};


/**
 * @param {!Array<!proto.ei.AdNetwork>} value
 * @return {!proto.ei.EggIncAdConfig} returns this
 */
proto.ei.EggIncAdConfig.prototype.setNetworkPriorityList = function(value) {
  return jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {!proto.ei.AdNetwork} value
 * @param {number=} opt_index
 * @return {!proto.ei.EggIncAdConfig} returns this
 */
proto.ei.EggIncAdConfig.prototype.addNetworkPriority = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.ei.EggIncAdConfig} returns this
 */
proto.ei.EggIncAdConfig.prototype.clearNetworkPriorityList = function() {
  return this.setNetworkPriorityList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ei.DailyGiftInfo.prototype.toObject = function(opt_includeInstance) {
  return proto.ei.DailyGiftInfo.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ei.DailyGiftInfo} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.DailyGiftInfo.toObject = function(includeInstance, msg) {
  var f, obj = {
    currentDay: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    secondsToNextDay: (f = jspb.Message.getOptionalFloatingPointField(msg, 2)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ei.DailyGiftInfo}
 */
proto.ei.DailyGiftInfo.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ei.DailyGiftInfo;
  return proto.ei.DailyGiftInfo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ei.DailyGiftInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ei.DailyGiftInfo}
 */
proto.ei.DailyGiftInfo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setCurrentDay(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setSecondsToNextDay(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ei.DailyGiftInfo.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ei.DailyGiftInfo.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ei.DailyGiftInfo} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.DailyGiftInfo.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {number} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeUint32(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeDouble(
      2,
      f
    );
  }
};


/**
 * optional uint32 current_day = 1;
 * @return {number}
 */
proto.ei.DailyGiftInfo.prototype.getCurrentDay = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.ei.DailyGiftInfo} returns this
 */
proto.ei.DailyGiftInfo.prototype.setCurrentDay = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.DailyGiftInfo} returns this
 */
proto.ei.DailyGiftInfo.prototype.clearCurrentDay = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.DailyGiftInfo.prototype.hasCurrentDay = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional double seconds_to_next_day = 2;
 * @return {number}
 */
proto.ei.DailyGiftInfo.prototype.getSecondsToNextDay = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 2, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.ei.DailyGiftInfo} returns this
 */
proto.ei.DailyGiftInfo.prototype.setSecondsToNextDay = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.DailyGiftInfo} returns this
 */
proto.ei.DailyGiftInfo.prototype.clearSecondsToNextDay = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.DailyGiftInfo.prototype.hasSecondsToNextDay = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ei.SalesInfoRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.ei.SalesInfoRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ei.SalesInfoRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.SalesInfoRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    userId: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    piggyFull: (f = jspb.Message.getBooleanField(msg, 2)) == null ? undefined : f,
    piggyFoundFull: (f = jspb.Message.getBooleanField(msg, 3)) == null ? undefined : f,
    secondsFullRealtime: (f = jspb.Message.getOptionalFloatingPointField(msg, 4)) == null ? undefined : f,
    secondsFullGametime: (f = jspb.Message.getOptionalFloatingPointField(msg, 5)) == null ? undefined : f,
    lostIncrements: (f = jspb.Message.getField(msg, 7)) == null ? undefined : f,
    currentClientVersion: (f = jspb.Message.getField(msg, 10)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ei.SalesInfoRequest}
 */
proto.ei.SalesInfoRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ei.SalesInfoRequest;
  return proto.ei.SalesInfoRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ei.SalesInfoRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ei.SalesInfoRequest}
 */
proto.ei.SalesInfoRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserId(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setPiggyFull(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setPiggyFoundFull(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setSecondsFullRealtime(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setSecondsFullGametime(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setLostIncrements(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setCurrentClientVersion(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ei.SalesInfoRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ei.SalesInfoRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ei.SalesInfoRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.SalesInfoRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeBool(
      2,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeBool(
      3,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeDouble(
      4,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeDouble(
      5,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 7));
  if (f != null) {
    writer.writeUint32(
      7,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 10));
  if (f != null) {
    writer.writeUint32(
      10,
      f
    );
  }
};


/**
 * optional string user_id = 1;
 * @return {string}
 */
proto.ei.SalesInfoRequest.prototype.getUserId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.ei.SalesInfoRequest} returns this
 */
proto.ei.SalesInfoRequest.prototype.setUserId = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.SalesInfoRequest} returns this
 */
proto.ei.SalesInfoRequest.prototype.clearUserId = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.SalesInfoRequest.prototype.hasUserId = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional bool piggy_full = 2;
 * @return {boolean}
 */
proto.ei.SalesInfoRequest.prototype.getPiggyFull = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));
};


/**
 * @param {boolean} value
 * @return {!proto.ei.SalesInfoRequest} returns this
 */
proto.ei.SalesInfoRequest.prototype.setPiggyFull = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.SalesInfoRequest} returns this
 */
proto.ei.SalesInfoRequest.prototype.clearPiggyFull = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.SalesInfoRequest.prototype.hasPiggyFull = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional bool piggy_found_full = 3;
 * @return {boolean}
 */
proto.ei.SalesInfoRequest.prototype.getPiggyFoundFull = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 3, false));
};


/**
 * @param {boolean} value
 * @return {!proto.ei.SalesInfoRequest} returns this
 */
proto.ei.SalesInfoRequest.prototype.setPiggyFoundFull = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.SalesInfoRequest} returns this
 */
proto.ei.SalesInfoRequest.prototype.clearPiggyFoundFull = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.SalesInfoRequest.prototype.hasPiggyFoundFull = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional double seconds_full_realtime = 4;
 * @return {number}
 */
proto.ei.SalesInfoRequest.prototype.getSecondsFullRealtime = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 4, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.ei.SalesInfoRequest} returns this
 */
proto.ei.SalesInfoRequest.prototype.setSecondsFullRealtime = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.SalesInfoRequest} returns this
 */
proto.ei.SalesInfoRequest.prototype.clearSecondsFullRealtime = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.SalesInfoRequest.prototype.hasSecondsFullRealtime = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional double seconds_full_gametime = 5;
 * @return {number}
 */
proto.ei.SalesInfoRequest.prototype.getSecondsFullGametime = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 5, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.ei.SalesInfoRequest} returns this
 */
proto.ei.SalesInfoRequest.prototype.setSecondsFullGametime = function(value) {
  return jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.SalesInfoRequest} returns this
 */
proto.ei.SalesInfoRequest.prototype.clearSecondsFullGametime = function() {
  return jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.SalesInfoRequest.prototype.hasSecondsFullGametime = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional uint32 lost_increments = 7;
 * @return {number}
 */
proto.ei.SalesInfoRequest.prototype.getLostIncrements = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {number} value
 * @return {!proto.ei.SalesInfoRequest} returns this
 */
proto.ei.SalesInfoRequest.prototype.setLostIncrements = function(value) {
  return jspb.Message.setField(this, 7, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.SalesInfoRequest} returns this
 */
proto.ei.SalesInfoRequest.prototype.clearLostIncrements = function() {
  return jspb.Message.setField(this, 7, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.SalesInfoRequest.prototype.hasLostIncrements = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional uint32 current_client_version = 10;
 * @return {number}
 */
proto.ei.SalesInfoRequest.prototype.getCurrentClientVersion = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 10, 0));
};


/**
 * @param {number} value
 * @return {!proto.ei.SalesInfoRequest} returns this
 */
proto.ei.SalesInfoRequest.prototype.setCurrentClientVersion = function(value) {
  return jspb.Message.setField(this, 10, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.SalesInfoRequest} returns this
 */
proto.ei.SalesInfoRequest.prototype.clearCurrentClientVersion = function() {
  return jspb.Message.setField(this, 10, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.SalesInfoRequest.prototype.hasCurrentClientVersion = function() {
  return jspb.Message.getField(this, 10) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ei.IAPSaleEntry.prototype.toObject = function(opt_includeInstance) {
  return proto.ei.IAPSaleEntry.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ei.IAPSaleEntry} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.IAPSaleEntry.toObject = function(includeInstance, msg) {
  var f, obj = {
    productId: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    secondsRemaining: (f = jspb.Message.getOptionalFloatingPointField(msg, 2)) == null ? undefined : f,
    discountString: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f,
    saleId: (f = jspb.Message.getField(msg, 4)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ei.IAPSaleEntry}
 */
proto.ei.IAPSaleEntry.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ei.IAPSaleEntry;
  return proto.ei.IAPSaleEntry.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ei.IAPSaleEntry} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ei.IAPSaleEntry}
 */
proto.ei.IAPSaleEntry.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setProductId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setSecondsRemaining(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setDiscountString(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setSaleId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ei.IAPSaleEntry.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ei.IAPSaleEntry.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ei.IAPSaleEntry} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.IAPSaleEntry.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeDouble(
      2,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeString(
      3,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * optional string product_id = 1;
 * @return {string}
 */
proto.ei.IAPSaleEntry.prototype.getProductId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.ei.IAPSaleEntry} returns this
 */
proto.ei.IAPSaleEntry.prototype.setProductId = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.IAPSaleEntry} returns this
 */
proto.ei.IAPSaleEntry.prototype.clearProductId = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.IAPSaleEntry.prototype.hasProductId = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional double seconds_remaining = 2;
 * @return {number}
 */
proto.ei.IAPSaleEntry.prototype.getSecondsRemaining = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 2, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.ei.IAPSaleEntry} returns this
 */
proto.ei.IAPSaleEntry.prototype.setSecondsRemaining = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.IAPSaleEntry} returns this
 */
proto.ei.IAPSaleEntry.prototype.clearSecondsRemaining = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.IAPSaleEntry.prototype.hasSecondsRemaining = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string discount_string = 3;
 * @return {string}
 */
proto.ei.IAPSaleEntry.prototype.getDiscountString = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.ei.IAPSaleEntry} returns this
 */
proto.ei.IAPSaleEntry.prototype.setDiscountString = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.IAPSaleEntry} returns this
 */
proto.ei.IAPSaleEntry.prototype.clearDiscountString = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.IAPSaleEntry.prototype.hasDiscountString = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional string sale_id = 4;
 * @return {string}
 */
proto.ei.IAPSaleEntry.prototype.getSaleId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.ei.IAPSaleEntry} returns this
 */
proto.ei.IAPSaleEntry.prototype.setSaleId = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.IAPSaleEntry} returns this
 */
proto.ei.IAPSaleEntry.prototype.clearSaleId = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.IAPSaleEntry.prototype.hasSaleId = function() {
  return jspb.Message.getField(this, 4) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.ei.SalesInfo.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ei.SalesInfo.prototype.toObject = function(opt_includeInstance) {
  return proto.ei.SalesInfo.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ei.SalesInfo} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.SalesInfo.toObject = function(includeInstance, msg) {
  var f, obj = {
    salesList: jspb.Message.toObjectList(msg.getSalesList(),
    proto.ei.IAPSaleEntry.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ei.SalesInfo}
 */
proto.ei.SalesInfo.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ei.SalesInfo;
  return proto.ei.SalesInfo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ei.SalesInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ei.SalesInfo}
 */
proto.ei.SalesInfo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.ei.IAPSaleEntry;
      reader.readMessage(value,proto.ei.IAPSaleEntry.deserializeBinaryFromReader);
      msg.addSales(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ei.SalesInfo.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ei.SalesInfo.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ei.SalesInfo} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.SalesInfo.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSalesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.ei.IAPSaleEntry.serializeBinaryToWriter
    );
  }
};


/**
 * repeated IAPSaleEntry sales = 1;
 * @return {!Array<!proto.ei.IAPSaleEntry>}
 */
proto.ei.SalesInfo.prototype.getSalesList = function() {
  return /** @type{!Array<!proto.ei.IAPSaleEntry>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.ei.IAPSaleEntry, 1));
};


/**
 * @param {!Array<!proto.ei.IAPSaleEntry>} value
 * @return {!proto.ei.SalesInfo} returns this
*/
proto.ei.SalesInfo.prototype.setSalesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.ei.IAPSaleEntry=} opt_value
 * @param {number=} opt_index
 * @return {!proto.ei.IAPSaleEntry}
 */
proto.ei.SalesInfo.prototype.addSales = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.ei.IAPSaleEntry, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.ei.SalesInfo} returns this
 */
proto.ei.SalesInfo.prototype.clearSalesList = function() {
  return this.setSalesList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ei.EggIncEvent.prototype.toObject = function(opt_includeInstance) {
  return proto.ei.EggIncEvent.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ei.EggIncEvent} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.EggIncEvent.toObject = function(includeInstance, msg) {
  var f, obj = {
    identifier: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    secondsRemaining: (f = jspb.Message.getOptionalFloatingPointField(msg, 2)) == null ? undefined : f,
    type: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f,
    multiplier: (f = jspb.Message.getOptionalFloatingPointField(msg, 4)) == null ? undefined : f,
    subtitle: (f = jspb.Message.getField(msg, 5)) == null ? undefined : f,
    startTime: (f = jspb.Message.getOptionalFloatingPointField(msg, 6)) == null ? undefined : f,
    duration: (f = jspb.Message.getOptionalFloatingPointField(msg, 7)) == null ? undefined : f,
    ccOnly: (f = jspb.Message.getBooleanField(msg, 8)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ei.EggIncEvent}
 */
proto.ei.EggIncEvent.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ei.EggIncEvent;
  return proto.ei.EggIncEvent.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ei.EggIncEvent} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ei.EggIncEvent}
 */
proto.ei.EggIncEvent.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setIdentifier(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setSecondsRemaining(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setType(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setMultiplier(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setSubtitle(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setStartTime(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setDuration(value);
      break;
    case 8:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setCcOnly(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ei.EggIncEvent.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ei.EggIncEvent.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ei.EggIncEvent} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.EggIncEvent.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeDouble(
      2,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeString(
      3,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeDouble(
      4,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeString(
      5,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeDouble(
      6,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 7));
  if (f != null) {
    writer.writeDouble(
      7,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 8));
  if (f != null) {
    writer.writeBool(
      8,
      f
    );
  }
};


/**
 * optional string identifier = 1;
 * @return {string}
 */
proto.ei.EggIncEvent.prototype.getIdentifier = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.ei.EggIncEvent} returns this
 */
proto.ei.EggIncEvent.prototype.setIdentifier = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.EggIncEvent} returns this
 */
proto.ei.EggIncEvent.prototype.clearIdentifier = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.EggIncEvent.prototype.hasIdentifier = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional double seconds_remaining = 2;
 * @return {number}
 */
proto.ei.EggIncEvent.prototype.getSecondsRemaining = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 2, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.ei.EggIncEvent} returns this
 */
proto.ei.EggIncEvent.prototype.setSecondsRemaining = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.EggIncEvent} returns this
 */
proto.ei.EggIncEvent.prototype.clearSecondsRemaining = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.EggIncEvent.prototype.hasSecondsRemaining = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string type = 3;
 * @return {string}
 */
proto.ei.EggIncEvent.prototype.getType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.ei.EggIncEvent} returns this
 */
proto.ei.EggIncEvent.prototype.setType = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.EggIncEvent} returns this
 */
proto.ei.EggIncEvent.prototype.clearType = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.EggIncEvent.prototype.hasType = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional double multiplier = 4;
 * @return {number}
 */
proto.ei.EggIncEvent.prototype.getMultiplier = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 4, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.ei.EggIncEvent} returns this
 */
proto.ei.EggIncEvent.prototype.setMultiplier = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.EggIncEvent} returns this
 */
proto.ei.EggIncEvent.prototype.clearMultiplier = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.EggIncEvent.prototype.hasMultiplier = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional string subtitle = 5;
 * @return {string}
 */
proto.ei.EggIncEvent.prototype.getSubtitle = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.ei.EggIncEvent} returns this
 */
proto.ei.EggIncEvent.prototype.setSubtitle = function(value) {
  return jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.EggIncEvent} returns this
 */
proto.ei.EggIncEvent.prototype.clearSubtitle = function() {
  return jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.EggIncEvent.prototype.hasSubtitle = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional double start_time = 6;
 * @return {number}
 */
proto.ei.EggIncEvent.prototype.getStartTime = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 6, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.ei.EggIncEvent} returns this
 */
proto.ei.EggIncEvent.prototype.setStartTime = function(value) {
  return jspb.Message.setField(this, 6, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.EggIncEvent} returns this
 */
proto.ei.EggIncEvent.prototype.clearStartTime = function() {
  return jspb.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.EggIncEvent.prototype.hasStartTime = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional double duration = 7;
 * @return {number}
 */
proto.ei.EggIncEvent.prototype.getDuration = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 7, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.ei.EggIncEvent} returns this
 */
proto.ei.EggIncEvent.prototype.setDuration = function(value) {
  return jspb.Message.setField(this, 7, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.EggIncEvent} returns this
 */
proto.ei.EggIncEvent.prototype.clearDuration = function() {
  return jspb.Message.setField(this, 7, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.EggIncEvent.prototype.hasDuration = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional bool cc_only = 8;
 * @return {boolean}
 */
proto.ei.EggIncEvent.prototype.getCcOnly = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 8, false));
};


/**
 * @param {boolean} value
 * @return {!proto.ei.EggIncEvent} returns this
 */
proto.ei.EggIncEvent.prototype.setCcOnly = function(value) {
  return jspb.Message.setField(this, 8, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.EggIncEvent} returns this
 */
proto.ei.EggIncEvent.prototype.clearCcOnly = function() {
  return jspb.Message.setField(this, 8, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.EggIncEvent.prototype.hasCcOnly = function() {
  return jspb.Message.getField(this, 8) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.ei.EggIncCurrentEvents.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ei.EggIncCurrentEvents.prototype.toObject = function(opt_includeInstance) {
  return proto.ei.EggIncCurrentEvents.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ei.EggIncCurrentEvents} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.EggIncCurrentEvents.toObject = function(includeInstance, msg) {
  var f, obj = {
    eventsList: jspb.Message.toObjectList(msg.getEventsList(),
    proto.ei.EggIncEvent.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ei.EggIncCurrentEvents}
 */
proto.ei.EggIncCurrentEvents.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ei.EggIncCurrentEvents;
  return proto.ei.EggIncCurrentEvents.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ei.EggIncCurrentEvents} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ei.EggIncCurrentEvents}
 */
proto.ei.EggIncCurrentEvents.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.ei.EggIncEvent;
      reader.readMessage(value,proto.ei.EggIncEvent.deserializeBinaryFromReader);
      msg.addEvents(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ei.EggIncCurrentEvents.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ei.EggIncCurrentEvents.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ei.EggIncCurrentEvents} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.EggIncCurrentEvents.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEventsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.ei.EggIncEvent.serializeBinaryToWriter
    );
  }
};


/**
 * repeated EggIncEvent events = 1;
 * @return {!Array<!proto.ei.EggIncEvent>}
 */
proto.ei.EggIncCurrentEvents.prototype.getEventsList = function() {
  return /** @type{!Array<!proto.ei.EggIncEvent>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.ei.EggIncEvent, 1));
};


/**
 * @param {!Array<!proto.ei.EggIncEvent>} value
 * @return {!proto.ei.EggIncCurrentEvents} returns this
*/
proto.ei.EggIncCurrentEvents.prototype.setEventsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.ei.EggIncEvent=} opt_value
 * @param {number=} opt_index
 * @return {!proto.ei.EggIncEvent}
 */
proto.ei.EggIncCurrentEvents.prototype.addEvents = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.ei.EggIncEvent, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.ei.EggIncCurrentEvents} returns this
 */
proto.ei.EggIncCurrentEvents.prototype.clearEventsList = function() {
  return this.setEventsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ei.DeviceInfo.prototype.toObject = function(opt_includeInstance) {
  return proto.ei.DeviceInfo.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ei.DeviceInfo} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.DeviceInfo.toObject = function(includeInstance, msg) {
  var f, obj = {
    deviceId: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    advertisingId: (f = jspb.Message.getField(msg, 13)) == null ? undefined : f,
    platform: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,
    formFactor: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f,
    deviceName: (f = jspb.Message.getField(msg, 4)) == null ? undefined : f,
    platformVersion: (f = jspb.Message.getField(msg, 5)) == null ? undefined : f,
    localeCountry: (f = jspb.Message.getField(msg, 6)) == null ? undefined : f,
    localeLanguage: (f = jspb.Message.getField(msg, 7)) == null ? undefined : f,
    gpuVendor: (f = jspb.Message.getField(msg, 8)) == null ? undefined : f,
    gpuModel: (f = jspb.Message.getField(msg, 9)) == null ? undefined : f,
    deviceBucket: (f = jspb.Message.getField(msg, 10)) == null ? undefined : f,
    screenWidth: (f = jspb.Message.getField(msg, 11)) == null ? undefined : f,
    screenHeight: (f = jspb.Message.getField(msg, 12)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ei.DeviceInfo}
 */
proto.ei.DeviceInfo.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ei.DeviceInfo;
  return proto.ei.DeviceInfo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ei.DeviceInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ei.DeviceInfo}
 */
proto.ei.DeviceInfo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setDeviceId(value);
      break;
    case 13:
      var value = /** @type {string} */ (reader.readString());
      msg.setAdvertisingId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setPlatform(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setFormFactor(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setDeviceName(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setPlatformVersion(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setLocaleCountry(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setLocaleLanguage(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setGpuVendor(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setGpuModel(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.setDeviceBucket(value);
      break;
    case 11:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setScreenWidth(value);
      break;
    case 12:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setScreenHeight(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ei.DeviceInfo.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ei.DeviceInfo.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ei.DeviceInfo} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.DeviceInfo.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 13));
  if (f != null) {
    writer.writeString(
      13,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeString(
      3,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeString(
      4,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeString(
      5,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeString(
      6,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 7));
  if (f != null) {
    writer.writeString(
      7,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 8));
  if (f != null) {
    writer.writeString(
      8,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 9));
  if (f != null) {
    writer.writeString(
      9,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 10));
  if (f != null) {
    writer.writeString(
      10,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 11));
  if (f != null) {
    writer.writeUint32(
      11,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 12));
  if (f != null) {
    writer.writeUint32(
      12,
      f
    );
  }
};


/**
 * optional string device_id = 1;
 * @return {string}
 */
proto.ei.DeviceInfo.prototype.getDeviceId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.ei.DeviceInfo} returns this
 */
proto.ei.DeviceInfo.prototype.setDeviceId = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.DeviceInfo} returns this
 */
proto.ei.DeviceInfo.prototype.clearDeviceId = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.DeviceInfo.prototype.hasDeviceId = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string advertising_id = 13;
 * @return {string}
 */
proto.ei.DeviceInfo.prototype.getAdvertisingId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 13, ""));
};


/**
 * @param {string} value
 * @return {!proto.ei.DeviceInfo} returns this
 */
proto.ei.DeviceInfo.prototype.setAdvertisingId = function(value) {
  return jspb.Message.setField(this, 13, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.DeviceInfo} returns this
 */
proto.ei.DeviceInfo.prototype.clearAdvertisingId = function() {
  return jspb.Message.setField(this, 13, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.DeviceInfo.prototype.hasAdvertisingId = function() {
  return jspb.Message.getField(this, 13) != null;
};


/**
 * optional string platform = 2;
 * @return {string}
 */
proto.ei.DeviceInfo.prototype.getPlatform = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.ei.DeviceInfo} returns this
 */
proto.ei.DeviceInfo.prototype.setPlatform = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.DeviceInfo} returns this
 */
proto.ei.DeviceInfo.prototype.clearPlatform = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.DeviceInfo.prototype.hasPlatform = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string form_factor = 3;
 * @return {string}
 */
proto.ei.DeviceInfo.prototype.getFormFactor = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.ei.DeviceInfo} returns this
 */
proto.ei.DeviceInfo.prototype.setFormFactor = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.DeviceInfo} returns this
 */
proto.ei.DeviceInfo.prototype.clearFormFactor = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.DeviceInfo.prototype.hasFormFactor = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional string device_name = 4;
 * @return {string}
 */
proto.ei.DeviceInfo.prototype.getDeviceName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.ei.DeviceInfo} returns this
 */
proto.ei.DeviceInfo.prototype.setDeviceName = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.DeviceInfo} returns this
 */
proto.ei.DeviceInfo.prototype.clearDeviceName = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.DeviceInfo.prototype.hasDeviceName = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional string platform_version = 5;
 * @return {string}
 */
proto.ei.DeviceInfo.prototype.getPlatformVersion = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.ei.DeviceInfo} returns this
 */
proto.ei.DeviceInfo.prototype.setPlatformVersion = function(value) {
  return jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.DeviceInfo} returns this
 */
proto.ei.DeviceInfo.prototype.clearPlatformVersion = function() {
  return jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.DeviceInfo.prototype.hasPlatformVersion = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional string locale_country = 6;
 * @return {string}
 */
proto.ei.DeviceInfo.prototype.getLocaleCountry = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.ei.DeviceInfo} returns this
 */
proto.ei.DeviceInfo.prototype.setLocaleCountry = function(value) {
  return jspb.Message.setField(this, 6, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.DeviceInfo} returns this
 */
proto.ei.DeviceInfo.prototype.clearLocaleCountry = function() {
  return jspb.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.DeviceInfo.prototype.hasLocaleCountry = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional string locale_language = 7;
 * @return {string}
 */
proto.ei.DeviceInfo.prototype.getLocaleLanguage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.ei.DeviceInfo} returns this
 */
proto.ei.DeviceInfo.prototype.setLocaleLanguage = function(value) {
  return jspb.Message.setField(this, 7, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.DeviceInfo} returns this
 */
proto.ei.DeviceInfo.prototype.clearLocaleLanguage = function() {
  return jspb.Message.setField(this, 7, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.DeviceInfo.prototype.hasLocaleLanguage = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional string gpu_vendor = 8;
 * @return {string}
 */
proto.ei.DeviceInfo.prototype.getGpuVendor = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.ei.DeviceInfo} returns this
 */
proto.ei.DeviceInfo.prototype.setGpuVendor = function(value) {
  return jspb.Message.setField(this, 8, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.DeviceInfo} returns this
 */
proto.ei.DeviceInfo.prototype.clearGpuVendor = function() {
  return jspb.Message.setField(this, 8, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.DeviceInfo.prototype.hasGpuVendor = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional string gpu_model = 9;
 * @return {string}
 */
proto.ei.DeviceInfo.prototype.getGpuModel = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.ei.DeviceInfo} returns this
 */
proto.ei.DeviceInfo.prototype.setGpuModel = function(value) {
  return jspb.Message.setField(this, 9, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.DeviceInfo} returns this
 */
proto.ei.DeviceInfo.prototype.clearGpuModel = function() {
  return jspb.Message.setField(this, 9, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.DeviceInfo.prototype.hasGpuModel = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional string device_bucket = 10;
 * @return {string}
 */
proto.ei.DeviceInfo.prototype.getDeviceBucket = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/**
 * @param {string} value
 * @return {!proto.ei.DeviceInfo} returns this
 */
proto.ei.DeviceInfo.prototype.setDeviceBucket = function(value) {
  return jspb.Message.setField(this, 10, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.DeviceInfo} returns this
 */
proto.ei.DeviceInfo.prototype.clearDeviceBucket = function() {
  return jspb.Message.setField(this, 10, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.DeviceInfo.prototype.hasDeviceBucket = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * optional uint32 screen_width = 11;
 * @return {number}
 */
proto.ei.DeviceInfo.prototype.getScreenWidth = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 11, 0));
};


/**
 * @param {number} value
 * @return {!proto.ei.DeviceInfo} returns this
 */
proto.ei.DeviceInfo.prototype.setScreenWidth = function(value) {
  return jspb.Message.setField(this, 11, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.DeviceInfo} returns this
 */
proto.ei.DeviceInfo.prototype.clearScreenWidth = function() {
  return jspb.Message.setField(this, 11, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.DeviceInfo.prototype.hasScreenWidth = function() {
  return jspb.Message.getField(this, 11) != null;
};


/**
 * optional uint32 screen_height = 12;
 * @return {number}
 */
proto.ei.DeviceInfo.prototype.getScreenHeight = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 12, 0));
};


/**
 * @param {number} value
 * @return {!proto.ei.DeviceInfo} returns this
 */
proto.ei.DeviceInfo.prototype.setScreenHeight = function(value) {
  return jspb.Message.setField(this, 12, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.DeviceInfo} returns this
 */
proto.ei.DeviceInfo.prototype.clearScreenHeight = function() {
  return jspb.Message.setField(this, 12, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.DeviceInfo.prototype.hasScreenHeight = function() {
  return jspb.Message.getField(this, 12) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ei.AppInfo.prototype.toObject = function(opt_includeInstance) {
  return proto.ei.AppInfo.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ei.AppInfo} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.AppInfo.toObject = function(includeInstance, msg) {
  var f, obj = {
    versionStr: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    sessions: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,
    numPrestiges: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f,
    soulEggs: (f = jspb.Message.getField(msg, 4)) == null ? undefined : f,
    currentEgg: (f = jspb.Message.getField(msg, 5)) == null ? undefined : f,
    goldEarned: (f = jspb.Message.getField(msg, 6)) == null ? undefined : f,
    goldSpent: (f = jspb.Message.getField(msg, 7)) == null ? undefined : f,
    currentMission: (f = jspb.Message.getField(msg, 8)) == null ? undefined : f,
    piggySize: (f = jspb.Message.getField(msg, 9)) == null ? undefined : f,
    numPiggyBreaks: (f = jspb.Message.getField(msg, 10)) == null ? undefined : f,
    verifiedPiggyBreaks: (f = jspb.Message.getField(msg, 29)) == null ? undefined : f,
    iapPacksPurchased: (f = jspb.Message.getField(msg, 11)) == null ? undefined : f,
    permitLevel: (f = jspb.Message.getField(msg, 12)) == null ? undefined : f,
    videoDoublerUses: (f = jspb.Message.getField(msg, 15)) == null ? undefined : f,
    droneTakedowns: (f = jspb.Message.getField(msg, 18)) == null ? undefined : f,
    droneTakedownsElite: (f = jspb.Message.getField(msg, 19)) == null ? undefined : f,
    trophiesUnlocked: (f = jspb.Message.getBooleanField(msg, 20)) == null ? undefined : f,
    eggLevel: (f = jspb.Message.getOptionalFloatingPointField(msg, 21)) == null ? undefined : f,
    struggleFactor: (f = jspb.Message.getOptionalFloatingPointField(msg, 22)) == null ? undefined : f,
    piggyFull: (f = jspb.Message.getBooleanField(msg, 23)) == null ? undefined : f,
    piggyFoundFull: (f = jspb.Message.getBooleanField(msg, 24)) == null ? undefined : f,
    timePiggyFullRealtime: (f = jspb.Message.getOptionalFloatingPointField(msg, 25)) == null ? undefined : f,
    timePiggyFullGametime: (f = jspb.Message.getOptionalFloatingPointField(msg, 26)) == null ? undefined : f,
    lostPiggyIncrements: (f = jspb.Message.getField(msg, 27)) == null ? undefined : f,
    saleId: (f = jspb.Message.getField(msg, 28)) == null ? undefined : f,
    unlimitedChickensUses: (f = jspb.Message.getField(msg, 13)) == null ? undefined : f,
    refillUses: (f = jspb.Message.getField(msg, 14)) == null ? undefined : f,
    shortWarpUses: (f = jspb.Message.getField(msg, 16)) == null ? undefined : f,
    longWarpUses: (f = jspb.Message.getField(msg, 17)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ei.AppInfo}
 */
proto.ei.AppInfo.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ei.AppInfo;
  return proto.ei.AppInfo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ei.AppInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ei.AppInfo}
 */
proto.ei.AppInfo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setVersionStr(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setSessions(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setNumPrestiges(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setSoulEggs(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setCurrentEgg(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setGoldEarned(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setGoldSpent(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setCurrentMission(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setPiggySize(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setNumPiggyBreaks(value);
      break;
    case 29:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setVerifiedPiggyBreaks(value);
      break;
    case 11:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setIapPacksPurchased(value);
      break;
    case 12:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setPermitLevel(value);
      break;
    case 15:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setVideoDoublerUses(value);
      break;
    case 18:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setDroneTakedowns(value);
      break;
    case 19:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setDroneTakedownsElite(value);
      break;
    case 20:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setTrophiesUnlocked(value);
      break;
    case 21:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setEggLevel(value);
      break;
    case 22:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setStruggleFactor(value);
      break;
    case 23:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setPiggyFull(value);
      break;
    case 24:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setPiggyFoundFull(value);
      break;
    case 25:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setTimePiggyFullRealtime(value);
      break;
    case 26:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setTimePiggyFullGametime(value);
      break;
    case 27:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setLostPiggyIncrements(value);
      break;
    case 28:
      var value = /** @type {string} */ (reader.readString());
      msg.setSaleId(value);
      break;
    case 13:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setUnlimitedChickensUses(value);
      break;
    case 14:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setRefillUses(value);
      break;
    case 16:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setShortWarpUses(value);
      break;
    case 17:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setLongWarpUses(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ei.AppInfo.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ei.AppInfo.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ei.AppInfo} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.AppInfo.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeUint32(
      2,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeUint32(
      3,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeUint64(
      4,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeUint32(
      5,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeUint64(
      6,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 7));
  if (f != null) {
    writer.writeUint64(
      7,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 8));
  if (f != null) {
    writer.writeUint32(
      8,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 9));
  if (f != null) {
    writer.writeUint32(
      9,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 10));
  if (f != null) {
    writer.writeUint64(
      10,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 29));
  if (f != null) {
    writer.writeUint64(
      29,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 11));
  if (f != null) {
    writer.writeUint64(
      11,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 12));
  if (f != null) {
    writer.writeUint32(
      12,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 15));
  if (f != null) {
    writer.writeUint64(
      15,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 18));
  if (f != null) {
    writer.writeUint64(
      18,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 19));
  if (f != null) {
    writer.writeUint64(
      19,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 20));
  if (f != null) {
    writer.writeBool(
      20,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 21));
  if (f != null) {
    writer.writeFloat(
      21,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 22));
  if (f != null) {
    writer.writeFloat(
      22,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 23));
  if (f != null) {
    writer.writeBool(
      23,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 24));
  if (f != null) {
    writer.writeBool(
      24,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 25));
  if (f != null) {
    writer.writeDouble(
      25,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 26));
  if (f != null) {
    writer.writeDouble(
      26,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 27));
  if (f != null) {
    writer.writeUint64(
      27,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 28));
  if (f != null) {
    writer.writeString(
      28,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 13));
  if (f != null) {
    writer.writeUint64(
      13,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 14));
  if (f != null) {
    writer.writeUint64(
      14,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 16));
  if (f != null) {
    writer.writeUint64(
      16,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 17));
  if (f != null) {
    writer.writeUint64(
      17,
      f
    );
  }
};


/**
 * optional string version_str = 1;
 * @return {string}
 */
proto.ei.AppInfo.prototype.getVersionStr = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.ei.AppInfo} returns this
 */
proto.ei.AppInfo.prototype.setVersionStr = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.AppInfo} returns this
 */
proto.ei.AppInfo.prototype.clearVersionStr = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.AppInfo.prototype.hasVersionStr = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional uint32 sessions = 2;
 * @return {number}
 */
proto.ei.AppInfo.prototype.getSessions = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.ei.AppInfo} returns this
 */
proto.ei.AppInfo.prototype.setSessions = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.AppInfo} returns this
 */
proto.ei.AppInfo.prototype.clearSessions = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.AppInfo.prototype.hasSessions = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional uint32 num_prestiges = 3;
 * @return {number}
 */
proto.ei.AppInfo.prototype.getNumPrestiges = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.ei.AppInfo} returns this
 */
proto.ei.AppInfo.prototype.setNumPrestiges = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.AppInfo} returns this
 */
proto.ei.AppInfo.prototype.clearNumPrestiges = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.AppInfo.prototype.hasNumPrestiges = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional uint64 soul_eggs = 4;
 * @return {number}
 */
proto.ei.AppInfo.prototype.getSoulEggs = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.ei.AppInfo} returns this
 */
proto.ei.AppInfo.prototype.setSoulEggs = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.AppInfo} returns this
 */
proto.ei.AppInfo.prototype.clearSoulEggs = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.AppInfo.prototype.hasSoulEggs = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional uint32 current_egg = 5;
 * @return {number}
 */
proto.ei.AppInfo.prototype.getCurrentEgg = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.ei.AppInfo} returns this
 */
proto.ei.AppInfo.prototype.setCurrentEgg = function(value) {
  return jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.AppInfo} returns this
 */
proto.ei.AppInfo.prototype.clearCurrentEgg = function() {
  return jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.AppInfo.prototype.hasCurrentEgg = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional uint64 gold_earned = 6;
 * @return {number}
 */
proto.ei.AppInfo.prototype.getGoldEarned = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.ei.AppInfo} returns this
 */
proto.ei.AppInfo.prototype.setGoldEarned = function(value) {
  return jspb.Message.setField(this, 6, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.AppInfo} returns this
 */
proto.ei.AppInfo.prototype.clearGoldEarned = function() {
  return jspb.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.AppInfo.prototype.hasGoldEarned = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional uint64 gold_spent = 7;
 * @return {number}
 */
proto.ei.AppInfo.prototype.getGoldSpent = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {number} value
 * @return {!proto.ei.AppInfo} returns this
 */
proto.ei.AppInfo.prototype.setGoldSpent = function(value) {
  return jspb.Message.setField(this, 7, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.AppInfo} returns this
 */
proto.ei.AppInfo.prototype.clearGoldSpent = function() {
  return jspb.Message.setField(this, 7, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.AppInfo.prototype.hasGoldSpent = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional uint32 current_mission = 8;
 * @return {number}
 */
proto.ei.AppInfo.prototype.getCurrentMission = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/**
 * @param {number} value
 * @return {!proto.ei.AppInfo} returns this
 */
proto.ei.AppInfo.prototype.setCurrentMission = function(value) {
  return jspb.Message.setField(this, 8, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.AppInfo} returns this
 */
proto.ei.AppInfo.prototype.clearCurrentMission = function() {
  return jspb.Message.setField(this, 8, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.AppInfo.prototype.hasCurrentMission = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional uint32 piggy_size = 9;
 * @return {number}
 */
proto.ei.AppInfo.prototype.getPiggySize = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};


/**
 * @param {number} value
 * @return {!proto.ei.AppInfo} returns this
 */
proto.ei.AppInfo.prototype.setPiggySize = function(value) {
  return jspb.Message.setField(this, 9, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.AppInfo} returns this
 */
proto.ei.AppInfo.prototype.clearPiggySize = function() {
  return jspb.Message.setField(this, 9, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.AppInfo.prototype.hasPiggySize = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional uint64 num_piggy_breaks = 10;
 * @return {number}
 */
proto.ei.AppInfo.prototype.getNumPiggyBreaks = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 10, 0));
};


/**
 * @param {number} value
 * @return {!proto.ei.AppInfo} returns this
 */
proto.ei.AppInfo.prototype.setNumPiggyBreaks = function(value) {
  return jspb.Message.setField(this, 10, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.AppInfo} returns this
 */
proto.ei.AppInfo.prototype.clearNumPiggyBreaks = function() {
  return jspb.Message.setField(this, 10, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.AppInfo.prototype.hasNumPiggyBreaks = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * optional uint64 verified_piggy_breaks = 29;
 * @return {number}
 */
proto.ei.AppInfo.prototype.getVerifiedPiggyBreaks = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 29, 0));
};


/**
 * @param {number} value
 * @return {!proto.ei.AppInfo} returns this
 */
proto.ei.AppInfo.prototype.setVerifiedPiggyBreaks = function(value) {
  return jspb.Message.setField(this, 29, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.AppInfo} returns this
 */
proto.ei.AppInfo.prototype.clearVerifiedPiggyBreaks = function() {
  return jspb.Message.setField(this, 29, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.AppInfo.prototype.hasVerifiedPiggyBreaks = function() {
  return jspb.Message.getField(this, 29) != null;
};


/**
 * optional uint64 iap_packs_purchased = 11;
 * @return {number}
 */
proto.ei.AppInfo.prototype.getIapPacksPurchased = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 11, 0));
};


/**
 * @param {number} value
 * @return {!proto.ei.AppInfo} returns this
 */
proto.ei.AppInfo.prototype.setIapPacksPurchased = function(value) {
  return jspb.Message.setField(this, 11, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.AppInfo} returns this
 */
proto.ei.AppInfo.prototype.clearIapPacksPurchased = function() {
  return jspb.Message.setField(this, 11, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.AppInfo.prototype.hasIapPacksPurchased = function() {
  return jspb.Message.getField(this, 11) != null;
};


/**
 * optional uint32 permit_level = 12;
 * @return {number}
 */
proto.ei.AppInfo.prototype.getPermitLevel = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 12, 0));
};


/**
 * @param {number} value
 * @return {!proto.ei.AppInfo} returns this
 */
proto.ei.AppInfo.prototype.setPermitLevel = function(value) {
  return jspb.Message.setField(this, 12, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.AppInfo} returns this
 */
proto.ei.AppInfo.prototype.clearPermitLevel = function() {
  return jspb.Message.setField(this, 12, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.AppInfo.prototype.hasPermitLevel = function() {
  return jspb.Message.getField(this, 12) != null;
};


/**
 * optional uint64 video_doubler_uses = 15;
 * @return {number}
 */
proto.ei.AppInfo.prototype.getVideoDoublerUses = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 15, 0));
};


/**
 * @param {number} value
 * @return {!proto.ei.AppInfo} returns this
 */
proto.ei.AppInfo.prototype.setVideoDoublerUses = function(value) {
  return jspb.Message.setField(this, 15, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.AppInfo} returns this
 */
proto.ei.AppInfo.prototype.clearVideoDoublerUses = function() {
  return jspb.Message.setField(this, 15, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.AppInfo.prototype.hasVideoDoublerUses = function() {
  return jspb.Message.getField(this, 15) != null;
};


/**
 * optional uint64 drone_takedowns = 18;
 * @return {number}
 */
proto.ei.AppInfo.prototype.getDroneTakedowns = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 18, 0));
};


/**
 * @param {number} value
 * @return {!proto.ei.AppInfo} returns this
 */
proto.ei.AppInfo.prototype.setDroneTakedowns = function(value) {
  return jspb.Message.setField(this, 18, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.AppInfo} returns this
 */
proto.ei.AppInfo.prototype.clearDroneTakedowns = function() {
  return jspb.Message.setField(this, 18, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.AppInfo.prototype.hasDroneTakedowns = function() {
  return jspb.Message.getField(this, 18) != null;
};


/**
 * optional uint64 drone_takedowns_elite = 19;
 * @return {number}
 */
proto.ei.AppInfo.prototype.getDroneTakedownsElite = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 19, 0));
};


/**
 * @param {number} value
 * @return {!proto.ei.AppInfo} returns this
 */
proto.ei.AppInfo.prototype.setDroneTakedownsElite = function(value) {
  return jspb.Message.setField(this, 19, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.AppInfo} returns this
 */
proto.ei.AppInfo.prototype.clearDroneTakedownsElite = function() {
  return jspb.Message.setField(this, 19, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.AppInfo.prototype.hasDroneTakedownsElite = function() {
  return jspb.Message.getField(this, 19) != null;
};


/**
 * optional bool trophies_unlocked = 20;
 * @return {boolean}
 */
proto.ei.AppInfo.prototype.getTrophiesUnlocked = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 20, false));
};


/**
 * @param {boolean} value
 * @return {!proto.ei.AppInfo} returns this
 */
proto.ei.AppInfo.prototype.setTrophiesUnlocked = function(value) {
  return jspb.Message.setField(this, 20, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.AppInfo} returns this
 */
proto.ei.AppInfo.prototype.clearTrophiesUnlocked = function() {
  return jspb.Message.setField(this, 20, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.AppInfo.prototype.hasTrophiesUnlocked = function() {
  return jspb.Message.getField(this, 20) != null;
};


/**
 * optional float egg_level = 21;
 * @return {number}
 */
proto.ei.AppInfo.prototype.getEggLevel = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 21, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.ei.AppInfo} returns this
 */
proto.ei.AppInfo.prototype.setEggLevel = function(value) {
  return jspb.Message.setField(this, 21, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.AppInfo} returns this
 */
proto.ei.AppInfo.prototype.clearEggLevel = function() {
  return jspb.Message.setField(this, 21, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.AppInfo.prototype.hasEggLevel = function() {
  return jspb.Message.getField(this, 21) != null;
};


/**
 * optional float struggle_factor = 22;
 * @return {number}
 */
proto.ei.AppInfo.prototype.getStruggleFactor = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 22, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.ei.AppInfo} returns this
 */
proto.ei.AppInfo.prototype.setStruggleFactor = function(value) {
  return jspb.Message.setField(this, 22, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.AppInfo} returns this
 */
proto.ei.AppInfo.prototype.clearStruggleFactor = function() {
  return jspb.Message.setField(this, 22, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.AppInfo.prototype.hasStruggleFactor = function() {
  return jspb.Message.getField(this, 22) != null;
};


/**
 * optional bool piggy_full = 23;
 * @return {boolean}
 */
proto.ei.AppInfo.prototype.getPiggyFull = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 23, false));
};


/**
 * @param {boolean} value
 * @return {!proto.ei.AppInfo} returns this
 */
proto.ei.AppInfo.prototype.setPiggyFull = function(value) {
  return jspb.Message.setField(this, 23, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.AppInfo} returns this
 */
proto.ei.AppInfo.prototype.clearPiggyFull = function() {
  return jspb.Message.setField(this, 23, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.AppInfo.prototype.hasPiggyFull = function() {
  return jspb.Message.getField(this, 23) != null;
};


/**
 * optional bool piggy_found_full = 24;
 * @return {boolean}
 */
proto.ei.AppInfo.prototype.getPiggyFoundFull = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 24, false));
};


/**
 * @param {boolean} value
 * @return {!proto.ei.AppInfo} returns this
 */
proto.ei.AppInfo.prototype.setPiggyFoundFull = function(value) {
  return jspb.Message.setField(this, 24, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.AppInfo} returns this
 */
proto.ei.AppInfo.prototype.clearPiggyFoundFull = function() {
  return jspb.Message.setField(this, 24, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.AppInfo.prototype.hasPiggyFoundFull = function() {
  return jspb.Message.getField(this, 24) != null;
};


/**
 * optional double time_piggy_full_realtime = 25;
 * @return {number}
 */
proto.ei.AppInfo.prototype.getTimePiggyFullRealtime = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 25, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.ei.AppInfo} returns this
 */
proto.ei.AppInfo.prototype.setTimePiggyFullRealtime = function(value) {
  return jspb.Message.setField(this, 25, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.AppInfo} returns this
 */
proto.ei.AppInfo.prototype.clearTimePiggyFullRealtime = function() {
  return jspb.Message.setField(this, 25, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.AppInfo.prototype.hasTimePiggyFullRealtime = function() {
  return jspb.Message.getField(this, 25) != null;
};


/**
 * optional double time_piggy_full_gametime = 26;
 * @return {number}
 */
proto.ei.AppInfo.prototype.getTimePiggyFullGametime = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 26, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.ei.AppInfo} returns this
 */
proto.ei.AppInfo.prototype.setTimePiggyFullGametime = function(value) {
  return jspb.Message.setField(this, 26, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.AppInfo} returns this
 */
proto.ei.AppInfo.prototype.clearTimePiggyFullGametime = function() {
  return jspb.Message.setField(this, 26, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.AppInfo.prototype.hasTimePiggyFullGametime = function() {
  return jspb.Message.getField(this, 26) != null;
};


/**
 * optional uint64 lost_piggy_increments = 27;
 * @return {number}
 */
proto.ei.AppInfo.prototype.getLostPiggyIncrements = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 27, 0));
};


/**
 * @param {number} value
 * @return {!proto.ei.AppInfo} returns this
 */
proto.ei.AppInfo.prototype.setLostPiggyIncrements = function(value) {
  return jspb.Message.setField(this, 27, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.AppInfo} returns this
 */
proto.ei.AppInfo.prototype.clearLostPiggyIncrements = function() {
  return jspb.Message.setField(this, 27, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.AppInfo.prototype.hasLostPiggyIncrements = function() {
  return jspb.Message.getField(this, 27) != null;
};


/**
 * optional string sale_id = 28;
 * @return {string}
 */
proto.ei.AppInfo.prototype.getSaleId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 28, ""));
};


/**
 * @param {string} value
 * @return {!proto.ei.AppInfo} returns this
 */
proto.ei.AppInfo.prototype.setSaleId = function(value) {
  return jspb.Message.setField(this, 28, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.AppInfo} returns this
 */
proto.ei.AppInfo.prototype.clearSaleId = function() {
  return jspb.Message.setField(this, 28, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.AppInfo.prototype.hasSaleId = function() {
  return jspb.Message.getField(this, 28) != null;
};


/**
 * optional uint64 unlimited_chickens_uses = 13;
 * @return {number}
 */
proto.ei.AppInfo.prototype.getUnlimitedChickensUses = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 13, 0));
};


/**
 * @param {number} value
 * @return {!proto.ei.AppInfo} returns this
 */
proto.ei.AppInfo.prototype.setUnlimitedChickensUses = function(value) {
  return jspb.Message.setField(this, 13, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.AppInfo} returns this
 */
proto.ei.AppInfo.prototype.clearUnlimitedChickensUses = function() {
  return jspb.Message.setField(this, 13, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.AppInfo.prototype.hasUnlimitedChickensUses = function() {
  return jspb.Message.getField(this, 13) != null;
};


/**
 * optional uint64 refill_uses = 14;
 * @return {number}
 */
proto.ei.AppInfo.prototype.getRefillUses = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 14, 0));
};


/**
 * @param {number} value
 * @return {!proto.ei.AppInfo} returns this
 */
proto.ei.AppInfo.prototype.setRefillUses = function(value) {
  return jspb.Message.setField(this, 14, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.AppInfo} returns this
 */
proto.ei.AppInfo.prototype.clearRefillUses = function() {
  return jspb.Message.setField(this, 14, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.AppInfo.prototype.hasRefillUses = function() {
  return jspb.Message.getField(this, 14) != null;
};


/**
 * optional uint64 short_warp_uses = 16;
 * @return {number}
 */
proto.ei.AppInfo.prototype.getShortWarpUses = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 16, 0));
};


/**
 * @param {number} value
 * @return {!proto.ei.AppInfo} returns this
 */
proto.ei.AppInfo.prototype.setShortWarpUses = function(value) {
  return jspb.Message.setField(this, 16, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.AppInfo} returns this
 */
proto.ei.AppInfo.prototype.clearShortWarpUses = function() {
  return jspb.Message.setField(this, 16, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.AppInfo.prototype.hasShortWarpUses = function() {
  return jspb.Message.getField(this, 16) != null;
};


/**
 * optional uint64 long_warp_uses = 17;
 * @return {number}
 */
proto.ei.AppInfo.prototype.getLongWarpUses = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 17, 0));
};


/**
 * @param {number} value
 * @return {!proto.ei.AppInfo} returns this
 */
proto.ei.AppInfo.prototype.setLongWarpUses = function(value) {
  return jspb.Message.setField(this, 17, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.AppInfo} returns this
 */
proto.ei.AppInfo.prototype.clearLongWarpUses = function() {
  return jspb.Message.setField(this, 17, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.AppInfo.prototype.hasLongWarpUses = function() {
  return jspb.Message.getField(this, 17) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ei.ActionKeyValuePair.prototype.toObject = function(opt_includeInstance) {
  return proto.ei.ActionKeyValuePair.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ei.ActionKeyValuePair} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.ActionKeyValuePair.toObject = function(includeInstance, msg) {
  var f, obj = {
    key: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    value: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ei.ActionKeyValuePair}
 */
proto.ei.ActionKeyValuePair.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ei.ActionKeyValuePair;
  return proto.ei.ActionKeyValuePair.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ei.ActionKeyValuePair} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ei.ActionKeyValuePair}
 */
proto.ei.ActionKeyValuePair.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setKey(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setValue(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ei.ActionKeyValuePair.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ei.ActionKeyValuePair.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ei.ActionKeyValuePair} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.ActionKeyValuePair.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * required string key = 1;
 * @return {string}
 */
proto.ei.ActionKeyValuePair.prototype.getKey = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.ei.ActionKeyValuePair} returns this
 */
proto.ei.ActionKeyValuePair.prototype.setKey = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.ActionKeyValuePair} returns this
 */
proto.ei.ActionKeyValuePair.prototype.clearKey = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ActionKeyValuePair.prototype.hasKey = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * required string value = 2;
 * @return {string}
 */
proto.ei.ActionKeyValuePair.prototype.getValue = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.ei.ActionKeyValuePair} returns this
 */
proto.ei.ActionKeyValuePair.prototype.setValue = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.ActionKeyValuePair} returns this
 */
proto.ei.ActionKeyValuePair.prototype.clearValue = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ActionKeyValuePair.prototype.hasValue = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.ei.GenericAction.repeatedFields_ = [4];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ei.GenericAction.prototype.toObject = function(opt_includeInstance) {
  return proto.ei.GenericAction.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ei.GenericAction} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.GenericAction.toObject = function(includeInstance, msg) {
  var f, obj = {
    userId: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    ccUser: (f = jspb.Message.getBooleanField(msg, 9)) == null ? undefined : f,
    advertisingId: (f = jspb.Message.getField(msg, 7)) == null ? undefined : f,
    approxTimeDep: (f = jspb.Message.getOptionalFloatingPointField(msg, 2)) == null ? undefined : f,
    approxTime: (f = jspb.Message.getOptionalFloatingPointField(msg, 8)) == null ? undefined : f,
    actionName: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f,
    dataList: jspb.Message.toObjectList(msg.getDataList(),
    proto.ei.ActionKeyValuePair.toObject, includeInstance),
    app: (f = msg.getApp()) && proto.ei.AppInfo.toObject(includeInstance, f),
    device: (f = msg.getDevice()) && proto.ei.DeviceInfo.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ei.GenericAction}
 */
proto.ei.GenericAction.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ei.GenericAction;
  return proto.ei.GenericAction.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ei.GenericAction} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ei.GenericAction}
 */
proto.ei.GenericAction.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserId(value);
      break;
    case 9:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setCcUser(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setAdvertisingId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setApproxTimeDep(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setApproxTime(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setActionName(value);
      break;
    case 4:
      var value = new proto.ei.ActionKeyValuePair;
      reader.readMessage(value,proto.ei.ActionKeyValuePair.deserializeBinaryFromReader);
      msg.addData(value);
      break;
    case 5:
      var value = new proto.ei.AppInfo;
      reader.readMessage(value,proto.ei.AppInfo.deserializeBinaryFromReader);
      msg.setApp(value);
      break;
    case 6:
      var value = new proto.ei.DeviceInfo;
      reader.readMessage(value,proto.ei.DeviceInfo.deserializeBinaryFromReader);
      msg.setDevice(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ei.GenericAction.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ei.GenericAction.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ei.GenericAction} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.GenericAction.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 9));
  if (f != null) {
    writer.writeBool(
      9,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 7));
  if (f != null) {
    writer.writeString(
      7,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeFloat(
      2,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 8));
  if (f != null) {
    writer.writeDouble(
      8,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getDataList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      4,
      f,
      proto.ei.ActionKeyValuePair.serializeBinaryToWriter
    );
  }
  f = message.getApp();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.ei.AppInfo.serializeBinaryToWriter
    );
  }
  f = message.getDevice();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      proto.ei.DeviceInfo.serializeBinaryToWriter
    );
  }
};


/**
 * optional string user_id = 1;
 * @return {string}
 */
proto.ei.GenericAction.prototype.getUserId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.ei.GenericAction} returns this
 */
proto.ei.GenericAction.prototype.setUserId = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.GenericAction} returns this
 */
proto.ei.GenericAction.prototype.clearUserId = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.GenericAction.prototype.hasUserId = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional bool cc_user = 9;
 * @return {boolean}
 */
proto.ei.GenericAction.prototype.getCcUser = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 9, false));
};


/**
 * @param {boolean} value
 * @return {!proto.ei.GenericAction} returns this
 */
proto.ei.GenericAction.prototype.setCcUser = function(value) {
  return jspb.Message.setField(this, 9, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.GenericAction} returns this
 */
proto.ei.GenericAction.prototype.clearCcUser = function() {
  return jspb.Message.setField(this, 9, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.GenericAction.prototype.hasCcUser = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional string advertising_id = 7;
 * @return {string}
 */
proto.ei.GenericAction.prototype.getAdvertisingId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.ei.GenericAction} returns this
 */
proto.ei.GenericAction.prototype.setAdvertisingId = function(value) {
  return jspb.Message.setField(this, 7, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.GenericAction} returns this
 */
proto.ei.GenericAction.prototype.clearAdvertisingId = function() {
  return jspb.Message.setField(this, 7, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.GenericAction.prototype.hasAdvertisingId = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional float approx_time_DEP = 2;
 * @return {number}
 */
proto.ei.GenericAction.prototype.getApproxTimeDep = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 2, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.ei.GenericAction} returns this
 */
proto.ei.GenericAction.prototype.setApproxTimeDep = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.GenericAction} returns this
 */
proto.ei.GenericAction.prototype.clearApproxTimeDep = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.GenericAction.prototype.hasApproxTimeDep = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional double approx_time = 8;
 * @return {number}
 */
proto.ei.GenericAction.prototype.getApproxTime = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 8, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.ei.GenericAction} returns this
 */
proto.ei.GenericAction.prototype.setApproxTime = function(value) {
  return jspb.Message.setField(this, 8, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.GenericAction} returns this
 */
proto.ei.GenericAction.prototype.clearApproxTime = function() {
  return jspb.Message.setField(this, 8, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.GenericAction.prototype.hasApproxTime = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional string action_name = 3;
 * @return {string}
 */
proto.ei.GenericAction.prototype.getActionName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.ei.GenericAction} returns this
 */
proto.ei.GenericAction.prototype.setActionName = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.GenericAction} returns this
 */
proto.ei.GenericAction.prototype.clearActionName = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.GenericAction.prototype.hasActionName = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * repeated ActionKeyValuePair data = 4;
 * @return {!Array<!proto.ei.ActionKeyValuePair>}
 */
proto.ei.GenericAction.prototype.getDataList = function() {
  return /** @type{!Array<!proto.ei.ActionKeyValuePair>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.ei.ActionKeyValuePair, 4));
};


/**
 * @param {!Array<!proto.ei.ActionKeyValuePair>} value
 * @return {!proto.ei.GenericAction} returns this
*/
proto.ei.GenericAction.prototype.setDataList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 4, value);
};


/**
 * @param {!proto.ei.ActionKeyValuePair=} opt_value
 * @param {number=} opt_index
 * @return {!proto.ei.ActionKeyValuePair}
 */
proto.ei.GenericAction.prototype.addData = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 4, opt_value, proto.ei.ActionKeyValuePair, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.ei.GenericAction} returns this
 */
proto.ei.GenericAction.prototype.clearDataList = function() {
  return this.setDataList([]);
};


/**
 * optional AppInfo app = 5;
 * @return {?proto.ei.AppInfo}
 */
proto.ei.GenericAction.prototype.getApp = function() {
  return /** @type{?proto.ei.AppInfo} */ (
    jspb.Message.getWrapperField(this, proto.ei.AppInfo, 5));
};


/**
 * @param {?proto.ei.AppInfo|undefined} value
 * @return {!proto.ei.GenericAction} returns this
*/
proto.ei.GenericAction.prototype.setApp = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.ei.GenericAction} returns this
 */
proto.ei.GenericAction.prototype.clearApp = function() {
  return this.setApp(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.GenericAction.prototype.hasApp = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional DeviceInfo device = 6;
 * @return {?proto.ei.DeviceInfo}
 */
proto.ei.GenericAction.prototype.getDevice = function() {
  return /** @type{?proto.ei.DeviceInfo} */ (
    jspb.Message.getWrapperField(this, proto.ei.DeviceInfo, 6));
};


/**
 * @param {?proto.ei.DeviceInfo|undefined} value
 * @return {!proto.ei.GenericAction} returns this
*/
proto.ei.GenericAction.prototype.setDevice = function(value) {
  return jspb.Message.setWrapperField(this, 6, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.ei.GenericAction} returns this
 */
proto.ei.GenericAction.prototype.clearDevice = function() {
  return this.setDevice(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.GenericAction.prototype.hasDevice = function() {
  return jspb.Message.getField(this, 6) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.ei.GenericActionBatchRequest.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ei.GenericActionBatchRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.ei.GenericActionBatchRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ei.GenericActionBatchRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.GenericActionBatchRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    rinfo: (f = msg.getRinfo()) && proto.ei.BasicRequestInfo.toObject(includeInstance, f),
    actionsList: jspb.Message.toObjectList(msg.getActionsList(),
    proto.ei.GenericAction.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ei.GenericActionBatchRequest}
 */
proto.ei.GenericActionBatchRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ei.GenericActionBatchRequest;
  return proto.ei.GenericActionBatchRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ei.GenericActionBatchRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ei.GenericActionBatchRequest}
 */
proto.ei.GenericActionBatchRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.ei.BasicRequestInfo;
      reader.readMessage(value,proto.ei.BasicRequestInfo.deserializeBinaryFromReader);
      msg.setRinfo(value);
      break;
    case 2:
      var value = new proto.ei.GenericAction;
      reader.readMessage(value,proto.ei.GenericAction.deserializeBinaryFromReader);
      msg.addActions(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ei.GenericActionBatchRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ei.GenericActionBatchRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ei.GenericActionBatchRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.GenericActionBatchRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRinfo();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.ei.BasicRequestInfo.serializeBinaryToWriter
    );
  }
  f = message.getActionsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.ei.GenericAction.serializeBinaryToWriter
    );
  }
};


/**
 * optional BasicRequestInfo rinfo = 1;
 * @return {?proto.ei.BasicRequestInfo}
 */
proto.ei.GenericActionBatchRequest.prototype.getRinfo = function() {
  return /** @type{?proto.ei.BasicRequestInfo} */ (
    jspb.Message.getWrapperField(this, proto.ei.BasicRequestInfo, 1));
};


/**
 * @param {?proto.ei.BasicRequestInfo|undefined} value
 * @return {!proto.ei.GenericActionBatchRequest} returns this
*/
proto.ei.GenericActionBatchRequest.prototype.setRinfo = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.ei.GenericActionBatchRequest} returns this
 */
proto.ei.GenericActionBatchRequest.prototype.clearRinfo = function() {
  return this.setRinfo(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.GenericActionBatchRequest.prototype.hasRinfo = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * repeated GenericAction actions = 2;
 * @return {!Array<!proto.ei.GenericAction>}
 */
proto.ei.GenericActionBatchRequest.prototype.getActionsList = function() {
  return /** @type{!Array<!proto.ei.GenericAction>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.ei.GenericAction, 2));
};


/**
 * @param {!Array<!proto.ei.GenericAction>} value
 * @return {!proto.ei.GenericActionBatchRequest} returns this
*/
proto.ei.GenericActionBatchRequest.prototype.setActionsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.ei.GenericAction=} opt_value
 * @param {number=} opt_index
 * @return {!proto.ei.GenericAction}
 */
proto.ei.GenericActionBatchRequest.prototype.addActions = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.ei.GenericAction, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.ei.GenericActionBatchRequest} returns this
 */
proto.ei.GenericActionBatchRequest.prototype.clearActionsList = function() {
  return this.setActionsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ei.VerifyPurchaseRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.ei.VerifyPurchaseRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ei.VerifyPurchaseRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.VerifyPurchaseRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    rinfo: (f = msg.getRinfo()) && proto.ei.BasicRequestInfo.toObject(includeInstance, f),
    sku: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    transactionId: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,
    originalTransactionId: (f = jspb.Message.getField(msg, 8)) == null ? undefined : f,
    receipt: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f,
    platform: (f = jspb.Message.getField(msg, 4)) == null ? undefined : f,
    sandbox: (f = jspb.Message.getBooleanField(msg, 7)) == null ? undefined : f,
    log: (f = msg.getLog()) && proto.ei.GenericAction.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ei.VerifyPurchaseRequest}
 */
proto.ei.VerifyPurchaseRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ei.VerifyPurchaseRequest;
  return proto.ei.VerifyPurchaseRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ei.VerifyPurchaseRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ei.VerifyPurchaseRequest}
 */
proto.ei.VerifyPurchaseRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 6:
      var value = new proto.ei.BasicRequestInfo;
      reader.readMessage(value,proto.ei.BasicRequestInfo.deserializeBinaryFromReader);
      msg.setRinfo(value);
      break;
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setSku(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setTransactionId(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setOriginalTransactionId(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setReceipt(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setPlatform(value);
      break;
    case 7:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setSandbox(value);
      break;
    case 5:
      var value = new proto.ei.GenericAction;
      reader.readMessage(value,proto.ei.GenericAction.deserializeBinaryFromReader);
      msg.setLog(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ei.VerifyPurchaseRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ei.VerifyPurchaseRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ei.VerifyPurchaseRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.VerifyPurchaseRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRinfo();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      proto.ei.BasicRequestInfo.serializeBinaryToWriter
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 8));
  if (f != null) {
    writer.writeString(
      8,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeString(
      3,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeString(
      4,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 7));
  if (f != null) {
    writer.writeBool(
      7,
      f
    );
  }
  f = message.getLog();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.ei.GenericAction.serializeBinaryToWriter
    );
  }
};


/**
 * optional BasicRequestInfo rinfo = 6;
 * @return {?proto.ei.BasicRequestInfo}
 */
proto.ei.VerifyPurchaseRequest.prototype.getRinfo = function() {
  return /** @type{?proto.ei.BasicRequestInfo} */ (
    jspb.Message.getWrapperField(this, proto.ei.BasicRequestInfo, 6));
};


/**
 * @param {?proto.ei.BasicRequestInfo|undefined} value
 * @return {!proto.ei.VerifyPurchaseRequest} returns this
*/
proto.ei.VerifyPurchaseRequest.prototype.setRinfo = function(value) {
  return jspb.Message.setWrapperField(this, 6, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.ei.VerifyPurchaseRequest} returns this
 */
proto.ei.VerifyPurchaseRequest.prototype.clearRinfo = function() {
  return this.setRinfo(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.VerifyPurchaseRequest.prototype.hasRinfo = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional string sku = 1;
 * @return {string}
 */
proto.ei.VerifyPurchaseRequest.prototype.getSku = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.ei.VerifyPurchaseRequest} returns this
 */
proto.ei.VerifyPurchaseRequest.prototype.setSku = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.VerifyPurchaseRequest} returns this
 */
proto.ei.VerifyPurchaseRequest.prototype.clearSku = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.VerifyPurchaseRequest.prototype.hasSku = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string transaction_id = 2;
 * @return {string}
 */
proto.ei.VerifyPurchaseRequest.prototype.getTransactionId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.ei.VerifyPurchaseRequest} returns this
 */
proto.ei.VerifyPurchaseRequest.prototype.setTransactionId = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.VerifyPurchaseRequest} returns this
 */
proto.ei.VerifyPurchaseRequest.prototype.clearTransactionId = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.VerifyPurchaseRequest.prototype.hasTransactionId = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string original_transaction_id = 8;
 * @return {string}
 */
proto.ei.VerifyPurchaseRequest.prototype.getOriginalTransactionId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.ei.VerifyPurchaseRequest} returns this
 */
proto.ei.VerifyPurchaseRequest.prototype.setOriginalTransactionId = function(value) {
  return jspb.Message.setField(this, 8, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.VerifyPurchaseRequest} returns this
 */
proto.ei.VerifyPurchaseRequest.prototype.clearOriginalTransactionId = function() {
  return jspb.Message.setField(this, 8, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.VerifyPurchaseRequest.prototype.hasOriginalTransactionId = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional string receipt = 3;
 * @return {string}
 */
proto.ei.VerifyPurchaseRequest.prototype.getReceipt = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.ei.VerifyPurchaseRequest} returns this
 */
proto.ei.VerifyPurchaseRequest.prototype.setReceipt = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.VerifyPurchaseRequest} returns this
 */
proto.ei.VerifyPurchaseRequest.prototype.clearReceipt = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.VerifyPurchaseRequest.prototype.hasReceipt = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional string platform = 4;
 * @return {string}
 */
proto.ei.VerifyPurchaseRequest.prototype.getPlatform = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.ei.VerifyPurchaseRequest} returns this
 */
proto.ei.VerifyPurchaseRequest.prototype.setPlatform = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.VerifyPurchaseRequest} returns this
 */
proto.ei.VerifyPurchaseRequest.prototype.clearPlatform = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.VerifyPurchaseRequest.prototype.hasPlatform = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional bool sandbox = 7;
 * @return {boolean}
 */
proto.ei.VerifyPurchaseRequest.prototype.getSandbox = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 7, false));
};


/**
 * @param {boolean} value
 * @return {!proto.ei.VerifyPurchaseRequest} returns this
 */
proto.ei.VerifyPurchaseRequest.prototype.setSandbox = function(value) {
  return jspb.Message.setField(this, 7, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.VerifyPurchaseRequest} returns this
 */
proto.ei.VerifyPurchaseRequest.prototype.clearSandbox = function() {
  return jspb.Message.setField(this, 7, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.VerifyPurchaseRequest.prototype.hasSandbox = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional GenericAction log = 5;
 * @return {?proto.ei.GenericAction}
 */
proto.ei.VerifyPurchaseRequest.prototype.getLog = function() {
  return /** @type{?proto.ei.GenericAction} */ (
    jspb.Message.getWrapperField(this, proto.ei.GenericAction, 5));
};


/**
 * @param {?proto.ei.GenericAction|undefined} value
 * @return {!proto.ei.VerifyPurchaseRequest} returns this
*/
proto.ei.VerifyPurchaseRequest.prototype.setLog = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.ei.VerifyPurchaseRequest} returns this
 */
proto.ei.VerifyPurchaseRequest.prototype.clearLog = function() {
  return this.setLog(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.VerifyPurchaseRequest.prototype.hasLog = function() {
  return jspb.Message.getField(this, 5) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ei.VerifyPurchaseResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.ei.VerifyPurchaseResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ei.VerifyPurchaseResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.VerifyPurchaseResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    verified: (f = jspb.Message.getBooleanField(msg, 1)) == null ? undefined : f,
    message: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ei.VerifyPurchaseResponse}
 */
proto.ei.VerifyPurchaseResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ei.VerifyPurchaseResponse;
  return proto.ei.VerifyPurchaseResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ei.VerifyPurchaseResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ei.VerifyPurchaseResponse}
 */
proto.ei.VerifyPurchaseResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setVerified(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setMessage(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ei.VerifyPurchaseResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ei.VerifyPurchaseResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ei.VerifyPurchaseResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.VerifyPurchaseResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {boolean} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeBool(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional bool verified = 1;
 * @return {boolean}
 */
proto.ei.VerifyPurchaseResponse.prototype.getVerified = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.ei.VerifyPurchaseResponse} returns this
 */
proto.ei.VerifyPurchaseResponse.prototype.setVerified = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.VerifyPurchaseResponse} returns this
 */
proto.ei.VerifyPurchaseResponse.prototype.clearVerified = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.VerifyPurchaseResponse.prototype.hasVerified = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string message = 2;
 * @return {string}
 */
proto.ei.VerifyPurchaseResponse.prototype.getMessage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.ei.VerifyPurchaseResponse} returns this
 */
proto.ei.VerifyPurchaseResponse.prototype.setMessage = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.VerifyPurchaseResponse} returns this
 */
proto.ei.VerifyPurchaseResponse.prototype.clearMessage = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.VerifyPurchaseResponse.prototype.hasMessage = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ei.CurrencyFlowLog.prototype.toObject = function(opt_includeInstance) {
  return proto.ei.CurrencyFlowLog.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ei.CurrencyFlowLog} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.CurrencyFlowLog.toObject = function(includeInstance, msg) {
  var f, obj = {
    userId: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    approxTime: (f = jspb.Message.getOptionalFloatingPointField(msg, 2)) == null ? undefined : f,
    currency: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f,
    amount: (f = jspb.Message.getField(msg, 4)) == null ? undefined : f,
    location: (f = jspb.Message.getField(msg, 5)) == null ? undefined : f,
    version: (f = jspb.Message.getField(msg, 6)) == null ? undefined : f,
    platform: (f = jspb.Message.getField(msg, 7)) == null ? undefined : f,
    soulEggs: (f = jspb.Message.getOptionalFloatingPointField(msg, 8)) == null ? undefined : f,
    ticketsSpent: (f = jspb.Message.getField(msg, 9)) == null ? undefined : f,
    goldSpent: (f = jspb.Message.getField(msg, 10)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ei.CurrencyFlowLog}
 */
proto.ei.CurrencyFlowLog.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ei.CurrencyFlowLog;
  return proto.ei.CurrencyFlowLog.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ei.CurrencyFlowLog} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ei.CurrencyFlowLog}
 */
proto.ei.CurrencyFlowLog.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setApproxTime(value);
      break;
    case 3:
      var value = /** @type {!proto.ei.RewardType} */ (reader.readEnum());
      msg.setCurrency(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setAmount(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setLocation(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setVersion(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setPlatform(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setSoulEggs(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setTicketsSpent(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setGoldSpent(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ei.CurrencyFlowLog.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ei.CurrencyFlowLog.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ei.CurrencyFlowLog} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.CurrencyFlowLog.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeDouble(
      2,
      f
    );
  }
  f = /** @type {!proto.ei.RewardType} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeEnum(
      3,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeInt64(
      4,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeString(
      5,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeString(
      6,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 7));
  if (f != null) {
    writer.writeString(
      7,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 8));
  if (f != null) {
    writer.writeDouble(
      8,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 9));
  if (f != null) {
    writer.writeUint64(
      9,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 10));
  if (f != null) {
    writer.writeUint64(
      10,
      f
    );
  }
};


/**
 * optional string user_id = 1;
 * @return {string}
 */
proto.ei.CurrencyFlowLog.prototype.getUserId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.ei.CurrencyFlowLog} returns this
 */
proto.ei.CurrencyFlowLog.prototype.setUserId = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.CurrencyFlowLog} returns this
 */
proto.ei.CurrencyFlowLog.prototype.clearUserId = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.CurrencyFlowLog.prototype.hasUserId = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional double approx_time = 2;
 * @return {number}
 */
proto.ei.CurrencyFlowLog.prototype.getApproxTime = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 2, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.ei.CurrencyFlowLog} returns this
 */
proto.ei.CurrencyFlowLog.prototype.setApproxTime = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.CurrencyFlowLog} returns this
 */
proto.ei.CurrencyFlowLog.prototype.clearApproxTime = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.CurrencyFlowLog.prototype.hasApproxTime = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional RewardType currency = 3;
 * @return {!proto.ei.RewardType}
 */
proto.ei.CurrencyFlowLog.prototype.getCurrency = function() {
  return /** @type {!proto.ei.RewardType} */ (jspb.Message.getFieldWithDefault(this, 3, 1));
};


/**
 * @param {!proto.ei.RewardType} value
 * @return {!proto.ei.CurrencyFlowLog} returns this
 */
proto.ei.CurrencyFlowLog.prototype.setCurrency = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.CurrencyFlowLog} returns this
 */
proto.ei.CurrencyFlowLog.prototype.clearCurrency = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.CurrencyFlowLog.prototype.hasCurrency = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional int64 amount = 4;
 * @return {number}
 */
proto.ei.CurrencyFlowLog.prototype.getAmount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.ei.CurrencyFlowLog} returns this
 */
proto.ei.CurrencyFlowLog.prototype.setAmount = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.CurrencyFlowLog} returns this
 */
proto.ei.CurrencyFlowLog.prototype.clearAmount = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.CurrencyFlowLog.prototype.hasAmount = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional string location = 5;
 * @return {string}
 */
proto.ei.CurrencyFlowLog.prototype.getLocation = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.ei.CurrencyFlowLog} returns this
 */
proto.ei.CurrencyFlowLog.prototype.setLocation = function(value) {
  return jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.CurrencyFlowLog} returns this
 */
proto.ei.CurrencyFlowLog.prototype.clearLocation = function() {
  return jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.CurrencyFlowLog.prototype.hasLocation = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional string version = 6;
 * @return {string}
 */
proto.ei.CurrencyFlowLog.prototype.getVersion = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.ei.CurrencyFlowLog} returns this
 */
proto.ei.CurrencyFlowLog.prototype.setVersion = function(value) {
  return jspb.Message.setField(this, 6, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.CurrencyFlowLog} returns this
 */
proto.ei.CurrencyFlowLog.prototype.clearVersion = function() {
  return jspb.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.CurrencyFlowLog.prototype.hasVersion = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional string platform = 7;
 * @return {string}
 */
proto.ei.CurrencyFlowLog.prototype.getPlatform = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.ei.CurrencyFlowLog} returns this
 */
proto.ei.CurrencyFlowLog.prototype.setPlatform = function(value) {
  return jspb.Message.setField(this, 7, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.CurrencyFlowLog} returns this
 */
proto.ei.CurrencyFlowLog.prototype.clearPlatform = function() {
  return jspb.Message.setField(this, 7, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.CurrencyFlowLog.prototype.hasPlatform = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional double soul_eggs = 8;
 * @return {number}
 */
proto.ei.CurrencyFlowLog.prototype.getSoulEggs = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 8, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.ei.CurrencyFlowLog} returns this
 */
proto.ei.CurrencyFlowLog.prototype.setSoulEggs = function(value) {
  return jspb.Message.setField(this, 8, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.CurrencyFlowLog} returns this
 */
proto.ei.CurrencyFlowLog.prototype.clearSoulEggs = function() {
  return jspb.Message.setField(this, 8, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.CurrencyFlowLog.prototype.hasSoulEggs = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional uint64 tickets_spent = 9;
 * @return {number}
 */
proto.ei.CurrencyFlowLog.prototype.getTicketsSpent = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};


/**
 * @param {number} value
 * @return {!proto.ei.CurrencyFlowLog} returns this
 */
proto.ei.CurrencyFlowLog.prototype.setTicketsSpent = function(value) {
  return jspb.Message.setField(this, 9, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.CurrencyFlowLog} returns this
 */
proto.ei.CurrencyFlowLog.prototype.clearTicketsSpent = function() {
  return jspb.Message.setField(this, 9, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.CurrencyFlowLog.prototype.hasTicketsSpent = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional uint64 gold_spent = 10;
 * @return {number}
 */
proto.ei.CurrencyFlowLog.prototype.getGoldSpent = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 10, 0));
};


/**
 * @param {number} value
 * @return {!proto.ei.CurrencyFlowLog} returns this
 */
proto.ei.CurrencyFlowLog.prototype.setGoldSpent = function(value) {
  return jspb.Message.setField(this, 10, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.CurrencyFlowLog} returns this
 */
proto.ei.CurrencyFlowLog.prototype.clearGoldSpent = function() {
  return jspb.Message.setField(this, 10, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.CurrencyFlowLog.prototype.hasGoldSpent = function() {
  return jspb.Message.getField(this, 10) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.ei.CurrencyFlowBatchRequest.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ei.CurrencyFlowBatchRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.ei.CurrencyFlowBatchRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ei.CurrencyFlowBatchRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.CurrencyFlowBatchRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    rinfo: (f = msg.getRinfo()) && proto.ei.BasicRequestInfo.toObject(includeInstance, f),
    logsList: jspb.Message.toObjectList(msg.getLogsList(),
    proto.ei.CurrencyFlowLog.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ei.CurrencyFlowBatchRequest}
 */
proto.ei.CurrencyFlowBatchRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ei.CurrencyFlowBatchRequest;
  return proto.ei.CurrencyFlowBatchRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ei.CurrencyFlowBatchRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ei.CurrencyFlowBatchRequest}
 */
proto.ei.CurrencyFlowBatchRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 2:
      var value = new proto.ei.BasicRequestInfo;
      reader.readMessage(value,proto.ei.BasicRequestInfo.deserializeBinaryFromReader);
      msg.setRinfo(value);
      break;
    case 1:
      var value = new proto.ei.CurrencyFlowLog;
      reader.readMessage(value,proto.ei.CurrencyFlowLog.deserializeBinaryFromReader);
      msg.addLogs(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ei.CurrencyFlowBatchRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ei.CurrencyFlowBatchRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ei.CurrencyFlowBatchRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.CurrencyFlowBatchRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRinfo();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.ei.BasicRequestInfo.serializeBinaryToWriter
    );
  }
  f = message.getLogsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.ei.CurrencyFlowLog.serializeBinaryToWriter
    );
  }
};


/**
 * optional BasicRequestInfo rinfo = 2;
 * @return {?proto.ei.BasicRequestInfo}
 */
proto.ei.CurrencyFlowBatchRequest.prototype.getRinfo = function() {
  return /** @type{?proto.ei.BasicRequestInfo} */ (
    jspb.Message.getWrapperField(this, proto.ei.BasicRequestInfo, 2));
};


/**
 * @param {?proto.ei.BasicRequestInfo|undefined} value
 * @return {!proto.ei.CurrencyFlowBatchRequest} returns this
*/
proto.ei.CurrencyFlowBatchRequest.prototype.setRinfo = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.ei.CurrencyFlowBatchRequest} returns this
 */
proto.ei.CurrencyFlowBatchRequest.prototype.clearRinfo = function() {
  return this.setRinfo(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.CurrencyFlowBatchRequest.prototype.hasRinfo = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * repeated CurrencyFlowLog logs = 1;
 * @return {!Array<!proto.ei.CurrencyFlowLog>}
 */
proto.ei.CurrencyFlowBatchRequest.prototype.getLogsList = function() {
  return /** @type{!Array<!proto.ei.CurrencyFlowLog>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.ei.CurrencyFlowLog, 1));
};


/**
 * @param {!Array<!proto.ei.CurrencyFlowLog>} value
 * @return {!proto.ei.CurrencyFlowBatchRequest} returns this
*/
proto.ei.CurrencyFlowBatchRequest.prototype.setLogsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.ei.CurrencyFlowLog=} opt_value
 * @param {number=} opt_index
 * @return {!proto.ei.CurrencyFlowLog}
 */
proto.ei.CurrencyFlowBatchRequest.prototype.addLogs = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.ei.CurrencyFlowLog, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.ei.CurrencyFlowBatchRequest} returns this
 */
proto.ei.CurrencyFlowBatchRequest.prototype.clearLogsList = function() {
  return this.setLogsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ei.Reward.prototype.toObject = function(opt_includeInstance) {
  return proto.ei.Reward.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ei.Reward} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.Reward.toObject = function(includeInstance, msg) {
  var f, obj = {
    rewardType: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    rewardSubType: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,
    rewardAmount: (f = jspb.Message.getOptionalFloatingPointField(msg, 3)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ei.Reward}
 */
proto.ei.Reward.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ei.Reward;
  return proto.ei.Reward.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ei.Reward} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ei.Reward}
 */
proto.ei.Reward.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.ei.RewardType} */ (reader.readEnum());
      msg.setRewardType(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setRewardSubType(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setRewardAmount(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ei.Reward.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ei.Reward.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ei.Reward} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.Reward.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {!proto.ei.RewardType} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeDouble(
      3,
      f
    );
  }
};


/**
 * optional RewardType reward_type = 1;
 * @return {!proto.ei.RewardType}
 */
proto.ei.Reward.prototype.getRewardType = function() {
  return /** @type {!proto.ei.RewardType} */ (jspb.Message.getFieldWithDefault(this, 1, 1));
};


/**
 * @param {!proto.ei.RewardType} value
 * @return {!proto.ei.Reward} returns this
 */
proto.ei.Reward.prototype.setRewardType = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.Reward} returns this
 */
proto.ei.Reward.prototype.clearRewardType = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.Reward.prototype.hasRewardType = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string reward_sub_type = 2;
 * @return {string}
 */
proto.ei.Reward.prototype.getRewardSubType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.ei.Reward} returns this
 */
proto.ei.Reward.prototype.setRewardSubType = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.Reward} returns this
 */
proto.ei.Reward.prototype.clearRewardSubType = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.Reward.prototype.hasRewardSubType = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional double reward_amount = 3;
 * @return {number}
 */
proto.ei.Reward.prototype.getRewardAmount = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 3, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.ei.Reward} returns this
 */
proto.ei.Reward.prototype.setRewardAmount = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.Reward} returns this
 */
proto.ei.Reward.prototype.clearRewardAmount = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.Reward.prototype.hasRewardAmount = function() {
  return jspb.Message.getField(this, 3) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ei.GameModifier.prototype.toObject = function(opt_includeInstance) {
  return proto.ei.GameModifier.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ei.GameModifier} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.GameModifier.toObject = function(includeInstance, msg) {
  var f, obj = {
    dimension: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    value: (f = jspb.Message.getOptionalFloatingPointField(msg, 2)) == null ? undefined : f,
    description: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ei.GameModifier}
 */
proto.ei.GameModifier.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ei.GameModifier;
  return proto.ei.GameModifier.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ei.GameModifier} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ei.GameModifier}
 */
proto.ei.GameModifier.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.ei.GameModifier.GameDimension} */ (reader.readEnum());
      msg.setDimension(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setValue(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ei.GameModifier.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ei.GameModifier.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ei.GameModifier} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.GameModifier.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {!proto.ei.GameModifier.GameDimension} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeDouble(
      2,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.ei.GameModifier.GameDimension = {
  EARNINGS: 1,
  AWAY_EARNINGS: 2,
  INTERNAL_HATCHERY_RATE: 3,
  EGG_LAYING_RATE: 4,
  SHIPPING_CAPACITY: 5,
  HAB_CAPACITY: 6,
  VEHICLE_COST: 7,
  HAB_COST: 8,
  RESEARCH_COST: 9
};

/**
 * optional GameDimension dimension = 1;
 * @return {!proto.ei.GameModifier.GameDimension}
 */
proto.ei.GameModifier.prototype.getDimension = function() {
  return /** @type {!proto.ei.GameModifier.GameDimension} */ (jspb.Message.getFieldWithDefault(this, 1, 1));
};


/**
 * @param {!proto.ei.GameModifier.GameDimension} value
 * @return {!proto.ei.GameModifier} returns this
 */
proto.ei.GameModifier.prototype.setDimension = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.GameModifier} returns this
 */
proto.ei.GameModifier.prototype.clearDimension = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.GameModifier.prototype.hasDimension = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional double value = 2;
 * @return {number}
 */
proto.ei.GameModifier.prototype.getValue = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 2, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.ei.GameModifier} returns this
 */
proto.ei.GameModifier.prototype.setValue = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.GameModifier} returns this
 */
proto.ei.GameModifier.prototype.clearValue = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.GameModifier.prototype.hasValue = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string description = 3;
 * @return {string}
 */
proto.ei.GameModifier.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.ei.GameModifier} returns this
 */
proto.ei.GameModifier.prototype.setDescription = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.GameModifier} returns this
 */
proto.ei.GameModifier.prototype.clearDescription = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.GameModifier.prototype.hasDescription = function() {
  return jspb.Message.getField(this, 3) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.ei.Contract.repeatedFields_ = [3,16,20,24];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ei.Contract.prototype.toObject = function(opt_includeInstance) {
  return proto.ei.Contract.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ei.Contract} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.Contract.toObject = function(includeInstance, msg) {
  var f, obj = {
    identifier: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    name: (f = jspb.Message.getField(msg, 9)) == null ? undefined : f,
    description: (f = jspb.Message.getField(msg, 10)) == null ? undefined : f,
    egg: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,
    goalsList: jspb.Message.toObjectList(msg.getGoalsList(),
    proto.ei.Contract.Goal.toObject, includeInstance),
    goalSetsList: jspb.Message.toObjectList(msg.getGoalSetsList(),
    proto.ei.Contract.GoalSet.toObject, includeInstance),
    gradeSpecsList: jspb.Message.toObjectList(msg.getGradeSpecsList(),
    proto.ei.Contract.GradeSpec.toObject, includeInstance),
    seasonId: (f = jspb.Message.getField(msg, 23)) == null ? undefined : f,
    coopAllowed: (f = jspb.Message.getBooleanField(msg, 4)) == null ? undefined : f,
    maxCoopSize: (f = jspb.Message.getField(msg, 5)) == null ? undefined : f,
    maxBoosts: (f = jspb.Message.getField(msg, 12)) == null ? undefined : f,
    minutesPerToken: jspb.Message.getFloatingPointFieldWithDefault(msg, 15, 60.0),
    chickenRunCooldownMinutes: jspb.Message.getFloatingPointFieldWithDefault(msg, 18, 180.0),
    startTime: (f = jspb.Message.getOptionalFloatingPointField(msg, 17)) == null ? undefined : f,
    expirationTime: (f = jspb.Message.getOptionalFloatingPointField(msg, 6)) == null ? undefined : f,
    lengthSeconds: (f = jspb.Message.getOptionalFloatingPointField(msg, 7)) == null ? undefined : f,
    maxSoulEggs: (f = jspb.Message.getOptionalFloatingPointField(msg, 13)) == null ? undefined : f,
    minClientVersion: (f = jspb.Message.getField(msg, 14)) == null ? undefined : f,
    leggacy: (f = jspb.Message.getBooleanField(msg, 19)) == null ? undefined : f,
    ccOnly: (f = jspb.Message.getBooleanField(msg, 22)) == null ? undefined : f,
    defaultShellIdsList: (f = jspb.Message.getRepeatedField(msg, 24)) == null ? undefined : f,
    debug: (f = jspb.Message.getBooleanField(msg, 11)) == null ? undefined : f,
    key: (f = jspb.Message.getField(msg, 21)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ei.Contract}
 */
proto.ei.Contract.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ei.Contract;
  return proto.ei.Contract.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ei.Contract} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ei.Contract}
 */
proto.ei.Contract.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setIdentifier(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 2:
      var value = /** @type {!proto.ei.Egg} */ (reader.readEnum());
      msg.setEgg(value);
      break;
    case 3:
      var value = new proto.ei.Contract.Goal;
      reader.readMessage(value,proto.ei.Contract.Goal.deserializeBinaryFromReader);
      msg.addGoals(value);
      break;
    case 16:
      var value = new proto.ei.Contract.GoalSet;
      reader.readMessage(value,proto.ei.Contract.GoalSet.deserializeBinaryFromReader);
      msg.addGoalSets(value);
      break;
    case 20:
      var value = new proto.ei.Contract.GradeSpec;
      reader.readMessage(value,proto.ei.Contract.GradeSpec.deserializeBinaryFromReader);
      msg.addGradeSpecs(value);
      break;
    case 23:
      var value = /** @type {string} */ (reader.readString());
      msg.setSeasonId(value);
      break;
    case 4:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setCoopAllowed(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setMaxCoopSize(value);
      break;
    case 12:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setMaxBoosts(value);
      break;
    case 15:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setMinutesPerToken(value);
      break;
    case 18:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setChickenRunCooldownMinutes(value);
      break;
    case 17:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setStartTime(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setExpirationTime(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setLengthSeconds(value);
      break;
    case 13:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setMaxSoulEggs(value);
      break;
    case 14:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setMinClientVersion(value);
      break;
    case 19:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setLeggacy(value);
      break;
    case 22:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setCcOnly(value);
      break;
    case 24:
      var value = /** @type {string} */ (reader.readString());
      msg.addDefaultShellIds(value);
      break;
    case 11:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setDebug(value);
      break;
    case 21:
      var value = /** @type {string} */ (reader.readString());
      msg.setKey(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ei.Contract.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ei.Contract.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ei.Contract} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.Contract.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 9));
  if (f != null) {
    writer.writeString(
      9,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 10));
  if (f != null) {
    writer.writeString(
      10,
      f
    );
  }
  f = /** @type {!proto.ei.Egg} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeEnum(
      2,
      f
    );
  }
  f = message.getGoalsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      proto.ei.Contract.Goal.serializeBinaryToWriter
    );
  }
  f = message.getGoalSetsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      16,
      f,
      proto.ei.Contract.GoalSet.serializeBinaryToWriter
    );
  }
  f = message.getGradeSpecsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      20,
      f,
      proto.ei.Contract.GradeSpec.serializeBinaryToWriter
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 23));
  if (f != null) {
    writer.writeString(
      23,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeBool(
      4,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeUint32(
      5,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 12));
  if (f != null) {
    writer.writeUint32(
      12,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 15));
  if (f != null) {
    writer.writeDouble(
      15,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 18));
  if (f != null) {
    writer.writeDouble(
      18,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 17));
  if (f != null) {
    writer.writeDouble(
      17,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeDouble(
      6,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 7));
  if (f != null) {
    writer.writeDouble(
      7,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 13));
  if (f != null) {
    writer.writeDouble(
      13,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 14));
  if (f != null) {
    writer.writeUint32(
      14,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 19));
  if (f != null) {
    writer.writeBool(
      19,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 22));
  if (f != null) {
    writer.writeBool(
      22,
      f
    );
  }
  f = message.getDefaultShellIdsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      24,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 11));
  if (f != null) {
    writer.writeBool(
      11,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 21));
  if (f != null) {
    writer.writeString(
      21,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.ei.Contract.PlayerGrade = {
  GRADE_UNSET: 0,
  GRADE_C: 1,
  GRADE_B: 2,
  GRADE_A: 3,
  GRADE_AA: 4,
  GRADE_AAA: 5
};




if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ei.Contract.Goal.prototype.toObject = function(opt_includeInstance) {
  return proto.ei.Contract.Goal.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ei.Contract.Goal} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.Contract.Goal.toObject = function(includeInstance, msg) {
  var f, obj = {
    type: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    targetAmount: (f = jspb.Message.getOptionalFloatingPointField(msg, 2)) == null ? undefined : f,
    rewardType: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f,
    rewardSubType: (f = jspb.Message.getField(msg, 4)) == null ? undefined : f,
    rewardAmount: (f = jspb.Message.getOptionalFloatingPointField(msg, 5)) == null ? undefined : f,
    targetSoulEggs: (f = jspb.Message.getOptionalFloatingPointField(msg, 6)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ei.Contract.Goal}
 */
proto.ei.Contract.Goal.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ei.Contract.Goal;
  return proto.ei.Contract.Goal.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ei.Contract.Goal} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ei.Contract.Goal}
 */
proto.ei.Contract.Goal.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.ei.GoalType} */ (reader.readEnum());
      msg.setType(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setTargetAmount(value);
      break;
    case 3:
      var value = /** @type {!proto.ei.RewardType} */ (reader.readEnum());
      msg.setRewardType(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setRewardSubType(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setRewardAmount(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setTargetSoulEggs(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ei.Contract.Goal.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ei.Contract.Goal.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ei.Contract.Goal} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.Contract.Goal.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {!proto.ei.GoalType} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeDouble(
      2,
      f
    );
  }
  f = /** @type {!proto.ei.RewardType} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeEnum(
      3,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeString(
      4,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeDouble(
      5,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeDouble(
      6,
      f
    );
  }
};


/**
 * optional GoalType type = 1;
 * @return {!proto.ei.GoalType}
 */
proto.ei.Contract.Goal.prototype.getType = function() {
  return /** @type {!proto.ei.GoalType} */ (jspb.Message.getFieldWithDefault(this, 1, 1));
};


/**
 * @param {!proto.ei.GoalType} value
 * @return {!proto.ei.Contract.Goal} returns this
 */
proto.ei.Contract.Goal.prototype.setType = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.Contract.Goal} returns this
 */
proto.ei.Contract.Goal.prototype.clearType = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.Contract.Goal.prototype.hasType = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional double target_amount = 2;
 * @return {number}
 */
proto.ei.Contract.Goal.prototype.getTargetAmount = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 2, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.ei.Contract.Goal} returns this
 */
proto.ei.Contract.Goal.prototype.setTargetAmount = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.Contract.Goal} returns this
 */
proto.ei.Contract.Goal.prototype.clearTargetAmount = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.Contract.Goal.prototype.hasTargetAmount = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional RewardType reward_type = 3;
 * @return {!proto.ei.RewardType}
 */
proto.ei.Contract.Goal.prototype.getRewardType = function() {
  return /** @type {!proto.ei.RewardType} */ (jspb.Message.getFieldWithDefault(this, 3, 1));
};


/**
 * @param {!proto.ei.RewardType} value
 * @return {!proto.ei.Contract.Goal} returns this
 */
proto.ei.Contract.Goal.prototype.setRewardType = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.Contract.Goal} returns this
 */
proto.ei.Contract.Goal.prototype.clearRewardType = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.Contract.Goal.prototype.hasRewardType = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional string reward_sub_type = 4;
 * @return {string}
 */
proto.ei.Contract.Goal.prototype.getRewardSubType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.ei.Contract.Goal} returns this
 */
proto.ei.Contract.Goal.prototype.setRewardSubType = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.Contract.Goal} returns this
 */
proto.ei.Contract.Goal.prototype.clearRewardSubType = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.Contract.Goal.prototype.hasRewardSubType = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional double reward_amount = 5;
 * @return {number}
 */
proto.ei.Contract.Goal.prototype.getRewardAmount = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 5, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.ei.Contract.Goal} returns this
 */
proto.ei.Contract.Goal.prototype.setRewardAmount = function(value) {
  return jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.Contract.Goal} returns this
 */
proto.ei.Contract.Goal.prototype.clearRewardAmount = function() {
  return jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.Contract.Goal.prototype.hasRewardAmount = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional double target_soul_eggs = 6;
 * @return {number}
 */
proto.ei.Contract.Goal.prototype.getTargetSoulEggs = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 6, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.ei.Contract.Goal} returns this
 */
proto.ei.Contract.Goal.prototype.setTargetSoulEggs = function(value) {
  return jspb.Message.setField(this, 6, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.Contract.Goal} returns this
 */
proto.ei.Contract.Goal.prototype.clearTargetSoulEggs = function() {
  return jspb.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.Contract.Goal.prototype.hasTargetSoulEggs = function() {
  return jspb.Message.getField(this, 6) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.ei.Contract.GoalSet.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ei.Contract.GoalSet.prototype.toObject = function(opt_includeInstance) {
  return proto.ei.Contract.GoalSet.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ei.Contract.GoalSet} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.Contract.GoalSet.toObject = function(includeInstance, msg) {
  var f, obj = {
    goalsList: jspb.Message.toObjectList(msg.getGoalsList(),
    proto.ei.Contract.Goal.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ei.Contract.GoalSet}
 */
proto.ei.Contract.GoalSet.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ei.Contract.GoalSet;
  return proto.ei.Contract.GoalSet.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ei.Contract.GoalSet} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ei.Contract.GoalSet}
 */
proto.ei.Contract.GoalSet.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.ei.Contract.Goal;
      reader.readMessage(value,proto.ei.Contract.Goal.deserializeBinaryFromReader);
      msg.addGoals(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ei.Contract.GoalSet.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ei.Contract.GoalSet.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ei.Contract.GoalSet} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.Contract.GoalSet.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getGoalsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.ei.Contract.Goal.serializeBinaryToWriter
    );
  }
};


/**
 * repeated Goal goals = 1;
 * @return {!Array<!proto.ei.Contract.Goal>}
 */
proto.ei.Contract.GoalSet.prototype.getGoalsList = function() {
  return /** @type{!Array<!proto.ei.Contract.Goal>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.ei.Contract.Goal, 1));
};


/**
 * @param {!Array<!proto.ei.Contract.Goal>} value
 * @return {!proto.ei.Contract.GoalSet} returns this
*/
proto.ei.Contract.GoalSet.prototype.setGoalsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.ei.Contract.Goal=} opt_value
 * @param {number=} opt_index
 * @return {!proto.ei.Contract.Goal}
 */
proto.ei.Contract.GoalSet.prototype.addGoals = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.ei.Contract.Goal, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.ei.Contract.GoalSet} returns this
 */
proto.ei.Contract.GoalSet.prototype.clearGoalsList = function() {
  return this.setGoalsList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.ei.Contract.GradeSpec.repeatedFields_ = [2,3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ei.Contract.GradeSpec.prototype.toObject = function(opt_includeInstance) {
  return proto.ei.Contract.GradeSpec.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ei.Contract.GradeSpec} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.Contract.GradeSpec.toObject = function(includeInstance, msg) {
  var f, obj = {
    grade: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    goalsList: jspb.Message.toObjectList(msg.getGoalsList(),
    proto.ei.Contract.Goal.toObject, includeInstance),
    modifiersList: jspb.Message.toObjectList(msg.getModifiersList(),
    proto.ei.GameModifier.toObject, includeInstance),
    lengthSeconds: (f = jspb.Message.getOptionalFloatingPointField(msg, 4)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ei.Contract.GradeSpec}
 */
proto.ei.Contract.GradeSpec.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ei.Contract.GradeSpec;
  return proto.ei.Contract.GradeSpec.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ei.Contract.GradeSpec} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ei.Contract.GradeSpec}
 */
proto.ei.Contract.GradeSpec.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.ei.Contract.PlayerGrade} */ (reader.readEnum());
      msg.setGrade(value);
      break;
    case 2:
      var value = new proto.ei.Contract.Goal;
      reader.readMessage(value,proto.ei.Contract.Goal.deserializeBinaryFromReader);
      msg.addGoals(value);
      break;
    case 3:
      var value = new proto.ei.GameModifier;
      reader.readMessage(value,proto.ei.GameModifier.deserializeBinaryFromReader);
      msg.addModifiers(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setLengthSeconds(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ei.Contract.GradeSpec.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ei.Contract.GradeSpec.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ei.Contract.GradeSpec} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.Contract.GradeSpec.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {!proto.ei.Contract.PlayerGrade} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getGoalsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.ei.Contract.Goal.serializeBinaryToWriter
    );
  }
  f = message.getModifiersList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      proto.ei.GameModifier.serializeBinaryToWriter
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeDouble(
      4,
      f
    );
  }
};


/**
 * optional PlayerGrade grade = 1;
 * @return {!proto.ei.Contract.PlayerGrade}
 */
proto.ei.Contract.GradeSpec.prototype.getGrade = function() {
  return /** @type {!proto.ei.Contract.PlayerGrade} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.ei.Contract.PlayerGrade} value
 * @return {!proto.ei.Contract.GradeSpec} returns this
 */
proto.ei.Contract.GradeSpec.prototype.setGrade = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.Contract.GradeSpec} returns this
 */
proto.ei.Contract.GradeSpec.prototype.clearGrade = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.Contract.GradeSpec.prototype.hasGrade = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * repeated Goal goals = 2;
 * @return {!Array<!proto.ei.Contract.Goal>}
 */
proto.ei.Contract.GradeSpec.prototype.getGoalsList = function() {
  return /** @type{!Array<!proto.ei.Contract.Goal>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.ei.Contract.Goal, 2));
};


/**
 * @param {!Array<!proto.ei.Contract.Goal>} value
 * @return {!proto.ei.Contract.GradeSpec} returns this
*/
proto.ei.Contract.GradeSpec.prototype.setGoalsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.ei.Contract.Goal=} opt_value
 * @param {number=} opt_index
 * @return {!proto.ei.Contract.Goal}
 */
proto.ei.Contract.GradeSpec.prototype.addGoals = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.ei.Contract.Goal, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.ei.Contract.GradeSpec} returns this
 */
proto.ei.Contract.GradeSpec.prototype.clearGoalsList = function() {
  return this.setGoalsList([]);
};


/**
 * repeated GameModifier modifiers = 3;
 * @return {!Array<!proto.ei.GameModifier>}
 */
proto.ei.Contract.GradeSpec.prototype.getModifiersList = function() {
  return /** @type{!Array<!proto.ei.GameModifier>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.ei.GameModifier, 3));
};


/**
 * @param {!Array<!proto.ei.GameModifier>} value
 * @return {!proto.ei.Contract.GradeSpec} returns this
*/
proto.ei.Contract.GradeSpec.prototype.setModifiersList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.ei.GameModifier=} opt_value
 * @param {number=} opt_index
 * @return {!proto.ei.GameModifier}
 */
proto.ei.Contract.GradeSpec.prototype.addModifiers = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.ei.GameModifier, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.ei.Contract.GradeSpec} returns this
 */
proto.ei.Contract.GradeSpec.prototype.clearModifiersList = function() {
  return this.setModifiersList([]);
};


/**
 * optional double length_seconds = 4;
 * @return {number}
 */
proto.ei.Contract.GradeSpec.prototype.getLengthSeconds = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 4, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.ei.Contract.GradeSpec} returns this
 */
proto.ei.Contract.GradeSpec.prototype.setLengthSeconds = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.Contract.GradeSpec} returns this
 */
proto.ei.Contract.GradeSpec.prototype.clearLengthSeconds = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.Contract.GradeSpec.prototype.hasLengthSeconds = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional string identifier = 1;
 * @return {string}
 */
proto.ei.Contract.prototype.getIdentifier = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.ei.Contract} returns this
 */
proto.ei.Contract.prototype.setIdentifier = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.Contract} returns this
 */
proto.ei.Contract.prototype.clearIdentifier = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.Contract.prototype.hasIdentifier = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string name = 9;
 * @return {string}
 */
proto.ei.Contract.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.ei.Contract} returns this
 */
proto.ei.Contract.prototype.setName = function(value) {
  return jspb.Message.setField(this, 9, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.Contract} returns this
 */
proto.ei.Contract.prototype.clearName = function() {
  return jspb.Message.setField(this, 9, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.Contract.prototype.hasName = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional string description = 10;
 * @return {string}
 */
proto.ei.Contract.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/**
 * @param {string} value
 * @return {!proto.ei.Contract} returns this
 */
proto.ei.Contract.prototype.setDescription = function(value) {
  return jspb.Message.setField(this, 10, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.Contract} returns this
 */
proto.ei.Contract.prototype.clearDescription = function() {
  return jspb.Message.setField(this, 10, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.Contract.prototype.hasDescription = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * optional Egg egg = 2;
 * @return {!proto.ei.Egg}
 */
proto.ei.Contract.prototype.getEgg = function() {
  return /** @type {!proto.ei.Egg} */ (jspb.Message.getFieldWithDefault(this, 2, 1));
};


/**
 * @param {!proto.ei.Egg} value
 * @return {!proto.ei.Contract} returns this
 */
proto.ei.Contract.prototype.setEgg = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.Contract} returns this
 */
proto.ei.Contract.prototype.clearEgg = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.Contract.prototype.hasEgg = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * repeated Goal goals = 3;
 * @return {!Array<!proto.ei.Contract.Goal>}
 */
proto.ei.Contract.prototype.getGoalsList = function() {
  return /** @type{!Array<!proto.ei.Contract.Goal>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.ei.Contract.Goal, 3));
};


/**
 * @param {!Array<!proto.ei.Contract.Goal>} value
 * @return {!proto.ei.Contract} returns this
*/
proto.ei.Contract.prototype.setGoalsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.ei.Contract.Goal=} opt_value
 * @param {number=} opt_index
 * @return {!proto.ei.Contract.Goal}
 */
proto.ei.Contract.prototype.addGoals = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.ei.Contract.Goal, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.ei.Contract} returns this
 */
proto.ei.Contract.prototype.clearGoalsList = function() {
  return this.setGoalsList([]);
};


/**
 * repeated GoalSet goal_sets = 16;
 * @return {!Array<!proto.ei.Contract.GoalSet>}
 */
proto.ei.Contract.prototype.getGoalSetsList = function() {
  return /** @type{!Array<!proto.ei.Contract.GoalSet>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.ei.Contract.GoalSet, 16));
};


/**
 * @param {!Array<!proto.ei.Contract.GoalSet>} value
 * @return {!proto.ei.Contract} returns this
*/
proto.ei.Contract.prototype.setGoalSetsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 16, value);
};


/**
 * @param {!proto.ei.Contract.GoalSet=} opt_value
 * @param {number=} opt_index
 * @return {!proto.ei.Contract.GoalSet}
 */
proto.ei.Contract.prototype.addGoalSets = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 16, opt_value, proto.ei.Contract.GoalSet, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.ei.Contract} returns this
 */
proto.ei.Contract.prototype.clearGoalSetsList = function() {
  return this.setGoalSetsList([]);
};


/**
 * repeated GradeSpec grade_specs = 20;
 * @return {!Array<!proto.ei.Contract.GradeSpec>}
 */
proto.ei.Contract.prototype.getGradeSpecsList = function() {
  return /** @type{!Array<!proto.ei.Contract.GradeSpec>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.ei.Contract.GradeSpec, 20));
};


/**
 * @param {!Array<!proto.ei.Contract.GradeSpec>} value
 * @return {!proto.ei.Contract} returns this
*/
proto.ei.Contract.prototype.setGradeSpecsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 20, value);
};


/**
 * @param {!proto.ei.Contract.GradeSpec=} opt_value
 * @param {number=} opt_index
 * @return {!proto.ei.Contract.GradeSpec}
 */
proto.ei.Contract.prototype.addGradeSpecs = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 20, opt_value, proto.ei.Contract.GradeSpec, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.ei.Contract} returns this
 */
proto.ei.Contract.prototype.clearGradeSpecsList = function() {
  return this.setGradeSpecsList([]);
};


/**
 * optional string season_id = 23;
 * @return {string}
 */
proto.ei.Contract.prototype.getSeasonId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 23, ""));
};


/**
 * @param {string} value
 * @return {!proto.ei.Contract} returns this
 */
proto.ei.Contract.prototype.setSeasonId = function(value) {
  return jspb.Message.setField(this, 23, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.Contract} returns this
 */
proto.ei.Contract.prototype.clearSeasonId = function() {
  return jspb.Message.setField(this, 23, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.Contract.prototype.hasSeasonId = function() {
  return jspb.Message.getField(this, 23) != null;
};


/**
 * optional bool coop_allowed = 4;
 * @return {boolean}
 */
proto.ei.Contract.prototype.getCoopAllowed = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 4, false));
};


/**
 * @param {boolean} value
 * @return {!proto.ei.Contract} returns this
 */
proto.ei.Contract.prototype.setCoopAllowed = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.Contract} returns this
 */
proto.ei.Contract.prototype.clearCoopAllowed = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.Contract.prototype.hasCoopAllowed = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional uint32 max_coop_size = 5;
 * @return {number}
 */
proto.ei.Contract.prototype.getMaxCoopSize = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.ei.Contract} returns this
 */
proto.ei.Contract.prototype.setMaxCoopSize = function(value) {
  return jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.Contract} returns this
 */
proto.ei.Contract.prototype.clearMaxCoopSize = function() {
  return jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.Contract.prototype.hasMaxCoopSize = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional uint32 max_boosts = 12;
 * @return {number}
 */
proto.ei.Contract.prototype.getMaxBoosts = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 12, 0));
};


/**
 * @param {number} value
 * @return {!proto.ei.Contract} returns this
 */
proto.ei.Contract.prototype.setMaxBoosts = function(value) {
  return jspb.Message.setField(this, 12, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.Contract} returns this
 */
proto.ei.Contract.prototype.clearMaxBoosts = function() {
  return jspb.Message.setField(this, 12, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.Contract.prototype.hasMaxBoosts = function() {
  return jspb.Message.getField(this, 12) != null;
};


/**
 * optional double minutes_per_token = 15;
 * @return {number}
 */
proto.ei.Contract.prototype.getMinutesPerToken = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 15, 60.0));
};


/**
 * @param {number} value
 * @return {!proto.ei.Contract} returns this
 */
proto.ei.Contract.prototype.setMinutesPerToken = function(value) {
  return jspb.Message.setField(this, 15, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.Contract} returns this
 */
proto.ei.Contract.prototype.clearMinutesPerToken = function() {
  return jspb.Message.setField(this, 15, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.Contract.prototype.hasMinutesPerToken = function() {
  return jspb.Message.getField(this, 15) != null;
};


/**
 * optional double chicken_run_cooldown_minutes = 18;
 * @return {number}
 */
proto.ei.Contract.prototype.getChickenRunCooldownMinutes = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 18, 180.0));
};


/**
 * @param {number} value
 * @return {!proto.ei.Contract} returns this
 */
proto.ei.Contract.prototype.setChickenRunCooldownMinutes = function(value) {
  return jspb.Message.setField(this, 18, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.Contract} returns this
 */
proto.ei.Contract.prototype.clearChickenRunCooldownMinutes = function() {
  return jspb.Message.setField(this, 18, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.Contract.prototype.hasChickenRunCooldownMinutes = function() {
  return jspb.Message.getField(this, 18) != null;
};


/**
 * optional double start_time = 17;
 * @return {number}
 */
proto.ei.Contract.prototype.getStartTime = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 17, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.ei.Contract} returns this
 */
proto.ei.Contract.prototype.setStartTime = function(value) {
  return jspb.Message.setField(this, 17, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.Contract} returns this
 */
proto.ei.Contract.prototype.clearStartTime = function() {
  return jspb.Message.setField(this, 17, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.Contract.prototype.hasStartTime = function() {
  return jspb.Message.getField(this, 17) != null;
};


/**
 * optional double expiration_time = 6;
 * @return {number}
 */
proto.ei.Contract.prototype.getExpirationTime = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 6, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.ei.Contract} returns this
 */
proto.ei.Contract.prototype.setExpirationTime = function(value) {
  return jspb.Message.setField(this, 6, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.Contract} returns this
 */
proto.ei.Contract.prototype.clearExpirationTime = function() {
  return jspb.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.Contract.prototype.hasExpirationTime = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional double length_seconds = 7;
 * @return {number}
 */
proto.ei.Contract.prototype.getLengthSeconds = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 7, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.ei.Contract} returns this
 */
proto.ei.Contract.prototype.setLengthSeconds = function(value) {
  return jspb.Message.setField(this, 7, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.Contract} returns this
 */
proto.ei.Contract.prototype.clearLengthSeconds = function() {
  return jspb.Message.setField(this, 7, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.Contract.prototype.hasLengthSeconds = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional double max_soul_eggs = 13;
 * @return {number}
 */
proto.ei.Contract.prototype.getMaxSoulEggs = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 13, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.ei.Contract} returns this
 */
proto.ei.Contract.prototype.setMaxSoulEggs = function(value) {
  return jspb.Message.setField(this, 13, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.Contract} returns this
 */
proto.ei.Contract.prototype.clearMaxSoulEggs = function() {
  return jspb.Message.setField(this, 13, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.Contract.prototype.hasMaxSoulEggs = function() {
  return jspb.Message.getField(this, 13) != null;
};


/**
 * optional uint32 min_client_version = 14;
 * @return {number}
 */
proto.ei.Contract.prototype.getMinClientVersion = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 14, 0));
};


/**
 * @param {number} value
 * @return {!proto.ei.Contract} returns this
 */
proto.ei.Contract.prototype.setMinClientVersion = function(value) {
  return jspb.Message.setField(this, 14, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.Contract} returns this
 */
proto.ei.Contract.prototype.clearMinClientVersion = function() {
  return jspb.Message.setField(this, 14, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.Contract.prototype.hasMinClientVersion = function() {
  return jspb.Message.getField(this, 14) != null;
};


/**
 * optional bool leggacy = 19;
 * @return {boolean}
 */
proto.ei.Contract.prototype.getLeggacy = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 19, false));
};


/**
 * @param {boolean} value
 * @return {!proto.ei.Contract} returns this
 */
proto.ei.Contract.prototype.setLeggacy = function(value) {
  return jspb.Message.setField(this, 19, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.Contract} returns this
 */
proto.ei.Contract.prototype.clearLeggacy = function() {
  return jspb.Message.setField(this, 19, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.Contract.prototype.hasLeggacy = function() {
  return jspb.Message.getField(this, 19) != null;
};


/**
 * optional bool cc_only = 22;
 * @return {boolean}
 */
proto.ei.Contract.prototype.getCcOnly = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 22, false));
};


/**
 * @param {boolean} value
 * @return {!proto.ei.Contract} returns this
 */
proto.ei.Contract.prototype.setCcOnly = function(value) {
  return jspb.Message.setField(this, 22, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.Contract} returns this
 */
proto.ei.Contract.prototype.clearCcOnly = function() {
  return jspb.Message.setField(this, 22, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.Contract.prototype.hasCcOnly = function() {
  return jspb.Message.getField(this, 22) != null;
};


/**
 * repeated string default_shell_ids = 24;
 * @return {!Array<string>}
 */
proto.ei.Contract.prototype.getDefaultShellIdsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 24));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.ei.Contract} returns this
 */
proto.ei.Contract.prototype.setDefaultShellIdsList = function(value) {
  return jspb.Message.setField(this, 24, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.ei.Contract} returns this
 */
proto.ei.Contract.prototype.addDefaultShellIds = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 24, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.ei.Contract} returns this
 */
proto.ei.Contract.prototype.clearDefaultShellIdsList = function() {
  return this.setDefaultShellIdsList([]);
};


/**
 * optional bool debug = 11;
 * @return {boolean}
 */
proto.ei.Contract.prototype.getDebug = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 11, false));
};


/**
 * @param {boolean} value
 * @return {!proto.ei.Contract} returns this
 */
proto.ei.Contract.prototype.setDebug = function(value) {
  return jspb.Message.setField(this, 11, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.Contract} returns this
 */
proto.ei.Contract.prototype.clearDebug = function() {
  return jspb.Message.setField(this, 11, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.Contract.prototype.hasDebug = function() {
  return jspb.Message.getField(this, 11) != null;
};


/**
 * optional string key = 21;
 * @return {string}
 */
proto.ei.Contract.prototype.getKey = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 21, ""));
};


/**
 * @param {string} value
 * @return {!proto.ei.Contract} returns this
 */
proto.ei.Contract.prototype.setKey = function(value) {
  return jspb.Message.setField(this, 21, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.Contract} returns this
 */
proto.ei.Contract.prototype.clearKey = function() {
  return jspb.Message.setField(this, 21, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.Contract.prototype.hasKey = function() {
  return jspb.Message.getField(this, 21) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.ei.ContractPlayerInfo.repeatedFields_ = [11,6];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ei.ContractPlayerInfo.prototype.toObject = function(opt_includeInstance) {
  return proto.ei.ContractPlayerInfo.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ei.ContractPlayerInfo} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.ContractPlayerInfo.toObject = function(includeInstance, msg) {
  var f, obj = {
    grade: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    totalCxp: (f = jspb.Message.getOptionalFloatingPointField(msg, 2)) == null ? undefined : f,
    seasonCxp: (f = jspb.Message.getOptionalFloatingPointField(msg, 13)) == null ? undefined : f,
    gradeScore: (f = jspb.Message.getOptionalFloatingPointField(msg, 7)) == null ? undefined : f,
    targetGradeScore: (f = jspb.Message.getOptionalFloatingPointField(msg, 9)) == null ? undefined : f,
    soulPower: (f = jspb.Message.getOptionalFloatingPointField(msg, 10)) == null ? undefined : f,
    targetSoulPower: (f = jspb.Message.getOptionalFloatingPointField(msg, 8)) == null ? undefined : f,
    gradeProgress: (f = jspb.Message.getOptionalFloatingPointField(msg, 12)) == null ? undefined : f,
    issuesList: (f = jspb.Message.getRepeatedField(msg, 11)) == null ? undefined : f,
    issueScore: (f = jspb.Message.getOptionalFloatingPointField(msg, 14)) == null ? undefined : f,
    status: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f,
    lastEvaluationTime: (f = jspb.Message.getOptionalFloatingPointField(msg, 4)) == null ? undefined : f,
    lastEvaluationVersion: (f = jspb.Message.getField(msg, 5)) == null ? undefined : f,
    unreadEvaluationsList: jspb.Message.toObjectList(msg.getUnreadEvaluationsList(),
    proto.ei.ContractEvaluation.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ei.ContractPlayerInfo}
 */
proto.ei.ContractPlayerInfo.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ei.ContractPlayerInfo;
  return proto.ei.ContractPlayerInfo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ei.ContractPlayerInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ei.ContractPlayerInfo}
 */
proto.ei.ContractPlayerInfo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.ei.Contract.PlayerGrade} */ (reader.readEnum());
      msg.setGrade(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setTotalCxp(value);
      break;
    case 13:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setSeasonCxp(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setGradeScore(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setTargetGradeScore(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setSoulPower(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setTargetSoulPower(value);
      break;
    case 12:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setGradeProgress(value);
      break;
    case 11:
      var values = /** @type {!Array<!proto.ei.ContractEvaluation.PoorBehavior>} */ (reader.isDelimited() ? reader.readPackedEnum() : [reader.readEnum()]);
      for (var i = 0; i < values.length; i++) {
        msg.addIssues(values[i]);
      }
      break;
    case 14:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setIssueScore(value);
      break;
    case 3:
      var value = /** @type {!proto.ei.ContractPlayerInfo.Status} */ (reader.readEnum());
      msg.setStatus(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setLastEvaluationTime(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setLastEvaluationVersion(value);
      break;
    case 6:
      var value = new proto.ei.ContractEvaluation;
      reader.readMessage(value,proto.ei.ContractEvaluation.deserializeBinaryFromReader);
      msg.addUnreadEvaluations(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ei.ContractPlayerInfo.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ei.ContractPlayerInfo.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ei.ContractPlayerInfo} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.ContractPlayerInfo.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {!proto.ei.Contract.PlayerGrade} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeDouble(
      2,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 13));
  if (f != null) {
    writer.writeDouble(
      13,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 7));
  if (f != null) {
    writer.writeDouble(
      7,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 9));
  if (f != null) {
    writer.writeDouble(
      9,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 10));
  if (f != null) {
    writer.writeDouble(
      10,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 8));
  if (f != null) {
    writer.writeDouble(
      8,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 12));
  if (f != null) {
    writer.writeDouble(
      12,
      f
    );
  }
  f = message.getIssuesList();
  if (f.length > 0) {
    writer.writeRepeatedEnum(
      11,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 14));
  if (f != null) {
    writer.writeDouble(
      14,
      f
    );
  }
  f = /** @type {!proto.ei.ContractPlayerInfo.Status} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeEnum(
      3,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeDouble(
      4,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getUnreadEvaluationsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      6,
      f,
      proto.ei.ContractEvaluation.serializeBinaryToWriter
    );
  }
};


/**
 * @enum {number}
 */
proto.ei.ContractPlayerInfo.Status = {
  UNKNOWN: 0,
  CALCULATING: 1,
  OUT_OF_DATE: 2,
  INCOMPLETE: 4,
  COMPLETE: 3
};

/**
 * optional Contract.PlayerGrade grade = 1;
 * @return {!proto.ei.Contract.PlayerGrade}
 */
proto.ei.ContractPlayerInfo.prototype.getGrade = function() {
  return /** @type {!proto.ei.Contract.PlayerGrade} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.ei.Contract.PlayerGrade} value
 * @return {!proto.ei.ContractPlayerInfo} returns this
 */
proto.ei.ContractPlayerInfo.prototype.setGrade = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.ContractPlayerInfo} returns this
 */
proto.ei.ContractPlayerInfo.prototype.clearGrade = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ContractPlayerInfo.prototype.hasGrade = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional double total_cxp = 2;
 * @return {number}
 */
proto.ei.ContractPlayerInfo.prototype.getTotalCxp = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 2, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.ei.ContractPlayerInfo} returns this
 */
proto.ei.ContractPlayerInfo.prototype.setTotalCxp = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.ContractPlayerInfo} returns this
 */
proto.ei.ContractPlayerInfo.prototype.clearTotalCxp = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ContractPlayerInfo.prototype.hasTotalCxp = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional double season_cxp = 13;
 * @return {number}
 */
proto.ei.ContractPlayerInfo.prototype.getSeasonCxp = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 13, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.ei.ContractPlayerInfo} returns this
 */
proto.ei.ContractPlayerInfo.prototype.setSeasonCxp = function(value) {
  return jspb.Message.setField(this, 13, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.ContractPlayerInfo} returns this
 */
proto.ei.ContractPlayerInfo.prototype.clearSeasonCxp = function() {
  return jspb.Message.setField(this, 13, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ContractPlayerInfo.prototype.hasSeasonCxp = function() {
  return jspb.Message.getField(this, 13) != null;
};


/**
 * optional double grade_score = 7;
 * @return {number}
 */
proto.ei.ContractPlayerInfo.prototype.getGradeScore = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 7, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.ei.ContractPlayerInfo} returns this
 */
proto.ei.ContractPlayerInfo.prototype.setGradeScore = function(value) {
  return jspb.Message.setField(this, 7, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.ContractPlayerInfo} returns this
 */
proto.ei.ContractPlayerInfo.prototype.clearGradeScore = function() {
  return jspb.Message.setField(this, 7, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ContractPlayerInfo.prototype.hasGradeScore = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional double target_grade_score = 9;
 * @return {number}
 */
proto.ei.ContractPlayerInfo.prototype.getTargetGradeScore = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 9, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.ei.ContractPlayerInfo} returns this
 */
proto.ei.ContractPlayerInfo.prototype.setTargetGradeScore = function(value) {
  return jspb.Message.setField(this, 9, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.ContractPlayerInfo} returns this
 */
proto.ei.ContractPlayerInfo.prototype.clearTargetGradeScore = function() {
  return jspb.Message.setField(this, 9, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ContractPlayerInfo.prototype.hasTargetGradeScore = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional double soul_power = 10;
 * @return {number}
 */
proto.ei.ContractPlayerInfo.prototype.getSoulPower = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 10, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.ei.ContractPlayerInfo} returns this
 */
proto.ei.ContractPlayerInfo.prototype.setSoulPower = function(value) {
  return jspb.Message.setField(this, 10, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.ContractPlayerInfo} returns this
 */
proto.ei.ContractPlayerInfo.prototype.clearSoulPower = function() {
  return jspb.Message.setField(this, 10, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ContractPlayerInfo.prototype.hasSoulPower = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * optional double target_soul_power = 8;
 * @return {number}
 */
proto.ei.ContractPlayerInfo.prototype.getTargetSoulPower = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 8, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.ei.ContractPlayerInfo} returns this
 */
proto.ei.ContractPlayerInfo.prototype.setTargetSoulPower = function(value) {
  return jspb.Message.setField(this, 8, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.ContractPlayerInfo} returns this
 */
proto.ei.ContractPlayerInfo.prototype.clearTargetSoulPower = function() {
  return jspb.Message.setField(this, 8, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ContractPlayerInfo.prototype.hasTargetSoulPower = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional double grade_progress = 12;
 * @return {number}
 */
proto.ei.ContractPlayerInfo.prototype.getGradeProgress = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 12, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.ei.ContractPlayerInfo} returns this
 */
proto.ei.ContractPlayerInfo.prototype.setGradeProgress = function(value) {
  return jspb.Message.setField(this, 12, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.ContractPlayerInfo} returns this
 */
proto.ei.ContractPlayerInfo.prototype.clearGradeProgress = function() {
  return jspb.Message.setField(this, 12, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ContractPlayerInfo.prototype.hasGradeProgress = function() {
  return jspb.Message.getField(this, 12) != null;
};


/**
 * repeated ContractEvaluation.PoorBehavior issues = 11;
 * @return {!Array<!proto.ei.ContractEvaluation.PoorBehavior>}
 */
proto.ei.ContractPlayerInfo.prototype.getIssuesList = function() {
  return /** @type {!Array<!proto.ei.ContractEvaluation.PoorBehavior>} */ (jspb.Message.getRepeatedField(this, 11));
};


/**
 * @param {!Array<!proto.ei.ContractEvaluation.PoorBehavior>} value
 * @return {!proto.ei.ContractPlayerInfo} returns this
 */
proto.ei.ContractPlayerInfo.prototype.setIssuesList = function(value) {
  return jspb.Message.setField(this, 11, value || []);
};


/**
 * @param {!proto.ei.ContractEvaluation.PoorBehavior} value
 * @param {number=} opt_index
 * @return {!proto.ei.ContractPlayerInfo} returns this
 */
proto.ei.ContractPlayerInfo.prototype.addIssues = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 11, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.ei.ContractPlayerInfo} returns this
 */
proto.ei.ContractPlayerInfo.prototype.clearIssuesList = function() {
  return this.setIssuesList([]);
};


/**
 * optional double issue_score = 14;
 * @return {number}
 */
proto.ei.ContractPlayerInfo.prototype.getIssueScore = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 14, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.ei.ContractPlayerInfo} returns this
 */
proto.ei.ContractPlayerInfo.prototype.setIssueScore = function(value) {
  return jspb.Message.setField(this, 14, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.ContractPlayerInfo} returns this
 */
proto.ei.ContractPlayerInfo.prototype.clearIssueScore = function() {
  return jspb.Message.setField(this, 14, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ContractPlayerInfo.prototype.hasIssueScore = function() {
  return jspb.Message.getField(this, 14) != null;
};


/**
 * optional Status status = 3;
 * @return {!proto.ei.ContractPlayerInfo.Status}
 */
proto.ei.ContractPlayerInfo.prototype.getStatus = function() {
  return /** @type {!proto.ei.ContractPlayerInfo.Status} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {!proto.ei.ContractPlayerInfo.Status} value
 * @return {!proto.ei.ContractPlayerInfo} returns this
 */
proto.ei.ContractPlayerInfo.prototype.setStatus = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.ContractPlayerInfo} returns this
 */
proto.ei.ContractPlayerInfo.prototype.clearStatus = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ContractPlayerInfo.prototype.hasStatus = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional double last_evaluation_time = 4;
 * @return {number}
 */
proto.ei.ContractPlayerInfo.prototype.getLastEvaluationTime = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 4, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.ei.ContractPlayerInfo} returns this
 */
proto.ei.ContractPlayerInfo.prototype.setLastEvaluationTime = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.ContractPlayerInfo} returns this
 */
proto.ei.ContractPlayerInfo.prototype.clearLastEvaluationTime = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ContractPlayerInfo.prototype.hasLastEvaluationTime = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional string last_evaluation_version = 5;
 * @return {string}
 */
proto.ei.ContractPlayerInfo.prototype.getLastEvaluationVersion = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.ei.ContractPlayerInfo} returns this
 */
proto.ei.ContractPlayerInfo.prototype.setLastEvaluationVersion = function(value) {
  return jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.ContractPlayerInfo} returns this
 */
proto.ei.ContractPlayerInfo.prototype.clearLastEvaluationVersion = function() {
  return jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ContractPlayerInfo.prototype.hasLastEvaluationVersion = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * repeated ContractEvaluation unread_evaluations = 6;
 * @return {!Array<!proto.ei.ContractEvaluation>}
 */
proto.ei.ContractPlayerInfo.prototype.getUnreadEvaluationsList = function() {
  return /** @type{!Array<!proto.ei.ContractEvaluation>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.ei.ContractEvaluation, 6));
};


/**
 * @param {!Array<!proto.ei.ContractEvaluation>} value
 * @return {!proto.ei.ContractPlayerInfo} returns this
*/
proto.ei.ContractPlayerInfo.prototype.setUnreadEvaluationsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 6, value);
};


/**
 * @param {!proto.ei.ContractEvaluation=} opt_value
 * @param {number=} opt_index
 * @return {!proto.ei.ContractEvaluation}
 */
proto.ei.ContractPlayerInfo.prototype.addUnreadEvaluations = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 6, opt_value, proto.ei.ContractEvaluation, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.ei.ContractPlayerInfo} returns this
 */
proto.ei.ContractPlayerInfo.prototype.clearUnreadEvaluationsList = function() {
  return this.setUnreadEvaluationsList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.ei.ContractEvaluation.repeatedFields_ = [19,12];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ei.ContractEvaluation.prototype.toObject = function(opt_includeInstance) {
  return proto.ei.ContractEvaluation.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ei.ContractEvaluation} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.ContractEvaluation.toObject = function(includeInstance, msg) {
  var f, obj = {
    contractIdentifier: (f = jspb.Message.getField(msg, 40)) == null ? undefined : f,
    coopIdentifier: (f = jspb.Message.getField(msg, 41)) == null ? undefined : f,
    cxp: (f = jspb.Message.getOptionalFloatingPointField(msg, 1)) == null ? undefined : f,
    replay: (f = jspb.Message.getBooleanField(msg, 24)) == null ? undefined : f,
    cxpChange: (f = jspb.Message.getOptionalFloatingPointField(msg, 25)) == null ? undefined : f,
    gradePerformance: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,
    oldLeague: (f = jspb.Message.getField(msg, 9)) == null ? undefined : f,
    oldGoals: (f = jspb.Message.getBooleanField(msg, 10)) == null ? undefined : f,
    grade: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f,
    contributionRatio: (f = jspb.Message.getOptionalFloatingPointField(msg, 4)) == null ? undefined : f,
    completionPercent: (f = jspb.Message.getOptionalFloatingPointField(msg, 5)) == null ? undefined : f,
    originalLength: (f = jspb.Message.getOptionalFloatingPointField(msg, 11)) == null ? undefined : f,
    coopSize: (f = jspb.Message.getField(msg, 18)) == null ? undefined : f,
    solo: (f = jspb.Message.getBooleanField(msg, 26)) == null ? undefined : f,
    soulPower: (f = jspb.Message.getOptionalFloatingPointField(msg, 23)) == null ? undefined : f,
    lastContributionTime: (f = jspb.Message.getOptionalFloatingPointField(msg, 22)) == null ? undefined : f,
    completionTime: (f = jspb.Message.getOptionalFloatingPointField(msg, 6)) == null ? undefined : f,
    chickenRunsSent: (f = jspb.Message.getField(msg, 7)) == null ? undefined : f,
    giftTokensSent: (f = jspb.Message.getField(msg, 8)) == null ? undefined : f,
    giftTokensReceived: (f = jspb.Message.getField(msg, 15)) == null ? undefined : f,
    giftTokenValueSent: (f = jspb.Message.getOptionalFloatingPointField(msg, 28)) == null ? undefined : f,
    giftTokenValueReceived: (f = jspb.Message.getOptionalFloatingPointField(msg, 29)) == null ? undefined : f,
    boostTokenAllotment: (f = jspb.Message.getField(msg, 16)) == null ? undefined : f,
    buffTimeValue: (f = jspb.Message.getOptionalFloatingPointField(msg, 17)) == null ? undefined : f,
    teamworkScore: (f = jspb.Message.getOptionalFloatingPointField(msg, 13)) == null ? undefined : f,
    otherBonuses: (f = jspb.Message.getOptionalFloatingPointField(msg, 14)) == null ? undefined : f,
    countedInSeason: (f = jspb.Message.getBooleanField(msg, 20)) == null ? undefined : f,
    seasonId: (f = jspb.Message.getField(msg, 21)) == null ? undefined : f,
    timeCheats: (f = jspb.Message.getField(msg, 27)) == null ? undefined : f,
    issuesList: (f = jspb.Message.getRepeatedField(msg, 19)) == null ? undefined : f,
    notesList: (f = jspb.Message.getRepeatedField(msg, 12)) == null ? undefined : f,
    version: (f = jspb.Message.getField(msg, 50)) == null ? undefined : f,
    evaluationStartTime: (f = jspb.Message.getOptionalFloatingPointField(msg, 51)) == null ? undefined : f,
    status: (f = jspb.Message.getField(msg, 52)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ei.ContractEvaluation}
 */
proto.ei.ContractEvaluation.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ei.ContractEvaluation;
  return proto.ei.ContractEvaluation.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ei.ContractEvaluation} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ei.ContractEvaluation}
 */
proto.ei.ContractEvaluation.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 40:
      var value = /** @type {string} */ (reader.readString());
      msg.setContractIdentifier(value);
      break;
    case 41:
      var value = /** @type {string} */ (reader.readString());
      msg.setCoopIdentifier(value);
      break;
    case 1:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setCxp(value);
      break;
    case 24:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setReplay(value);
      break;
    case 25:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setCxpChange(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setGradePerformance(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setOldLeague(value);
      break;
    case 10:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setOldGoals(value);
      break;
    case 3:
      var value = /** @type {!proto.ei.Contract.PlayerGrade} */ (reader.readEnum());
      msg.setGrade(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setContributionRatio(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setCompletionPercent(value);
      break;
    case 11:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setOriginalLength(value);
      break;
    case 18:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setCoopSize(value);
      break;
    case 26:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setSolo(value);
      break;
    case 23:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setSoulPower(value);
      break;
    case 22:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setLastContributionTime(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setCompletionTime(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setChickenRunsSent(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setGiftTokensSent(value);
      break;
    case 15:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setGiftTokensReceived(value);
      break;
    case 28:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setGiftTokenValueSent(value);
      break;
    case 29:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setGiftTokenValueReceived(value);
      break;
    case 16:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setBoostTokenAllotment(value);
      break;
    case 17:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setBuffTimeValue(value);
      break;
    case 13:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setTeamworkScore(value);
      break;
    case 14:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setOtherBonuses(value);
      break;
    case 20:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setCountedInSeason(value);
      break;
    case 21:
      var value = /** @type {string} */ (reader.readString());
      msg.setSeasonId(value);
      break;
    case 27:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setTimeCheats(value);
      break;
    case 19:
      var values = /** @type {!Array<!proto.ei.ContractEvaluation.PoorBehavior>} */ (reader.isDelimited() ? reader.readPackedEnum() : [reader.readEnum()]);
      for (var i = 0; i < values.length; i++) {
        msg.addIssues(values[i]);
      }
      break;
    case 12:
      var value = /** @type {string} */ (reader.readString());
      msg.addNotes(value);
      break;
    case 50:
      var value = /** @type {string} */ (reader.readString());
      msg.setVersion(value);
      break;
    case 51:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setEvaluationStartTime(value);
      break;
    case 52:
      var value = /** @type {!proto.ei.ContractEvaluation.Status} */ (reader.readEnum());
      msg.setStatus(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ei.ContractEvaluation.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ei.ContractEvaluation.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ei.ContractEvaluation} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.ContractEvaluation.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 40));
  if (f != null) {
    writer.writeString(
      40,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 41));
  if (f != null) {
    writer.writeString(
      41,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeDouble(
      1,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 24));
  if (f != null) {
    writer.writeBool(
      24,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 25));
  if (f != null) {
    writer.writeDouble(
      25,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 9));
  if (f != null) {
    writer.writeInt32(
      9,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 10));
  if (f != null) {
    writer.writeBool(
      10,
      f
    );
  }
  f = /** @type {!proto.ei.Contract.PlayerGrade} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeEnum(
      3,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeDouble(
      4,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeDouble(
      5,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 11));
  if (f != null) {
    writer.writeDouble(
      11,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 18));
  if (f != null) {
    writer.writeUint32(
      18,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 26));
  if (f != null) {
    writer.writeBool(
      26,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 23));
  if (f != null) {
    writer.writeDouble(
      23,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 22));
  if (f != null) {
    writer.writeDouble(
      22,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeDouble(
      6,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 7));
  if (f != null) {
    writer.writeUint32(
      7,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 8));
  if (f != null) {
    writer.writeUint32(
      8,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 15));
  if (f != null) {
    writer.writeUint32(
      15,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 28));
  if (f != null) {
    writer.writeDouble(
      28,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 29));
  if (f != null) {
    writer.writeDouble(
      29,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 16));
  if (f != null) {
    writer.writeUint32(
      16,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 17));
  if (f != null) {
    writer.writeDouble(
      17,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 13));
  if (f != null) {
    writer.writeDouble(
      13,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 14));
  if (f != null) {
    writer.writeDouble(
      14,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 20));
  if (f != null) {
    writer.writeBool(
      20,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 21));
  if (f != null) {
    writer.writeString(
      21,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 27));
  if (f != null) {
    writer.writeUint32(
      27,
      f
    );
  }
  f = message.getIssuesList();
  if (f.length > 0) {
    writer.writeRepeatedEnum(
      19,
      f
    );
  }
  f = message.getNotesList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      12,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 50));
  if (f != null) {
    writer.writeString(
      50,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 51));
  if (f != null) {
    writer.writeDouble(
      51,
      f
    );
  }
  f = /** @type {!proto.ei.ContractEvaluation.Status} */ (jspb.Message.getField(message, 52));
  if (f != null) {
    writer.writeEnum(
      52,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.ei.ContractEvaluation.PoorBehavior = {
  NONE: 0,
  LOW_CONTRIBUTION: 1,
  BAD_CONTRIBUTION: 2,
  DISHONORABLY_DISCHARGED: 3,
  POOR_TEAMWORK: 4,
  ABANDONED_COOP: 5,
  TIME_CHEAT: 6
};

/**
 * @enum {number}
 */
proto.ei.ContractEvaluation.Status = {
  UNKNOWN: 0,
  PENDING: 1,
  EVALUATING: 2,
  COMPLETE: 3
};

/**
 * optional string contract_identifier = 40;
 * @return {string}
 */
proto.ei.ContractEvaluation.prototype.getContractIdentifier = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 40, ""));
};


/**
 * @param {string} value
 * @return {!proto.ei.ContractEvaluation} returns this
 */
proto.ei.ContractEvaluation.prototype.setContractIdentifier = function(value) {
  return jspb.Message.setField(this, 40, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.ContractEvaluation} returns this
 */
proto.ei.ContractEvaluation.prototype.clearContractIdentifier = function() {
  return jspb.Message.setField(this, 40, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ContractEvaluation.prototype.hasContractIdentifier = function() {
  return jspb.Message.getField(this, 40) != null;
};


/**
 * optional string coop_identifier = 41;
 * @return {string}
 */
proto.ei.ContractEvaluation.prototype.getCoopIdentifier = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 41, ""));
};


/**
 * @param {string} value
 * @return {!proto.ei.ContractEvaluation} returns this
 */
proto.ei.ContractEvaluation.prototype.setCoopIdentifier = function(value) {
  return jspb.Message.setField(this, 41, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.ContractEvaluation} returns this
 */
proto.ei.ContractEvaluation.prototype.clearCoopIdentifier = function() {
  return jspb.Message.setField(this, 41, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ContractEvaluation.prototype.hasCoopIdentifier = function() {
  return jspb.Message.getField(this, 41) != null;
};


/**
 * optional double cxp = 1;
 * @return {number}
 */
proto.ei.ContractEvaluation.prototype.getCxp = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 1, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.ei.ContractEvaluation} returns this
 */
proto.ei.ContractEvaluation.prototype.setCxp = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.ContractEvaluation} returns this
 */
proto.ei.ContractEvaluation.prototype.clearCxp = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ContractEvaluation.prototype.hasCxp = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional bool replay = 24;
 * @return {boolean}
 */
proto.ei.ContractEvaluation.prototype.getReplay = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 24, false));
};


/**
 * @param {boolean} value
 * @return {!proto.ei.ContractEvaluation} returns this
 */
proto.ei.ContractEvaluation.prototype.setReplay = function(value) {
  return jspb.Message.setField(this, 24, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.ContractEvaluation} returns this
 */
proto.ei.ContractEvaluation.prototype.clearReplay = function() {
  return jspb.Message.setField(this, 24, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ContractEvaluation.prototype.hasReplay = function() {
  return jspb.Message.getField(this, 24) != null;
};


/**
 * optional double cxp_change = 25;
 * @return {number}
 */
proto.ei.ContractEvaluation.prototype.getCxpChange = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 25, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.ei.ContractEvaluation} returns this
 */
proto.ei.ContractEvaluation.prototype.setCxpChange = function(value) {
  return jspb.Message.setField(this, 25, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.ContractEvaluation} returns this
 */
proto.ei.ContractEvaluation.prototype.clearCxpChange = function() {
  return jspb.Message.setField(this, 25, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ContractEvaluation.prototype.hasCxpChange = function() {
  return jspb.Message.getField(this, 25) != null;
};


/**
 * optional int32 grade_performance = 2;
 * @return {number}
 */
proto.ei.ContractEvaluation.prototype.getGradePerformance = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.ei.ContractEvaluation} returns this
 */
proto.ei.ContractEvaluation.prototype.setGradePerformance = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.ContractEvaluation} returns this
 */
proto.ei.ContractEvaluation.prototype.clearGradePerformance = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ContractEvaluation.prototype.hasGradePerformance = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional int32 old_league = 9;
 * @return {number}
 */
proto.ei.ContractEvaluation.prototype.getOldLeague = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};


/**
 * @param {number} value
 * @return {!proto.ei.ContractEvaluation} returns this
 */
proto.ei.ContractEvaluation.prototype.setOldLeague = function(value) {
  return jspb.Message.setField(this, 9, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.ContractEvaluation} returns this
 */
proto.ei.ContractEvaluation.prototype.clearOldLeague = function() {
  return jspb.Message.setField(this, 9, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ContractEvaluation.prototype.hasOldLeague = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional bool old_goals = 10;
 * @return {boolean}
 */
proto.ei.ContractEvaluation.prototype.getOldGoals = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 10, false));
};


/**
 * @param {boolean} value
 * @return {!proto.ei.ContractEvaluation} returns this
 */
proto.ei.ContractEvaluation.prototype.setOldGoals = function(value) {
  return jspb.Message.setField(this, 10, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.ContractEvaluation} returns this
 */
proto.ei.ContractEvaluation.prototype.clearOldGoals = function() {
  return jspb.Message.setField(this, 10, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ContractEvaluation.prototype.hasOldGoals = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * optional Contract.PlayerGrade grade = 3;
 * @return {!proto.ei.Contract.PlayerGrade}
 */
proto.ei.ContractEvaluation.prototype.getGrade = function() {
  return /** @type {!proto.ei.Contract.PlayerGrade} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {!proto.ei.Contract.PlayerGrade} value
 * @return {!proto.ei.ContractEvaluation} returns this
 */
proto.ei.ContractEvaluation.prototype.setGrade = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.ContractEvaluation} returns this
 */
proto.ei.ContractEvaluation.prototype.clearGrade = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ContractEvaluation.prototype.hasGrade = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional double contribution_ratio = 4;
 * @return {number}
 */
proto.ei.ContractEvaluation.prototype.getContributionRatio = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 4, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.ei.ContractEvaluation} returns this
 */
proto.ei.ContractEvaluation.prototype.setContributionRatio = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.ContractEvaluation} returns this
 */
proto.ei.ContractEvaluation.prototype.clearContributionRatio = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ContractEvaluation.prototype.hasContributionRatio = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional double completion_percent = 5;
 * @return {number}
 */
proto.ei.ContractEvaluation.prototype.getCompletionPercent = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 5, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.ei.ContractEvaluation} returns this
 */
proto.ei.ContractEvaluation.prototype.setCompletionPercent = function(value) {
  return jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.ContractEvaluation} returns this
 */
proto.ei.ContractEvaluation.prototype.clearCompletionPercent = function() {
  return jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ContractEvaluation.prototype.hasCompletionPercent = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional double original_length = 11;
 * @return {number}
 */
proto.ei.ContractEvaluation.prototype.getOriginalLength = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 11, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.ei.ContractEvaluation} returns this
 */
proto.ei.ContractEvaluation.prototype.setOriginalLength = function(value) {
  return jspb.Message.setField(this, 11, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.ContractEvaluation} returns this
 */
proto.ei.ContractEvaluation.prototype.clearOriginalLength = function() {
  return jspb.Message.setField(this, 11, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ContractEvaluation.prototype.hasOriginalLength = function() {
  return jspb.Message.getField(this, 11) != null;
};


/**
 * optional uint32 coop_size = 18;
 * @return {number}
 */
proto.ei.ContractEvaluation.prototype.getCoopSize = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 18, 0));
};


/**
 * @param {number} value
 * @return {!proto.ei.ContractEvaluation} returns this
 */
proto.ei.ContractEvaluation.prototype.setCoopSize = function(value) {
  return jspb.Message.setField(this, 18, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.ContractEvaluation} returns this
 */
proto.ei.ContractEvaluation.prototype.clearCoopSize = function() {
  return jspb.Message.setField(this, 18, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ContractEvaluation.prototype.hasCoopSize = function() {
  return jspb.Message.getField(this, 18) != null;
};


/**
 * optional bool solo = 26;
 * @return {boolean}
 */
proto.ei.ContractEvaluation.prototype.getSolo = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 26, false));
};


/**
 * @param {boolean} value
 * @return {!proto.ei.ContractEvaluation} returns this
 */
proto.ei.ContractEvaluation.prototype.setSolo = function(value) {
  return jspb.Message.setField(this, 26, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.ContractEvaluation} returns this
 */
proto.ei.ContractEvaluation.prototype.clearSolo = function() {
  return jspb.Message.setField(this, 26, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ContractEvaluation.prototype.hasSolo = function() {
  return jspb.Message.getField(this, 26) != null;
};


/**
 * optional double soul_power = 23;
 * @return {number}
 */
proto.ei.ContractEvaluation.prototype.getSoulPower = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 23, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.ei.ContractEvaluation} returns this
 */
proto.ei.ContractEvaluation.prototype.setSoulPower = function(value) {
  return jspb.Message.setField(this, 23, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.ContractEvaluation} returns this
 */
proto.ei.ContractEvaluation.prototype.clearSoulPower = function() {
  return jspb.Message.setField(this, 23, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ContractEvaluation.prototype.hasSoulPower = function() {
  return jspb.Message.getField(this, 23) != null;
};


/**
 * optional double last_contribution_time = 22;
 * @return {number}
 */
proto.ei.ContractEvaluation.prototype.getLastContributionTime = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 22, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.ei.ContractEvaluation} returns this
 */
proto.ei.ContractEvaluation.prototype.setLastContributionTime = function(value) {
  return jspb.Message.setField(this, 22, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.ContractEvaluation} returns this
 */
proto.ei.ContractEvaluation.prototype.clearLastContributionTime = function() {
  return jspb.Message.setField(this, 22, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ContractEvaluation.prototype.hasLastContributionTime = function() {
  return jspb.Message.getField(this, 22) != null;
};


/**
 * optional double completion_time = 6;
 * @return {number}
 */
proto.ei.ContractEvaluation.prototype.getCompletionTime = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 6, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.ei.ContractEvaluation} returns this
 */
proto.ei.ContractEvaluation.prototype.setCompletionTime = function(value) {
  return jspb.Message.setField(this, 6, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.ContractEvaluation} returns this
 */
proto.ei.ContractEvaluation.prototype.clearCompletionTime = function() {
  return jspb.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ContractEvaluation.prototype.hasCompletionTime = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional uint32 chicken_runs_sent = 7;
 * @return {number}
 */
proto.ei.ContractEvaluation.prototype.getChickenRunsSent = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {number} value
 * @return {!proto.ei.ContractEvaluation} returns this
 */
proto.ei.ContractEvaluation.prototype.setChickenRunsSent = function(value) {
  return jspb.Message.setField(this, 7, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.ContractEvaluation} returns this
 */
proto.ei.ContractEvaluation.prototype.clearChickenRunsSent = function() {
  return jspb.Message.setField(this, 7, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ContractEvaluation.prototype.hasChickenRunsSent = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional uint32 gift_tokens_sent = 8;
 * @return {number}
 */
proto.ei.ContractEvaluation.prototype.getGiftTokensSent = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/**
 * @param {number} value
 * @return {!proto.ei.ContractEvaluation} returns this
 */
proto.ei.ContractEvaluation.prototype.setGiftTokensSent = function(value) {
  return jspb.Message.setField(this, 8, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.ContractEvaluation} returns this
 */
proto.ei.ContractEvaluation.prototype.clearGiftTokensSent = function() {
  return jspb.Message.setField(this, 8, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ContractEvaluation.prototype.hasGiftTokensSent = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional uint32 gift_tokens_received = 15;
 * @return {number}
 */
proto.ei.ContractEvaluation.prototype.getGiftTokensReceived = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 15, 0));
};


/**
 * @param {number} value
 * @return {!proto.ei.ContractEvaluation} returns this
 */
proto.ei.ContractEvaluation.prototype.setGiftTokensReceived = function(value) {
  return jspb.Message.setField(this, 15, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.ContractEvaluation} returns this
 */
proto.ei.ContractEvaluation.prototype.clearGiftTokensReceived = function() {
  return jspb.Message.setField(this, 15, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ContractEvaluation.prototype.hasGiftTokensReceived = function() {
  return jspb.Message.getField(this, 15) != null;
};


/**
 * optional double gift_token_value_sent = 28;
 * @return {number}
 */
proto.ei.ContractEvaluation.prototype.getGiftTokenValueSent = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 28, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.ei.ContractEvaluation} returns this
 */
proto.ei.ContractEvaluation.prototype.setGiftTokenValueSent = function(value) {
  return jspb.Message.setField(this, 28, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.ContractEvaluation} returns this
 */
proto.ei.ContractEvaluation.prototype.clearGiftTokenValueSent = function() {
  return jspb.Message.setField(this, 28, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ContractEvaluation.prototype.hasGiftTokenValueSent = function() {
  return jspb.Message.getField(this, 28) != null;
};


/**
 * optional double gift_token_value_received = 29;
 * @return {number}
 */
proto.ei.ContractEvaluation.prototype.getGiftTokenValueReceived = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 29, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.ei.ContractEvaluation} returns this
 */
proto.ei.ContractEvaluation.prototype.setGiftTokenValueReceived = function(value) {
  return jspb.Message.setField(this, 29, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.ContractEvaluation} returns this
 */
proto.ei.ContractEvaluation.prototype.clearGiftTokenValueReceived = function() {
  return jspb.Message.setField(this, 29, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ContractEvaluation.prototype.hasGiftTokenValueReceived = function() {
  return jspb.Message.getField(this, 29) != null;
};


/**
 * optional uint32 boost_token_allotment = 16;
 * @return {number}
 */
proto.ei.ContractEvaluation.prototype.getBoostTokenAllotment = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 16, 0));
};


/**
 * @param {number} value
 * @return {!proto.ei.ContractEvaluation} returns this
 */
proto.ei.ContractEvaluation.prototype.setBoostTokenAllotment = function(value) {
  return jspb.Message.setField(this, 16, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.ContractEvaluation} returns this
 */
proto.ei.ContractEvaluation.prototype.clearBoostTokenAllotment = function() {
  return jspb.Message.setField(this, 16, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ContractEvaluation.prototype.hasBoostTokenAllotment = function() {
  return jspb.Message.getField(this, 16) != null;
};


/**
 * optional double buff_time_value = 17;
 * @return {number}
 */
proto.ei.ContractEvaluation.prototype.getBuffTimeValue = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 17, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.ei.ContractEvaluation} returns this
 */
proto.ei.ContractEvaluation.prototype.setBuffTimeValue = function(value) {
  return jspb.Message.setField(this, 17, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.ContractEvaluation} returns this
 */
proto.ei.ContractEvaluation.prototype.clearBuffTimeValue = function() {
  return jspb.Message.setField(this, 17, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ContractEvaluation.prototype.hasBuffTimeValue = function() {
  return jspb.Message.getField(this, 17) != null;
};


/**
 * optional double teamwork_score = 13;
 * @return {number}
 */
proto.ei.ContractEvaluation.prototype.getTeamworkScore = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 13, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.ei.ContractEvaluation} returns this
 */
proto.ei.ContractEvaluation.prototype.setTeamworkScore = function(value) {
  return jspb.Message.setField(this, 13, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.ContractEvaluation} returns this
 */
proto.ei.ContractEvaluation.prototype.clearTeamworkScore = function() {
  return jspb.Message.setField(this, 13, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ContractEvaluation.prototype.hasTeamworkScore = function() {
  return jspb.Message.getField(this, 13) != null;
};


/**
 * optional double other_bonuses = 14;
 * @return {number}
 */
proto.ei.ContractEvaluation.prototype.getOtherBonuses = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 14, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.ei.ContractEvaluation} returns this
 */
proto.ei.ContractEvaluation.prototype.setOtherBonuses = function(value) {
  return jspb.Message.setField(this, 14, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.ContractEvaluation} returns this
 */
proto.ei.ContractEvaluation.prototype.clearOtherBonuses = function() {
  return jspb.Message.setField(this, 14, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ContractEvaluation.prototype.hasOtherBonuses = function() {
  return jspb.Message.getField(this, 14) != null;
};


/**
 * optional bool counted_in_season = 20;
 * @return {boolean}
 */
proto.ei.ContractEvaluation.prototype.getCountedInSeason = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 20, false));
};


/**
 * @param {boolean} value
 * @return {!proto.ei.ContractEvaluation} returns this
 */
proto.ei.ContractEvaluation.prototype.setCountedInSeason = function(value) {
  return jspb.Message.setField(this, 20, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.ContractEvaluation} returns this
 */
proto.ei.ContractEvaluation.prototype.clearCountedInSeason = function() {
  return jspb.Message.setField(this, 20, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ContractEvaluation.prototype.hasCountedInSeason = function() {
  return jspb.Message.getField(this, 20) != null;
};


/**
 * optional string season_id = 21;
 * @return {string}
 */
proto.ei.ContractEvaluation.prototype.getSeasonId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 21, ""));
};


/**
 * @param {string} value
 * @return {!proto.ei.ContractEvaluation} returns this
 */
proto.ei.ContractEvaluation.prototype.setSeasonId = function(value) {
  return jspb.Message.setField(this, 21, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.ContractEvaluation} returns this
 */
proto.ei.ContractEvaluation.prototype.clearSeasonId = function() {
  return jspb.Message.setField(this, 21, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ContractEvaluation.prototype.hasSeasonId = function() {
  return jspb.Message.getField(this, 21) != null;
};


/**
 * optional uint32 time_cheats = 27;
 * @return {number}
 */
proto.ei.ContractEvaluation.prototype.getTimeCheats = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 27, 0));
};


/**
 * @param {number} value
 * @return {!proto.ei.ContractEvaluation} returns this
 */
proto.ei.ContractEvaluation.prototype.setTimeCheats = function(value) {
  return jspb.Message.setField(this, 27, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.ContractEvaluation} returns this
 */
proto.ei.ContractEvaluation.prototype.clearTimeCheats = function() {
  return jspb.Message.setField(this, 27, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ContractEvaluation.prototype.hasTimeCheats = function() {
  return jspb.Message.getField(this, 27) != null;
};


/**
 * repeated PoorBehavior issues = 19;
 * @return {!Array<!proto.ei.ContractEvaluation.PoorBehavior>}
 */
proto.ei.ContractEvaluation.prototype.getIssuesList = function() {
  return /** @type {!Array<!proto.ei.ContractEvaluation.PoorBehavior>} */ (jspb.Message.getRepeatedField(this, 19));
};


/**
 * @param {!Array<!proto.ei.ContractEvaluation.PoorBehavior>} value
 * @return {!proto.ei.ContractEvaluation} returns this
 */
proto.ei.ContractEvaluation.prototype.setIssuesList = function(value) {
  return jspb.Message.setField(this, 19, value || []);
};


/**
 * @param {!proto.ei.ContractEvaluation.PoorBehavior} value
 * @param {number=} opt_index
 * @return {!proto.ei.ContractEvaluation} returns this
 */
proto.ei.ContractEvaluation.prototype.addIssues = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 19, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.ei.ContractEvaluation} returns this
 */
proto.ei.ContractEvaluation.prototype.clearIssuesList = function() {
  return this.setIssuesList([]);
};


/**
 * repeated string notes = 12;
 * @return {!Array<string>}
 */
proto.ei.ContractEvaluation.prototype.getNotesList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 12));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.ei.ContractEvaluation} returns this
 */
proto.ei.ContractEvaluation.prototype.setNotesList = function(value) {
  return jspb.Message.setField(this, 12, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.ei.ContractEvaluation} returns this
 */
proto.ei.ContractEvaluation.prototype.addNotes = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 12, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.ei.ContractEvaluation} returns this
 */
proto.ei.ContractEvaluation.prototype.clearNotesList = function() {
  return this.setNotesList([]);
};


/**
 * optional string version = 50;
 * @return {string}
 */
proto.ei.ContractEvaluation.prototype.getVersion = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 50, ""));
};


/**
 * @param {string} value
 * @return {!proto.ei.ContractEvaluation} returns this
 */
proto.ei.ContractEvaluation.prototype.setVersion = function(value) {
  return jspb.Message.setField(this, 50, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.ContractEvaluation} returns this
 */
proto.ei.ContractEvaluation.prototype.clearVersion = function() {
  return jspb.Message.setField(this, 50, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ContractEvaluation.prototype.hasVersion = function() {
  return jspb.Message.getField(this, 50) != null;
};


/**
 * optional double evaluation_start_time = 51;
 * @return {number}
 */
proto.ei.ContractEvaluation.prototype.getEvaluationStartTime = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 51, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.ei.ContractEvaluation} returns this
 */
proto.ei.ContractEvaluation.prototype.setEvaluationStartTime = function(value) {
  return jspb.Message.setField(this, 51, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.ContractEvaluation} returns this
 */
proto.ei.ContractEvaluation.prototype.clearEvaluationStartTime = function() {
  return jspb.Message.setField(this, 51, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ContractEvaluation.prototype.hasEvaluationStartTime = function() {
  return jspb.Message.getField(this, 51) != null;
};


/**
 * optional Status status = 52;
 * @return {!proto.ei.ContractEvaluation.Status}
 */
proto.ei.ContractEvaluation.prototype.getStatus = function() {
  return /** @type {!proto.ei.ContractEvaluation.Status} */ (jspb.Message.getFieldWithDefault(this, 52, 0));
};


/**
 * @param {!proto.ei.ContractEvaluation.Status} value
 * @return {!proto.ei.ContractEvaluation} returns this
 */
proto.ei.ContractEvaluation.prototype.setStatus = function(value) {
  return jspb.Message.setField(this, 52, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.ContractEvaluation} returns this
 */
proto.ei.ContractEvaluation.prototype.clearStatus = function() {
  return jspb.Message.setField(this, 52, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ContractEvaluation.prototype.hasStatus = function() {
  return jspb.Message.getField(this, 52) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ei.ContractCitation.prototype.toObject = function(opt_includeInstance) {
  return proto.ei.ContractCitation.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ei.ContractCitation} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.ContractCitation.toObject = function(includeInstance, msg) {
  var f, obj = {
    issue: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    timestamp: (f = jspb.Message.getOptionalFloatingPointField(msg, 2)) == null ? undefined : f,
    grade: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ei.ContractCitation}
 */
proto.ei.ContractCitation.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ei.ContractCitation;
  return proto.ei.ContractCitation.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ei.ContractCitation} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ei.ContractCitation}
 */
proto.ei.ContractCitation.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.ei.ContractEvaluation.PoorBehavior} */ (reader.readEnum());
      msg.setIssue(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setTimestamp(value);
      break;
    case 3:
      var value = /** @type {!proto.ei.Contract.PlayerGrade} */ (reader.readEnum());
      msg.setGrade(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ei.ContractCitation.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ei.ContractCitation.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ei.ContractCitation} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.ContractCitation.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {!proto.ei.ContractEvaluation.PoorBehavior} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeDouble(
      2,
      f
    );
  }
  f = /** @type {!proto.ei.Contract.PlayerGrade} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeEnum(
      3,
      f
    );
  }
};


/**
 * optional ContractEvaluation.PoorBehavior issue = 1;
 * @return {!proto.ei.ContractEvaluation.PoorBehavior}
 */
proto.ei.ContractCitation.prototype.getIssue = function() {
  return /** @type {!proto.ei.ContractEvaluation.PoorBehavior} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.ei.ContractEvaluation.PoorBehavior} value
 * @return {!proto.ei.ContractCitation} returns this
 */
proto.ei.ContractCitation.prototype.setIssue = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.ContractCitation} returns this
 */
proto.ei.ContractCitation.prototype.clearIssue = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ContractCitation.prototype.hasIssue = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional double timestamp = 2;
 * @return {number}
 */
proto.ei.ContractCitation.prototype.getTimestamp = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 2, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.ei.ContractCitation} returns this
 */
proto.ei.ContractCitation.prototype.setTimestamp = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.ContractCitation} returns this
 */
proto.ei.ContractCitation.prototype.clearTimestamp = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ContractCitation.prototype.hasTimestamp = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional Contract.PlayerGrade grade = 3;
 * @return {!proto.ei.Contract.PlayerGrade}
 */
proto.ei.ContractCitation.prototype.getGrade = function() {
  return /** @type {!proto.ei.Contract.PlayerGrade} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {!proto.ei.Contract.PlayerGrade} value
 * @return {!proto.ei.ContractCitation} returns this
 */
proto.ei.ContractCitation.prototype.setGrade = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.ContractCitation} returns this
 */
proto.ei.ContractCitation.prototype.clearGrade = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ContractCitation.prototype.hasGrade = function() {
  return jspb.Message.getField(this, 3) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.ei.ContractEvaluationBatch.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ei.ContractEvaluationBatch.prototype.toObject = function(opt_includeInstance) {
  return proto.ei.ContractEvaluationBatch.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ei.ContractEvaluationBatch} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.ContractEvaluationBatch.toObject = function(includeInstance, msg) {
  var f, obj = {
    evalsList: jspb.Message.toObjectList(msg.getEvalsList(),
    proto.ei.ContractEvaluationBatch.Pair.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ei.ContractEvaluationBatch}
 */
proto.ei.ContractEvaluationBatch.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ei.ContractEvaluationBatch;
  return proto.ei.ContractEvaluationBatch.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ei.ContractEvaluationBatch} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ei.ContractEvaluationBatch}
 */
proto.ei.ContractEvaluationBatch.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.ei.ContractEvaluationBatch.Pair;
      reader.readMessage(value,proto.ei.ContractEvaluationBatch.Pair.deserializeBinaryFromReader);
      msg.addEvals(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ei.ContractEvaluationBatch.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ei.ContractEvaluationBatch.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ei.ContractEvaluationBatch} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.ContractEvaluationBatch.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEvalsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.ei.ContractEvaluationBatch.Pair.serializeBinaryToWriter
    );
  }
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ei.ContractEvaluationBatch.Pair.prototype.toObject = function(opt_includeInstance) {
  return proto.ei.ContractEvaluationBatch.Pair.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ei.ContractEvaluationBatch.Pair} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.ContractEvaluationBatch.Pair.toObject = function(includeInstance, msg) {
  var f, obj = {
    userId: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    cev: (f = msg.getCev()) && proto.ei.ContractEvaluation.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ei.ContractEvaluationBatch.Pair}
 */
proto.ei.ContractEvaluationBatch.Pair.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ei.ContractEvaluationBatch.Pair;
  return proto.ei.ContractEvaluationBatch.Pair.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ei.ContractEvaluationBatch.Pair} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ei.ContractEvaluationBatch.Pair}
 */
proto.ei.ContractEvaluationBatch.Pair.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserId(value);
      break;
    case 2:
      var value = new proto.ei.ContractEvaluation;
      reader.readMessage(value,proto.ei.ContractEvaluation.deserializeBinaryFromReader);
      msg.setCev(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ei.ContractEvaluationBatch.Pair.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ei.ContractEvaluationBatch.Pair.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ei.ContractEvaluationBatch.Pair} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.ContractEvaluationBatch.Pair.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getCev();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.ei.ContractEvaluation.serializeBinaryToWriter
    );
  }
};


/**
 * optional string user_id = 1;
 * @return {string}
 */
proto.ei.ContractEvaluationBatch.Pair.prototype.getUserId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.ei.ContractEvaluationBatch.Pair} returns this
 */
proto.ei.ContractEvaluationBatch.Pair.prototype.setUserId = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.ContractEvaluationBatch.Pair} returns this
 */
proto.ei.ContractEvaluationBatch.Pair.prototype.clearUserId = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ContractEvaluationBatch.Pair.prototype.hasUserId = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional ContractEvaluation cev = 2;
 * @return {?proto.ei.ContractEvaluation}
 */
proto.ei.ContractEvaluationBatch.Pair.prototype.getCev = function() {
  return /** @type{?proto.ei.ContractEvaluation} */ (
    jspb.Message.getWrapperField(this, proto.ei.ContractEvaluation, 2));
};


/**
 * @param {?proto.ei.ContractEvaluation|undefined} value
 * @return {!proto.ei.ContractEvaluationBatch.Pair} returns this
*/
proto.ei.ContractEvaluationBatch.Pair.prototype.setCev = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.ei.ContractEvaluationBatch.Pair} returns this
 */
proto.ei.ContractEvaluationBatch.Pair.prototype.clearCev = function() {
  return this.setCev(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ContractEvaluationBatch.Pair.prototype.hasCev = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * repeated Pair evals = 1;
 * @return {!Array<!proto.ei.ContractEvaluationBatch.Pair>}
 */
proto.ei.ContractEvaluationBatch.prototype.getEvalsList = function() {
  return /** @type{!Array<!proto.ei.ContractEvaluationBatch.Pair>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.ei.ContractEvaluationBatch.Pair, 1));
};


/**
 * @param {!Array<!proto.ei.ContractEvaluationBatch.Pair>} value
 * @return {!proto.ei.ContractEvaluationBatch} returns this
*/
proto.ei.ContractEvaluationBatch.prototype.setEvalsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.ei.ContractEvaluationBatch.Pair=} opt_value
 * @param {number=} opt_index
 * @return {!proto.ei.ContractEvaluationBatch.Pair}
 */
proto.ei.ContractEvaluationBatch.prototype.addEvals = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.ei.ContractEvaluationBatch.Pair, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.ei.ContractEvaluationBatch} returns this
 */
proto.ei.ContractEvaluationBatch.prototype.clearEvalsList = function() {
  return this.setEvalsList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.ei.CoopCompletionSnapshot.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ei.CoopCompletionSnapshot.prototype.toObject = function(opt_includeInstance) {
  return proto.ei.CoopCompletionSnapshot.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ei.CoopCompletionSnapshot} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.CoopCompletionSnapshot.toObject = function(includeInstance, msg) {
  var f, obj = {
    contributorsList: jspb.Message.toObjectList(msg.getContributorsList(),
    proto.ei.CoopCompletionSnapshot.ContributorSnapshot.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ei.CoopCompletionSnapshot}
 */
proto.ei.CoopCompletionSnapshot.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ei.CoopCompletionSnapshot;
  return proto.ei.CoopCompletionSnapshot.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ei.CoopCompletionSnapshot} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ei.CoopCompletionSnapshot}
 */
proto.ei.CoopCompletionSnapshot.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.ei.CoopCompletionSnapshot.ContributorSnapshot;
      reader.readMessage(value,proto.ei.CoopCompletionSnapshot.ContributorSnapshot.deserializeBinaryFromReader);
      msg.addContributors(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ei.CoopCompletionSnapshot.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ei.CoopCompletionSnapshot.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ei.CoopCompletionSnapshot} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.CoopCompletionSnapshot.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getContributorsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.ei.CoopCompletionSnapshot.ContributorSnapshot.serializeBinaryToWriter
    );
  }
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ei.CoopCompletionSnapshot.ContributorSnapshot.prototype.toObject = function(opt_includeInstance) {
  return proto.ei.CoopCompletionSnapshot.ContributorSnapshot.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ei.CoopCompletionSnapshot.ContributorSnapshot} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.CoopCompletionSnapshot.ContributorSnapshot.toObject = function(includeInstance, msg) {
  var f, obj = {
    contribution: (f = jspb.Message.getOptionalFloatingPointField(msg, 1)) == null ? undefined : f,
    lastContributionTime: (f = jspb.Message.getOptionalFloatingPointField(msg, 6)) == null ? undefined : f,
    finalized: (f = jspb.Message.getBooleanField(msg, 7)) == null ? undefined : f,
    soulPower: (f = jspb.Message.getOptionalFloatingPointField(msg, 2)) == null ? undefined : f,
    userId: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f,
    tokens: (f = jspb.Message.getField(msg, 4)) == null ? undefined : f,
    tokensSpent: (f = jspb.Message.getField(msg, 5)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ei.CoopCompletionSnapshot.ContributorSnapshot}
 */
proto.ei.CoopCompletionSnapshot.ContributorSnapshot.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ei.CoopCompletionSnapshot.ContributorSnapshot;
  return proto.ei.CoopCompletionSnapshot.ContributorSnapshot.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ei.CoopCompletionSnapshot.ContributorSnapshot} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ei.CoopCompletionSnapshot.ContributorSnapshot}
 */
proto.ei.CoopCompletionSnapshot.ContributorSnapshot.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setContribution(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setLastContributionTime(value);
      break;
    case 7:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setFinalized(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setSoulPower(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserId(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setTokens(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setTokensSpent(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ei.CoopCompletionSnapshot.ContributorSnapshot.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ei.CoopCompletionSnapshot.ContributorSnapshot.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ei.CoopCompletionSnapshot.ContributorSnapshot} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.CoopCompletionSnapshot.ContributorSnapshot.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {number} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeDouble(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeDouble(
      6,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 7));
  if (f != null) {
    writer.writeBool(
      7,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeDouble(
      2,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeString(
      3,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeUint32(
      4,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeUint32(
      5,
      f
    );
  }
};


/**
 * optional double contribution = 1;
 * @return {number}
 */
proto.ei.CoopCompletionSnapshot.ContributorSnapshot.prototype.getContribution = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 1, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.ei.CoopCompletionSnapshot.ContributorSnapshot} returns this
 */
proto.ei.CoopCompletionSnapshot.ContributorSnapshot.prototype.setContribution = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.CoopCompletionSnapshot.ContributorSnapshot} returns this
 */
proto.ei.CoopCompletionSnapshot.ContributorSnapshot.prototype.clearContribution = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.CoopCompletionSnapshot.ContributorSnapshot.prototype.hasContribution = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional double last_contribution_time = 6;
 * @return {number}
 */
proto.ei.CoopCompletionSnapshot.ContributorSnapshot.prototype.getLastContributionTime = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 6, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.ei.CoopCompletionSnapshot.ContributorSnapshot} returns this
 */
proto.ei.CoopCompletionSnapshot.ContributorSnapshot.prototype.setLastContributionTime = function(value) {
  return jspb.Message.setField(this, 6, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.CoopCompletionSnapshot.ContributorSnapshot} returns this
 */
proto.ei.CoopCompletionSnapshot.ContributorSnapshot.prototype.clearLastContributionTime = function() {
  return jspb.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.CoopCompletionSnapshot.ContributorSnapshot.prototype.hasLastContributionTime = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional bool finalized = 7;
 * @return {boolean}
 */
proto.ei.CoopCompletionSnapshot.ContributorSnapshot.prototype.getFinalized = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 7, false));
};


/**
 * @param {boolean} value
 * @return {!proto.ei.CoopCompletionSnapshot.ContributorSnapshot} returns this
 */
proto.ei.CoopCompletionSnapshot.ContributorSnapshot.prototype.setFinalized = function(value) {
  return jspb.Message.setField(this, 7, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.CoopCompletionSnapshot.ContributorSnapshot} returns this
 */
proto.ei.CoopCompletionSnapshot.ContributorSnapshot.prototype.clearFinalized = function() {
  return jspb.Message.setField(this, 7, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.CoopCompletionSnapshot.ContributorSnapshot.prototype.hasFinalized = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional double soul_power = 2;
 * @return {number}
 */
proto.ei.CoopCompletionSnapshot.ContributorSnapshot.prototype.getSoulPower = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 2, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.ei.CoopCompletionSnapshot.ContributorSnapshot} returns this
 */
proto.ei.CoopCompletionSnapshot.ContributorSnapshot.prototype.setSoulPower = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.CoopCompletionSnapshot.ContributorSnapshot} returns this
 */
proto.ei.CoopCompletionSnapshot.ContributorSnapshot.prototype.clearSoulPower = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.CoopCompletionSnapshot.ContributorSnapshot.prototype.hasSoulPower = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string user_id = 3;
 * @return {string}
 */
proto.ei.CoopCompletionSnapshot.ContributorSnapshot.prototype.getUserId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.ei.CoopCompletionSnapshot.ContributorSnapshot} returns this
 */
proto.ei.CoopCompletionSnapshot.ContributorSnapshot.prototype.setUserId = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.CoopCompletionSnapshot.ContributorSnapshot} returns this
 */
proto.ei.CoopCompletionSnapshot.ContributorSnapshot.prototype.clearUserId = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.CoopCompletionSnapshot.ContributorSnapshot.prototype.hasUserId = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional uint32 tokens = 4;
 * @return {number}
 */
proto.ei.CoopCompletionSnapshot.ContributorSnapshot.prototype.getTokens = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.ei.CoopCompletionSnapshot.ContributorSnapshot} returns this
 */
proto.ei.CoopCompletionSnapshot.ContributorSnapshot.prototype.setTokens = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.CoopCompletionSnapshot.ContributorSnapshot} returns this
 */
proto.ei.CoopCompletionSnapshot.ContributorSnapshot.prototype.clearTokens = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.CoopCompletionSnapshot.ContributorSnapshot.prototype.hasTokens = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional uint32 tokens_spent = 5;
 * @return {number}
 */
proto.ei.CoopCompletionSnapshot.ContributorSnapshot.prototype.getTokensSpent = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.ei.CoopCompletionSnapshot.ContributorSnapshot} returns this
 */
proto.ei.CoopCompletionSnapshot.ContributorSnapshot.prototype.setTokensSpent = function(value) {
  return jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.CoopCompletionSnapshot.ContributorSnapshot} returns this
 */
proto.ei.CoopCompletionSnapshot.ContributorSnapshot.prototype.clearTokensSpent = function() {
  return jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.CoopCompletionSnapshot.ContributorSnapshot.prototype.hasTokensSpent = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * repeated ContributorSnapshot contributors = 1;
 * @return {!Array<!proto.ei.CoopCompletionSnapshot.ContributorSnapshot>}
 */
proto.ei.CoopCompletionSnapshot.prototype.getContributorsList = function() {
  return /** @type{!Array<!proto.ei.CoopCompletionSnapshot.ContributorSnapshot>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.ei.CoopCompletionSnapshot.ContributorSnapshot, 1));
};


/**
 * @param {!Array<!proto.ei.CoopCompletionSnapshot.ContributorSnapshot>} value
 * @return {!proto.ei.CoopCompletionSnapshot} returns this
*/
proto.ei.CoopCompletionSnapshot.prototype.setContributorsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.ei.CoopCompletionSnapshot.ContributorSnapshot=} opt_value
 * @param {number=} opt_index
 * @return {!proto.ei.CoopCompletionSnapshot.ContributorSnapshot}
 */
proto.ei.CoopCompletionSnapshot.prototype.addContributors = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.ei.CoopCompletionSnapshot.ContributorSnapshot, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.ei.CoopCompletionSnapshot} returns this
 */
proto.ei.CoopCompletionSnapshot.prototype.clearContributorsList = function() {
  return this.setContributorsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ei.BasicRequestInfo.prototype.toObject = function(opt_includeInstance) {
  return proto.ei.BasicRequestInfo.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ei.BasicRequestInfo} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.BasicRequestInfo.toObject = function(includeInstance, msg) {
  var f, obj = {
    eiUserId: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    clientVersion: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,
    version: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f,
    build: (f = jspb.Message.getField(msg, 4)) == null ? undefined : f,
    platform: (f = jspb.Message.getField(msg, 5)) == null ? undefined : f,
    country: (f = jspb.Message.getField(msg, 6)) == null ? undefined : f,
    language: (f = jspb.Message.getField(msg, 7)) == null ? undefined : f,
    debug: (f = jspb.Message.getBooleanField(msg, 8)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ei.BasicRequestInfo}
 */
proto.ei.BasicRequestInfo.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ei.BasicRequestInfo;
  return proto.ei.BasicRequestInfo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ei.BasicRequestInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ei.BasicRequestInfo}
 */
proto.ei.BasicRequestInfo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setEiUserId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setClientVersion(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setVersion(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setBuild(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setPlatform(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setCountry(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setLanguage(value);
      break;
    case 8:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setDebug(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ei.BasicRequestInfo.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ei.BasicRequestInfo.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ei.BasicRequestInfo} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.BasicRequestInfo.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeUint32(
      2,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeString(
      3,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeString(
      4,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeString(
      5,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeString(
      6,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 7));
  if (f != null) {
    writer.writeString(
      7,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 8));
  if (f != null) {
    writer.writeBool(
      8,
      f
    );
  }
};


/**
 * optional string ei_user_id = 1;
 * @return {string}
 */
proto.ei.BasicRequestInfo.prototype.getEiUserId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.ei.BasicRequestInfo} returns this
 */
proto.ei.BasicRequestInfo.prototype.setEiUserId = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.BasicRequestInfo} returns this
 */
proto.ei.BasicRequestInfo.prototype.clearEiUserId = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.BasicRequestInfo.prototype.hasEiUserId = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional uint32 client_version = 2;
 * @return {number}
 */
proto.ei.BasicRequestInfo.prototype.getClientVersion = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.ei.BasicRequestInfo} returns this
 */
proto.ei.BasicRequestInfo.prototype.setClientVersion = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.BasicRequestInfo} returns this
 */
proto.ei.BasicRequestInfo.prototype.clearClientVersion = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.BasicRequestInfo.prototype.hasClientVersion = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string version = 3;
 * @return {string}
 */
proto.ei.BasicRequestInfo.prototype.getVersion = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.ei.BasicRequestInfo} returns this
 */
proto.ei.BasicRequestInfo.prototype.setVersion = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.BasicRequestInfo} returns this
 */
proto.ei.BasicRequestInfo.prototype.clearVersion = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.BasicRequestInfo.prototype.hasVersion = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional string build = 4;
 * @return {string}
 */
proto.ei.BasicRequestInfo.prototype.getBuild = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.ei.BasicRequestInfo} returns this
 */
proto.ei.BasicRequestInfo.prototype.setBuild = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.BasicRequestInfo} returns this
 */
proto.ei.BasicRequestInfo.prototype.clearBuild = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.BasicRequestInfo.prototype.hasBuild = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional string platform = 5;
 * @return {string}
 */
proto.ei.BasicRequestInfo.prototype.getPlatform = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.ei.BasicRequestInfo} returns this
 */
proto.ei.BasicRequestInfo.prototype.setPlatform = function(value) {
  return jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.BasicRequestInfo} returns this
 */
proto.ei.BasicRequestInfo.prototype.clearPlatform = function() {
  return jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.BasicRequestInfo.prototype.hasPlatform = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional string country = 6;
 * @return {string}
 */
proto.ei.BasicRequestInfo.prototype.getCountry = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.ei.BasicRequestInfo} returns this
 */
proto.ei.BasicRequestInfo.prototype.setCountry = function(value) {
  return jspb.Message.setField(this, 6, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.BasicRequestInfo} returns this
 */
proto.ei.BasicRequestInfo.prototype.clearCountry = function() {
  return jspb.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.BasicRequestInfo.prototype.hasCountry = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional string language = 7;
 * @return {string}
 */
proto.ei.BasicRequestInfo.prototype.getLanguage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.ei.BasicRequestInfo} returns this
 */
proto.ei.BasicRequestInfo.prototype.setLanguage = function(value) {
  return jspb.Message.setField(this, 7, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.BasicRequestInfo} returns this
 */
proto.ei.BasicRequestInfo.prototype.clearLanguage = function() {
  return jspb.Message.setField(this, 7, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.BasicRequestInfo.prototype.hasLanguage = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional bool debug = 8;
 * @return {boolean}
 */
proto.ei.BasicRequestInfo.prototype.getDebug = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 8, false));
};


/**
 * @param {boolean} value
 * @return {!proto.ei.BasicRequestInfo} returns this
 */
proto.ei.BasicRequestInfo.prototype.setDebug = function(value) {
  return jspb.Message.setField(this, 8, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.BasicRequestInfo} returns this
 */
proto.ei.BasicRequestInfo.prototype.clearDebug = function() {
  return jspb.Message.setField(this, 8, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.BasicRequestInfo.prototype.hasDebug = function() {
  return jspb.Message.getField(this, 8) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.ei.ContractSimConfig.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ei.ContractSimConfig.prototype.toObject = function(opt_includeInstance) {
  return proto.ei.ContractSimConfig.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ei.ContractSimConfig} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.ContractSimConfig.toObject = function(includeInstance, msg) {
  var f, obj = {
    gradeConfigsList: jspb.Message.toObjectList(msg.getGradeConfigsList(),
    proto.ei.ContractSimConfig.ContractGradeSimConfig.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ei.ContractSimConfig}
 */
proto.ei.ContractSimConfig.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ei.ContractSimConfig;
  return proto.ei.ContractSimConfig.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ei.ContractSimConfig} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ei.ContractSimConfig}
 */
proto.ei.ContractSimConfig.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.ei.ContractSimConfig.ContractGradeSimConfig;
      reader.readMessage(value,proto.ei.ContractSimConfig.ContractGradeSimConfig.deserializeBinaryFromReader);
      msg.addGradeConfigs(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ei.ContractSimConfig.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ei.ContractSimConfig.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ei.ContractSimConfig} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.ContractSimConfig.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getGradeConfigsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.ei.ContractSimConfig.ContractGradeSimConfig.serializeBinaryToWriter
    );
  }
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.ei.ContractSimConfig.ContractGradeSimConfig.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ei.ContractSimConfig.ContractGradeSimConfig.prototype.toObject = function(opt_includeInstance) {
  return proto.ei.ContractSimConfig.ContractGradeSimConfig.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ei.ContractSimConfig.ContractGradeSimConfig} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.ContractSimConfig.ContractGradeSimConfig.toObject = function(includeInstance, msg) {
  var f, obj = {
    grade: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    goalParamsList: jspb.Message.toObjectList(msg.getGoalParamsList(),
    proto.ei.ContractSimConfig.ContractGradeSimConfig.GoalParams.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ei.ContractSimConfig.ContractGradeSimConfig}
 */
proto.ei.ContractSimConfig.ContractGradeSimConfig.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ei.ContractSimConfig.ContractGradeSimConfig;
  return proto.ei.ContractSimConfig.ContractGradeSimConfig.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ei.ContractSimConfig.ContractGradeSimConfig} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ei.ContractSimConfig.ContractGradeSimConfig}
 */
proto.ei.ContractSimConfig.ContractGradeSimConfig.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.ei.Contract.PlayerGrade} */ (reader.readEnum());
      msg.setGrade(value);
      break;
    case 2:
      var value = new proto.ei.ContractSimConfig.ContractGradeSimConfig.GoalParams;
      reader.readMessage(value,proto.ei.ContractSimConfig.ContractGradeSimConfig.GoalParams.deserializeBinaryFromReader);
      msg.addGoalParams(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ei.ContractSimConfig.ContractGradeSimConfig.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ei.ContractSimConfig.ContractGradeSimConfig.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ei.ContractSimConfig.ContractGradeSimConfig} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.ContractSimConfig.ContractGradeSimConfig.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {!proto.ei.Contract.PlayerGrade} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getGoalParamsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.ei.ContractSimConfig.ContractGradeSimConfig.GoalParams.serializeBinaryToWriter
    );
  }
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ei.ContractSimConfig.ContractGradeSimConfig.GoalParams.prototype.toObject = function(opt_includeInstance) {
  return proto.ei.ContractSimConfig.ContractGradeSimConfig.GoalParams.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ei.ContractSimConfig.ContractGradeSimConfig.GoalParams} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.ContractSimConfig.ContractGradeSimConfig.GoalParams.toObject = function(includeInstance, msg) {
  var f, obj = {
    targetSe: (f = jspb.Message.getOptionalFloatingPointField(msg, 1)) == null ? undefined : f,
    cpsMult: (f = jspb.Message.getOptionalFloatingPointField(msg, 2)) == null ? undefined : f,
    elrMult: (f = jspb.Message.getOptionalFloatingPointField(msg, 7)) == null ? undefined : f,
    earningsMult: (f = jspb.Message.getOptionalFloatingPointField(msg, 3)) == null ? undefined : f,
    timeEfficacy: (f = jspb.Message.getOptionalFloatingPointField(msg, 4)) == null ? undefined : f,
    habCapacityMult: (f = jspb.Message.getOptionalFloatingPointField(msg, 5)) == null ? undefined : f,
    epicResearchBudget: (f = jspb.Message.getOptionalFloatingPointField(msg, 6)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ei.ContractSimConfig.ContractGradeSimConfig.GoalParams}
 */
proto.ei.ContractSimConfig.ContractGradeSimConfig.GoalParams.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ei.ContractSimConfig.ContractGradeSimConfig.GoalParams;
  return proto.ei.ContractSimConfig.ContractGradeSimConfig.GoalParams.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ei.ContractSimConfig.ContractGradeSimConfig.GoalParams} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ei.ContractSimConfig.ContractGradeSimConfig.GoalParams}
 */
proto.ei.ContractSimConfig.ContractGradeSimConfig.GoalParams.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setTargetSe(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setCpsMult(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setElrMult(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setEarningsMult(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setTimeEfficacy(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setHabCapacityMult(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setEpicResearchBudget(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ei.ContractSimConfig.ContractGradeSimConfig.GoalParams.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ei.ContractSimConfig.ContractGradeSimConfig.GoalParams.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ei.ContractSimConfig.ContractGradeSimConfig.GoalParams} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.ContractSimConfig.ContractGradeSimConfig.GoalParams.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {number} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeDouble(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeDouble(
      2,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 7));
  if (f != null) {
    writer.writeDouble(
      7,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeDouble(
      3,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeDouble(
      4,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeDouble(
      5,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeDouble(
      6,
      f
    );
  }
};


/**
 * optional double target_se = 1;
 * @return {number}
 */
proto.ei.ContractSimConfig.ContractGradeSimConfig.GoalParams.prototype.getTargetSe = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 1, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.ei.ContractSimConfig.ContractGradeSimConfig.GoalParams} returns this
 */
proto.ei.ContractSimConfig.ContractGradeSimConfig.GoalParams.prototype.setTargetSe = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.ContractSimConfig.ContractGradeSimConfig.GoalParams} returns this
 */
proto.ei.ContractSimConfig.ContractGradeSimConfig.GoalParams.prototype.clearTargetSe = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ContractSimConfig.ContractGradeSimConfig.GoalParams.prototype.hasTargetSe = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional double cps_mult = 2;
 * @return {number}
 */
proto.ei.ContractSimConfig.ContractGradeSimConfig.GoalParams.prototype.getCpsMult = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 2, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.ei.ContractSimConfig.ContractGradeSimConfig.GoalParams} returns this
 */
proto.ei.ContractSimConfig.ContractGradeSimConfig.GoalParams.prototype.setCpsMult = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.ContractSimConfig.ContractGradeSimConfig.GoalParams} returns this
 */
proto.ei.ContractSimConfig.ContractGradeSimConfig.GoalParams.prototype.clearCpsMult = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ContractSimConfig.ContractGradeSimConfig.GoalParams.prototype.hasCpsMult = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional double elr_mult = 7;
 * @return {number}
 */
proto.ei.ContractSimConfig.ContractGradeSimConfig.GoalParams.prototype.getElrMult = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 7, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.ei.ContractSimConfig.ContractGradeSimConfig.GoalParams} returns this
 */
proto.ei.ContractSimConfig.ContractGradeSimConfig.GoalParams.prototype.setElrMult = function(value) {
  return jspb.Message.setField(this, 7, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.ContractSimConfig.ContractGradeSimConfig.GoalParams} returns this
 */
proto.ei.ContractSimConfig.ContractGradeSimConfig.GoalParams.prototype.clearElrMult = function() {
  return jspb.Message.setField(this, 7, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ContractSimConfig.ContractGradeSimConfig.GoalParams.prototype.hasElrMult = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional double earnings_mult = 3;
 * @return {number}
 */
proto.ei.ContractSimConfig.ContractGradeSimConfig.GoalParams.prototype.getEarningsMult = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 3, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.ei.ContractSimConfig.ContractGradeSimConfig.GoalParams} returns this
 */
proto.ei.ContractSimConfig.ContractGradeSimConfig.GoalParams.prototype.setEarningsMult = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.ContractSimConfig.ContractGradeSimConfig.GoalParams} returns this
 */
proto.ei.ContractSimConfig.ContractGradeSimConfig.GoalParams.prototype.clearEarningsMult = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ContractSimConfig.ContractGradeSimConfig.GoalParams.prototype.hasEarningsMult = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional double time_efficacy = 4;
 * @return {number}
 */
proto.ei.ContractSimConfig.ContractGradeSimConfig.GoalParams.prototype.getTimeEfficacy = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 4, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.ei.ContractSimConfig.ContractGradeSimConfig.GoalParams} returns this
 */
proto.ei.ContractSimConfig.ContractGradeSimConfig.GoalParams.prototype.setTimeEfficacy = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.ContractSimConfig.ContractGradeSimConfig.GoalParams} returns this
 */
proto.ei.ContractSimConfig.ContractGradeSimConfig.GoalParams.prototype.clearTimeEfficacy = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ContractSimConfig.ContractGradeSimConfig.GoalParams.prototype.hasTimeEfficacy = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional double hab_capacity_mult = 5;
 * @return {number}
 */
proto.ei.ContractSimConfig.ContractGradeSimConfig.GoalParams.prototype.getHabCapacityMult = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 5, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.ei.ContractSimConfig.ContractGradeSimConfig.GoalParams} returns this
 */
proto.ei.ContractSimConfig.ContractGradeSimConfig.GoalParams.prototype.setHabCapacityMult = function(value) {
  return jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.ContractSimConfig.ContractGradeSimConfig.GoalParams} returns this
 */
proto.ei.ContractSimConfig.ContractGradeSimConfig.GoalParams.prototype.clearHabCapacityMult = function() {
  return jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ContractSimConfig.ContractGradeSimConfig.GoalParams.prototype.hasHabCapacityMult = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional double epic_research_budget = 6;
 * @return {number}
 */
proto.ei.ContractSimConfig.ContractGradeSimConfig.GoalParams.prototype.getEpicResearchBudget = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 6, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.ei.ContractSimConfig.ContractGradeSimConfig.GoalParams} returns this
 */
proto.ei.ContractSimConfig.ContractGradeSimConfig.GoalParams.prototype.setEpicResearchBudget = function(value) {
  return jspb.Message.setField(this, 6, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.ContractSimConfig.ContractGradeSimConfig.GoalParams} returns this
 */
proto.ei.ContractSimConfig.ContractGradeSimConfig.GoalParams.prototype.clearEpicResearchBudget = function() {
  return jspb.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ContractSimConfig.ContractGradeSimConfig.GoalParams.prototype.hasEpicResearchBudget = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional Contract.PlayerGrade grade = 1;
 * @return {!proto.ei.Contract.PlayerGrade}
 */
proto.ei.ContractSimConfig.ContractGradeSimConfig.prototype.getGrade = function() {
  return /** @type {!proto.ei.Contract.PlayerGrade} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.ei.Contract.PlayerGrade} value
 * @return {!proto.ei.ContractSimConfig.ContractGradeSimConfig} returns this
 */
proto.ei.ContractSimConfig.ContractGradeSimConfig.prototype.setGrade = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.ContractSimConfig.ContractGradeSimConfig} returns this
 */
proto.ei.ContractSimConfig.ContractGradeSimConfig.prototype.clearGrade = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ContractSimConfig.ContractGradeSimConfig.prototype.hasGrade = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * repeated GoalParams goal_params = 2;
 * @return {!Array<!proto.ei.ContractSimConfig.ContractGradeSimConfig.GoalParams>}
 */
proto.ei.ContractSimConfig.ContractGradeSimConfig.prototype.getGoalParamsList = function() {
  return /** @type{!Array<!proto.ei.ContractSimConfig.ContractGradeSimConfig.GoalParams>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.ei.ContractSimConfig.ContractGradeSimConfig.GoalParams, 2));
};


/**
 * @param {!Array<!proto.ei.ContractSimConfig.ContractGradeSimConfig.GoalParams>} value
 * @return {!proto.ei.ContractSimConfig.ContractGradeSimConfig} returns this
*/
proto.ei.ContractSimConfig.ContractGradeSimConfig.prototype.setGoalParamsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.ei.ContractSimConfig.ContractGradeSimConfig.GoalParams=} opt_value
 * @param {number=} opt_index
 * @return {!proto.ei.ContractSimConfig.ContractGradeSimConfig.GoalParams}
 */
proto.ei.ContractSimConfig.ContractGradeSimConfig.prototype.addGoalParams = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.ei.ContractSimConfig.ContractGradeSimConfig.GoalParams, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.ei.ContractSimConfig.ContractGradeSimConfig} returns this
 */
proto.ei.ContractSimConfig.ContractGradeSimConfig.prototype.clearGoalParamsList = function() {
  return this.setGoalParamsList([]);
};


/**
 * repeated ContractGradeSimConfig grade_configs = 1;
 * @return {!Array<!proto.ei.ContractSimConfig.ContractGradeSimConfig>}
 */
proto.ei.ContractSimConfig.prototype.getGradeConfigsList = function() {
  return /** @type{!Array<!proto.ei.ContractSimConfig.ContractGradeSimConfig>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.ei.ContractSimConfig.ContractGradeSimConfig, 1));
};


/**
 * @param {!Array<!proto.ei.ContractSimConfig.ContractGradeSimConfig>} value
 * @return {!proto.ei.ContractSimConfig} returns this
*/
proto.ei.ContractSimConfig.prototype.setGradeConfigsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.ei.ContractSimConfig.ContractGradeSimConfig=} opt_value
 * @param {number=} opt_index
 * @return {!proto.ei.ContractSimConfig.ContractGradeSimConfig}
 */
proto.ei.ContractSimConfig.prototype.addGradeConfigs = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.ei.ContractSimConfig.ContractGradeSimConfig, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.ei.ContractSimConfig} returns this
 */
proto.ei.ContractSimConfig.prototype.clearGradeConfigsList = function() {
  return this.setGradeConfigsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ei.ContractSimPoll.prototype.toObject = function(opt_includeInstance) {
  return proto.ei.ContractSimPoll.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ei.ContractSimPoll} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.ContractSimPoll.toObject = function(includeInstance, msg) {
  var f, obj = {
    clientVersion: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ei.ContractSimPoll}
 */
proto.ei.ContractSimPoll.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ei.ContractSimPoll;
  return proto.ei.ContractSimPoll.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ei.ContractSimPoll} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ei.ContractSimPoll}
 */
proto.ei.ContractSimPoll.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setClientVersion(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ei.ContractSimPoll.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ei.ContractSimPoll.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ei.ContractSimPoll} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.ContractSimPoll.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {number} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeUint32(
      1,
      f
    );
  }
};


/**
 * optional uint32 client_version = 1;
 * @return {number}
 */
proto.ei.ContractSimPoll.prototype.getClientVersion = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.ei.ContractSimPoll} returns this
 */
proto.ei.ContractSimPoll.prototype.setClientVersion = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.ContractSimPoll} returns this
 */
proto.ei.ContractSimPoll.prototype.clearClientVersion = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ContractSimPoll.prototype.hasClientVersion = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ei.ContractSimPollResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.ei.ContractSimPollResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ei.ContractSimPollResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.ContractSimPollResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    contractToSimulate: (f = msg.getContractToSimulate()) && proto.ei.Contract.toObject(includeInstance, f),
    simConfig: (f = msg.getSimConfig()) && proto.ei.ContractSimConfig.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ei.ContractSimPollResponse}
 */
proto.ei.ContractSimPollResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ei.ContractSimPollResponse;
  return proto.ei.ContractSimPollResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ei.ContractSimPollResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ei.ContractSimPollResponse}
 */
proto.ei.ContractSimPollResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.ei.Contract;
      reader.readMessage(value,proto.ei.Contract.deserializeBinaryFromReader);
      msg.setContractToSimulate(value);
      break;
    case 2:
      var value = new proto.ei.ContractSimConfig;
      reader.readMessage(value,proto.ei.ContractSimConfig.deserializeBinaryFromReader);
      msg.setSimConfig(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ei.ContractSimPollResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ei.ContractSimPollResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ei.ContractSimPollResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.ContractSimPollResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getContractToSimulate();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.ei.Contract.serializeBinaryToWriter
    );
  }
  f = message.getSimConfig();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.ei.ContractSimConfig.serializeBinaryToWriter
    );
  }
};


/**
 * optional Contract contract_to_simulate = 1;
 * @return {?proto.ei.Contract}
 */
proto.ei.ContractSimPollResponse.prototype.getContractToSimulate = function() {
  return /** @type{?proto.ei.Contract} */ (
    jspb.Message.getWrapperField(this, proto.ei.Contract, 1));
};


/**
 * @param {?proto.ei.Contract|undefined} value
 * @return {!proto.ei.ContractSimPollResponse} returns this
*/
proto.ei.ContractSimPollResponse.prototype.setContractToSimulate = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.ei.ContractSimPollResponse} returns this
 */
proto.ei.ContractSimPollResponse.prototype.clearContractToSimulate = function() {
  return this.setContractToSimulate(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ContractSimPollResponse.prototype.hasContractToSimulate = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional ContractSimConfig sim_config = 2;
 * @return {?proto.ei.ContractSimConfig}
 */
proto.ei.ContractSimPollResponse.prototype.getSimConfig = function() {
  return /** @type{?proto.ei.ContractSimConfig} */ (
    jspb.Message.getWrapperField(this, proto.ei.ContractSimConfig, 2));
};


/**
 * @param {?proto.ei.ContractSimConfig|undefined} value
 * @return {!proto.ei.ContractSimPollResponse} returns this
*/
proto.ei.ContractSimPollResponse.prototype.setSimConfig = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.ei.ContractSimPollResponse} returns this
 */
proto.ei.ContractSimPollResponse.prototype.clearSimConfig = function() {
  return this.setSimConfig(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ContractSimPollResponse.prototype.hasSimConfig = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.ei.ContractSimResultUpdate.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ei.ContractSimResultUpdate.prototype.toObject = function(opt_includeInstance) {
  return proto.ei.ContractSimResultUpdate.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ei.ContractSimResultUpdate} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.ContractSimResultUpdate.toObject = function(includeInstance, msg) {
  var f, obj = {
    contractId: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    goalInfosList: jspb.Message.toObjectList(msg.getGoalInfosList(),
    proto.ei.ContractSimResultUpdate.GoalInfo.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ei.ContractSimResultUpdate}
 */
proto.ei.ContractSimResultUpdate.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ei.ContractSimResultUpdate;
  return proto.ei.ContractSimResultUpdate.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ei.ContractSimResultUpdate} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ei.ContractSimResultUpdate}
 */
proto.ei.ContractSimResultUpdate.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setContractId(value);
      break;
    case 2:
      var value = new proto.ei.ContractSimResultUpdate.GoalInfo;
      reader.readMessage(value,proto.ei.ContractSimResultUpdate.GoalInfo.deserializeBinaryFromReader);
      msg.addGoalInfos(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ei.ContractSimResultUpdate.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ei.ContractSimResultUpdate.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ei.ContractSimResultUpdate} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.ContractSimResultUpdate.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getGoalInfosList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.ei.ContractSimResultUpdate.GoalInfo.serializeBinaryToWriter
    );
  }
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ei.ContractSimResultUpdate.GoalInfo.prototype.toObject = function(opt_includeInstance) {
  return proto.ei.ContractSimResultUpdate.GoalInfo.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ei.ContractSimResultUpdate.GoalInfo} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.ContractSimResultUpdate.GoalInfo.toObject = function(includeInstance, msg) {
  var f, obj = {
    grade: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    goalIndex: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,
    projectedEggsLaid: (f = jspb.Message.getOptionalFloatingPointField(msg, 3)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ei.ContractSimResultUpdate.GoalInfo}
 */
proto.ei.ContractSimResultUpdate.GoalInfo.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ei.ContractSimResultUpdate.GoalInfo;
  return proto.ei.ContractSimResultUpdate.GoalInfo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ei.ContractSimResultUpdate.GoalInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ei.ContractSimResultUpdate.GoalInfo}
 */
proto.ei.ContractSimResultUpdate.GoalInfo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.ei.Contract.PlayerGrade} */ (reader.readEnum());
      msg.setGrade(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setGoalIndex(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setProjectedEggsLaid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ei.ContractSimResultUpdate.GoalInfo.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ei.ContractSimResultUpdate.GoalInfo.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ei.ContractSimResultUpdate.GoalInfo} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.ContractSimResultUpdate.GoalInfo.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {!proto.ei.Contract.PlayerGrade} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeUint32(
      2,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeDouble(
      3,
      f
    );
  }
};


/**
 * optional Contract.PlayerGrade grade = 1;
 * @return {!proto.ei.Contract.PlayerGrade}
 */
proto.ei.ContractSimResultUpdate.GoalInfo.prototype.getGrade = function() {
  return /** @type {!proto.ei.Contract.PlayerGrade} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.ei.Contract.PlayerGrade} value
 * @return {!proto.ei.ContractSimResultUpdate.GoalInfo} returns this
 */
proto.ei.ContractSimResultUpdate.GoalInfo.prototype.setGrade = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.ContractSimResultUpdate.GoalInfo} returns this
 */
proto.ei.ContractSimResultUpdate.GoalInfo.prototype.clearGrade = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ContractSimResultUpdate.GoalInfo.prototype.hasGrade = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional uint32 goal_index = 2;
 * @return {number}
 */
proto.ei.ContractSimResultUpdate.GoalInfo.prototype.getGoalIndex = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.ei.ContractSimResultUpdate.GoalInfo} returns this
 */
proto.ei.ContractSimResultUpdate.GoalInfo.prototype.setGoalIndex = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.ContractSimResultUpdate.GoalInfo} returns this
 */
proto.ei.ContractSimResultUpdate.GoalInfo.prototype.clearGoalIndex = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ContractSimResultUpdate.GoalInfo.prototype.hasGoalIndex = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional double projected_eggs_laid = 3;
 * @return {number}
 */
proto.ei.ContractSimResultUpdate.GoalInfo.prototype.getProjectedEggsLaid = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 3, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.ei.ContractSimResultUpdate.GoalInfo} returns this
 */
proto.ei.ContractSimResultUpdate.GoalInfo.prototype.setProjectedEggsLaid = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.ContractSimResultUpdate.GoalInfo} returns this
 */
proto.ei.ContractSimResultUpdate.GoalInfo.prototype.clearProjectedEggsLaid = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ContractSimResultUpdate.GoalInfo.prototype.hasProjectedEggsLaid = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional string contract_id = 1;
 * @return {string}
 */
proto.ei.ContractSimResultUpdate.prototype.getContractId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.ei.ContractSimResultUpdate} returns this
 */
proto.ei.ContractSimResultUpdate.prototype.setContractId = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.ContractSimResultUpdate} returns this
 */
proto.ei.ContractSimResultUpdate.prototype.clearContractId = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ContractSimResultUpdate.prototype.hasContractId = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * repeated GoalInfo goal_infos = 2;
 * @return {!Array<!proto.ei.ContractSimResultUpdate.GoalInfo>}
 */
proto.ei.ContractSimResultUpdate.prototype.getGoalInfosList = function() {
  return /** @type{!Array<!proto.ei.ContractSimResultUpdate.GoalInfo>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.ei.ContractSimResultUpdate.GoalInfo, 2));
};


/**
 * @param {!Array<!proto.ei.ContractSimResultUpdate.GoalInfo>} value
 * @return {!proto.ei.ContractSimResultUpdate} returns this
*/
proto.ei.ContractSimResultUpdate.prototype.setGoalInfosList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.ei.ContractSimResultUpdate.GoalInfo=} opt_value
 * @param {number=} opt_index
 * @return {!proto.ei.ContractSimResultUpdate.GoalInfo}
 */
proto.ei.ContractSimResultUpdate.prototype.addGoalInfos = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.ei.ContractSimResultUpdate.GoalInfo, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.ei.ContractSimResultUpdate} returns this
 */
proto.ei.ContractSimResultUpdate.prototype.clearGoalInfosList = function() {
  return this.setGoalInfosList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ei.ContractsRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.ei.ContractsRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ei.ContractsRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.ContractsRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    soulEggs: (f = jspb.Message.getOptionalFloatingPointField(msg, 1)) == null ? undefined : f,
    clientVersion: (f = jspb.Message.getField(msg, 5)) == null ? undefined : f,
    userId: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ei.ContractsRequest}
 */
proto.ei.ContractsRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ei.ContractsRequest;
  return proto.ei.ContractsRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ei.ContractsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ei.ContractsRequest}
 */
proto.ei.ContractsRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setSoulEggs(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setClientVersion(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ei.ContractsRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ei.ContractsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ei.ContractsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.ContractsRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {number} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeDouble(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeUint32(
      5,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional double soul_eggs = 1;
 * @return {number}
 */
proto.ei.ContractsRequest.prototype.getSoulEggs = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 1, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.ei.ContractsRequest} returns this
 */
proto.ei.ContractsRequest.prototype.setSoulEggs = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.ContractsRequest} returns this
 */
proto.ei.ContractsRequest.prototype.clearSoulEggs = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ContractsRequest.prototype.hasSoulEggs = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional uint32 client_version = 5;
 * @return {number}
 */
proto.ei.ContractsRequest.prototype.getClientVersion = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.ei.ContractsRequest} returns this
 */
proto.ei.ContractsRequest.prototype.setClientVersion = function(value) {
  return jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.ContractsRequest} returns this
 */
proto.ei.ContractsRequest.prototype.clearClientVersion = function() {
  return jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ContractsRequest.prototype.hasClientVersion = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional string user_id = 2;
 * @return {string}
 */
proto.ei.ContractsRequest.prototype.getUserId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.ei.ContractsRequest} returns this
 */
proto.ei.ContractsRequest.prototype.setUserId = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.ContractsRequest} returns this
 */
proto.ei.ContractsRequest.prototype.clearUserId = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ContractsRequest.prototype.hasUserId = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.ei.ContractsResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ei.ContractsResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.ei.ContractsResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ei.ContractsResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.ContractsResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    contractsList: jspb.Message.toObjectList(msg.getContractsList(),
    proto.ei.Contract.toObject, includeInstance),
    warningMessage: (f = jspb.Message.getField(msg, 4)) == null ? undefined : f,
    totalEop: (f = jspb.Message.getOptionalFloatingPointField(msg, 5)) == null ? undefined : f,
    serverTime: (f = jspb.Message.getOptionalFloatingPointField(msg, 2)) == null ? undefined : f,
    maxEop: jspb.Message.getFieldWithDefault(msg, 3, 1000)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ei.ContractsResponse}
 */
proto.ei.ContractsResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ei.ContractsResponse;
  return proto.ei.ContractsResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ei.ContractsResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ei.ContractsResponse}
 */
proto.ei.ContractsResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.ei.Contract;
      reader.readMessage(value,proto.ei.Contract.deserializeBinaryFromReader);
      msg.addContracts(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setWarningMessage(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setTotalEop(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setServerTime(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setMaxEop(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ei.ContractsResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ei.ContractsResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ei.ContractsResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.ContractsResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getContractsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.ei.Contract.serializeBinaryToWriter
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeString(
      4,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeDouble(
      5,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeDouble(
      2,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeUint32(
      3,
      f
    );
  }
};


/**
 * repeated Contract contracts = 1;
 * @return {!Array<!proto.ei.Contract>}
 */
proto.ei.ContractsResponse.prototype.getContractsList = function() {
  return /** @type{!Array<!proto.ei.Contract>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.ei.Contract, 1));
};


/**
 * @param {!Array<!proto.ei.Contract>} value
 * @return {!proto.ei.ContractsResponse} returns this
*/
proto.ei.ContractsResponse.prototype.setContractsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.ei.Contract=} opt_value
 * @param {number=} opt_index
 * @return {!proto.ei.Contract}
 */
proto.ei.ContractsResponse.prototype.addContracts = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.ei.Contract, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.ei.ContractsResponse} returns this
 */
proto.ei.ContractsResponse.prototype.clearContractsList = function() {
  return this.setContractsList([]);
};


/**
 * optional string warning_message = 4;
 * @return {string}
 */
proto.ei.ContractsResponse.prototype.getWarningMessage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.ei.ContractsResponse} returns this
 */
proto.ei.ContractsResponse.prototype.setWarningMessage = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.ContractsResponse} returns this
 */
proto.ei.ContractsResponse.prototype.clearWarningMessage = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ContractsResponse.prototype.hasWarningMessage = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional double total_eop = 5;
 * @return {number}
 */
proto.ei.ContractsResponse.prototype.getTotalEop = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 5, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.ei.ContractsResponse} returns this
 */
proto.ei.ContractsResponse.prototype.setTotalEop = function(value) {
  return jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.ContractsResponse} returns this
 */
proto.ei.ContractsResponse.prototype.clearTotalEop = function() {
  return jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ContractsResponse.prototype.hasTotalEop = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional double server_time = 2;
 * @return {number}
 */
proto.ei.ContractsResponse.prototype.getServerTime = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 2, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.ei.ContractsResponse} returns this
 */
proto.ei.ContractsResponse.prototype.setServerTime = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.ContractsResponse} returns this
 */
proto.ei.ContractsResponse.prototype.clearServerTime = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ContractsResponse.prototype.hasServerTime = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional uint32 max_eop = 3;
 * @return {number}
 */
proto.ei.ContractsResponse.prototype.getMaxEop = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 1000));
};


/**
 * @param {number} value
 * @return {!proto.ei.ContractsResponse} returns this
 */
proto.ei.ContractsResponse.prototype.setMaxEop = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.ContractsResponse} returns this
 */
proto.ei.ContractsResponse.prototype.clearMaxEop = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ContractsResponse.prototype.hasMaxEop = function() {
  return jspb.Message.getField(this, 3) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ei.ContractCoopStatusRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.ei.ContractCoopStatusRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ei.ContractCoopStatusRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.ContractCoopStatusRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    rinfo: (f = msg.getRinfo()) && proto.ei.BasicRequestInfo.toObject(includeInstance, f),
    contractIdentifier: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    coopIdentifier: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,
    userId: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f,
    clientVersion: (f = jspb.Message.getField(msg, 4)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ei.ContractCoopStatusRequest}
 */
proto.ei.ContractCoopStatusRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ei.ContractCoopStatusRequest;
  return proto.ei.ContractCoopStatusRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ei.ContractCoopStatusRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ei.ContractCoopStatusRequest}
 */
proto.ei.ContractCoopStatusRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 5:
      var value = new proto.ei.BasicRequestInfo;
      reader.readMessage(value,proto.ei.BasicRequestInfo.deserializeBinaryFromReader);
      msg.setRinfo(value);
      break;
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setContractIdentifier(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setCoopIdentifier(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserId(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setClientVersion(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ei.ContractCoopStatusRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ei.ContractCoopStatusRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ei.ContractCoopStatusRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.ContractCoopStatusRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRinfo();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.ei.BasicRequestInfo.serializeBinaryToWriter
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeString(
      3,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeUint32(
      4,
      f
    );
  }
};


/**
 * optional BasicRequestInfo rinfo = 5;
 * @return {?proto.ei.BasicRequestInfo}
 */
proto.ei.ContractCoopStatusRequest.prototype.getRinfo = function() {
  return /** @type{?proto.ei.BasicRequestInfo} */ (
    jspb.Message.getWrapperField(this, proto.ei.BasicRequestInfo, 5));
};


/**
 * @param {?proto.ei.BasicRequestInfo|undefined} value
 * @return {!proto.ei.ContractCoopStatusRequest} returns this
*/
proto.ei.ContractCoopStatusRequest.prototype.setRinfo = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.ei.ContractCoopStatusRequest} returns this
 */
proto.ei.ContractCoopStatusRequest.prototype.clearRinfo = function() {
  return this.setRinfo(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ContractCoopStatusRequest.prototype.hasRinfo = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional string contract_identifier = 1;
 * @return {string}
 */
proto.ei.ContractCoopStatusRequest.prototype.getContractIdentifier = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.ei.ContractCoopStatusRequest} returns this
 */
proto.ei.ContractCoopStatusRequest.prototype.setContractIdentifier = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.ContractCoopStatusRequest} returns this
 */
proto.ei.ContractCoopStatusRequest.prototype.clearContractIdentifier = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ContractCoopStatusRequest.prototype.hasContractIdentifier = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string coop_identifier = 2;
 * @return {string}
 */
proto.ei.ContractCoopStatusRequest.prototype.getCoopIdentifier = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.ei.ContractCoopStatusRequest} returns this
 */
proto.ei.ContractCoopStatusRequest.prototype.setCoopIdentifier = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.ContractCoopStatusRequest} returns this
 */
proto.ei.ContractCoopStatusRequest.prototype.clearCoopIdentifier = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ContractCoopStatusRequest.prototype.hasCoopIdentifier = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string user_id = 3;
 * @return {string}
 */
proto.ei.ContractCoopStatusRequest.prototype.getUserId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.ei.ContractCoopStatusRequest} returns this
 */
proto.ei.ContractCoopStatusRequest.prototype.setUserId = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.ContractCoopStatusRequest} returns this
 */
proto.ei.ContractCoopStatusRequest.prototype.clearUserId = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ContractCoopStatusRequest.prototype.hasUserId = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional uint32 client_version = 4;
 * @return {number}
 */
proto.ei.ContractCoopStatusRequest.prototype.getClientVersion = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.ei.ContractCoopStatusRequest} returns this
 */
proto.ei.ContractCoopStatusRequest.prototype.setClientVersion = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.ContractCoopStatusRequest} returns this
 */
proto.ei.ContractCoopStatusRequest.prototype.clearClientVersion = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ContractCoopStatusRequest.prototype.hasClientVersion = function() {
  return jspb.Message.getField(this, 4) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ei.FarmProductionParams.prototype.toObject = function(opt_includeInstance) {
  return proto.ei.FarmProductionParams.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ei.FarmProductionParams} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.FarmProductionParams.toObject = function(includeInstance, msg) {
  var f, obj = {
    farmPopulation: (f = jspb.Message.getOptionalFloatingPointField(msg, 1)) == null ? undefined : f,
    farmCapacity: (f = jspb.Message.getOptionalFloatingPointField(msg, 2)) == null ? undefined : f,
    elr: (f = jspb.Message.getOptionalFloatingPointField(msg, 3)) == null ? undefined : f,
    ihr: (f = jspb.Message.getOptionalFloatingPointField(msg, 4)) == null ? undefined : f,
    sr: (f = jspb.Message.getOptionalFloatingPointField(msg, 5)) == null ? undefined : f,
    delivered: (f = jspb.Message.getOptionalFloatingPointField(msg, 6)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ei.FarmProductionParams}
 */
proto.ei.FarmProductionParams.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ei.FarmProductionParams;
  return proto.ei.FarmProductionParams.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ei.FarmProductionParams} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ei.FarmProductionParams}
 */
proto.ei.FarmProductionParams.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setFarmPopulation(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setFarmCapacity(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setElr(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setIhr(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setSr(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setDelivered(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ei.FarmProductionParams.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ei.FarmProductionParams.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ei.FarmProductionParams} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.FarmProductionParams.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {number} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeDouble(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeDouble(
      2,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeDouble(
      3,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeDouble(
      4,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeDouble(
      5,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeDouble(
      6,
      f
    );
  }
};


/**
 * optional double farm_population = 1;
 * @return {number}
 */
proto.ei.FarmProductionParams.prototype.getFarmPopulation = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 1, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.ei.FarmProductionParams} returns this
 */
proto.ei.FarmProductionParams.prototype.setFarmPopulation = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.FarmProductionParams} returns this
 */
proto.ei.FarmProductionParams.prototype.clearFarmPopulation = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.FarmProductionParams.prototype.hasFarmPopulation = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional double farm_capacity = 2;
 * @return {number}
 */
proto.ei.FarmProductionParams.prototype.getFarmCapacity = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 2, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.ei.FarmProductionParams} returns this
 */
proto.ei.FarmProductionParams.prototype.setFarmCapacity = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.FarmProductionParams} returns this
 */
proto.ei.FarmProductionParams.prototype.clearFarmCapacity = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.FarmProductionParams.prototype.hasFarmCapacity = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional double elr = 3;
 * @return {number}
 */
proto.ei.FarmProductionParams.prototype.getElr = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 3, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.ei.FarmProductionParams} returns this
 */
proto.ei.FarmProductionParams.prototype.setElr = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.FarmProductionParams} returns this
 */
proto.ei.FarmProductionParams.prototype.clearElr = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.FarmProductionParams.prototype.hasElr = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional double ihr = 4;
 * @return {number}
 */
proto.ei.FarmProductionParams.prototype.getIhr = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 4, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.ei.FarmProductionParams} returns this
 */
proto.ei.FarmProductionParams.prototype.setIhr = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.FarmProductionParams} returns this
 */
proto.ei.FarmProductionParams.prototype.clearIhr = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.FarmProductionParams.prototype.hasIhr = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional double sr = 5;
 * @return {number}
 */
proto.ei.FarmProductionParams.prototype.getSr = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 5, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.ei.FarmProductionParams} returns this
 */
proto.ei.FarmProductionParams.prototype.setSr = function(value) {
  return jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.FarmProductionParams} returns this
 */
proto.ei.FarmProductionParams.prototype.clearSr = function() {
  return jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.FarmProductionParams.prototype.hasSr = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional double delivered = 6;
 * @return {number}
 */
proto.ei.FarmProductionParams.prototype.getDelivered = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 6, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.ei.FarmProductionParams} returns this
 */
proto.ei.FarmProductionParams.prototype.setDelivered = function(value) {
  return jspb.Message.setField(this, 6, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.FarmProductionParams} returns this
 */
proto.ei.FarmProductionParams.prototype.clearDelivered = function() {
  return jspb.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.FarmProductionParams.prototype.hasDelivered = function() {
  return jspb.Message.getField(this, 6) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.ei.PlayerFarmInfo.repeatedFields_ = [5,6,9,10,21,11,12,14,15,17];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ei.PlayerFarmInfo.prototype.toObject = function(opt_includeInstance) {
  return proto.ei.PlayerFarmInfo.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ei.PlayerFarmInfo} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.PlayerFarmInfo.toObject = function(includeInstance, msg) {
  var f, obj = {
    clientVersion: (f = jspb.Message.getField(msg, 20)) == null ? undefined : f,
    soulEggs: (f = jspb.Message.getOptionalFloatingPointField(msg, 1)) == null ? undefined : f,
    eggsOfProphecy: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,
    permitLevel: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f,
    hyperloopStation: (f = jspb.Message.getBooleanField(msg, 4)) == null ? undefined : f,
    eggMedalLevelList: (f = jspb.Message.getRepeatedField(msg, 5)) == null ? undefined : f,
    epicResearchList: jspb.Message.toObjectList(msg.getEpicResearchList(),
    proto.ei.Backup.ResearchItem.toObject, includeInstance),
    eggType: (f = jspb.Message.getField(msg, 7)) == null ? undefined : f,
    cashOnHand: (f = jspb.Message.getOptionalFloatingPointField(msg, 8)) == null ? undefined : f,
    habsList: (f = jspb.Message.getRepeatedField(msg, 9)) == null ? undefined : f,
    habPopulationList: (f = jspb.Message.getRepeatedField(msg, 10)) == null ? undefined : f,
    habCapacityList: (f = jspb.Message.getRepeatedField(msg, 21)) == null ? undefined : f,
    vehiclesList: (f = jspb.Message.getRepeatedField(msg, 11)) == null ? undefined : f,
    trainLengthList: (f = jspb.Message.getRepeatedField(msg, 12)) == null ? undefined : f,
    silosOwned: (f = jspb.Message.getField(msg, 13)) == null ? undefined : f,
    commonResearchList: jspb.Message.toObjectList(msg.getCommonResearchList(),
    proto.ei.Backup.ResearchItem.toObject, includeInstance),
    activeBoostsList: jspb.Message.toObjectList(msg.getActiveBoostsList(),
    proto.ei.Backup.ActiveBoost.toObject, includeInstance),
    boostTokensOnHand: (f = jspb.Message.getField(msg, 16)) == null ? undefined : f,
    equippedArtifactsList: jspb.Message.toObjectList(msg.getEquippedArtifactsList(),
    proto.ei.CompleteArtifact.toObject, includeInstance),
    artifactInventoryScore: (f = jspb.Message.getField(msg, 18)) == null ? undefined : f,
    farmAppearance: (f = msg.getFarmAppearance()) && proto.ei.ShellDB.FarmConfiguration.toObject(includeInstance, f),
    timestamp: (f = jspb.Message.getOptionalFloatingPointField(msg, 22)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ei.PlayerFarmInfo}
 */
proto.ei.PlayerFarmInfo.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ei.PlayerFarmInfo;
  return proto.ei.PlayerFarmInfo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ei.PlayerFarmInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ei.PlayerFarmInfo}
 */
proto.ei.PlayerFarmInfo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 20:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setClientVersion(value);
      break;
    case 1:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setSoulEggs(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setEggsOfProphecy(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setPermitLevel(value);
      break;
    case 4:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setHyperloopStation(value);
      break;
    case 5:
      var values = /** @type {!Array<number>} */ (reader.isDelimited() ? reader.readPackedUint32() : [reader.readUint32()]);
      for (var i = 0; i < values.length; i++) {
        msg.addEggMedalLevel(values[i]);
      }
      break;
    case 6:
      var value = new proto.ei.Backup.ResearchItem;
      reader.readMessage(value,proto.ei.Backup.ResearchItem.deserializeBinaryFromReader);
      msg.addEpicResearch(value);
      break;
    case 7:
      var value = /** @type {!proto.ei.Egg} */ (reader.readEnum());
      msg.setEggType(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setCashOnHand(value);
      break;
    case 9:
      var values = /** @type {!Array<number>} */ (reader.isDelimited() ? reader.readPackedUint32() : [reader.readUint32()]);
      for (var i = 0; i < values.length; i++) {
        msg.addHabs(values[i]);
      }
      break;
    case 10:
      var values = /** @type {!Array<number>} */ (reader.isDelimited() ? reader.readPackedUint64() : [reader.readUint64()]);
      for (var i = 0; i < values.length; i++) {
        msg.addHabPopulation(values[i]);
      }
      break;
    case 21:
      var values = /** @type {!Array<number>} */ (reader.isDelimited() ? reader.readPackedUint64() : [reader.readUint64()]);
      for (var i = 0; i < values.length; i++) {
        msg.addHabCapacity(values[i]);
      }
      break;
    case 11:
      var values = /** @type {!Array<number>} */ (reader.isDelimited() ? reader.readPackedUint32() : [reader.readUint32()]);
      for (var i = 0; i < values.length; i++) {
        msg.addVehicles(values[i]);
      }
      break;
    case 12:
      var values = /** @type {!Array<number>} */ (reader.isDelimited() ? reader.readPackedUint32() : [reader.readUint32()]);
      for (var i = 0; i < values.length; i++) {
        msg.addTrainLength(values[i]);
      }
      break;
    case 13:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setSilosOwned(value);
      break;
    case 14:
      var value = new proto.ei.Backup.ResearchItem;
      reader.readMessage(value,proto.ei.Backup.ResearchItem.deserializeBinaryFromReader);
      msg.addCommonResearch(value);
      break;
    case 15:
      var value = new proto.ei.Backup.ActiveBoost;
      reader.readMessage(value,proto.ei.Backup.ActiveBoost.deserializeBinaryFromReader);
      msg.addActiveBoosts(value);
      break;
    case 16:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setBoostTokensOnHand(value);
      break;
    case 17:
      var value = new proto.ei.CompleteArtifact;
      reader.readMessage(value,proto.ei.CompleteArtifact.deserializeBinaryFromReader);
      msg.addEquippedArtifacts(value);
      break;
    case 18:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setArtifactInventoryScore(value);
      break;
    case 19:
      var value = new proto.ei.ShellDB.FarmConfiguration;
      reader.readMessage(value,proto.ei.ShellDB.FarmConfiguration.deserializeBinaryFromReader);
      msg.setFarmAppearance(value);
      break;
    case 22:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setTimestamp(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ei.PlayerFarmInfo.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ei.PlayerFarmInfo.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ei.PlayerFarmInfo} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.PlayerFarmInfo.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {number} */ (jspb.Message.getField(message, 20));
  if (f != null) {
    writer.writeUint32(
      20,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeDouble(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeUint64(
      2,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeUint32(
      3,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeBool(
      4,
      f
    );
  }
  f = message.getEggMedalLevelList();
  if (f.length > 0) {
    writer.writeRepeatedUint32(
      5,
      f
    );
  }
  f = message.getEpicResearchList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      6,
      f,
      proto.ei.Backup.ResearchItem.serializeBinaryToWriter
    );
  }
  f = /** @type {!proto.ei.Egg} */ (jspb.Message.getField(message, 7));
  if (f != null) {
    writer.writeEnum(
      7,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 8));
  if (f != null) {
    writer.writeDouble(
      8,
      f
    );
  }
  f = message.getHabsList();
  if (f.length > 0) {
    writer.writeRepeatedUint32(
      9,
      f
    );
  }
  f = message.getHabPopulationList();
  if (f.length > 0) {
    writer.writeRepeatedUint64(
      10,
      f
    );
  }
  f = message.getHabCapacityList();
  if (f.length > 0) {
    writer.writeRepeatedUint64(
      21,
      f
    );
  }
  f = message.getVehiclesList();
  if (f.length > 0) {
    writer.writeRepeatedUint32(
      11,
      f
    );
  }
  f = message.getTrainLengthList();
  if (f.length > 0) {
    writer.writeRepeatedUint32(
      12,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 13));
  if (f != null) {
    writer.writeUint32(
      13,
      f
    );
  }
  f = message.getCommonResearchList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      14,
      f,
      proto.ei.Backup.ResearchItem.serializeBinaryToWriter
    );
  }
  f = message.getActiveBoostsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      15,
      f,
      proto.ei.Backup.ActiveBoost.serializeBinaryToWriter
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 16));
  if (f != null) {
    writer.writeUint32(
      16,
      f
    );
  }
  f = message.getEquippedArtifactsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      17,
      f,
      proto.ei.CompleteArtifact.serializeBinaryToWriter
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 18));
  if (f != null) {
    writer.writeUint64(
      18,
      f
    );
  }
  f = message.getFarmAppearance();
  if (f != null) {
    writer.writeMessage(
      19,
      f,
      proto.ei.ShellDB.FarmConfiguration.serializeBinaryToWriter
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 22));
  if (f != null) {
    writer.writeDouble(
      22,
      f
    );
  }
};


/**
 * optional uint32 client_version = 20;
 * @return {number}
 */
proto.ei.PlayerFarmInfo.prototype.getClientVersion = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 20, 0));
};


/**
 * @param {number} value
 * @return {!proto.ei.PlayerFarmInfo} returns this
 */
proto.ei.PlayerFarmInfo.prototype.setClientVersion = function(value) {
  return jspb.Message.setField(this, 20, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.PlayerFarmInfo} returns this
 */
proto.ei.PlayerFarmInfo.prototype.clearClientVersion = function() {
  return jspb.Message.setField(this, 20, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.PlayerFarmInfo.prototype.hasClientVersion = function() {
  return jspb.Message.getField(this, 20) != null;
};


/**
 * optional double soul_eggs = 1;
 * @return {number}
 */
proto.ei.PlayerFarmInfo.prototype.getSoulEggs = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 1, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.ei.PlayerFarmInfo} returns this
 */
proto.ei.PlayerFarmInfo.prototype.setSoulEggs = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.PlayerFarmInfo} returns this
 */
proto.ei.PlayerFarmInfo.prototype.clearSoulEggs = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.PlayerFarmInfo.prototype.hasSoulEggs = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional uint64 eggs_of_prophecy = 2;
 * @return {number}
 */
proto.ei.PlayerFarmInfo.prototype.getEggsOfProphecy = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.ei.PlayerFarmInfo} returns this
 */
proto.ei.PlayerFarmInfo.prototype.setEggsOfProphecy = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.PlayerFarmInfo} returns this
 */
proto.ei.PlayerFarmInfo.prototype.clearEggsOfProphecy = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.PlayerFarmInfo.prototype.hasEggsOfProphecy = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional uint32 permit_level = 3;
 * @return {number}
 */
proto.ei.PlayerFarmInfo.prototype.getPermitLevel = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.ei.PlayerFarmInfo} returns this
 */
proto.ei.PlayerFarmInfo.prototype.setPermitLevel = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.PlayerFarmInfo} returns this
 */
proto.ei.PlayerFarmInfo.prototype.clearPermitLevel = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.PlayerFarmInfo.prototype.hasPermitLevel = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional bool hyperloop_station = 4;
 * @return {boolean}
 */
proto.ei.PlayerFarmInfo.prototype.getHyperloopStation = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 4, false));
};


/**
 * @param {boolean} value
 * @return {!proto.ei.PlayerFarmInfo} returns this
 */
proto.ei.PlayerFarmInfo.prototype.setHyperloopStation = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.PlayerFarmInfo} returns this
 */
proto.ei.PlayerFarmInfo.prototype.clearHyperloopStation = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.PlayerFarmInfo.prototype.hasHyperloopStation = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * repeated uint32 egg_medal_level = 5;
 * @return {!Array<number>}
 */
proto.ei.PlayerFarmInfo.prototype.getEggMedalLevelList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 5));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.ei.PlayerFarmInfo} returns this
 */
proto.ei.PlayerFarmInfo.prototype.setEggMedalLevelList = function(value) {
  return jspb.Message.setField(this, 5, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.ei.PlayerFarmInfo} returns this
 */
proto.ei.PlayerFarmInfo.prototype.addEggMedalLevel = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 5, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.ei.PlayerFarmInfo} returns this
 */
proto.ei.PlayerFarmInfo.prototype.clearEggMedalLevelList = function() {
  return this.setEggMedalLevelList([]);
};


/**
 * repeated Backup.ResearchItem epic_research = 6;
 * @return {!Array<!proto.ei.Backup.ResearchItem>}
 */
proto.ei.PlayerFarmInfo.prototype.getEpicResearchList = function() {
  return /** @type{!Array<!proto.ei.Backup.ResearchItem>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.ei.Backup.ResearchItem, 6));
};


/**
 * @param {!Array<!proto.ei.Backup.ResearchItem>} value
 * @return {!proto.ei.PlayerFarmInfo} returns this
*/
proto.ei.PlayerFarmInfo.prototype.setEpicResearchList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 6, value);
};


/**
 * @param {!proto.ei.Backup.ResearchItem=} opt_value
 * @param {number=} opt_index
 * @return {!proto.ei.Backup.ResearchItem}
 */
proto.ei.PlayerFarmInfo.prototype.addEpicResearch = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 6, opt_value, proto.ei.Backup.ResearchItem, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.ei.PlayerFarmInfo} returns this
 */
proto.ei.PlayerFarmInfo.prototype.clearEpicResearchList = function() {
  return this.setEpicResearchList([]);
};


/**
 * optional Egg egg_type = 7;
 * @return {!proto.ei.Egg}
 */
proto.ei.PlayerFarmInfo.prototype.getEggType = function() {
  return /** @type {!proto.ei.Egg} */ (jspb.Message.getFieldWithDefault(this, 7, 1));
};


/**
 * @param {!proto.ei.Egg} value
 * @return {!proto.ei.PlayerFarmInfo} returns this
 */
proto.ei.PlayerFarmInfo.prototype.setEggType = function(value) {
  return jspb.Message.setField(this, 7, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.PlayerFarmInfo} returns this
 */
proto.ei.PlayerFarmInfo.prototype.clearEggType = function() {
  return jspb.Message.setField(this, 7, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.PlayerFarmInfo.prototype.hasEggType = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional double cash_on_hand = 8;
 * @return {number}
 */
proto.ei.PlayerFarmInfo.prototype.getCashOnHand = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 8, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.ei.PlayerFarmInfo} returns this
 */
proto.ei.PlayerFarmInfo.prototype.setCashOnHand = function(value) {
  return jspb.Message.setField(this, 8, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.PlayerFarmInfo} returns this
 */
proto.ei.PlayerFarmInfo.prototype.clearCashOnHand = function() {
  return jspb.Message.setField(this, 8, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.PlayerFarmInfo.prototype.hasCashOnHand = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * repeated uint32 habs = 9;
 * @return {!Array<number>}
 */
proto.ei.PlayerFarmInfo.prototype.getHabsList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 9));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.ei.PlayerFarmInfo} returns this
 */
proto.ei.PlayerFarmInfo.prototype.setHabsList = function(value) {
  return jspb.Message.setField(this, 9, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.ei.PlayerFarmInfo} returns this
 */
proto.ei.PlayerFarmInfo.prototype.addHabs = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 9, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.ei.PlayerFarmInfo} returns this
 */
proto.ei.PlayerFarmInfo.prototype.clearHabsList = function() {
  return this.setHabsList([]);
};


/**
 * repeated uint64 hab_population = 10;
 * @return {!Array<number>}
 */
proto.ei.PlayerFarmInfo.prototype.getHabPopulationList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 10));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.ei.PlayerFarmInfo} returns this
 */
proto.ei.PlayerFarmInfo.prototype.setHabPopulationList = function(value) {
  return jspb.Message.setField(this, 10, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.ei.PlayerFarmInfo} returns this
 */
proto.ei.PlayerFarmInfo.prototype.addHabPopulation = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 10, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.ei.PlayerFarmInfo} returns this
 */
proto.ei.PlayerFarmInfo.prototype.clearHabPopulationList = function() {
  return this.setHabPopulationList([]);
};


/**
 * repeated uint64 hab_capacity = 21;
 * @return {!Array<number>}
 */
proto.ei.PlayerFarmInfo.prototype.getHabCapacityList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 21));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.ei.PlayerFarmInfo} returns this
 */
proto.ei.PlayerFarmInfo.prototype.setHabCapacityList = function(value) {
  return jspb.Message.setField(this, 21, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.ei.PlayerFarmInfo} returns this
 */
proto.ei.PlayerFarmInfo.prototype.addHabCapacity = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 21, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.ei.PlayerFarmInfo} returns this
 */
proto.ei.PlayerFarmInfo.prototype.clearHabCapacityList = function() {
  return this.setHabCapacityList([]);
};


/**
 * repeated uint32 vehicles = 11;
 * @return {!Array<number>}
 */
proto.ei.PlayerFarmInfo.prototype.getVehiclesList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 11));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.ei.PlayerFarmInfo} returns this
 */
proto.ei.PlayerFarmInfo.prototype.setVehiclesList = function(value) {
  return jspb.Message.setField(this, 11, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.ei.PlayerFarmInfo} returns this
 */
proto.ei.PlayerFarmInfo.prototype.addVehicles = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 11, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.ei.PlayerFarmInfo} returns this
 */
proto.ei.PlayerFarmInfo.prototype.clearVehiclesList = function() {
  return this.setVehiclesList([]);
};


/**
 * repeated uint32 train_length = 12;
 * @return {!Array<number>}
 */
proto.ei.PlayerFarmInfo.prototype.getTrainLengthList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 12));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.ei.PlayerFarmInfo} returns this
 */
proto.ei.PlayerFarmInfo.prototype.setTrainLengthList = function(value) {
  return jspb.Message.setField(this, 12, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.ei.PlayerFarmInfo} returns this
 */
proto.ei.PlayerFarmInfo.prototype.addTrainLength = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 12, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.ei.PlayerFarmInfo} returns this
 */
proto.ei.PlayerFarmInfo.prototype.clearTrainLengthList = function() {
  return this.setTrainLengthList([]);
};


/**
 * optional uint32 silos_owned = 13;
 * @return {number}
 */
proto.ei.PlayerFarmInfo.prototype.getSilosOwned = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 13, 0));
};


/**
 * @param {number} value
 * @return {!proto.ei.PlayerFarmInfo} returns this
 */
proto.ei.PlayerFarmInfo.prototype.setSilosOwned = function(value) {
  return jspb.Message.setField(this, 13, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.PlayerFarmInfo} returns this
 */
proto.ei.PlayerFarmInfo.prototype.clearSilosOwned = function() {
  return jspb.Message.setField(this, 13, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.PlayerFarmInfo.prototype.hasSilosOwned = function() {
  return jspb.Message.getField(this, 13) != null;
};


/**
 * repeated Backup.ResearchItem common_research = 14;
 * @return {!Array<!proto.ei.Backup.ResearchItem>}
 */
proto.ei.PlayerFarmInfo.prototype.getCommonResearchList = function() {
  return /** @type{!Array<!proto.ei.Backup.ResearchItem>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.ei.Backup.ResearchItem, 14));
};


/**
 * @param {!Array<!proto.ei.Backup.ResearchItem>} value
 * @return {!proto.ei.PlayerFarmInfo} returns this
*/
proto.ei.PlayerFarmInfo.prototype.setCommonResearchList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 14, value);
};


/**
 * @param {!proto.ei.Backup.ResearchItem=} opt_value
 * @param {number=} opt_index
 * @return {!proto.ei.Backup.ResearchItem}
 */
proto.ei.PlayerFarmInfo.prototype.addCommonResearch = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 14, opt_value, proto.ei.Backup.ResearchItem, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.ei.PlayerFarmInfo} returns this
 */
proto.ei.PlayerFarmInfo.prototype.clearCommonResearchList = function() {
  return this.setCommonResearchList([]);
};


/**
 * repeated Backup.ActiveBoost active_boosts = 15;
 * @return {!Array<!proto.ei.Backup.ActiveBoost>}
 */
proto.ei.PlayerFarmInfo.prototype.getActiveBoostsList = function() {
  return /** @type{!Array<!proto.ei.Backup.ActiveBoost>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.ei.Backup.ActiveBoost, 15));
};


/**
 * @param {!Array<!proto.ei.Backup.ActiveBoost>} value
 * @return {!proto.ei.PlayerFarmInfo} returns this
*/
proto.ei.PlayerFarmInfo.prototype.setActiveBoostsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 15, value);
};


/**
 * @param {!proto.ei.Backup.ActiveBoost=} opt_value
 * @param {number=} opt_index
 * @return {!proto.ei.Backup.ActiveBoost}
 */
proto.ei.PlayerFarmInfo.prototype.addActiveBoosts = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 15, opt_value, proto.ei.Backup.ActiveBoost, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.ei.PlayerFarmInfo} returns this
 */
proto.ei.PlayerFarmInfo.prototype.clearActiveBoostsList = function() {
  return this.setActiveBoostsList([]);
};


/**
 * optional uint32 boost_tokens_on_hand = 16;
 * @return {number}
 */
proto.ei.PlayerFarmInfo.prototype.getBoostTokensOnHand = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 16, 0));
};


/**
 * @param {number} value
 * @return {!proto.ei.PlayerFarmInfo} returns this
 */
proto.ei.PlayerFarmInfo.prototype.setBoostTokensOnHand = function(value) {
  return jspb.Message.setField(this, 16, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.PlayerFarmInfo} returns this
 */
proto.ei.PlayerFarmInfo.prototype.clearBoostTokensOnHand = function() {
  return jspb.Message.setField(this, 16, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.PlayerFarmInfo.prototype.hasBoostTokensOnHand = function() {
  return jspb.Message.getField(this, 16) != null;
};


/**
 * repeated CompleteArtifact equipped_artifacts = 17;
 * @return {!Array<!proto.ei.CompleteArtifact>}
 */
proto.ei.PlayerFarmInfo.prototype.getEquippedArtifactsList = function() {
  return /** @type{!Array<!proto.ei.CompleteArtifact>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.ei.CompleteArtifact, 17));
};


/**
 * @param {!Array<!proto.ei.CompleteArtifact>} value
 * @return {!proto.ei.PlayerFarmInfo} returns this
*/
proto.ei.PlayerFarmInfo.prototype.setEquippedArtifactsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 17, value);
};


/**
 * @param {!proto.ei.CompleteArtifact=} opt_value
 * @param {number=} opt_index
 * @return {!proto.ei.CompleteArtifact}
 */
proto.ei.PlayerFarmInfo.prototype.addEquippedArtifacts = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 17, opt_value, proto.ei.CompleteArtifact, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.ei.PlayerFarmInfo} returns this
 */
proto.ei.PlayerFarmInfo.prototype.clearEquippedArtifactsList = function() {
  return this.setEquippedArtifactsList([]);
};


/**
 * optional uint64 artifact_inventory_score = 18;
 * @return {number}
 */
proto.ei.PlayerFarmInfo.prototype.getArtifactInventoryScore = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 18, 0));
};


/**
 * @param {number} value
 * @return {!proto.ei.PlayerFarmInfo} returns this
 */
proto.ei.PlayerFarmInfo.prototype.setArtifactInventoryScore = function(value) {
  return jspb.Message.setField(this, 18, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.PlayerFarmInfo} returns this
 */
proto.ei.PlayerFarmInfo.prototype.clearArtifactInventoryScore = function() {
  return jspb.Message.setField(this, 18, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.PlayerFarmInfo.prototype.hasArtifactInventoryScore = function() {
  return jspb.Message.getField(this, 18) != null;
};


/**
 * optional ShellDB.FarmConfiguration farm_appearance = 19;
 * @return {?proto.ei.ShellDB.FarmConfiguration}
 */
proto.ei.PlayerFarmInfo.prototype.getFarmAppearance = function() {
  return /** @type{?proto.ei.ShellDB.FarmConfiguration} */ (
    jspb.Message.getWrapperField(this, proto.ei.ShellDB.FarmConfiguration, 19));
};


/**
 * @param {?proto.ei.ShellDB.FarmConfiguration|undefined} value
 * @return {!proto.ei.PlayerFarmInfo} returns this
*/
proto.ei.PlayerFarmInfo.prototype.setFarmAppearance = function(value) {
  return jspb.Message.setWrapperField(this, 19, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.ei.PlayerFarmInfo} returns this
 */
proto.ei.PlayerFarmInfo.prototype.clearFarmAppearance = function() {
  return this.setFarmAppearance(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.PlayerFarmInfo.prototype.hasFarmAppearance = function() {
  return jspb.Message.getField(this, 19) != null;
};


/**
 * optional double timestamp = 22;
 * @return {number}
 */
proto.ei.PlayerFarmInfo.prototype.getTimestamp = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 22, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.ei.PlayerFarmInfo} returns this
 */
proto.ei.PlayerFarmInfo.prototype.setTimestamp = function(value) {
  return jspb.Message.setField(this, 22, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.PlayerFarmInfo} returns this
 */
proto.ei.PlayerFarmInfo.prototype.clearTimestamp = function() {
  return jspb.Message.setField(this, 22, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.PlayerFarmInfo.prototype.hasTimestamp = function() {
  return jspb.Message.getField(this, 22) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.ei.ContractCoopStatusResponse.repeatedFields_ = [4,11,13];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ei.ContractCoopStatusResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.ei.ContractCoopStatusResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ei.ContractCoopStatusResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.ContractCoopStatusResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    responseStatus: (f = jspb.Message.getField(msg, 19)) == null ? undefined : f,
    contractIdentifier: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    totalAmount: (f = jspb.Message.getOptionalFloatingPointField(msg, 2)) == null ? undefined : f,
    coopIdentifier: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f,
    grade: (f = jspb.Message.getField(msg, 17)) == null ? undefined : f,
    contributorsList: jspb.Message.toObjectList(msg.getContributorsList(),
    proto.ei.ContractCoopStatusResponse.ContributionInfo.toObject, includeInstance),
    autoGenerated: (f = jspb.Message.getBooleanField(msg, 8)) == null ? undefined : f,
    pb_public: (f = jspb.Message.getBooleanField(msg, 10)) == null ? undefined : f,
    creatorId: (f = jspb.Message.getField(msg, 9)) == null ? undefined : f,
    secondsRemaining: (f = jspb.Message.getOptionalFloatingPointField(msg, 5)) == null ? undefined : f,
    secondsSinceAllGoalsAchieved: (f = jspb.Message.getOptionalFloatingPointField(msg, 16)) == null ? undefined : f,
    allGoalsAchieved: (f = jspb.Message.getBooleanField(msg, 14)) == null ? undefined : f,
    allMembersReporting: (f = jspb.Message.getBooleanField(msg, 6)) == null ? undefined : f,
    gracePeriodSecondsRemaining: (f = jspb.Message.getOptionalFloatingPointField(msg, 7)) == null ? undefined : f,
    clearedForExit: (f = jspb.Message.getBooleanField(msg, 15)) == null ? undefined : f,
    giftsList: jspb.Message.toObjectList(msg.getGiftsList(),
    proto.ei.ContractCoopStatusResponse.CoopGift.toObject, includeInstance),
    chickenRunsList: jspb.Message.toObjectList(msg.getChickenRunsList(),
    proto.ei.ContractCoopStatusResponse.ChickenRun.toObject, includeInstance),
    localTimestamp: (f = jspb.Message.getOptionalFloatingPointField(msg, 12)) == null ? undefined : f,
    lastSync: (f = jspb.Message.getOptionalFloatingPointField(msg, 18)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ei.ContractCoopStatusResponse}
 */
proto.ei.ContractCoopStatusResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ei.ContractCoopStatusResponse;
  return proto.ei.ContractCoopStatusResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ei.ContractCoopStatusResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ei.ContractCoopStatusResponse}
 */
proto.ei.ContractCoopStatusResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 19:
      var value = /** @type {!proto.ei.ContractCoopStatusResponse.ResponseStatus} */ (reader.readEnum());
      msg.setResponseStatus(value);
      break;
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setContractIdentifier(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setTotalAmount(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setCoopIdentifier(value);
      break;
    case 17:
      var value = /** @type {!proto.ei.Contract.PlayerGrade} */ (reader.readEnum());
      msg.setGrade(value);
      break;
    case 4:
      var value = new proto.ei.ContractCoopStatusResponse.ContributionInfo;
      reader.readMessage(value,proto.ei.ContractCoopStatusResponse.ContributionInfo.deserializeBinaryFromReader);
      msg.addContributors(value);
      break;
    case 8:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setAutoGenerated(value);
      break;
    case 10:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setPublic(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setCreatorId(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setSecondsRemaining(value);
      break;
    case 16:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setSecondsSinceAllGoalsAchieved(value);
      break;
    case 14:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setAllGoalsAchieved(value);
      break;
    case 6:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setAllMembersReporting(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setGracePeriodSecondsRemaining(value);
      break;
    case 15:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setClearedForExit(value);
      break;
    case 11:
      var value = new proto.ei.ContractCoopStatusResponse.CoopGift;
      reader.readMessage(value,proto.ei.ContractCoopStatusResponse.CoopGift.deserializeBinaryFromReader);
      msg.addGifts(value);
      break;
    case 13:
      var value = new proto.ei.ContractCoopStatusResponse.ChickenRun;
      reader.readMessage(value,proto.ei.ContractCoopStatusResponse.ChickenRun.deserializeBinaryFromReader);
      msg.addChickenRuns(value);
      break;
    case 12:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setLocalTimestamp(value);
      break;
    case 18:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setLastSync(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ei.ContractCoopStatusResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ei.ContractCoopStatusResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ei.ContractCoopStatusResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.ContractCoopStatusResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {!proto.ei.ContractCoopStatusResponse.ResponseStatus} */ (jspb.Message.getField(message, 19));
  if (f != null) {
    writer.writeEnum(
      19,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeDouble(
      2,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeString(
      3,
      f
    );
  }
  f = /** @type {!proto.ei.Contract.PlayerGrade} */ (jspb.Message.getField(message, 17));
  if (f != null) {
    writer.writeEnum(
      17,
      f
    );
  }
  f = message.getContributorsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      4,
      f,
      proto.ei.ContractCoopStatusResponse.ContributionInfo.serializeBinaryToWriter
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 8));
  if (f != null) {
    writer.writeBool(
      8,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 10));
  if (f != null) {
    writer.writeBool(
      10,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 9));
  if (f != null) {
    writer.writeString(
      9,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeDouble(
      5,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 16));
  if (f != null) {
    writer.writeDouble(
      16,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 14));
  if (f != null) {
    writer.writeBool(
      14,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeBool(
      6,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 7));
  if (f != null) {
    writer.writeDouble(
      7,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 15));
  if (f != null) {
    writer.writeBool(
      15,
      f
    );
  }
  f = message.getGiftsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      11,
      f,
      proto.ei.ContractCoopStatusResponse.CoopGift.serializeBinaryToWriter
    );
  }
  f = message.getChickenRunsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      13,
      f,
      proto.ei.ContractCoopStatusResponse.ChickenRun.serializeBinaryToWriter
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 12));
  if (f != null) {
    writer.writeDouble(
      12,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 18));
  if (f != null) {
    writer.writeDouble(
      18,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.ei.ContractCoopStatusResponse.ResponseStatus = {
  NO_ERROR: 0,
  MISSING_USER: 1,
  MISSING_COOP_ID: 2,
  MISSING_CONTRACT_ID: 3,
  MEMBERSHIP_NOT_FOUND: 4,
  COOP_NOT_FOUND: 5,
  CONTRACT_NOT_FOUND: 6,
  INVALID_MEMBERSHIP: 7,
  NO_HTTP_RESPONSE: 500
};

/**
 * @enum {number}
 */
proto.ei.ContractCoopStatusResponse.MemberStatus = {
  VALID: 0,
  KICKED_INACTIVE: 1,
  KICKED_PRIVATE: 2,
  KICKED_CHEATS: 3,
  KICKED_LEECH: 4
};

/**
 * @enum {number}
 */
proto.ei.ContractCoopStatusResponse.Status = {
  UNKNOWN: 0,
  LOBBY: 1,
  ACTIVE: 2,
  COMPLETE: 3,
  FINALIZED: 4
};


/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.ei.ContractCoopStatusResponse.ContributionInfo.repeatedFields_ = [13];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ei.ContractCoopStatusResponse.ContributionInfo.prototype.toObject = function(opt_includeInstance) {
  return proto.ei.ContractCoopStatusResponse.ContributionInfo.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ei.ContractCoopStatusResponse.ContributionInfo} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.ContractCoopStatusResponse.ContributionInfo.toObject = function(includeInstance, msg) {
  var f, obj = {
    uuid: (f = jspb.Message.getField(msg, 21)) == null ? undefined : f,
    userId: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    userName: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,
    contractIdentifier: (f = jspb.Message.getField(msg, 19)) == null ? undefined : f,
    contributionAmount: (f = jspb.Message.getOptionalFloatingPointField(msg, 3)) == null ? undefined : f,
    contributionRate: (f = jspb.Message.getOptionalFloatingPointField(msg, 6)) == null ? undefined : f,
    soulPower: (f = jspb.Message.getOptionalFloatingPointField(msg, 11)) == null ? undefined : f,
    productionParams: (f = msg.getProductionParams()) && proto.ei.FarmProductionParams.toObject(includeInstance, f),
    farmInfo: (f = msg.getFarmInfo()) && proto.ei.PlayerFarmInfo.toObject(includeInstance, f),
    rankChange: (f = jspb.Message.getField(msg, 8)) == null ? undefined : f,
    recentlyActive: (f = jspb.Message.getBooleanField(msg, 23)) == null ? undefined : f,
    active: (f = jspb.Message.getBooleanField(msg, 4)) == null ? undefined : f,
    ccMember: (f = jspb.Message.getBooleanField(msg, 24)) == null ? undefined : f,
    leech: (f = jspb.Message.getBooleanField(msg, 16)) == null ? undefined : f,
    finalized: (f = jspb.Message.getBooleanField(msg, 22)) == null ? undefined : f,
    timeCheatDetected: (f = jspb.Message.getBooleanField(msg, 7)) == null ? undefined : f,
    platform: (f = jspb.Message.getField(msg, 5)) == null ? undefined : f,
    pushId: (f = jspb.Message.getField(msg, 9)) == null ? undefined : f,
    banVotes: (f = jspb.Message.getField(msg, 10)) == null ? undefined : f,
    autojoined: (f = jspb.Message.getBooleanField(msg, 17)) == null ? undefined : f,
    boostTokens: (f = jspb.Message.getField(msg, 12)) == null ? undefined : f,
    boostTokensSpent: (f = jspb.Message.getField(msg, 14)) == null ? undefined : f,
    buffHistoryList: jspb.Message.toObjectList(msg.getBuffHistoryList(),
    proto.ei.CoopBuffState.toObject, includeInstance),
    chickenRunCooldown: (f = jspb.Message.getOptionalFloatingPointField(msg, 20)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ei.ContractCoopStatusResponse.ContributionInfo}
 */
proto.ei.ContractCoopStatusResponse.ContributionInfo.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ei.ContractCoopStatusResponse.ContributionInfo;
  return proto.ei.ContractCoopStatusResponse.ContributionInfo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ei.ContractCoopStatusResponse.ContributionInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ei.ContractCoopStatusResponse.ContributionInfo}
 */
proto.ei.ContractCoopStatusResponse.ContributionInfo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 21:
      var value = /** @type {string} */ (reader.readString());
      msg.setUuid(value);
      break;
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserName(value);
      break;
    case 19:
      var value = /** @type {string} */ (reader.readString());
      msg.setContractIdentifier(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setContributionAmount(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setContributionRate(value);
      break;
    case 11:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setSoulPower(value);
      break;
    case 15:
      var value = new proto.ei.FarmProductionParams;
      reader.readMessage(value,proto.ei.FarmProductionParams.deserializeBinaryFromReader);
      msg.setProductionParams(value);
      break;
    case 18:
      var value = new proto.ei.PlayerFarmInfo;
      reader.readMessage(value,proto.ei.PlayerFarmInfo.deserializeBinaryFromReader);
      msg.setFarmInfo(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setRankChange(value);
      break;
    case 23:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setRecentlyActive(value);
      break;
    case 4:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setActive(value);
      break;
    case 24:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setCcMember(value);
      break;
    case 16:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setLeech(value);
      break;
    case 22:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setFinalized(value);
      break;
    case 7:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setTimeCheatDetected(value);
      break;
    case 5:
      var value = /** @type {!proto.ei.Platform} */ (reader.readEnum());
      msg.setPlatform(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setPushId(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setBanVotes(value);
      break;
    case 17:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setAutojoined(value);
      break;
    case 12:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setBoostTokens(value);
      break;
    case 14:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setBoostTokensSpent(value);
      break;
    case 13:
      var value = new proto.ei.CoopBuffState;
      reader.readMessage(value,proto.ei.CoopBuffState.deserializeBinaryFromReader);
      msg.addBuffHistory(value);
      break;
    case 20:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setChickenRunCooldown(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ei.ContractCoopStatusResponse.ContributionInfo.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ei.ContractCoopStatusResponse.ContributionInfo.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ei.ContractCoopStatusResponse.ContributionInfo} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.ContractCoopStatusResponse.ContributionInfo.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 21));
  if (f != null) {
    writer.writeString(
      21,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 19));
  if (f != null) {
    writer.writeString(
      19,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeDouble(
      3,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeDouble(
      6,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 11));
  if (f != null) {
    writer.writeDouble(
      11,
      f
    );
  }
  f = message.getProductionParams();
  if (f != null) {
    writer.writeMessage(
      15,
      f,
      proto.ei.FarmProductionParams.serializeBinaryToWriter
    );
  }
  f = message.getFarmInfo();
  if (f != null) {
    writer.writeMessage(
      18,
      f,
      proto.ei.PlayerFarmInfo.serializeBinaryToWriter
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 8));
  if (f != null) {
    writer.writeInt32(
      8,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 23));
  if (f != null) {
    writer.writeBool(
      23,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeBool(
      4,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 24));
  if (f != null) {
    writer.writeBool(
      24,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 16));
  if (f != null) {
    writer.writeBool(
      16,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 22));
  if (f != null) {
    writer.writeBool(
      22,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 7));
  if (f != null) {
    writer.writeBool(
      7,
      f
    );
  }
  f = /** @type {!proto.ei.Platform} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeEnum(
      5,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 9));
  if (f != null) {
    writer.writeString(
      9,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 10));
  if (f != null) {
    writer.writeUint32(
      10,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 17));
  if (f != null) {
    writer.writeBool(
      17,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 12));
  if (f != null) {
    writer.writeUint32(
      12,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 14));
  if (f != null) {
    writer.writeUint32(
      14,
      f
    );
  }
  f = message.getBuffHistoryList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      13,
      f,
      proto.ei.CoopBuffState.serializeBinaryToWriter
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 20));
  if (f != null) {
    writer.writeDouble(
      20,
      f
    );
  }
};


/**
 * optional string uuid = 21;
 * @return {string}
 */
proto.ei.ContractCoopStatusResponse.ContributionInfo.prototype.getUuid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 21, ""));
};


/**
 * @param {string} value
 * @return {!proto.ei.ContractCoopStatusResponse.ContributionInfo} returns this
 */
proto.ei.ContractCoopStatusResponse.ContributionInfo.prototype.setUuid = function(value) {
  return jspb.Message.setField(this, 21, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.ContractCoopStatusResponse.ContributionInfo} returns this
 */
proto.ei.ContractCoopStatusResponse.ContributionInfo.prototype.clearUuid = function() {
  return jspb.Message.setField(this, 21, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ContractCoopStatusResponse.ContributionInfo.prototype.hasUuid = function() {
  return jspb.Message.getField(this, 21) != null;
};


/**
 * optional string user_id = 1;
 * @return {string}
 */
proto.ei.ContractCoopStatusResponse.ContributionInfo.prototype.getUserId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.ei.ContractCoopStatusResponse.ContributionInfo} returns this
 */
proto.ei.ContractCoopStatusResponse.ContributionInfo.prototype.setUserId = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.ContractCoopStatusResponse.ContributionInfo} returns this
 */
proto.ei.ContractCoopStatusResponse.ContributionInfo.prototype.clearUserId = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ContractCoopStatusResponse.ContributionInfo.prototype.hasUserId = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string user_name = 2;
 * @return {string}
 */
proto.ei.ContractCoopStatusResponse.ContributionInfo.prototype.getUserName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.ei.ContractCoopStatusResponse.ContributionInfo} returns this
 */
proto.ei.ContractCoopStatusResponse.ContributionInfo.prototype.setUserName = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.ContractCoopStatusResponse.ContributionInfo} returns this
 */
proto.ei.ContractCoopStatusResponse.ContributionInfo.prototype.clearUserName = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ContractCoopStatusResponse.ContributionInfo.prototype.hasUserName = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string contract_identifier = 19;
 * @return {string}
 */
proto.ei.ContractCoopStatusResponse.ContributionInfo.prototype.getContractIdentifier = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 19, ""));
};


/**
 * @param {string} value
 * @return {!proto.ei.ContractCoopStatusResponse.ContributionInfo} returns this
 */
proto.ei.ContractCoopStatusResponse.ContributionInfo.prototype.setContractIdentifier = function(value) {
  return jspb.Message.setField(this, 19, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.ContractCoopStatusResponse.ContributionInfo} returns this
 */
proto.ei.ContractCoopStatusResponse.ContributionInfo.prototype.clearContractIdentifier = function() {
  return jspb.Message.setField(this, 19, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ContractCoopStatusResponse.ContributionInfo.prototype.hasContractIdentifier = function() {
  return jspb.Message.getField(this, 19) != null;
};


/**
 * optional double contribution_amount = 3;
 * @return {number}
 */
proto.ei.ContractCoopStatusResponse.ContributionInfo.prototype.getContributionAmount = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 3, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.ei.ContractCoopStatusResponse.ContributionInfo} returns this
 */
proto.ei.ContractCoopStatusResponse.ContributionInfo.prototype.setContributionAmount = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.ContractCoopStatusResponse.ContributionInfo} returns this
 */
proto.ei.ContractCoopStatusResponse.ContributionInfo.prototype.clearContributionAmount = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ContractCoopStatusResponse.ContributionInfo.prototype.hasContributionAmount = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional double contribution_rate = 6;
 * @return {number}
 */
proto.ei.ContractCoopStatusResponse.ContributionInfo.prototype.getContributionRate = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 6, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.ei.ContractCoopStatusResponse.ContributionInfo} returns this
 */
proto.ei.ContractCoopStatusResponse.ContributionInfo.prototype.setContributionRate = function(value) {
  return jspb.Message.setField(this, 6, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.ContractCoopStatusResponse.ContributionInfo} returns this
 */
proto.ei.ContractCoopStatusResponse.ContributionInfo.prototype.clearContributionRate = function() {
  return jspb.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ContractCoopStatusResponse.ContributionInfo.prototype.hasContributionRate = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional double soul_power = 11;
 * @return {number}
 */
proto.ei.ContractCoopStatusResponse.ContributionInfo.prototype.getSoulPower = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 11, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.ei.ContractCoopStatusResponse.ContributionInfo} returns this
 */
proto.ei.ContractCoopStatusResponse.ContributionInfo.prototype.setSoulPower = function(value) {
  return jspb.Message.setField(this, 11, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.ContractCoopStatusResponse.ContributionInfo} returns this
 */
proto.ei.ContractCoopStatusResponse.ContributionInfo.prototype.clearSoulPower = function() {
  return jspb.Message.setField(this, 11, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ContractCoopStatusResponse.ContributionInfo.prototype.hasSoulPower = function() {
  return jspb.Message.getField(this, 11) != null;
};


/**
 * optional FarmProductionParams production_params = 15;
 * @return {?proto.ei.FarmProductionParams}
 */
proto.ei.ContractCoopStatusResponse.ContributionInfo.prototype.getProductionParams = function() {
  return /** @type{?proto.ei.FarmProductionParams} */ (
    jspb.Message.getWrapperField(this, proto.ei.FarmProductionParams, 15));
};


/**
 * @param {?proto.ei.FarmProductionParams|undefined} value
 * @return {!proto.ei.ContractCoopStatusResponse.ContributionInfo} returns this
*/
proto.ei.ContractCoopStatusResponse.ContributionInfo.prototype.setProductionParams = function(value) {
  return jspb.Message.setWrapperField(this, 15, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.ei.ContractCoopStatusResponse.ContributionInfo} returns this
 */
proto.ei.ContractCoopStatusResponse.ContributionInfo.prototype.clearProductionParams = function() {
  return this.setProductionParams(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ContractCoopStatusResponse.ContributionInfo.prototype.hasProductionParams = function() {
  return jspb.Message.getField(this, 15) != null;
};


/**
 * optional PlayerFarmInfo farm_info = 18;
 * @return {?proto.ei.PlayerFarmInfo}
 */
proto.ei.ContractCoopStatusResponse.ContributionInfo.prototype.getFarmInfo = function() {
  return /** @type{?proto.ei.PlayerFarmInfo} */ (
    jspb.Message.getWrapperField(this, proto.ei.PlayerFarmInfo, 18));
};


/**
 * @param {?proto.ei.PlayerFarmInfo|undefined} value
 * @return {!proto.ei.ContractCoopStatusResponse.ContributionInfo} returns this
*/
proto.ei.ContractCoopStatusResponse.ContributionInfo.prototype.setFarmInfo = function(value) {
  return jspb.Message.setWrapperField(this, 18, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.ei.ContractCoopStatusResponse.ContributionInfo} returns this
 */
proto.ei.ContractCoopStatusResponse.ContributionInfo.prototype.clearFarmInfo = function() {
  return this.setFarmInfo(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ContractCoopStatusResponse.ContributionInfo.prototype.hasFarmInfo = function() {
  return jspb.Message.getField(this, 18) != null;
};


/**
 * optional int32 rank_change = 8;
 * @return {number}
 */
proto.ei.ContractCoopStatusResponse.ContributionInfo.prototype.getRankChange = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/**
 * @param {number} value
 * @return {!proto.ei.ContractCoopStatusResponse.ContributionInfo} returns this
 */
proto.ei.ContractCoopStatusResponse.ContributionInfo.prototype.setRankChange = function(value) {
  return jspb.Message.setField(this, 8, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.ContractCoopStatusResponse.ContributionInfo} returns this
 */
proto.ei.ContractCoopStatusResponse.ContributionInfo.prototype.clearRankChange = function() {
  return jspb.Message.setField(this, 8, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ContractCoopStatusResponse.ContributionInfo.prototype.hasRankChange = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional bool recently_active = 23;
 * @return {boolean}
 */
proto.ei.ContractCoopStatusResponse.ContributionInfo.prototype.getRecentlyActive = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 23, false));
};


/**
 * @param {boolean} value
 * @return {!proto.ei.ContractCoopStatusResponse.ContributionInfo} returns this
 */
proto.ei.ContractCoopStatusResponse.ContributionInfo.prototype.setRecentlyActive = function(value) {
  return jspb.Message.setField(this, 23, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.ContractCoopStatusResponse.ContributionInfo} returns this
 */
proto.ei.ContractCoopStatusResponse.ContributionInfo.prototype.clearRecentlyActive = function() {
  return jspb.Message.setField(this, 23, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ContractCoopStatusResponse.ContributionInfo.prototype.hasRecentlyActive = function() {
  return jspb.Message.getField(this, 23) != null;
};


/**
 * optional bool active = 4;
 * @return {boolean}
 */
proto.ei.ContractCoopStatusResponse.ContributionInfo.prototype.getActive = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 4, false));
};


/**
 * @param {boolean} value
 * @return {!proto.ei.ContractCoopStatusResponse.ContributionInfo} returns this
 */
proto.ei.ContractCoopStatusResponse.ContributionInfo.prototype.setActive = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.ContractCoopStatusResponse.ContributionInfo} returns this
 */
proto.ei.ContractCoopStatusResponse.ContributionInfo.prototype.clearActive = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ContractCoopStatusResponse.ContributionInfo.prototype.hasActive = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional bool cc_member = 24;
 * @return {boolean}
 */
proto.ei.ContractCoopStatusResponse.ContributionInfo.prototype.getCcMember = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 24, false));
};


/**
 * @param {boolean} value
 * @return {!proto.ei.ContractCoopStatusResponse.ContributionInfo} returns this
 */
proto.ei.ContractCoopStatusResponse.ContributionInfo.prototype.setCcMember = function(value) {
  return jspb.Message.setField(this, 24, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.ContractCoopStatusResponse.ContributionInfo} returns this
 */
proto.ei.ContractCoopStatusResponse.ContributionInfo.prototype.clearCcMember = function() {
  return jspb.Message.setField(this, 24, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ContractCoopStatusResponse.ContributionInfo.prototype.hasCcMember = function() {
  return jspb.Message.getField(this, 24) != null;
};


/**
 * optional bool leech = 16;
 * @return {boolean}
 */
proto.ei.ContractCoopStatusResponse.ContributionInfo.prototype.getLeech = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 16, false));
};


/**
 * @param {boolean} value
 * @return {!proto.ei.ContractCoopStatusResponse.ContributionInfo} returns this
 */
proto.ei.ContractCoopStatusResponse.ContributionInfo.prototype.setLeech = function(value) {
  return jspb.Message.setField(this, 16, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.ContractCoopStatusResponse.ContributionInfo} returns this
 */
proto.ei.ContractCoopStatusResponse.ContributionInfo.prototype.clearLeech = function() {
  return jspb.Message.setField(this, 16, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ContractCoopStatusResponse.ContributionInfo.prototype.hasLeech = function() {
  return jspb.Message.getField(this, 16) != null;
};


/**
 * optional bool finalized = 22;
 * @return {boolean}
 */
proto.ei.ContractCoopStatusResponse.ContributionInfo.prototype.getFinalized = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 22, false));
};


/**
 * @param {boolean} value
 * @return {!proto.ei.ContractCoopStatusResponse.ContributionInfo} returns this
 */
proto.ei.ContractCoopStatusResponse.ContributionInfo.prototype.setFinalized = function(value) {
  return jspb.Message.setField(this, 22, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.ContractCoopStatusResponse.ContributionInfo} returns this
 */
proto.ei.ContractCoopStatusResponse.ContributionInfo.prototype.clearFinalized = function() {
  return jspb.Message.setField(this, 22, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ContractCoopStatusResponse.ContributionInfo.prototype.hasFinalized = function() {
  return jspb.Message.getField(this, 22) != null;
};


/**
 * optional bool time_cheat_detected = 7;
 * @return {boolean}
 */
proto.ei.ContractCoopStatusResponse.ContributionInfo.prototype.getTimeCheatDetected = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 7, false));
};


/**
 * @param {boolean} value
 * @return {!proto.ei.ContractCoopStatusResponse.ContributionInfo} returns this
 */
proto.ei.ContractCoopStatusResponse.ContributionInfo.prototype.setTimeCheatDetected = function(value) {
  return jspb.Message.setField(this, 7, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.ContractCoopStatusResponse.ContributionInfo} returns this
 */
proto.ei.ContractCoopStatusResponse.ContributionInfo.prototype.clearTimeCheatDetected = function() {
  return jspb.Message.setField(this, 7, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ContractCoopStatusResponse.ContributionInfo.prototype.hasTimeCheatDetected = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional Platform platform = 5;
 * @return {!proto.ei.Platform}
 */
proto.ei.ContractCoopStatusResponse.ContributionInfo.prototype.getPlatform = function() {
  return /** @type {!proto.ei.Platform} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {!proto.ei.Platform} value
 * @return {!proto.ei.ContractCoopStatusResponse.ContributionInfo} returns this
 */
proto.ei.ContractCoopStatusResponse.ContributionInfo.prototype.setPlatform = function(value) {
  return jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.ContractCoopStatusResponse.ContributionInfo} returns this
 */
proto.ei.ContractCoopStatusResponse.ContributionInfo.prototype.clearPlatform = function() {
  return jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ContractCoopStatusResponse.ContributionInfo.prototype.hasPlatform = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional string push_id = 9;
 * @return {string}
 */
proto.ei.ContractCoopStatusResponse.ContributionInfo.prototype.getPushId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.ei.ContractCoopStatusResponse.ContributionInfo} returns this
 */
proto.ei.ContractCoopStatusResponse.ContributionInfo.prototype.setPushId = function(value) {
  return jspb.Message.setField(this, 9, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.ContractCoopStatusResponse.ContributionInfo} returns this
 */
proto.ei.ContractCoopStatusResponse.ContributionInfo.prototype.clearPushId = function() {
  return jspb.Message.setField(this, 9, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ContractCoopStatusResponse.ContributionInfo.prototype.hasPushId = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional uint32 ban_votes = 10;
 * @return {number}
 */
proto.ei.ContractCoopStatusResponse.ContributionInfo.prototype.getBanVotes = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 10, 0));
};


/**
 * @param {number} value
 * @return {!proto.ei.ContractCoopStatusResponse.ContributionInfo} returns this
 */
proto.ei.ContractCoopStatusResponse.ContributionInfo.prototype.setBanVotes = function(value) {
  return jspb.Message.setField(this, 10, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.ContractCoopStatusResponse.ContributionInfo} returns this
 */
proto.ei.ContractCoopStatusResponse.ContributionInfo.prototype.clearBanVotes = function() {
  return jspb.Message.setField(this, 10, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ContractCoopStatusResponse.ContributionInfo.prototype.hasBanVotes = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * optional bool autojoined = 17;
 * @return {boolean}
 */
proto.ei.ContractCoopStatusResponse.ContributionInfo.prototype.getAutojoined = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 17, false));
};


/**
 * @param {boolean} value
 * @return {!proto.ei.ContractCoopStatusResponse.ContributionInfo} returns this
 */
proto.ei.ContractCoopStatusResponse.ContributionInfo.prototype.setAutojoined = function(value) {
  return jspb.Message.setField(this, 17, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.ContractCoopStatusResponse.ContributionInfo} returns this
 */
proto.ei.ContractCoopStatusResponse.ContributionInfo.prototype.clearAutojoined = function() {
  return jspb.Message.setField(this, 17, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ContractCoopStatusResponse.ContributionInfo.prototype.hasAutojoined = function() {
  return jspb.Message.getField(this, 17) != null;
};


/**
 * optional uint32 boost_tokens = 12;
 * @return {number}
 */
proto.ei.ContractCoopStatusResponse.ContributionInfo.prototype.getBoostTokens = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 12, 0));
};


/**
 * @param {number} value
 * @return {!proto.ei.ContractCoopStatusResponse.ContributionInfo} returns this
 */
proto.ei.ContractCoopStatusResponse.ContributionInfo.prototype.setBoostTokens = function(value) {
  return jspb.Message.setField(this, 12, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.ContractCoopStatusResponse.ContributionInfo} returns this
 */
proto.ei.ContractCoopStatusResponse.ContributionInfo.prototype.clearBoostTokens = function() {
  return jspb.Message.setField(this, 12, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ContractCoopStatusResponse.ContributionInfo.prototype.hasBoostTokens = function() {
  return jspb.Message.getField(this, 12) != null;
};


/**
 * optional uint32 boost_tokens_spent = 14;
 * @return {number}
 */
proto.ei.ContractCoopStatusResponse.ContributionInfo.prototype.getBoostTokensSpent = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 14, 0));
};


/**
 * @param {number} value
 * @return {!proto.ei.ContractCoopStatusResponse.ContributionInfo} returns this
 */
proto.ei.ContractCoopStatusResponse.ContributionInfo.prototype.setBoostTokensSpent = function(value) {
  return jspb.Message.setField(this, 14, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.ContractCoopStatusResponse.ContributionInfo} returns this
 */
proto.ei.ContractCoopStatusResponse.ContributionInfo.prototype.clearBoostTokensSpent = function() {
  return jspb.Message.setField(this, 14, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ContractCoopStatusResponse.ContributionInfo.prototype.hasBoostTokensSpent = function() {
  return jspb.Message.getField(this, 14) != null;
};


/**
 * repeated CoopBuffState buff_history = 13;
 * @return {!Array<!proto.ei.CoopBuffState>}
 */
proto.ei.ContractCoopStatusResponse.ContributionInfo.prototype.getBuffHistoryList = function() {
  return /** @type{!Array<!proto.ei.CoopBuffState>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.ei.CoopBuffState, 13));
};


/**
 * @param {!Array<!proto.ei.CoopBuffState>} value
 * @return {!proto.ei.ContractCoopStatusResponse.ContributionInfo} returns this
*/
proto.ei.ContractCoopStatusResponse.ContributionInfo.prototype.setBuffHistoryList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 13, value);
};


/**
 * @param {!proto.ei.CoopBuffState=} opt_value
 * @param {number=} opt_index
 * @return {!proto.ei.CoopBuffState}
 */
proto.ei.ContractCoopStatusResponse.ContributionInfo.prototype.addBuffHistory = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 13, opt_value, proto.ei.CoopBuffState, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.ei.ContractCoopStatusResponse.ContributionInfo} returns this
 */
proto.ei.ContractCoopStatusResponse.ContributionInfo.prototype.clearBuffHistoryList = function() {
  return this.setBuffHistoryList([]);
};


/**
 * optional double chicken_run_cooldown = 20;
 * @return {number}
 */
proto.ei.ContractCoopStatusResponse.ContributionInfo.prototype.getChickenRunCooldown = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 20, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.ei.ContractCoopStatusResponse.ContributionInfo} returns this
 */
proto.ei.ContractCoopStatusResponse.ContributionInfo.prototype.setChickenRunCooldown = function(value) {
  return jspb.Message.setField(this, 20, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.ContractCoopStatusResponse.ContributionInfo} returns this
 */
proto.ei.ContractCoopStatusResponse.ContributionInfo.prototype.clearChickenRunCooldown = function() {
  return jspb.Message.setField(this, 20, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ContractCoopStatusResponse.ContributionInfo.prototype.hasChickenRunCooldown = function() {
  return jspb.Message.getField(this, 20) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ei.ContractCoopStatusResponse.CoopGift.prototype.toObject = function(opt_includeInstance) {
  return proto.ei.ContractCoopStatusResponse.CoopGift.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ei.ContractCoopStatusResponse.CoopGift} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.ContractCoopStatusResponse.CoopGift.toObject = function(includeInstance, msg) {
  var f, obj = {
    userId: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    userName: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f,
    amount: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,
    tracking: (f = jspb.Message.getField(msg, 4)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ei.ContractCoopStatusResponse.CoopGift}
 */
proto.ei.ContractCoopStatusResponse.CoopGift.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ei.ContractCoopStatusResponse.CoopGift;
  return proto.ei.ContractCoopStatusResponse.CoopGift.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ei.ContractCoopStatusResponse.CoopGift} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ei.ContractCoopStatusResponse.CoopGift}
 */
proto.ei.ContractCoopStatusResponse.CoopGift.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserId(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserName(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setAmount(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setTracking(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ei.ContractCoopStatusResponse.CoopGift.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ei.ContractCoopStatusResponse.CoopGift.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ei.ContractCoopStatusResponse.CoopGift} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.ContractCoopStatusResponse.CoopGift.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeString(
      3,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeUint32(
      2,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * optional string user_id = 1;
 * @return {string}
 */
proto.ei.ContractCoopStatusResponse.CoopGift.prototype.getUserId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.ei.ContractCoopStatusResponse.CoopGift} returns this
 */
proto.ei.ContractCoopStatusResponse.CoopGift.prototype.setUserId = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.ContractCoopStatusResponse.CoopGift} returns this
 */
proto.ei.ContractCoopStatusResponse.CoopGift.prototype.clearUserId = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ContractCoopStatusResponse.CoopGift.prototype.hasUserId = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string user_name = 3;
 * @return {string}
 */
proto.ei.ContractCoopStatusResponse.CoopGift.prototype.getUserName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.ei.ContractCoopStatusResponse.CoopGift} returns this
 */
proto.ei.ContractCoopStatusResponse.CoopGift.prototype.setUserName = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.ContractCoopStatusResponse.CoopGift} returns this
 */
proto.ei.ContractCoopStatusResponse.CoopGift.prototype.clearUserName = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ContractCoopStatusResponse.CoopGift.prototype.hasUserName = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional uint32 amount = 2;
 * @return {number}
 */
proto.ei.ContractCoopStatusResponse.CoopGift.prototype.getAmount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.ei.ContractCoopStatusResponse.CoopGift} returns this
 */
proto.ei.ContractCoopStatusResponse.CoopGift.prototype.setAmount = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.ContractCoopStatusResponse.CoopGift} returns this
 */
proto.ei.ContractCoopStatusResponse.CoopGift.prototype.clearAmount = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ContractCoopStatusResponse.CoopGift.prototype.hasAmount = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string tracking = 4;
 * @return {string}
 */
proto.ei.ContractCoopStatusResponse.CoopGift.prototype.getTracking = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.ei.ContractCoopStatusResponse.CoopGift} returns this
 */
proto.ei.ContractCoopStatusResponse.CoopGift.prototype.setTracking = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.ContractCoopStatusResponse.CoopGift} returns this
 */
proto.ei.ContractCoopStatusResponse.CoopGift.prototype.clearTracking = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ContractCoopStatusResponse.CoopGift.prototype.hasTracking = function() {
  return jspb.Message.getField(this, 4) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ei.ContractCoopStatusResponse.ChickenRun.prototype.toObject = function(opt_includeInstance) {
  return proto.ei.ContractCoopStatusResponse.ChickenRun.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ei.ContractCoopStatusResponse.ChickenRun} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.ContractCoopStatusResponse.ChickenRun.toObject = function(includeInstance, msg) {
  var f, obj = {
    userId: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    userName: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f,
    amount: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ei.ContractCoopStatusResponse.ChickenRun}
 */
proto.ei.ContractCoopStatusResponse.ChickenRun.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ei.ContractCoopStatusResponse.ChickenRun;
  return proto.ei.ContractCoopStatusResponse.ChickenRun.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ei.ContractCoopStatusResponse.ChickenRun} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ei.ContractCoopStatusResponse.ChickenRun}
 */
proto.ei.ContractCoopStatusResponse.ChickenRun.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserId(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserName(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setAmount(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ei.ContractCoopStatusResponse.ChickenRun.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ei.ContractCoopStatusResponse.ChickenRun.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ei.ContractCoopStatusResponse.ChickenRun} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.ContractCoopStatusResponse.ChickenRun.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeString(
      3,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeUint64(
      2,
      f
    );
  }
};


/**
 * optional string user_id = 1;
 * @return {string}
 */
proto.ei.ContractCoopStatusResponse.ChickenRun.prototype.getUserId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.ei.ContractCoopStatusResponse.ChickenRun} returns this
 */
proto.ei.ContractCoopStatusResponse.ChickenRun.prototype.setUserId = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.ContractCoopStatusResponse.ChickenRun} returns this
 */
proto.ei.ContractCoopStatusResponse.ChickenRun.prototype.clearUserId = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ContractCoopStatusResponse.ChickenRun.prototype.hasUserId = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string user_name = 3;
 * @return {string}
 */
proto.ei.ContractCoopStatusResponse.ChickenRun.prototype.getUserName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.ei.ContractCoopStatusResponse.ChickenRun} returns this
 */
proto.ei.ContractCoopStatusResponse.ChickenRun.prototype.setUserName = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.ContractCoopStatusResponse.ChickenRun} returns this
 */
proto.ei.ContractCoopStatusResponse.ChickenRun.prototype.clearUserName = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ContractCoopStatusResponse.ChickenRun.prototype.hasUserName = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional uint64 amount = 2;
 * @return {number}
 */
proto.ei.ContractCoopStatusResponse.ChickenRun.prototype.getAmount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.ei.ContractCoopStatusResponse.ChickenRun} returns this
 */
proto.ei.ContractCoopStatusResponse.ChickenRun.prototype.setAmount = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.ContractCoopStatusResponse.ChickenRun} returns this
 */
proto.ei.ContractCoopStatusResponse.ChickenRun.prototype.clearAmount = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ContractCoopStatusResponse.ChickenRun.prototype.hasAmount = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional ResponseStatus response_status = 19;
 * @return {!proto.ei.ContractCoopStatusResponse.ResponseStatus}
 */
proto.ei.ContractCoopStatusResponse.prototype.getResponseStatus = function() {
  return /** @type {!proto.ei.ContractCoopStatusResponse.ResponseStatus} */ (jspb.Message.getFieldWithDefault(this, 19, 0));
};


/**
 * @param {!proto.ei.ContractCoopStatusResponse.ResponseStatus} value
 * @return {!proto.ei.ContractCoopStatusResponse} returns this
 */
proto.ei.ContractCoopStatusResponse.prototype.setResponseStatus = function(value) {
  return jspb.Message.setField(this, 19, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.ContractCoopStatusResponse} returns this
 */
proto.ei.ContractCoopStatusResponse.prototype.clearResponseStatus = function() {
  return jspb.Message.setField(this, 19, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ContractCoopStatusResponse.prototype.hasResponseStatus = function() {
  return jspb.Message.getField(this, 19) != null;
};


/**
 * optional string contract_identifier = 1;
 * @return {string}
 */
proto.ei.ContractCoopStatusResponse.prototype.getContractIdentifier = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.ei.ContractCoopStatusResponse} returns this
 */
proto.ei.ContractCoopStatusResponse.prototype.setContractIdentifier = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.ContractCoopStatusResponse} returns this
 */
proto.ei.ContractCoopStatusResponse.prototype.clearContractIdentifier = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ContractCoopStatusResponse.prototype.hasContractIdentifier = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional double total_amount = 2;
 * @return {number}
 */
proto.ei.ContractCoopStatusResponse.prototype.getTotalAmount = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 2, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.ei.ContractCoopStatusResponse} returns this
 */
proto.ei.ContractCoopStatusResponse.prototype.setTotalAmount = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.ContractCoopStatusResponse} returns this
 */
proto.ei.ContractCoopStatusResponse.prototype.clearTotalAmount = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ContractCoopStatusResponse.prototype.hasTotalAmount = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string coop_identifier = 3;
 * @return {string}
 */
proto.ei.ContractCoopStatusResponse.prototype.getCoopIdentifier = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.ei.ContractCoopStatusResponse} returns this
 */
proto.ei.ContractCoopStatusResponse.prototype.setCoopIdentifier = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.ContractCoopStatusResponse} returns this
 */
proto.ei.ContractCoopStatusResponse.prototype.clearCoopIdentifier = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ContractCoopStatusResponse.prototype.hasCoopIdentifier = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional Contract.PlayerGrade grade = 17;
 * @return {!proto.ei.Contract.PlayerGrade}
 */
proto.ei.ContractCoopStatusResponse.prototype.getGrade = function() {
  return /** @type {!proto.ei.Contract.PlayerGrade} */ (jspb.Message.getFieldWithDefault(this, 17, 0));
};


/**
 * @param {!proto.ei.Contract.PlayerGrade} value
 * @return {!proto.ei.ContractCoopStatusResponse} returns this
 */
proto.ei.ContractCoopStatusResponse.prototype.setGrade = function(value) {
  return jspb.Message.setField(this, 17, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.ContractCoopStatusResponse} returns this
 */
proto.ei.ContractCoopStatusResponse.prototype.clearGrade = function() {
  return jspb.Message.setField(this, 17, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ContractCoopStatusResponse.prototype.hasGrade = function() {
  return jspb.Message.getField(this, 17) != null;
};


/**
 * repeated ContributionInfo contributors = 4;
 * @return {!Array<!proto.ei.ContractCoopStatusResponse.ContributionInfo>}
 */
proto.ei.ContractCoopStatusResponse.prototype.getContributorsList = function() {
  return /** @type{!Array<!proto.ei.ContractCoopStatusResponse.ContributionInfo>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.ei.ContractCoopStatusResponse.ContributionInfo, 4));
};


/**
 * @param {!Array<!proto.ei.ContractCoopStatusResponse.ContributionInfo>} value
 * @return {!proto.ei.ContractCoopStatusResponse} returns this
*/
proto.ei.ContractCoopStatusResponse.prototype.setContributorsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 4, value);
};


/**
 * @param {!proto.ei.ContractCoopStatusResponse.ContributionInfo=} opt_value
 * @param {number=} opt_index
 * @return {!proto.ei.ContractCoopStatusResponse.ContributionInfo}
 */
proto.ei.ContractCoopStatusResponse.prototype.addContributors = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 4, opt_value, proto.ei.ContractCoopStatusResponse.ContributionInfo, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.ei.ContractCoopStatusResponse} returns this
 */
proto.ei.ContractCoopStatusResponse.prototype.clearContributorsList = function() {
  return this.setContributorsList([]);
};


/**
 * optional bool auto_generated = 8;
 * @return {boolean}
 */
proto.ei.ContractCoopStatusResponse.prototype.getAutoGenerated = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 8, false));
};


/**
 * @param {boolean} value
 * @return {!proto.ei.ContractCoopStatusResponse} returns this
 */
proto.ei.ContractCoopStatusResponse.prototype.setAutoGenerated = function(value) {
  return jspb.Message.setField(this, 8, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.ContractCoopStatusResponse} returns this
 */
proto.ei.ContractCoopStatusResponse.prototype.clearAutoGenerated = function() {
  return jspb.Message.setField(this, 8, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ContractCoopStatusResponse.prototype.hasAutoGenerated = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional bool public = 10;
 * @return {boolean}
 */
proto.ei.ContractCoopStatusResponse.prototype.getPublic = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 10, false));
};


/**
 * @param {boolean} value
 * @return {!proto.ei.ContractCoopStatusResponse} returns this
 */
proto.ei.ContractCoopStatusResponse.prototype.setPublic = function(value) {
  return jspb.Message.setField(this, 10, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.ContractCoopStatusResponse} returns this
 */
proto.ei.ContractCoopStatusResponse.prototype.clearPublic = function() {
  return jspb.Message.setField(this, 10, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ContractCoopStatusResponse.prototype.hasPublic = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * optional string creator_id = 9;
 * @return {string}
 */
proto.ei.ContractCoopStatusResponse.prototype.getCreatorId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.ei.ContractCoopStatusResponse} returns this
 */
proto.ei.ContractCoopStatusResponse.prototype.setCreatorId = function(value) {
  return jspb.Message.setField(this, 9, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.ContractCoopStatusResponse} returns this
 */
proto.ei.ContractCoopStatusResponse.prototype.clearCreatorId = function() {
  return jspb.Message.setField(this, 9, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ContractCoopStatusResponse.prototype.hasCreatorId = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional double seconds_remaining = 5;
 * @return {number}
 */
proto.ei.ContractCoopStatusResponse.prototype.getSecondsRemaining = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 5, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.ei.ContractCoopStatusResponse} returns this
 */
proto.ei.ContractCoopStatusResponse.prototype.setSecondsRemaining = function(value) {
  return jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.ContractCoopStatusResponse} returns this
 */
proto.ei.ContractCoopStatusResponse.prototype.clearSecondsRemaining = function() {
  return jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ContractCoopStatusResponse.prototype.hasSecondsRemaining = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional double seconds_since_all_goals_achieved = 16;
 * @return {number}
 */
proto.ei.ContractCoopStatusResponse.prototype.getSecondsSinceAllGoalsAchieved = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 16, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.ei.ContractCoopStatusResponse} returns this
 */
proto.ei.ContractCoopStatusResponse.prototype.setSecondsSinceAllGoalsAchieved = function(value) {
  return jspb.Message.setField(this, 16, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.ContractCoopStatusResponse} returns this
 */
proto.ei.ContractCoopStatusResponse.prototype.clearSecondsSinceAllGoalsAchieved = function() {
  return jspb.Message.setField(this, 16, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ContractCoopStatusResponse.prototype.hasSecondsSinceAllGoalsAchieved = function() {
  return jspb.Message.getField(this, 16) != null;
};


/**
 * optional bool all_goals_achieved = 14;
 * @return {boolean}
 */
proto.ei.ContractCoopStatusResponse.prototype.getAllGoalsAchieved = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 14, false));
};


/**
 * @param {boolean} value
 * @return {!proto.ei.ContractCoopStatusResponse} returns this
 */
proto.ei.ContractCoopStatusResponse.prototype.setAllGoalsAchieved = function(value) {
  return jspb.Message.setField(this, 14, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.ContractCoopStatusResponse} returns this
 */
proto.ei.ContractCoopStatusResponse.prototype.clearAllGoalsAchieved = function() {
  return jspb.Message.setField(this, 14, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ContractCoopStatusResponse.prototype.hasAllGoalsAchieved = function() {
  return jspb.Message.getField(this, 14) != null;
};


/**
 * optional bool all_members_reporting = 6;
 * @return {boolean}
 */
proto.ei.ContractCoopStatusResponse.prototype.getAllMembersReporting = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 6, false));
};


/**
 * @param {boolean} value
 * @return {!proto.ei.ContractCoopStatusResponse} returns this
 */
proto.ei.ContractCoopStatusResponse.prototype.setAllMembersReporting = function(value) {
  return jspb.Message.setField(this, 6, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.ContractCoopStatusResponse} returns this
 */
proto.ei.ContractCoopStatusResponse.prototype.clearAllMembersReporting = function() {
  return jspb.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ContractCoopStatusResponse.prototype.hasAllMembersReporting = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional double grace_period_seconds_remaining = 7;
 * @return {number}
 */
proto.ei.ContractCoopStatusResponse.prototype.getGracePeriodSecondsRemaining = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 7, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.ei.ContractCoopStatusResponse} returns this
 */
proto.ei.ContractCoopStatusResponse.prototype.setGracePeriodSecondsRemaining = function(value) {
  return jspb.Message.setField(this, 7, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.ContractCoopStatusResponse} returns this
 */
proto.ei.ContractCoopStatusResponse.prototype.clearGracePeriodSecondsRemaining = function() {
  return jspb.Message.setField(this, 7, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ContractCoopStatusResponse.prototype.hasGracePeriodSecondsRemaining = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional bool cleared_for_exit = 15;
 * @return {boolean}
 */
proto.ei.ContractCoopStatusResponse.prototype.getClearedForExit = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 15, false));
};


/**
 * @param {boolean} value
 * @return {!proto.ei.ContractCoopStatusResponse} returns this
 */
proto.ei.ContractCoopStatusResponse.prototype.setClearedForExit = function(value) {
  return jspb.Message.setField(this, 15, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.ContractCoopStatusResponse} returns this
 */
proto.ei.ContractCoopStatusResponse.prototype.clearClearedForExit = function() {
  return jspb.Message.setField(this, 15, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ContractCoopStatusResponse.prototype.hasClearedForExit = function() {
  return jspb.Message.getField(this, 15) != null;
};


/**
 * repeated CoopGift gifts = 11;
 * @return {!Array<!proto.ei.ContractCoopStatusResponse.CoopGift>}
 */
proto.ei.ContractCoopStatusResponse.prototype.getGiftsList = function() {
  return /** @type{!Array<!proto.ei.ContractCoopStatusResponse.CoopGift>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.ei.ContractCoopStatusResponse.CoopGift, 11));
};


/**
 * @param {!Array<!proto.ei.ContractCoopStatusResponse.CoopGift>} value
 * @return {!proto.ei.ContractCoopStatusResponse} returns this
*/
proto.ei.ContractCoopStatusResponse.prototype.setGiftsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 11, value);
};


/**
 * @param {!proto.ei.ContractCoopStatusResponse.CoopGift=} opt_value
 * @param {number=} opt_index
 * @return {!proto.ei.ContractCoopStatusResponse.CoopGift}
 */
proto.ei.ContractCoopStatusResponse.prototype.addGifts = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 11, opt_value, proto.ei.ContractCoopStatusResponse.CoopGift, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.ei.ContractCoopStatusResponse} returns this
 */
proto.ei.ContractCoopStatusResponse.prototype.clearGiftsList = function() {
  return this.setGiftsList([]);
};


/**
 * repeated ChickenRun chicken_runs = 13;
 * @return {!Array<!proto.ei.ContractCoopStatusResponse.ChickenRun>}
 */
proto.ei.ContractCoopStatusResponse.prototype.getChickenRunsList = function() {
  return /** @type{!Array<!proto.ei.ContractCoopStatusResponse.ChickenRun>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.ei.ContractCoopStatusResponse.ChickenRun, 13));
};


/**
 * @param {!Array<!proto.ei.ContractCoopStatusResponse.ChickenRun>} value
 * @return {!proto.ei.ContractCoopStatusResponse} returns this
*/
proto.ei.ContractCoopStatusResponse.prototype.setChickenRunsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 13, value);
};


/**
 * @param {!proto.ei.ContractCoopStatusResponse.ChickenRun=} opt_value
 * @param {number=} opt_index
 * @return {!proto.ei.ContractCoopStatusResponse.ChickenRun}
 */
proto.ei.ContractCoopStatusResponse.prototype.addChickenRuns = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 13, opt_value, proto.ei.ContractCoopStatusResponse.ChickenRun, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.ei.ContractCoopStatusResponse} returns this
 */
proto.ei.ContractCoopStatusResponse.prototype.clearChickenRunsList = function() {
  return this.setChickenRunsList([]);
};


/**
 * optional double local_timestamp = 12;
 * @return {number}
 */
proto.ei.ContractCoopStatusResponse.prototype.getLocalTimestamp = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 12, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.ei.ContractCoopStatusResponse} returns this
 */
proto.ei.ContractCoopStatusResponse.prototype.setLocalTimestamp = function(value) {
  return jspb.Message.setField(this, 12, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.ContractCoopStatusResponse} returns this
 */
proto.ei.ContractCoopStatusResponse.prototype.clearLocalTimestamp = function() {
  return jspb.Message.setField(this, 12, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ContractCoopStatusResponse.prototype.hasLocalTimestamp = function() {
  return jspb.Message.getField(this, 12) != null;
};


/**
 * optional double last_sync = 18;
 * @return {number}
 */
proto.ei.ContractCoopStatusResponse.prototype.getLastSync = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 18, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.ei.ContractCoopStatusResponse} returns this
 */
proto.ei.ContractCoopStatusResponse.prototype.setLastSync = function(value) {
  return jspb.Message.setField(this, 18, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.ContractCoopStatusResponse} returns this
 */
proto.ei.ContractCoopStatusResponse.prototype.clearLastSync = function() {
  return jspb.Message.setField(this, 18, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ContractCoopStatusResponse.prototype.hasLastSync = function() {
  return jspb.Message.getField(this, 18) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.ei.LocalContract.repeatedFields_ = [21];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ei.LocalContract.prototype.toObject = function(opt_includeInstance) {
  return proto.ei.LocalContract.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ei.LocalContract} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.LocalContract.toObject = function(includeInstance, msg) {
  var f, obj = {
    contract: (f = msg.getContract()) && proto.ei.Contract.toObject(includeInstance, f),
    coopIdentifier: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,
    accepted: (f = jspb.Message.getBooleanField(msg, 7)) == null ? undefined : f,
    timeAccepted: (f = jspb.Message.getOptionalFloatingPointField(msg, 3)) == null ? undefined : f,
    cancelled: (f = jspb.Message.getBooleanField(msg, 4)) == null ? undefined : f,
    pb_new: (f = jspb.Message.getBooleanField(msg, 8)) == null ? undefined : f,
    coopSharedEndTime: (f = jspb.Message.getOptionalFloatingPointField(msg, 5)) == null ? undefined : f,
    coopSimulationEndTime: (f = jspb.Message.getOptionalFloatingPointField(msg, 22)) == null ? undefined : f,
    coopGracePeriodEndTime: (f = jspb.Message.getOptionalFloatingPointField(msg, 9)) == null ? undefined : f,
    coopContributionFinalized: (f = jspb.Message.getBooleanField(msg, 10)) == null ? undefined : f,
    coopLastUploadedContribution: (f = jspb.Message.getOptionalFloatingPointField(msg, 11)) == null ? undefined : f,
    coopUserId: (f = jspb.Message.getField(msg, 13)) == null ? undefined : f,
    coopShareFarm: (f = jspb.Message.getBooleanField(msg, 17)) == null ? undefined : f,
    lastAmountWhenRewardGiven: (f = jspb.Message.getOptionalFloatingPointField(msg, 6)) == null ? undefined : f,
    numGoalsAchieved: (f = jspb.Message.getField(msg, 14)) == null ? undefined : f,
    boostsUsed: (f = jspb.Message.getField(msg, 12)) == null ? undefined : f,
    pointsReplay: (f = jspb.Message.getBooleanField(msg, 20)) == null ? undefined : f,
    league: (f = jspb.Message.getField(msg, 15)) == null ? undefined : f,
    grade: (f = jspb.Message.getField(msg, 18)) == null ? undefined : f,
    lastNagTime: (f = jspb.Message.getOptionalFloatingPointField(msg, 16)) == null ? undefined : f,
    evaluation: (f = msg.getEvaluation()) && proto.ei.ContractEvaluation.toObject(includeInstance, f),
    reportedUuidsList: (f = jspb.Message.getRepeatedField(msg, 21)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ei.LocalContract}
 */
proto.ei.LocalContract.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ei.LocalContract;
  return proto.ei.LocalContract.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ei.LocalContract} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ei.LocalContract}
 */
proto.ei.LocalContract.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.ei.Contract;
      reader.readMessage(value,proto.ei.Contract.deserializeBinaryFromReader);
      msg.setContract(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setCoopIdentifier(value);
      break;
    case 7:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setAccepted(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setTimeAccepted(value);
      break;
    case 4:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setCancelled(value);
      break;
    case 8:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setNew(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setCoopSharedEndTime(value);
      break;
    case 22:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setCoopSimulationEndTime(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setCoopGracePeriodEndTime(value);
      break;
    case 10:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setCoopContributionFinalized(value);
      break;
    case 11:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setCoopLastUploadedContribution(value);
      break;
    case 13:
      var value = /** @type {string} */ (reader.readString());
      msg.setCoopUserId(value);
      break;
    case 17:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setCoopShareFarm(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setLastAmountWhenRewardGiven(value);
      break;
    case 14:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setNumGoalsAchieved(value);
      break;
    case 12:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setBoostsUsed(value);
      break;
    case 20:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setPointsReplay(value);
      break;
    case 15:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setLeague(value);
      break;
    case 18:
      var value = /** @type {!proto.ei.Contract.PlayerGrade} */ (reader.readEnum());
      msg.setGrade(value);
      break;
    case 16:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setLastNagTime(value);
      break;
    case 19:
      var value = new proto.ei.ContractEvaluation;
      reader.readMessage(value,proto.ei.ContractEvaluation.deserializeBinaryFromReader);
      msg.setEvaluation(value);
      break;
    case 21:
      var value = /** @type {string} */ (reader.readString());
      msg.addReportedUuids(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ei.LocalContract.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ei.LocalContract.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ei.LocalContract} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.LocalContract.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getContract();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.ei.Contract.serializeBinaryToWriter
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 7));
  if (f != null) {
    writer.writeBool(
      7,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeDouble(
      3,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeBool(
      4,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 8));
  if (f != null) {
    writer.writeBool(
      8,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeDouble(
      5,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 22));
  if (f != null) {
    writer.writeDouble(
      22,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 9));
  if (f != null) {
    writer.writeDouble(
      9,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 10));
  if (f != null) {
    writer.writeBool(
      10,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 11));
  if (f != null) {
    writer.writeDouble(
      11,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 13));
  if (f != null) {
    writer.writeString(
      13,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 17));
  if (f != null) {
    writer.writeBool(
      17,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeDouble(
      6,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 14));
  if (f != null) {
    writer.writeUint32(
      14,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 12));
  if (f != null) {
    writer.writeUint32(
      12,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 20));
  if (f != null) {
    writer.writeBool(
      20,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 15));
  if (f != null) {
    writer.writeUint32(
      15,
      f
    );
  }
  f = /** @type {!proto.ei.Contract.PlayerGrade} */ (jspb.Message.getField(message, 18));
  if (f != null) {
    writer.writeEnum(
      18,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 16));
  if (f != null) {
    writer.writeDouble(
      16,
      f
    );
  }
  f = message.getEvaluation();
  if (f != null) {
    writer.writeMessage(
      19,
      f,
      proto.ei.ContractEvaluation.serializeBinaryToWriter
    );
  }
  f = message.getReportedUuidsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      21,
      f
    );
  }
};


/**
 * optional Contract contract = 1;
 * @return {?proto.ei.Contract}
 */
proto.ei.LocalContract.prototype.getContract = function() {
  return /** @type{?proto.ei.Contract} */ (
    jspb.Message.getWrapperField(this, proto.ei.Contract, 1));
};


/**
 * @param {?proto.ei.Contract|undefined} value
 * @return {!proto.ei.LocalContract} returns this
*/
proto.ei.LocalContract.prototype.setContract = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.ei.LocalContract} returns this
 */
proto.ei.LocalContract.prototype.clearContract = function() {
  return this.setContract(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.LocalContract.prototype.hasContract = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string coop_identifier = 2;
 * @return {string}
 */
proto.ei.LocalContract.prototype.getCoopIdentifier = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.ei.LocalContract} returns this
 */
proto.ei.LocalContract.prototype.setCoopIdentifier = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.LocalContract} returns this
 */
proto.ei.LocalContract.prototype.clearCoopIdentifier = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.LocalContract.prototype.hasCoopIdentifier = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional bool accepted = 7;
 * @return {boolean}
 */
proto.ei.LocalContract.prototype.getAccepted = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 7, false));
};


/**
 * @param {boolean} value
 * @return {!proto.ei.LocalContract} returns this
 */
proto.ei.LocalContract.prototype.setAccepted = function(value) {
  return jspb.Message.setField(this, 7, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.LocalContract} returns this
 */
proto.ei.LocalContract.prototype.clearAccepted = function() {
  return jspb.Message.setField(this, 7, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.LocalContract.prototype.hasAccepted = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional double time_accepted = 3;
 * @return {number}
 */
proto.ei.LocalContract.prototype.getTimeAccepted = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 3, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.ei.LocalContract} returns this
 */
proto.ei.LocalContract.prototype.setTimeAccepted = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.LocalContract} returns this
 */
proto.ei.LocalContract.prototype.clearTimeAccepted = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.LocalContract.prototype.hasTimeAccepted = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional bool cancelled = 4;
 * @return {boolean}
 */
proto.ei.LocalContract.prototype.getCancelled = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 4, false));
};


/**
 * @param {boolean} value
 * @return {!proto.ei.LocalContract} returns this
 */
proto.ei.LocalContract.prototype.setCancelled = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.LocalContract} returns this
 */
proto.ei.LocalContract.prototype.clearCancelled = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.LocalContract.prototype.hasCancelled = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional bool new = 8;
 * @return {boolean}
 */
proto.ei.LocalContract.prototype.getNew = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 8, false));
};


/**
 * @param {boolean} value
 * @return {!proto.ei.LocalContract} returns this
 */
proto.ei.LocalContract.prototype.setNew = function(value) {
  return jspb.Message.setField(this, 8, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.LocalContract} returns this
 */
proto.ei.LocalContract.prototype.clearNew = function() {
  return jspb.Message.setField(this, 8, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.LocalContract.prototype.hasNew = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional double coop_shared_end_time = 5;
 * @return {number}
 */
proto.ei.LocalContract.prototype.getCoopSharedEndTime = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 5, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.ei.LocalContract} returns this
 */
proto.ei.LocalContract.prototype.setCoopSharedEndTime = function(value) {
  return jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.LocalContract} returns this
 */
proto.ei.LocalContract.prototype.clearCoopSharedEndTime = function() {
  return jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.LocalContract.prototype.hasCoopSharedEndTime = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional double coop_simulation_end_time = 22;
 * @return {number}
 */
proto.ei.LocalContract.prototype.getCoopSimulationEndTime = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 22, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.ei.LocalContract} returns this
 */
proto.ei.LocalContract.prototype.setCoopSimulationEndTime = function(value) {
  return jspb.Message.setField(this, 22, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.LocalContract} returns this
 */
proto.ei.LocalContract.prototype.clearCoopSimulationEndTime = function() {
  return jspb.Message.setField(this, 22, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.LocalContract.prototype.hasCoopSimulationEndTime = function() {
  return jspb.Message.getField(this, 22) != null;
};


/**
 * optional double coop_grace_period_end_time = 9;
 * @return {number}
 */
proto.ei.LocalContract.prototype.getCoopGracePeriodEndTime = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 9, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.ei.LocalContract} returns this
 */
proto.ei.LocalContract.prototype.setCoopGracePeriodEndTime = function(value) {
  return jspb.Message.setField(this, 9, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.LocalContract} returns this
 */
proto.ei.LocalContract.prototype.clearCoopGracePeriodEndTime = function() {
  return jspb.Message.setField(this, 9, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.LocalContract.prototype.hasCoopGracePeriodEndTime = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional bool coop_contribution_finalized = 10;
 * @return {boolean}
 */
proto.ei.LocalContract.prototype.getCoopContributionFinalized = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 10, false));
};


/**
 * @param {boolean} value
 * @return {!proto.ei.LocalContract} returns this
 */
proto.ei.LocalContract.prototype.setCoopContributionFinalized = function(value) {
  return jspb.Message.setField(this, 10, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.LocalContract} returns this
 */
proto.ei.LocalContract.prototype.clearCoopContributionFinalized = function() {
  return jspb.Message.setField(this, 10, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.LocalContract.prototype.hasCoopContributionFinalized = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * optional double coop_last_uploaded_contribution = 11;
 * @return {number}
 */
proto.ei.LocalContract.prototype.getCoopLastUploadedContribution = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 11, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.ei.LocalContract} returns this
 */
proto.ei.LocalContract.prototype.setCoopLastUploadedContribution = function(value) {
  return jspb.Message.setField(this, 11, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.LocalContract} returns this
 */
proto.ei.LocalContract.prototype.clearCoopLastUploadedContribution = function() {
  return jspb.Message.setField(this, 11, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.LocalContract.prototype.hasCoopLastUploadedContribution = function() {
  return jspb.Message.getField(this, 11) != null;
};


/**
 * optional string coop_user_id = 13;
 * @return {string}
 */
proto.ei.LocalContract.prototype.getCoopUserId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 13, ""));
};


/**
 * @param {string} value
 * @return {!proto.ei.LocalContract} returns this
 */
proto.ei.LocalContract.prototype.setCoopUserId = function(value) {
  return jspb.Message.setField(this, 13, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.LocalContract} returns this
 */
proto.ei.LocalContract.prototype.clearCoopUserId = function() {
  return jspb.Message.setField(this, 13, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.LocalContract.prototype.hasCoopUserId = function() {
  return jspb.Message.getField(this, 13) != null;
};


/**
 * optional bool coop_share_farm = 17;
 * @return {boolean}
 */
proto.ei.LocalContract.prototype.getCoopShareFarm = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 17, false));
};


/**
 * @param {boolean} value
 * @return {!proto.ei.LocalContract} returns this
 */
proto.ei.LocalContract.prototype.setCoopShareFarm = function(value) {
  return jspb.Message.setField(this, 17, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.LocalContract} returns this
 */
proto.ei.LocalContract.prototype.clearCoopShareFarm = function() {
  return jspb.Message.setField(this, 17, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.LocalContract.prototype.hasCoopShareFarm = function() {
  return jspb.Message.getField(this, 17) != null;
};


/**
 * optional double last_amount_when_reward_given = 6;
 * @return {number}
 */
proto.ei.LocalContract.prototype.getLastAmountWhenRewardGiven = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 6, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.ei.LocalContract} returns this
 */
proto.ei.LocalContract.prototype.setLastAmountWhenRewardGiven = function(value) {
  return jspb.Message.setField(this, 6, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.LocalContract} returns this
 */
proto.ei.LocalContract.prototype.clearLastAmountWhenRewardGiven = function() {
  return jspb.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.LocalContract.prototype.hasLastAmountWhenRewardGiven = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional uint32 num_goals_achieved = 14;
 * @return {number}
 */
proto.ei.LocalContract.prototype.getNumGoalsAchieved = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 14, 0));
};


/**
 * @param {number} value
 * @return {!proto.ei.LocalContract} returns this
 */
proto.ei.LocalContract.prototype.setNumGoalsAchieved = function(value) {
  return jspb.Message.setField(this, 14, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.LocalContract} returns this
 */
proto.ei.LocalContract.prototype.clearNumGoalsAchieved = function() {
  return jspb.Message.setField(this, 14, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.LocalContract.prototype.hasNumGoalsAchieved = function() {
  return jspb.Message.getField(this, 14) != null;
};


/**
 * optional uint32 boosts_used = 12;
 * @return {number}
 */
proto.ei.LocalContract.prototype.getBoostsUsed = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 12, 0));
};


/**
 * @param {number} value
 * @return {!proto.ei.LocalContract} returns this
 */
proto.ei.LocalContract.prototype.setBoostsUsed = function(value) {
  return jspb.Message.setField(this, 12, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.LocalContract} returns this
 */
proto.ei.LocalContract.prototype.clearBoostsUsed = function() {
  return jspb.Message.setField(this, 12, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.LocalContract.prototype.hasBoostsUsed = function() {
  return jspb.Message.getField(this, 12) != null;
};


/**
 * optional bool points_replay = 20;
 * @return {boolean}
 */
proto.ei.LocalContract.prototype.getPointsReplay = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 20, false));
};


/**
 * @param {boolean} value
 * @return {!proto.ei.LocalContract} returns this
 */
proto.ei.LocalContract.prototype.setPointsReplay = function(value) {
  return jspb.Message.setField(this, 20, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.LocalContract} returns this
 */
proto.ei.LocalContract.prototype.clearPointsReplay = function() {
  return jspb.Message.setField(this, 20, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.LocalContract.prototype.hasPointsReplay = function() {
  return jspb.Message.getField(this, 20) != null;
};


/**
 * optional uint32 league = 15;
 * @return {number}
 */
proto.ei.LocalContract.prototype.getLeague = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 15, 0));
};


/**
 * @param {number} value
 * @return {!proto.ei.LocalContract} returns this
 */
proto.ei.LocalContract.prototype.setLeague = function(value) {
  return jspb.Message.setField(this, 15, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.LocalContract} returns this
 */
proto.ei.LocalContract.prototype.clearLeague = function() {
  return jspb.Message.setField(this, 15, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.LocalContract.prototype.hasLeague = function() {
  return jspb.Message.getField(this, 15) != null;
};


/**
 * optional Contract.PlayerGrade grade = 18;
 * @return {!proto.ei.Contract.PlayerGrade}
 */
proto.ei.LocalContract.prototype.getGrade = function() {
  return /** @type {!proto.ei.Contract.PlayerGrade} */ (jspb.Message.getFieldWithDefault(this, 18, 0));
};


/**
 * @param {!proto.ei.Contract.PlayerGrade} value
 * @return {!proto.ei.LocalContract} returns this
 */
proto.ei.LocalContract.prototype.setGrade = function(value) {
  return jspb.Message.setField(this, 18, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.LocalContract} returns this
 */
proto.ei.LocalContract.prototype.clearGrade = function() {
  return jspb.Message.setField(this, 18, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.LocalContract.prototype.hasGrade = function() {
  return jspb.Message.getField(this, 18) != null;
};


/**
 * optional double last_nag_time = 16;
 * @return {number}
 */
proto.ei.LocalContract.prototype.getLastNagTime = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 16, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.ei.LocalContract} returns this
 */
proto.ei.LocalContract.prototype.setLastNagTime = function(value) {
  return jspb.Message.setField(this, 16, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.LocalContract} returns this
 */
proto.ei.LocalContract.prototype.clearLastNagTime = function() {
  return jspb.Message.setField(this, 16, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.LocalContract.prototype.hasLastNagTime = function() {
  return jspb.Message.getField(this, 16) != null;
};


/**
 * optional ContractEvaluation evaluation = 19;
 * @return {?proto.ei.ContractEvaluation}
 */
proto.ei.LocalContract.prototype.getEvaluation = function() {
  return /** @type{?proto.ei.ContractEvaluation} */ (
    jspb.Message.getWrapperField(this, proto.ei.ContractEvaluation, 19));
};


/**
 * @param {?proto.ei.ContractEvaluation|undefined} value
 * @return {!proto.ei.LocalContract} returns this
*/
proto.ei.LocalContract.prototype.setEvaluation = function(value) {
  return jspb.Message.setWrapperField(this, 19, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.ei.LocalContract} returns this
 */
proto.ei.LocalContract.prototype.clearEvaluation = function() {
  return this.setEvaluation(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.LocalContract.prototype.hasEvaluation = function() {
  return jspb.Message.getField(this, 19) != null;
};


/**
 * repeated string reported_uuids = 21;
 * @return {!Array<string>}
 */
proto.ei.LocalContract.prototype.getReportedUuidsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 21));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.ei.LocalContract} returns this
 */
proto.ei.LocalContract.prototype.setReportedUuidsList = function(value) {
  return jspb.Message.setField(this, 21, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.ei.LocalContract} returns this
 */
proto.ei.LocalContract.prototype.addReportedUuids = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 21, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.ei.LocalContract} returns this
 */
proto.ei.LocalContract.prototype.clearReportedUuidsList = function() {
  return this.setReportedUuidsList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.ei.MyContracts.repeatedFields_ = [3,1,2,4];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ei.MyContracts.prototype.toObject = function(opt_includeInstance) {
  return proto.ei.MyContracts.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ei.MyContracts} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.MyContracts.toObject = function(includeInstance, msg) {
  var f, obj = {
    contractIdsSeenList: (f = jspb.Message.getRepeatedField(msg, 3)) == null ? undefined : f,
    contractsList: jspb.Message.toObjectList(msg.getContractsList(),
    proto.ei.LocalContract.toObject, includeInstance),
    archiveList: jspb.Message.toObjectList(msg.getArchiveList(),
    proto.ei.LocalContract.toObject, includeInstance),
    currentCoopStatusesList: jspb.Message.toObjectList(msg.getCurrentCoopStatusesList(),
    proto.ei.ContractCoopStatusResponse.toObject, includeInstance),
    lastCpi: (f = msg.getLastCpi()) && proto.ei.ContractPlayerInfo.toObject(includeInstance, f),
    initialGradeRevealed: (f = jspb.Message.getBooleanField(msg, 6)) == null ? undefined : f,
    lastGradeProgressShown: (f = jspb.Message.getOptionalFloatingPointField(msg, 7)) == null ? undefined : f,
    showAdvancedEvaluations: (f = jspb.Message.getBooleanField(msg, 8)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ei.MyContracts}
 */
proto.ei.MyContracts.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ei.MyContracts;
  return proto.ei.MyContracts.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ei.MyContracts} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ei.MyContracts}
 */
proto.ei.MyContracts.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.addContractIdsSeen(value);
      break;
    case 1:
      var value = new proto.ei.LocalContract;
      reader.readMessage(value,proto.ei.LocalContract.deserializeBinaryFromReader);
      msg.addContracts(value);
      break;
    case 2:
      var value = new proto.ei.LocalContract;
      reader.readMessage(value,proto.ei.LocalContract.deserializeBinaryFromReader);
      msg.addArchive(value);
      break;
    case 4:
      var value = new proto.ei.ContractCoopStatusResponse;
      reader.readMessage(value,proto.ei.ContractCoopStatusResponse.deserializeBinaryFromReader);
      msg.addCurrentCoopStatuses(value);
      break;
    case 5:
      var value = new proto.ei.ContractPlayerInfo;
      reader.readMessage(value,proto.ei.ContractPlayerInfo.deserializeBinaryFromReader);
      msg.setLastCpi(value);
      break;
    case 6:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setInitialGradeRevealed(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setLastGradeProgressShown(value);
      break;
    case 8:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setShowAdvancedEvaluations(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ei.MyContracts.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ei.MyContracts.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ei.MyContracts} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.MyContracts.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getContractIdsSeenList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      3,
      f
    );
  }
  f = message.getContractsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.ei.LocalContract.serializeBinaryToWriter
    );
  }
  f = message.getArchiveList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.ei.LocalContract.serializeBinaryToWriter
    );
  }
  f = message.getCurrentCoopStatusesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      4,
      f,
      proto.ei.ContractCoopStatusResponse.serializeBinaryToWriter
    );
  }
  f = message.getLastCpi();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.ei.ContractPlayerInfo.serializeBinaryToWriter
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeBool(
      6,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 7));
  if (f != null) {
    writer.writeDouble(
      7,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 8));
  if (f != null) {
    writer.writeBool(
      8,
      f
    );
  }
};


/**
 * repeated string contract_ids_seen = 3;
 * @return {!Array<string>}
 */
proto.ei.MyContracts.prototype.getContractIdsSeenList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 3));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.ei.MyContracts} returns this
 */
proto.ei.MyContracts.prototype.setContractIdsSeenList = function(value) {
  return jspb.Message.setField(this, 3, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.ei.MyContracts} returns this
 */
proto.ei.MyContracts.prototype.addContractIdsSeen = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 3, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.ei.MyContracts} returns this
 */
proto.ei.MyContracts.prototype.clearContractIdsSeenList = function() {
  return this.setContractIdsSeenList([]);
};


/**
 * repeated LocalContract contracts = 1;
 * @return {!Array<!proto.ei.LocalContract>}
 */
proto.ei.MyContracts.prototype.getContractsList = function() {
  return /** @type{!Array<!proto.ei.LocalContract>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.ei.LocalContract, 1));
};


/**
 * @param {!Array<!proto.ei.LocalContract>} value
 * @return {!proto.ei.MyContracts} returns this
*/
proto.ei.MyContracts.prototype.setContractsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.ei.LocalContract=} opt_value
 * @param {number=} opt_index
 * @return {!proto.ei.LocalContract}
 */
proto.ei.MyContracts.prototype.addContracts = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.ei.LocalContract, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.ei.MyContracts} returns this
 */
proto.ei.MyContracts.prototype.clearContractsList = function() {
  return this.setContractsList([]);
};


/**
 * repeated LocalContract archive = 2;
 * @return {!Array<!proto.ei.LocalContract>}
 */
proto.ei.MyContracts.prototype.getArchiveList = function() {
  return /** @type{!Array<!proto.ei.LocalContract>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.ei.LocalContract, 2));
};


/**
 * @param {!Array<!proto.ei.LocalContract>} value
 * @return {!proto.ei.MyContracts} returns this
*/
proto.ei.MyContracts.prototype.setArchiveList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.ei.LocalContract=} opt_value
 * @param {number=} opt_index
 * @return {!proto.ei.LocalContract}
 */
proto.ei.MyContracts.prototype.addArchive = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.ei.LocalContract, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.ei.MyContracts} returns this
 */
proto.ei.MyContracts.prototype.clearArchiveList = function() {
  return this.setArchiveList([]);
};


/**
 * repeated ContractCoopStatusResponse current_coop_statuses = 4;
 * @return {!Array<!proto.ei.ContractCoopStatusResponse>}
 */
proto.ei.MyContracts.prototype.getCurrentCoopStatusesList = function() {
  return /** @type{!Array<!proto.ei.ContractCoopStatusResponse>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.ei.ContractCoopStatusResponse, 4));
};


/**
 * @param {!Array<!proto.ei.ContractCoopStatusResponse>} value
 * @return {!proto.ei.MyContracts} returns this
*/
proto.ei.MyContracts.prototype.setCurrentCoopStatusesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 4, value);
};


/**
 * @param {!proto.ei.ContractCoopStatusResponse=} opt_value
 * @param {number=} opt_index
 * @return {!proto.ei.ContractCoopStatusResponse}
 */
proto.ei.MyContracts.prototype.addCurrentCoopStatuses = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 4, opt_value, proto.ei.ContractCoopStatusResponse, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.ei.MyContracts} returns this
 */
proto.ei.MyContracts.prototype.clearCurrentCoopStatusesList = function() {
  return this.setCurrentCoopStatusesList([]);
};


/**
 * optional ContractPlayerInfo last_cpi = 5;
 * @return {?proto.ei.ContractPlayerInfo}
 */
proto.ei.MyContracts.prototype.getLastCpi = function() {
  return /** @type{?proto.ei.ContractPlayerInfo} */ (
    jspb.Message.getWrapperField(this, proto.ei.ContractPlayerInfo, 5));
};


/**
 * @param {?proto.ei.ContractPlayerInfo|undefined} value
 * @return {!proto.ei.MyContracts} returns this
*/
proto.ei.MyContracts.prototype.setLastCpi = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.ei.MyContracts} returns this
 */
proto.ei.MyContracts.prototype.clearLastCpi = function() {
  return this.setLastCpi(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.MyContracts.prototype.hasLastCpi = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional bool initial_grade_revealed = 6;
 * @return {boolean}
 */
proto.ei.MyContracts.prototype.getInitialGradeRevealed = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 6, false));
};


/**
 * @param {boolean} value
 * @return {!proto.ei.MyContracts} returns this
 */
proto.ei.MyContracts.prototype.setInitialGradeRevealed = function(value) {
  return jspb.Message.setField(this, 6, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.MyContracts} returns this
 */
proto.ei.MyContracts.prototype.clearInitialGradeRevealed = function() {
  return jspb.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.MyContracts.prototype.hasInitialGradeRevealed = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional double last_grade_progress_shown = 7;
 * @return {number}
 */
proto.ei.MyContracts.prototype.getLastGradeProgressShown = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 7, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.ei.MyContracts} returns this
 */
proto.ei.MyContracts.prototype.setLastGradeProgressShown = function(value) {
  return jspb.Message.setField(this, 7, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.MyContracts} returns this
 */
proto.ei.MyContracts.prototype.clearLastGradeProgressShown = function() {
  return jspb.Message.setField(this, 7, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.MyContracts.prototype.hasLastGradeProgressShown = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional bool show_advanced_evaluations = 8;
 * @return {boolean}
 */
proto.ei.MyContracts.prototype.getShowAdvancedEvaluations = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 8, false));
};


/**
 * @param {boolean} value
 * @return {!proto.ei.MyContracts} returns this
 */
proto.ei.MyContracts.prototype.setShowAdvancedEvaluations = function(value) {
  return jspb.Message.setField(this, 8, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.MyContracts} returns this
 */
proto.ei.MyContracts.prototype.clearShowAdvancedEvaluations = function() {
  return jspb.Message.setField(this, 8, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.MyContracts.prototype.hasShowAdvancedEvaluations = function() {
  return jspb.Message.getField(this, 8) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ei.QueryCoopRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.ei.QueryCoopRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ei.QueryCoopRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.QueryCoopRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    rinfo: (f = msg.getRinfo()) && proto.ei.BasicRequestInfo.toObject(includeInstance, f),
    contractIdentifier: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    coopIdentifier: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,
    league: (f = jspb.Message.getField(msg, 4)) == null ? undefined : f,
    grade: (f = jspb.Message.getField(msg, 6)) == null ? undefined : f,
    clientVersion: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ei.QueryCoopRequest}
 */
proto.ei.QueryCoopRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ei.QueryCoopRequest;
  return proto.ei.QueryCoopRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ei.QueryCoopRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ei.QueryCoopRequest}
 */
proto.ei.QueryCoopRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 5:
      var value = new proto.ei.BasicRequestInfo;
      reader.readMessage(value,proto.ei.BasicRequestInfo.deserializeBinaryFromReader);
      msg.setRinfo(value);
      break;
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setContractIdentifier(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setCoopIdentifier(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setLeague(value);
      break;
    case 6:
      var value = /** @type {!proto.ei.Contract.PlayerGrade} */ (reader.readEnum());
      msg.setGrade(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setClientVersion(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ei.QueryCoopRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ei.QueryCoopRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ei.QueryCoopRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.QueryCoopRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRinfo();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.ei.BasicRequestInfo.serializeBinaryToWriter
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeUint32(
      4,
      f
    );
  }
  f = /** @type {!proto.ei.Contract.PlayerGrade} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeEnum(
      6,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeUint32(
      3,
      f
    );
  }
};


/**
 * optional BasicRequestInfo rinfo = 5;
 * @return {?proto.ei.BasicRequestInfo}
 */
proto.ei.QueryCoopRequest.prototype.getRinfo = function() {
  return /** @type{?proto.ei.BasicRequestInfo} */ (
    jspb.Message.getWrapperField(this, proto.ei.BasicRequestInfo, 5));
};


/**
 * @param {?proto.ei.BasicRequestInfo|undefined} value
 * @return {!proto.ei.QueryCoopRequest} returns this
*/
proto.ei.QueryCoopRequest.prototype.setRinfo = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.ei.QueryCoopRequest} returns this
 */
proto.ei.QueryCoopRequest.prototype.clearRinfo = function() {
  return this.setRinfo(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.QueryCoopRequest.prototype.hasRinfo = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional string contract_identifier = 1;
 * @return {string}
 */
proto.ei.QueryCoopRequest.prototype.getContractIdentifier = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.ei.QueryCoopRequest} returns this
 */
proto.ei.QueryCoopRequest.prototype.setContractIdentifier = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.QueryCoopRequest} returns this
 */
proto.ei.QueryCoopRequest.prototype.clearContractIdentifier = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.QueryCoopRequest.prototype.hasContractIdentifier = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string coop_identifier = 2;
 * @return {string}
 */
proto.ei.QueryCoopRequest.prototype.getCoopIdentifier = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.ei.QueryCoopRequest} returns this
 */
proto.ei.QueryCoopRequest.prototype.setCoopIdentifier = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.QueryCoopRequest} returns this
 */
proto.ei.QueryCoopRequest.prototype.clearCoopIdentifier = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.QueryCoopRequest.prototype.hasCoopIdentifier = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional uint32 league = 4;
 * @return {number}
 */
proto.ei.QueryCoopRequest.prototype.getLeague = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.ei.QueryCoopRequest} returns this
 */
proto.ei.QueryCoopRequest.prototype.setLeague = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.QueryCoopRequest} returns this
 */
proto.ei.QueryCoopRequest.prototype.clearLeague = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.QueryCoopRequest.prototype.hasLeague = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional Contract.PlayerGrade grade = 6;
 * @return {!proto.ei.Contract.PlayerGrade}
 */
proto.ei.QueryCoopRequest.prototype.getGrade = function() {
  return /** @type {!proto.ei.Contract.PlayerGrade} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {!proto.ei.Contract.PlayerGrade} value
 * @return {!proto.ei.QueryCoopRequest} returns this
 */
proto.ei.QueryCoopRequest.prototype.setGrade = function(value) {
  return jspb.Message.setField(this, 6, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.QueryCoopRequest} returns this
 */
proto.ei.QueryCoopRequest.prototype.clearGrade = function() {
  return jspb.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.QueryCoopRequest.prototype.hasGrade = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional uint32 client_version = 3;
 * @return {number}
 */
proto.ei.QueryCoopRequest.prototype.getClientVersion = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.ei.QueryCoopRequest} returns this
 */
proto.ei.QueryCoopRequest.prototype.setClientVersion = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.QueryCoopRequest} returns this
 */
proto.ei.QueryCoopRequest.prototype.clearClientVersion = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.QueryCoopRequest.prototype.hasClientVersion = function() {
  return jspb.Message.getField(this, 3) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ei.QueryCoopResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.ei.QueryCoopResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ei.QueryCoopResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.QueryCoopResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    exists: (f = jspb.Message.getBooleanField(msg, 1)) == null ? undefined : f,
    full: (f = jspb.Message.getBooleanField(msg, 2)) == null ? undefined : f,
    expired: (f = jspb.Message.getBooleanField(msg, 5)) == null ? undefined : f,
    differentLeague: (f = jspb.Message.getBooleanField(msg, 4)) == null ? undefined : f,
    differentGrade: (f = jspb.Message.getBooleanField(msg, 6)) == null ? undefined : f,
    ccOnly: (f = jspb.Message.getBooleanField(msg, 7)) == null ? undefined : f,
    banned: (f = jspb.Message.getBooleanField(msg, 3)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ei.QueryCoopResponse}
 */
proto.ei.QueryCoopResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ei.QueryCoopResponse;
  return proto.ei.QueryCoopResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ei.QueryCoopResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ei.QueryCoopResponse}
 */
proto.ei.QueryCoopResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setExists(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setFull(value);
      break;
    case 5:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setExpired(value);
      break;
    case 4:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setDifferentLeague(value);
      break;
    case 6:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setDifferentGrade(value);
      break;
    case 7:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setCcOnly(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setBanned(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ei.QueryCoopResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ei.QueryCoopResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ei.QueryCoopResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.QueryCoopResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {boolean} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeBool(
      1,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeBool(
      2,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeBool(
      5,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeBool(
      4,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeBool(
      6,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 7));
  if (f != null) {
    writer.writeBool(
      7,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeBool(
      3,
      f
    );
  }
};


/**
 * optional bool exists = 1;
 * @return {boolean}
 */
proto.ei.QueryCoopResponse.prototype.getExists = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.ei.QueryCoopResponse} returns this
 */
proto.ei.QueryCoopResponse.prototype.setExists = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.QueryCoopResponse} returns this
 */
proto.ei.QueryCoopResponse.prototype.clearExists = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.QueryCoopResponse.prototype.hasExists = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional bool full = 2;
 * @return {boolean}
 */
proto.ei.QueryCoopResponse.prototype.getFull = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));
};


/**
 * @param {boolean} value
 * @return {!proto.ei.QueryCoopResponse} returns this
 */
proto.ei.QueryCoopResponse.prototype.setFull = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.QueryCoopResponse} returns this
 */
proto.ei.QueryCoopResponse.prototype.clearFull = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.QueryCoopResponse.prototype.hasFull = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional bool expired = 5;
 * @return {boolean}
 */
proto.ei.QueryCoopResponse.prototype.getExpired = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 5, false));
};


/**
 * @param {boolean} value
 * @return {!proto.ei.QueryCoopResponse} returns this
 */
proto.ei.QueryCoopResponse.prototype.setExpired = function(value) {
  return jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.QueryCoopResponse} returns this
 */
proto.ei.QueryCoopResponse.prototype.clearExpired = function() {
  return jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.QueryCoopResponse.prototype.hasExpired = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional bool different_league = 4;
 * @return {boolean}
 */
proto.ei.QueryCoopResponse.prototype.getDifferentLeague = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 4, false));
};


/**
 * @param {boolean} value
 * @return {!proto.ei.QueryCoopResponse} returns this
 */
proto.ei.QueryCoopResponse.prototype.setDifferentLeague = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.QueryCoopResponse} returns this
 */
proto.ei.QueryCoopResponse.prototype.clearDifferentLeague = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.QueryCoopResponse.prototype.hasDifferentLeague = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional bool different_grade = 6;
 * @return {boolean}
 */
proto.ei.QueryCoopResponse.prototype.getDifferentGrade = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 6, false));
};


/**
 * @param {boolean} value
 * @return {!proto.ei.QueryCoopResponse} returns this
 */
proto.ei.QueryCoopResponse.prototype.setDifferentGrade = function(value) {
  return jspb.Message.setField(this, 6, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.QueryCoopResponse} returns this
 */
proto.ei.QueryCoopResponse.prototype.clearDifferentGrade = function() {
  return jspb.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.QueryCoopResponse.prototype.hasDifferentGrade = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional bool cc_only = 7;
 * @return {boolean}
 */
proto.ei.QueryCoopResponse.prototype.getCcOnly = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 7, false));
};


/**
 * @param {boolean} value
 * @return {!proto.ei.QueryCoopResponse} returns this
 */
proto.ei.QueryCoopResponse.prototype.setCcOnly = function(value) {
  return jspb.Message.setField(this, 7, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.QueryCoopResponse} returns this
 */
proto.ei.QueryCoopResponse.prototype.clearCcOnly = function() {
  return jspb.Message.setField(this, 7, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.QueryCoopResponse.prototype.hasCcOnly = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional bool banned = 3;
 * @return {boolean}
 */
proto.ei.QueryCoopResponse.prototype.getBanned = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 3, false));
};


/**
 * @param {boolean} value
 * @return {!proto.ei.QueryCoopResponse} returns this
 */
proto.ei.QueryCoopResponse.prototype.setBanned = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.QueryCoopResponse} returns this
 */
proto.ei.QueryCoopResponse.prototype.clearBanned = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.QueryCoopResponse.prototype.hasBanned = function() {
  return jspb.Message.getField(this, 3) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ei.CreateCoopRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.ei.CreateCoopRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ei.CreateCoopRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.CreateCoopRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    rinfo: (f = msg.getRinfo()) && proto.ei.BasicRequestInfo.toObject(includeInstance, f),
    contractIdentifier: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    coopIdentifier: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,
    pb_public: (f = jspb.Message.getBooleanField(msg, 13)) == null ? undefined : f,
    ccOnly: (f = jspb.Message.getBooleanField(msg, 14)) == null ? undefined : f,
    allowAllGrades: (f = jspb.Message.getBooleanField(msg, 16)) == null ? undefined : f,
    secondsRemaining: (f = jspb.Message.getOptionalFloatingPointField(msg, 3)) == null ? undefined : f,
    userId: (f = jspb.Message.getField(msg, 4)) == null ? undefined : f,
    userName: (f = jspb.Message.getField(msg, 5)) == null ? undefined : f,
    soulPower: (f = jspb.Message.getOptionalFloatingPointField(msg, 8)) == null ? undefined : f,
    eop: (f = jspb.Message.getOptionalFloatingPointField(msg, 11)) == null ? undefined : f,
    league: (f = jspb.Message.getField(msg, 9)) == null ? undefined : f,
    grade: (f = jspb.Message.getField(msg, 12)) == null ? undefined : f,
    pointsReplay: (f = jspb.Message.getBooleanField(msg, 15)) == null ? undefined : f,
    platform: (f = jspb.Message.getField(msg, 6)) == null ? undefined : f,
    clientVersion: (f = jspb.Message.getField(msg, 7)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ei.CreateCoopRequest}
 */
proto.ei.CreateCoopRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ei.CreateCoopRequest;
  return proto.ei.CreateCoopRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ei.CreateCoopRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ei.CreateCoopRequest}
 */
proto.ei.CreateCoopRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 10:
      var value = new proto.ei.BasicRequestInfo;
      reader.readMessage(value,proto.ei.BasicRequestInfo.deserializeBinaryFromReader);
      msg.setRinfo(value);
      break;
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setContractIdentifier(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setCoopIdentifier(value);
      break;
    case 13:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setPublic(value);
      break;
    case 14:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setCcOnly(value);
      break;
    case 16:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setAllowAllGrades(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setSecondsRemaining(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserId(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserName(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setSoulPower(value);
      break;
    case 11:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setEop(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setLeague(value);
      break;
    case 12:
      var value = /** @type {!proto.ei.Contract.PlayerGrade} */ (reader.readEnum());
      msg.setGrade(value);
      break;
    case 15:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setPointsReplay(value);
      break;
    case 6:
      var value = /** @type {!proto.ei.Platform} */ (reader.readEnum());
      msg.setPlatform(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setClientVersion(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ei.CreateCoopRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ei.CreateCoopRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ei.CreateCoopRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.CreateCoopRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRinfo();
  if (f != null) {
    writer.writeMessage(
      10,
      f,
      proto.ei.BasicRequestInfo.serializeBinaryToWriter
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 13));
  if (f != null) {
    writer.writeBool(
      13,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 14));
  if (f != null) {
    writer.writeBool(
      14,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 16));
  if (f != null) {
    writer.writeBool(
      16,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeDouble(
      3,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeString(
      4,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeString(
      5,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 8));
  if (f != null) {
    writer.writeDouble(
      8,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 11));
  if (f != null) {
    writer.writeDouble(
      11,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 9));
  if (f != null) {
    writer.writeUint32(
      9,
      f
    );
  }
  f = /** @type {!proto.ei.Contract.PlayerGrade} */ (jspb.Message.getField(message, 12));
  if (f != null) {
    writer.writeEnum(
      12,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 15));
  if (f != null) {
    writer.writeBool(
      15,
      f
    );
  }
  f = /** @type {!proto.ei.Platform} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeEnum(
      6,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 7));
  if (f != null) {
    writer.writeUint32(
      7,
      f
    );
  }
};


/**
 * optional BasicRequestInfo rinfo = 10;
 * @return {?proto.ei.BasicRequestInfo}
 */
proto.ei.CreateCoopRequest.prototype.getRinfo = function() {
  return /** @type{?proto.ei.BasicRequestInfo} */ (
    jspb.Message.getWrapperField(this, proto.ei.BasicRequestInfo, 10));
};


/**
 * @param {?proto.ei.BasicRequestInfo|undefined} value
 * @return {!proto.ei.CreateCoopRequest} returns this
*/
proto.ei.CreateCoopRequest.prototype.setRinfo = function(value) {
  return jspb.Message.setWrapperField(this, 10, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.ei.CreateCoopRequest} returns this
 */
proto.ei.CreateCoopRequest.prototype.clearRinfo = function() {
  return this.setRinfo(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.CreateCoopRequest.prototype.hasRinfo = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * optional string contract_identifier = 1;
 * @return {string}
 */
proto.ei.CreateCoopRequest.prototype.getContractIdentifier = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.ei.CreateCoopRequest} returns this
 */
proto.ei.CreateCoopRequest.prototype.setContractIdentifier = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.CreateCoopRequest} returns this
 */
proto.ei.CreateCoopRequest.prototype.clearContractIdentifier = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.CreateCoopRequest.prototype.hasContractIdentifier = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string coop_identifier = 2;
 * @return {string}
 */
proto.ei.CreateCoopRequest.prototype.getCoopIdentifier = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.ei.CreateCoopRequest} returns this
 */
proto.ei.CreateCoopRequest.prototype.setCoopIdentifier = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.CreateCoopRequest} returns this
 */
proto.ei.CreateCoopRequest.prototype.clearCoopIdentifier = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.CreateCoopRequest.prototype.hasCoopIdentifier = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional bool public = 13;
 * @return {boolean}
 */
proto.ei.CreateCoopRequest.prototype.getPublic = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 13, false));
};


/**
 * @param {boolean} value
 * @return {!proto.ei.CreateCoopRequest} returns this
 */
proto.ei.CreateCoopRequest.prototype.setPublic = function(value) {
  return jspb.Message.setField(this, 13, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.CreateCoopRequest} returns this
 */
proto.ei.CreateCoopRequest.prototype.clearPublic = function() {
  return jspb.Message.setField(this, 13, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.CreateCoopRequest.prototype.hasPublic = function() {
  return jspb.Message.getField(this, 13) != null;
};


/**
 * optional bool cc_only = 14;
 * @return {boolean}
 */
proto.ei.CreateCoopRequest.prototype.getCcOnly = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 14, false));
};


/**
 * @param {boolean} value
 * @return {!proto.ei.CreateCoopRequest} returns this
 */
proto.ei.CreateCoopRequest.prototype.setCcOnly = function(value) {
  return jspb.Message.setField(this, 14, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.CreateCoopRequest} returns this
 */
proto.ei.CreateCoopRequest.prototype.clearCcOnly = function() {
  return jspb.Message.setField(this, 14, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.CreateCoopRequest.prototype.hasCcOnly = function() {
  return jspb.Message.getField(this, 14) != null;
};


/**
 * optional bool allow_all_grades = 16;
 * @return {boolean}
 */
proto.ei.CreateCoopRequest.prototype.getAllowAllGrades = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 16, false));
};


/**
 * @param {boolean} value
 * @return {!proto.ei.CreateCoopRequest} returns this
 */
proto.ei.CreateCoopRequest.prototype.setAllowAllGrades = function(value) {
  return jspb.Message.setField(this, 16, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.CreateCoopRequest} returns this
 */
proto.ei.CreateCoopRequest.prototype.clearAllowAllGrades = function() {
  return jspb.Message.setField(this, 16, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.CreateCoopRequest.prototype.hasAllowAllGrades = function() {
  return jspb.Message.getField(this, 16) != null;
};


/**
 * optional double seconds_remaining = 3;
 * @return {number}
 */
proto.ei.CreateCoopRequest.prototype.getSecondsRemaining = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 3, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.ei.CreateCoopRequest} returns this
 */
proto.ei.CreateCoopRequest.prototype.setSecondsRemaining = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.CreateCoopRequest} returns this
 */
proto.ei.CreateCoopRequest.prototype.clearSecondsRemaining = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.CreateCoopRequest.prototype.hasSecondsRemaining = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional string user_id = 4;
 * @return {string}
 */
proto.ei.CreateCoopRequest.prototype.getUserId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.ei.CreateCoopRequest} returns this
 */
proto.ei.CreateCoopRequest.prototype.setUserId = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.CreateCoopRequest} returns this
 */
proto.ei.CreateCoopRequest.prototype.clearUserId = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.CreateCoopRequest.prototype.hasUserId = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional string user_name = 5;
 * @return {string}
 */
proto.ei.CreateCoopRequest.prototype.getUserName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.ei.CreateCoopRequest} returns this
 */
proto.ei.CreateCoopRequest.prototype.setUserName = function(value) {
  return jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.CreateCoopRequest} returns this
 */
proto.ei.CreateCoopRequest.prototype.clearUserName = function() {
  return jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.CreateCoopRequest.prototype.hasUserName = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional double soul_power = 8;
 * @return {number}
 */
proto.ei.CreateCoopRequest.prototype.getSoulPower = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 8, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.ei.CreateCoopRequest} returns this
 */
proto.ei.CreateCoopRequest.prototype.setSoulPower = function(value) {
  return jspb.Message.setField(this, 8, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.CreateCoopRequest} returns this
 */
proto.ei.CreateCoopRequest.prototype.clearSoulPower = function() {
  return jspb.Message.setField(this, 8, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.CreateCoopRequest.prototype.hasSoulPower = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional double eop = 11;
 * @return {number}
 */
proto.ei.CreateCoopRequest.prototype.getEop = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 11, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.ei.CreateCoopRequest} returns this
 */
proto.ei.CreateCoopRequest.prototype.setEop = function(value) {
  return jspb.Message.setField(this, 11, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.CreateCoopRequest} returns this
 */
proto.ei.CreateCoopRequest.prototype.clearEop = function() {
  return jspb.Message.setField(this, 11, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.CreateCoopRequest.prototype.hasEop = function() {
  return jspb.Message.getField(this, 11) != null;
};


/**
 * optional uint32 league = 9;
 * @return {number}
 */
proto.ei.CreateCoopRequest.prototype.getLeague = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};


/**
 * @param {number} value
 * @return {!proto.ei.CreateCoopRequest} returns this
 */
proto.ei.CreateCoopRequest.prototype.setLeague = function(value) {
  return jspb.Message.setField(this, 9, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.CreateCoopRequest} returns this
 */
proto.ei.CreateCoopRequest.prototype.clearLeague = function() {
  return jspb.Message.setField(this, 9, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.CreateCoopRequest.prototype.hasLeague = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional Contract.PlayerGrade grade = 12;
 * @return {!proto.ei.Contract.PlayerGrade}
 */
proto.ei.CreateCoopRequest.prototype.getGrade = function() {
  return /** @type {!proto.ei.Contract.PlayerGrade} */ (jspb.Message.getFieldWithDefault(this, 12, 0));
};


/**
 * @param {!proto.ei.Contract.PlayerGrade} value
 * @return {!proto.ei.CreateCoopRequest} returns this
 */
proto.ei.CreateCoopRequest.prototype.setGrade = function(value) {
  return jspb.Message.setField(this, 12, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.CreateCoopRequest} returns this
 */
proto.ei.CreateCoopRequest.prototype.clearGrade = function() {
  return jspb.Message.setField(this, 12, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.CreateCoopRequest.prototype.hasGrade = function() {
  return jspb.Message.getField(this, 12) != null;
};


/**
 * optional bool points_replay = 15;
 * @return {boolean}
 */
proto.ei.CreateCoopRequest.prototype.getPointsReplay = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 15, false));
};


/**
 * @param {boolean} value
 * @return {!proto.ei.CreateCoopRequest} returns this
 */
proto.ei.CreateCoopRequest.prototype.setPointsReplay = function(value) {
  return jspb.Message.setField(this, 15, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.CreateCoopRequest} returns this
 */
proto.ei.CreateCoopRequest.prototype.clearPointsReplay = function() {
  return jspb.Message.setField(this, 15, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.CreateCoopRequest.prototype.hasPointsReplay = function() {
  return jspb.Message.getField(this, 15) != null;
};


/**
 * optional Platform platform = 6;
 * @return {!proto.ei.Platform}
 */
proto.ei.CreateCoopRequest.prototype.getPlatform = function() {
  return /** @type {!proto.ei.Platform} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {!proto.ei.Platform} value
 * @return {!proto.ei.CreateCoopRequest} returns this
 */
proto.ei.CreateCoopRequest.prototype.setPlatform = function(value) {
  return jspb.Message.setField(this, 6, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.CreateCoopRequest} returns this
 */
proto.ei.CreateCoopRequest.prototype.clearPlatform = function() {
  return jspb.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.CreateCoopRequest.prototype.hasPlatform = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional uint32 client_version = 7;
 * @return {number}
 */
proto.ei.CreateCoopRequest.prototype.getClientVersion = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {number} value
 * @return {!proto.ei.CreateCoopRequest} returns this
 */
proto.ei.CreateCoopRequest.prototype.setClientVersion = function(value) {
  return jspb.Message.setField(this, 7, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.CreateCoopRequest} returns this
 */
proto.ei.CreateCoopRequest.prototype.clearClientVersion = function() {
  return jspb.Message.setField(this, 7, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.CreateCoopRequest.prototype.hasClientVersion = function() {
  return jspb.Message.getField(this, 7) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ei.CreateCoopResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.ei.CreateCoopResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ei.CreateCoopResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.CreateCoopResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    success: (f = jspb.Message.getBooleanField(msg, 1)) == null ? undefined : f,
    message: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ei.CreateCoopResponse}
 */
proto.ei.CreateCoopResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ei.CreateCoopResponse;
  return proto.ei.CreateCoopResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ei.CreateCoopResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ei.CreateCoopResponse}
 */
proto.ei.CreateCoopResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setSuccess(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setMessage(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ei.CreateCoopResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ei.CreateCoopResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ei.CreateCoopResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.CreateCoopResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {boolean} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeBool(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional bool success = 1;
 * @return {boolean}
 */
proto.ei.CreateCoopResponse.prototype.getSuccess = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.ei.CreateCoopResponse} returns this
 */
proto.ei.CreateCoopResponse.prototype.setSuccess = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.CreateCoopResponse} returns this
 */
proto.ei.CreateCoopResponse.prototype.clearSuccess = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.CreateCoopResponse.prototype.hasSuccess = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string message = 2;
 * @return {string}
 */
proto.ei.CreateCoopResponse.prototype.getMessage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.ei.CreateCoopResponse} returns this
 */
proto.ei.CreateCoopResponse.prototype.setMessage = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.CreateCoopResponse} returns this
 */
proto.ei.CreateCoopResponse.prototype.clearMessage = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.CreateCoopResponse.prototype.hasMessage = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ei.JoinCoopRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.ei.JoinCoopRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ei.JoinCoopRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.JoinCoopRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    rinfo: (f = msg.getRinfo()) && proto.ei.BasicRequestInfo.toObject(includeInstance, f),
    contractIdentifier: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    coopIdentifier: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,
    userId: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f,
    userName: (f = jspb.Message.getField(msg, 4)) == null ? undefined : f,
    soulPower: (f = jspb.Message.getOptionalFloatingPointField(msg, 8)) == null ? undefined : f,
    eop: (f = jspb.Message.getOptionalFloatingPointField(msg, 12)) == null ? undefined : f,
    league: (f = jspb.Message.getField(msg, 9)) == null ? undefined : f,
    grade: (f = jspb.Message.getField(msg, 13)) == null ? undefined : f,
    pointsReplay: (f = jspb.Message.getBooleanField(msg, 14)) == null ? undefined : f,
    platform: (f = jspb.Message.getField(msg, 5)) == null ? undefined : f,
    secondsRemaining: (f = jspb.Message.getOptionalFloatingPointField(msg, 11)) == null ? undefined : f,
    clientVersion: (f = jspb.Message.getField(msg, 7)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ei.JoinCoopRequest}
 */
proto.ei.JoinCoopRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ei.JoinCoopRequest;
  return proto.ei.JoinCoopRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ei.JoinCoopRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ei.JoinCoopRequest}
 */
proto.ei.JoinCoopRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 10:
      var value = new proto.ei.BasicRequestInfo;
      reader.readMessage(value,proto.ei.BasicRequestInfo.deserializeBinaryFromReader);
      msg.setRinfo(value);
      break;
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setContractIdentifier(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setCoopIdentifier(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserId(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserName(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setSoulPower(value);
      break;
    case 12:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setEop(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setLeague(value);
      break;
    case 13:
      var value = /** @type {!proto.ei.Contract.PlayerGrade} */ (reader.readEnum());
      msg.setGrade(value);
      break;
    case 14:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setPointsReplay(value);
      break;
    case 5:
      var value = /** @type {!proto.ei.Platform} */ (reader.readEnum());
      msg.setPlatform(value);
      break;
    case 11:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setSecondsRemaining(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setClientVersion(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ei.JoinCoopRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ei.JoinCoopRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ei.JoinCoopRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.JoinCoopRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRinfo();
  if (f != null) {
    writer.writeMessage(
      10,
      f,
      proto.ei.BasicRequestInfo.serializeBinaryToWriter
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeString(
      3,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeString(
      4,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 8));
  if (f != null) {
    writer.writeDouble(
      8,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 12));
  if (f != null) {
    writer.writeDouble(
      12,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 9));
  if (f != null) {
    writer.writeUint32(
      9,
      f
    );
  }
  f = /** @type {!proto.ei.Contract.PlayerGrade} */ (jspb.Message.getField(message, 13));
  if (f != null) {
    writer.writeEnum(
      13,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 14));
  if (f != null) {
    writer.writeBool(
      14,
      f
    );
  }
  f = /** @type {!proto.ei.Platform} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeEnum(
      5,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 11));
  if (f != null) {
    writer.writeDouble(
      11,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 7));
  if (f != null) {
    writer.writeUint32(
      7,
      f
    );
  }
};


/**
 * optional BasicRequestInfo rinfo = 10;
 * @return {?proto.ei.BasicRequestInfo}
 */
proto.ei.JoinCoopRequest.prototype.getRinfo = function() {
  return /** @type{?proto.ei.BasicRequestInfo} */ (
    jspb.Message.getWrapperField(this, proto.ei.BasicRequestInfo, 10));
};


/**
 * @param {?proto.ei.BasicRequestInfo|undefined} value
 * @return {!proto.ei.JoinCoopRequest} returns this
*/
proto.ei.JoinCoopRequest.prototype.setRinfo = function(value) {
  return jspb.Message.setWrapperField(this, 10, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.ei.JoinCoopRequest} returns this
 */
proto.ei.JoinCoopRequest.prototype.clearRinfo = function() {
  return this.setRinfo(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.JoinCoopRequest.prototype.hasRinfo = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * optional string contract_identifier = 1;
 * @return {string}
 */
proto.ei.JoinCoopRequest.prototype.getContractIdentifier = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.ei.JoinCoopRequest} returns this
 */
proto.ei.JoinCoopRequest.prototype.setContractIdentifier = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.JoinCoopRequest} returns this
 */
proto.ei.JoinCoopRequest.prototype.clearContractIdentifier = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.JoinCoopRequest.prototype.hasContractIdentifier = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string coop_identifier = 2;
 * @return {string}
 */
proto.ei.JoinCoopRequest.prototype.getCoopIdentifier = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.ei.JoinCoopRequest} returns this
 */
proto.ei.JoinCoopRequest.prototype.setCoopIdentifier = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.JoinCoopRequest} returns this
 */
proto.ei.JoinCoopRequest.prototype.clearCoopIdentifier = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.JoinCoopRequest.prototype.hasCoopIdentifier = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string user_id = 3;
 * @return {string}
 */
proto.ei.JoinCoopRequest.prototype.getUserId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.ei.JoinCoopRequest} returns this
 */
proto.ei.JoinCoopRequest.prototype.setUserId = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.JoinCoopRequest} returns this
 */
proto.ei.JoinCoopRequest.prototype.clearUserId = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.JoinCoopRequest.prototype.hasUserId = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional string user_name = 4;
 * @return {string}
 */
proto.ei.JoinCoopRequest.prototype.getUserName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.ei.JoinCoopRequest} returns this
 */
proto.ei.JoinCoopRequest.prototype.setUserName = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.JoinCoopRequest} returns this
 */
proto.ei.JoinCoopRequest.prototype.clearUserName = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.JoinCoopRequest.prototype.hasUserName = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional double soul_power = 8;
 * @return {number}
 */
proto.ei.JoinCoopRequest.prototype.getSoulPower = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 8, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.ei.JoinCoopRequest} returns this
 */
proto.ei.JoinCoopRequest.prototype.setSoulPower = function(value) {
  return jspb.Message.setField(this, 8, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.JoinCoopRequest} returns this
 */
proto.ei.JoinCoopRequest.prototype.clearSoulPower = function() {
  return jspb.Message.setField(this, 8, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.JoinCoopRequest.prototype.hasSoulPower = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional double eop = 12;
 * @return {number}
 */
proto.ei.JoinCoopRequest.prototype.getEop = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 12, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.ei.JoinCoopRequest} returns this
 */
proto.ei.JoinCoopRequest.prototype.setEop = function(value) {
  return jspb.Message.setField(this, 12, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.JoinCoopRequest} returns this
 */
proto.ei.JoinCoopRequest.prototype.clearEop = function() {
  return jspb.Message.setField(this, 12, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.JoinCoopRequest.prototype.hasEop = function() {
  return jspb.Message.getField(this, 12) != null;
};


/**
 * optional uint32 league = 9;
 * @return {number}
 */
proto.ei.JoinCoopRequest.prototype.getLeague = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};


/**
 * @param {number} value
 * @return {!proto.ei.JoinCoopRequest} returns this
 */
proto.ei.JoinCoopRequest.prototype.setLeague = function(value) {
  return jspb.Message.setField(this, 9, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.JoinCoopRequest} returns this
 */
proto.ei.JoinCoopRequest.prototype.clearLeague = function() {
  return jspb.Message.setField(this, 9, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.JoinCoopRequest.prototype.hasLeague = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional Contract.PlayerGrade grade = 13;
 * @return {!proto.ei.Contract.PlayerGrade}
 */
proto.ei.JoinCoopRequest.prototype.getGrade = function() {
  return /** @type {!proto.ei.Contract.PlayerGrade} */ (jspb.Message.getFieldWithDefault(this, 13, 0));
};


/**
 * @param {!proto.ei.Contract.PlayerGrade} value
 * @return {!proto.ei.JoinCoopRequest} returns this
 */
proto.ei.JoinCoopRequest.prototype.setGrade = function(value) {
  return jspb.Message.setField(this, 13, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.JoinCoopRequest} returns this
 */
proto.ei.JoinCoopRequest.prototype.clearGrade = function() {
  return jspb.Message.setField(this, 13, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.JoinCoopRequest.prototype.hasGrade = function() {
  return jspb.Message.getField(this, 13) != null;
};


/**
 * optional bool points_replay = 14;
 * @return {boolean}
 */
proto.ei.JoinCoopRequest.prototype.getPointsReplay = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 14, false));
};


/**
 * @param {boolean} value
 * @return {!proto.ei.JoinCoopRequest} returns this
 */
proto.ei.JoinCoopRequest.prototype.setPointsReplay = function(value) {
  return jspb.Message.setField(this, 14, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.JoinCoopRequest} returns this
 */
proto.ei.JoinCoopRequest.prototype.clearPointsReplay = function() {
  return jspb.Message.setField(this, 14, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.JoinCoopRequest.prototype.hasPointsReplay = function() {
  return jspb.Message.getField(this, 14) != null;
};


/**
 * optional Platform platform = 5;
 * @return {!proto.ei.Platform}
 */
proto.ei.JoinCoopRequest.prototype.getPlatform = function() {
  return /** @type {!proto.ei.Platform} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {!proto.ei.Platform} value
 * @return {!proto.ei.JoinCoopRequest} returns this
 */
proto.ei.JoinCoopRequest.prototype.setPlatform = function(value) {
  return jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.JoinCoopRequest} returns this
 */
proto.ei.JoinCoopRequest.prototype.clearPlatform = function() {
  return jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.JoinCoopRequest.prototype.hasPlatform = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional double seconds_remaining = 11;
 * @return {number}
 */
proto.ei.JoinCoopRequest.prototype.getSecondsRemaining = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 11, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.ei.JoinCoopRequest} returns this
 */
proto.ei.JoinCoopRequest.prototype.setSecondsRemaining = function(value) {
  return jspb.Message.setField(this, 11, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.JoinCoopRequest} returns this
 */
proto.ei.JoinCoopRequest.prototype.clearSecondsRemaining = function() {
  return jspb.Message.setField(this, 11, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.JoinCoopRequest.prototype.hasSecondsRemaining = function() {
  return jspb.Message.getField(this, 11) != null;
};


/**
 * optional uint32 client_version = 7;
 * @return {number}
 */
proto.ei.JoinCoopRequest.prototype.getClientVersion = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {number} value
 * @return {!proto.ei.JoinCoopRequest} returns this
 */
proto.ei.JoinCoopRequest.prototype.setClientVersion = function(value) {
  return jspb.Message.setField(this, 7, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.JoinCoopRequest} returns this
 */
proto.ei.JoinCoopRequest.prototype.clearClientVersion = function() {
  return jspb.Message.setField(this, 7, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.JoinCoopRequest.prototype.hasClientVersion = function() {
  return jspb.Message.getField(this, 7) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ei.JoinCoopResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.ei.JoinCoopResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ei.JoinCoopResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.JoinCoopResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    success: (f = jspb.Message.getBooleanField(msg, 1)) == null ? undefined : f,
    message: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,
    banned: (f = jspb.Message.getBooleanField(msg, 4)) == null ? undefined : f,
    coopIdentifier: (f = jspb.Message.getField(msg, 5)) == null ? undefined : f,
    secondsRemaining: (f = jspb.Message.getOptionalFloatingPointField(msg, 3)) == null ? undefined : f,
    matchPercent: (f = jspb.Message.getOptionalFloatingPointField(msg, 6)) == null ? undefined : f,
    numMembers: (f = jspb.Message.getField(msg, 7)) == null ? undefined : f,
    status: (f = jspb.Message.getField(msg, 8)) == null ? undefined : f,
    grade: (f = jspb.Message.getField(msg, 9)) == null ? undefined : f,
    canStart: (f = jspb.Message.getBooleanField(msg, 10)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ei.JoinCoopResponse}
 */
proto.ei.JoinCoopResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ei.JoinCoopResponse;
  return proto.ei.JoinCoopResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ei.JoinCoopResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ei.JoinCoopResponse}
 */
proto.ei.JoinCoopResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setSuccess(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setMessage(value);
      break;
    case 4:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setBanned(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setCoopIdentifier(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setSecondsRemaining(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setMatchPercent(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setNumMembers(value);
      break;
    case 8:
      var value = /** @type {!proto.ei.ContractCoopStatusResponse.Status} */ (reader.readEnum());
      msg.setStatus(value);
      break;
    case 9:
      var value = /** @type {!proto.ei.Contract.PlayerGrade} */ (reader.readEnum());
      msg.setGrade(value);
      break;
    case 10:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setCanStart(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ei.JoinCoopResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ei.JoinCoopResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ei.JoinCoopResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.JoinCoopResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {boolean} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeBool(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeBool(
      4,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeString(
      5,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeDouble(
      3,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeDouble(
      6,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 7));
  if (f != null) {
    writer.writeUint32(
      7,
      f
    );
  }
  f = /** @type {!proto.ei.ContractCoopStatusResponse.Status} */ (jspb.Message.getField(message, 8));
  if (f != null) {
    writer.writeEnum(
      8,
      f
    );
  }
  f = /** @type {!proto.ei.Contract.PlayerGrade} */ (jspb.Message.getField(message, 9));
  if (f != null) {
    writer.writeEnum(
      9,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 10));
  if (f != null) {
    writer.writeBool(
      10,
      f
    );
  }
};


/**
 * optional bool success = 1;
 * @return {boolean}
 */
proto.ei.JoinCoopResponse.prototype.getSuccess = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.ei.JoinCoopResponse} returns this
 */
proto.ei.JoinCoopResponse.prototype.setSuccess = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.JoinCoopResponse} returns this
 */
proto.ei.JoinCoopResponse.prototype.clearSuccess = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.JoinCoopResponse.prototype.hasSuccess = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string message = 2;
 * @return {string}
 */
proto.ei.JoinCoopResponse.prototype.getMessage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.ei.JoinCoopResponse} returns this
 */
proto.ei.JoinCoopResponse.prototype.setMessage = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.JoinCoopResponse} returns this
 */
proto.ei.JoinCoopResponse.prototype.clearMessage = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.JoinCoopResponse.prototype.hasMessage = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional bool banned = 4;
 * @return {boolean}
 */
proto.ei.JoinCoopResponse.prototype.getBanned = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 4, false));
};


/**
 * @param {boolean} value
 * @return {!proto.ei.JoinCoopResponse} returns this
 */
proto.ei.JoinCoopResponse.prototype.setBanned = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.JoinCoopResponse} returns this
 */
proto.ei.JoinCoopResponse.prototype.clearBanned = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.JoinCoopResponse.prototype.hasBanned = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional string coop_identifier = 5;
 * @return {string}
 */
proto.ei.JoinCoopResponse.prototype.getCoopIdentifier = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.ei.JoinCoopResponse} returns this
 */
proto.ei.JoinCoopResponse.prototype.setCoopIdentifier = function(value) {
  return jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.JoinCoopResponse} returns this
 */
proto.ei.JoinCoopResponse.prototype.clearCoopIdentifier = function() {
  return jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.JoinCoopResponse.prototype.hasCoopIdentifier = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional double seconds_remaining = 3;
 * @return {number}
 */
proto.ei.JoinCoopResponse.prototype.getSecondsRemaining = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 3, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.ei.JoinCoopResponse} returns this
 */
proto.ei.JoinCoopResponse.prototype.setSecondsRemaining = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.JoinCoopResponse} returns this
 */
proto.ei.JoinCoopResponse.prototype.clearSecondsRemaining = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.JoinCoopResponse.prototype.hasSecondsRemaining = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional double match_percent = 6;
 * @return {number}
 */
proto.ei.JoinCoopResponse.prototype.getMatchPercent = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 6, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.ei.JoinCoopResponse} returns this
 */
proto.ei.JoinCoopResponse.prototype.setMatchPercent = function(value) {
  return jspb.Message.setField(this, 6, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.JoinCoopResponse} returns this
 */
proto.ei.JoinCoopResponse.prototype.clearMatchPercent = function() {
  return jspb.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.JoinCoopResponse.prototype.hasMatchPercent = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional uint32 num_members = 7;
 * @return {number}
 */
proto.ei.JoinCoopResponse.prototype.getNumMembers = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {number} value
 * @return {!proto.ei.JoinCoopResponse} returns this
 */
proto.ei.JoinCoopResponse.prototype.setNumMembers = function(value) {
  return jspb.Message.setField(this, 7, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.JoinCoopResponse} returns this
 */
proto.ei.JoinCoopResponse.prototype.clearNumMembers = function() {
  return jspb.Message.setField(this, 7, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.JoinCoopResponse.prototype.hasNumMembers = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional ContractCoopStatusResponse.Status status = 8;
 * @return {!proto.ei.ContractCoopStatusResponse.Status}
 */
proto.ei.JoinCoopResponse.prototype.getStatus = function() {
  return /** @type {!proto.ei.ContractCoopStatusResponse.Status} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/**
 * @param {!proto.ei.ContractCoopStatusResponse.Status} value
 * @return {!proto.ei.JoinCoopResponse} returns this
 */
proto.ei.JoinCoopResponse.prototype.setStatus = function(value) {
  return jspb.Message.setField(this, 8, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.JoinCoopResponse} returns this
 */
proto.ei.JoinCoopResponse.prototype.clearStatus = function() {
  return jspb.Message.setField(this, 8, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.JoinCoopResponse.prototype.hasStatus = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional Contract.PlayerGrade grade = 9;
 * @return {!proto.ei.Contract.PlayerGrade}
 */
proto.ei.JoinCoopResponse.prototype.getGrade = function() {
  return /** @type {!proto.ei.Contract.PlayerGrade} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};


/**
 * @param {!proto.ei.Contract.PlayerGrade} value
 * @return {!proto.ei.JoinCoopResponse} returns this
 */
proto.ei.JoinCoopResponse.prototype.setGrade = function(value) {
  return jspb.Message.setField(this, 9, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.JoinCoopResponse} returns this
 */
proto.ei.JoinCoopResponse.prototype.clearGrade = function() {
  return jspb.Message.setField(this, 9, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.JoinCoopResponse.prototype.hasGrade = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional bool can_start = 10;
 * @return {boolean}
 */
proto.ei.JoinCoopResponse.prototype.getCanStart = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 10, false));
};


/**
 * @param {boolean} value
 * @return {!proto.ei.JoinCoopResponse} returns this
 */
proto.ei.JoinCoopResponse.prototype.setCanStart = function(value) {
  return jspb.Message.setField(this, 10, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.JoinCoopResponse} returns this
 */
proto.ei.JoinCoopResponse.prototype.clearCanStart = function() {
  return jspb.Message.setField(this, 10, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.JoinCoopResponse.prototype.hasCanStart = function() {
  return jspb.Message.getField(this, 10) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ei.AutoJoinCoopRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.ei.AutoJoinCoopRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ei.AutoJoinCoopRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.AutoJoinCoopRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    rinfo: (f = msg.getRinfo()) && proto.ei.BasicRequestInfo.toObject(includeInstance, f),
    contractIdentifier: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    userId: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,
    userName: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f,
    soulPower: (f = jspb.Message.getOptionalFloatingPointField(msg, 4)) == null ? undefined : f,
    eop: (f = jspb.Message.getOptionalFloatingPointField(msg, 10)) == null ? undefined : f,
    league: (f = jspb.Message.getField(msg, 8)) == null ? undefined : f,
    grade: (f = jspb.Message.getField(msg, 12)) == null ? undefined : f,
    pointsReplay: (f = jspb.Message.getBooleanField(msg, 14)) == null ? undefined : f,
    secondsRemaining: (f = jspb.Message.getOptionalFloatingPointField(msg, 5)) == null ? undefined : f,
    platform: (f = jspb.Message.getField(msg, 6)) == null ? undefined : f,
    clientVersion: (f = jspb.Message.getField(msg, 7)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ei.AutoJoinCoopRequest}
 */
proto.ei.AutoJoinCoopRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ei.AutoJoinCoopRequest;
  return proto.ei.AutoJoinCoopRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ei.AutoJoinCoopRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ei.AutoJoinCoopRequest}
 */
proto.ei.AutoJoinCoopRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 9:
      var value = new proto.ei.BasicRequestInfo;
      reader.readMessage(value,proto.ei.BasicRequestInfo.deserializeBinaryFromReader);
      msg.setRinfo(value);
      break;
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setContractIdentifier(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserId(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserName(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setSoulPower(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setEop(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setLeague(value);
      break;
    case 12:
      var value = /** @type {!proto.ei.Contract.PlayerGrade} */ (reader.readEnum());
      msg.setGrade(value);
      break;
    case 14:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setPointsReplay(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setSecondsRemaining(value);
      break;
    case 6:
      var value = /** @type {!proto.ei.Platform} */ (reader.readEnum());
      msg.setPlatform(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setClientVersion(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ei.AutoJoinCoopRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ei.AutoJoinCoopRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ei.AutoJoinCoopRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.AutoJoinCoopRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRinfo();
  if (f != null) {
    writer.writeMessage(
      9,
      f,
      proto.ei.BasicRequestInfo.serializeBinaryToWriter
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeString(
      3,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeDouble(
      4,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 10));
  if (f != null) {
    writer.writeDouble(
      10,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 8));
  if (f != null) {
    writer.writeUint32(
      8,
      f
    );
  }
  f = /** @type {!proto.ei.Contract.PlayerGrade} */ (jspb.Message.getField(message, 12));
  if (f != null) {
    writer.writeEnum(
      12,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 14));
  if (f != null) {
    writer.writeBool(
      14,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeDouble(
      5,
      f
    );
  }
  f = /** @type {!proto.ei.Platform} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeEnum(
      6,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 7));
  if (f != null) {
    writer.writeUint32(
      7,
      f
    );
  }
};


/**
 * optional BasicRequestInfo rinfo = 9;
 * @return {?proto.ei.BasicRequestInfo}
 */
proto.ei.AutoJoinCoopRequest.prototype.getRinfo = function() {
  return /** @type{?proto.ei.BasicRequestInfo} */ (
    jspb.Message.getWrapperField(this, proto.ei.BasicRequestInfo, 9));
};


/**
 * @param {?proto.ei.BasicRequestInfo|undefined} value
 * @return {!proto.ei.AutoJoinCoopRequest} returns this
*/
proto.ei.AutoJoinCoopRequest.prototype.setRinfo = function(value) {
  return jspb.Message.setWrapperField(this, 9, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.ei.AutoJoinCoopRequest} returns this
 */
proto.ei.AutoJoinCoopRequest.prototype.clearRinfo = function() {
  return this.setRinfo(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.AutoJoinCoopRequest.prototype.hasRinfo = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional string contract_identifier = 1;
 * @return {string}
 */
proto.ei.AutoJoinCoopRequest.prototype.getContractIdentifier = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.ei.AutoJoinCoopRequest} returns this
 */
proto.ei.AutoJoinCoopRequest.prototype.setContractIdentifier = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.AutoJoinCoopRequest} returns this
 */
proto.ei.AutoJoinCoopRequest.prototype.clearContractIdentifier = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.AutoJoinCoopRequest.prototype.hasContractIdentifier = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string user_id = 2;
 * @return {string}
 */
proto.ei.AutoJoinCoopRequest.prototype.getUserId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.ei.AutoJoinCoopRequest} returns this
 */
proto.ei.AutoJoinCoopRequest.prototype.setUserId = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.AutoJoinCoopRequest} returns this
 */
proto.ei.AutoJoinCoopRequest.prototype.clearUserId = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.AutoJoinCoopRequest.prototype.hasUserId = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string user_name = 3;
 * @return {string}
 */
proto.ei.AutoJoinCoopRequest.prototype.getUserName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.ei.AutoJoinCoopRequest} returns this
 */
proto.ei.AutoJoinCoopRequest.prototype.setUserName = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.AutoJoinCoopRequest} returns this
 */
proto.ei.AutoJoinCoopRequest.prototype.clearUserName = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.AutoJoinCoopRequest.prototype.hasUserName = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional double soul_power = 4;
 * @return {number}
 */
proto.ei.AutoJoinCoopRequest.prototype.getSoulPower = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 4, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.ei.AutoJoinCoopRequest} returns this
 */
proto.ei.AutoJoinCoopRequest.prototype.setSoulPower = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.AutoJoinCoopRequest} returns this
 */
proto.ei.AutoJoinCoopRequest.prototype.clearSoulPower = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.AutoJoinCoopRequest.prototype.hasSoulPower = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional double eop = 10;
 * @return {number}
 */
proto.ei.AutoJoinCoopRequest.prototype.getEop = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 10, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.ei.AutoJoinCoopRequest} returns this
 */
proto.ei.AutoJoinCoopRequest.prototype.setEop = function(value) {
  return jspb.Message.setField(this, 10, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.AutoJoinCoopRequest} returns this
 */
proto.ei.AutoJoinCoopRequest.prototype.clearEop = function() {
  return jspb.Message.setField(this, 10, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.AutoJoinCoopRequest.prototype.hasEop = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * optional uint32 league = 8;
 * @return {number}
 */
proto.ei.AutoJoinCoopRequest.prototype.getLeague = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/**
 * @param {number} value
 * @return {!proto.ei.AutoJoinCoopRequest} returns this
 */
proto.ei.AutoJoinCoopRequest.prototype.setLeague = function(value) {
  return jspb.Message.setField(this, 8, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.AutoJoinCoopRequest} returns this
 */
proto.ei.AutoJoinCoopRequest.prototype.clearLeague = function() {
  return jspb.Message.setField(this, 8, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.AutoJoinCoopRequest.prototype.hasLeague = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional Contract.PlayerGrade grade = 12;
 * @return {!proto.ei.Contract.PlayerGrade}
 */
proto.ei.AutoJoinCoopRequest.prototype.getGrade = function() {
  return /** @type {!proto.ei.Contract.PlayerGrade} */ (jspb.Message.getFieldWithDefault(this, 12, 0));
};


/**
 * @param {!proto.ei.Contract.PlayerGrade} value
 * @return {!proto.ei.AutoJoinCoopRequest} returns this
 */
proto.ei.AutoJoinCoopRequest.prototype.setGrade = function(value) {
  return jspb.Message.setField(this, 12, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.AutoJoinCoopRequest} returns this
 */
proto.ei.AutoJoinCoopRequest.prototype.clearGrade = function() {
  return jspb.Message.setField(this, 12, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.AutoJoinCoopRequest.prototype.hasGrade = function() {
  return jspb.Message.getField(this, 12) != null;
};


/**
 * optional bool points_replay = 14;
 * @return {boolean}
 */
proto.ei.AutoJoinCoopRequest.prototype.getPointsReplay = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 14, false));
};


/**
 * @param {boolean} value
 * @return {!proto.ei.AutoJoinCoopRequest} returns this
 */
proto.ei.AutoJoinCoopRequest.prototype.setPointsReplay = function(value) {
  return jspb.Message.setField(this, 14, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.AutoJoinCoopRequest} returns this
 */
proto.ei.AutoJoinCoopRequest.prototype.clearPointsReplay = function() {
  return jspb.Message.setField(this, 14, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.AutoJoinCoopRequest.prototype.hasPointsReplay = function() {
  return jspb.Message.getField(this, 14) != null;
};


/**
 * optional double seconds_remaining = 5;
 * @return {number}
 */
proto.ei.AutoJoinCoopRequest.prototype.getSecondsRemaining = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 5, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.ei.AutoJoinCoopRequest} returns this
 */
proto.ei.AutoJoinCoopRequest.prototype.setSecondsRemaining = function(value) {
  return jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.AutoJoinCoopRequest} returns this
 */
proto.ei.AutoJoinCoopRequest.prototype.clearSecondsRemaining = function() {
  return jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.AutoJoinCoopRequest.prototype.hasSecondsRemaining = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional Platform platform = 6;
 * @return {!proto.ei.Platform}
 */
proto.ei.AutoJoinCoopRequest.prototype.getPlatform = function() {
  return /** @type {!proto.ei.Platform} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {!proto.ei.Platform} value
 * @return {!proto.ei.AutoJoinCoopRequest} returns this
 */
proto.ei.AutoJoinCoopRequest.prototype.setPlatform = function(value) {
  return jspb.Message.setField(this, 6, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.AutoJoinCoopRequest} returns this
 */
proto.ei.AutoJoinCoopRequest.prototype.clearPlatform = function() {
  return jspb.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.AutoJoinCoopRequest.prototype.hasPlatform = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional uint32 client_version = 7;
 * @return {number}
 */
proto.ei.AutoJoinCoopRequest.prototype.getClientVersion = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {number} value
 * @return {!proto.ei.AutoJoinCoopRequest} returns this
 */
proto.ei.AutoJoinCoopRequest.prototype.setClientVersion = function(value) {
  return jspb.Message.setField(this, 7, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.AutoJoinCoopRequest} returns this
 */
proto.ei.AutoJoinCoopRequest.prototype.clearClientVersion = function() {
  return jspb.Message.setField(this, 7, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.AutoJoinCoopRequest.prototype.hasClientVersion = function() {
  return jspb.Message.getField(this, 7) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ei.UpdateCoopPermissionsRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.ei.UpdateCoopPermissionsRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ei.UpdateCoopPermissionsRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.UpdateCoopPermissionsRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    rinfo: (f = msg.getRinfo()) && proto.ei.BasicRequestInfo.toObject(includeInstance, f),
    contractIdentifier: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    coopIdentifier: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,
    requestingUserId: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f,
    pb_public: (f = jspb.Message.getBooleanField(msg, 4)) == null ? undefined : f,
    clientVersion: (f = jspb.Message.getField(msg, 5)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ei.UpdateCoopPermissionsRequest}
 */
proto.ei.UpdateCoopPermissionsRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ei.UpdateCoopPermissionsRequest;
  return proto.ei.UpdateCoopPermissionsRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ei.UpdateCoopPermissionsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ei.UpdateCoopPermissionsRequest}
 */
proto.ei.UpdateCoopPermissionsRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 6:
      var value = new proto.ei.BasicRequestInfo;
      reader.readMessage(value,proto.ei.BasicRequestInfo.deserializeBinaryFromReader);
      msg.setRinfo(value);
      break;
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setContractIdentifier(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setCoopIdentifier(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setRequestingUserId(value);
      break;
    case 4:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setPublic(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setClientVersion(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ei.UpdateCoopPermissionsRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ei.UpdateCoopPermissionsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ei.UpdateCoopPermissionsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.UpdateCoopPermissionsRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRinfo();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      proto.ei.BasicRequestInfo.serializeBinaryToWriter
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeString(
      3,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeBool(
      4,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeUint32(
      5,
      f
    );
  }
};


/**
 * optional BasicRequestInfo rinfo = 6;
 * @return {?proto.ei.BasicRequestInfo}
 */
proto.ei.UpdateCoopPermissionsRequest.prototype.getRinfo = function() {
  return /** @type{?proto.ei.BasicRequestInfo} */ (
    jspb.Message.getWrapperField(this, proto.ei.BasicRequestInfo, 6));
};


/**
 * @param {?proto.ei.BasicRequestInfo|undefined} value
 * @return {!proto.ei.UpdateCoopPermissionsRequest} returns this
*/
proto.ei.UpdateCoopPermissionsRequest.prototype.setRinfo = function(value) {
  return jspb.Message.setWrapperField(this, 6, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.ei.UpdateCoopPermissionsRequest} returns this
 */
proto.ei.UpdateCoopPermissionsRequest.prototype.clearRinfo = function() {
  return this.setRinfo(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.UpdateCoopPermissionsRequest.prototype.hasRinfo = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional string contract_identifier = 1;
 * @return {string}
 */
proto.ei.UpdateCoopPermissionsRequest.prototype.getContractIdentifier = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.ei.UpdateCoopPermissionsRequest} returns this
 */
proto.ei.UpdateCoopPermissionsRequest.prototype.setContractIdentifier = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.UpdateCoopPermissionsRequest} returns this
 */
proto.ei.UpdateCoopPermissionsRequest.prototype.clearContractIdentifier = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.UpdateCoopPermissionsRequest.prototype.hasContractIdentifier = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string coop_identifier = 2;
 * @return {string}
 */
proto.ei.UpdateCoopPermissionsRequest.prototype.getCoopIdentifier = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.ei.UpdateCoopPermissionsRequest} returns this
 */
proto.ei.UpdateCoopPermissionsRequest.prototype.setCoopIdentifier = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.UpdateCoopPermissionsRequest} returns this
 */
proto.ei.UpdateCoopPermissionsRequest.prototype.clearCoopIdentifier = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.UpdateCoopPermissionsRequest.prototype.hasCoopIdentifier = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string requesting_user_id = 3;
 * @return {string}
 */
proto.ei.UpdateCoopPermissionsRequest.prototype.getRequestingUserId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.ei.UpdateCoopPermissionsRequest} returns this
 */
proto.ei.UpdateCoopPermissionsRequest.prototype.setRequestingUserId = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.UpdateCoopPermissionsRequest} returns this
 */
proto.ei.UpdateCoopPermissionsRequest.prototype.clearRequestingUserId = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.UpdateCoopPermissionsRequest.prototype.hasRequestingUserId = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional bool public = 4;
 * @return {boolean}
 */
proto.ei.UpdateCoopPermissionsRequest.prototype.getPublic = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 4, false));
};


/**
 * @param {boolean} value
 * @return {!proto.ei.UpdateCoopPermissionsRequest} returns this
 */
proto.ei.UpdateCoopPermissionsRequest.prototype.setPublic = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.UpdateCoopPermissionsRequest} returns this
 */
proto.ei.UpdateCoopPermissionsRequest.prototype.clearPublic = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.UpdateCoopPermissionsRequest.prototype.hasPublic = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional uint32 client_version = 5;
 * @return {number}
 */
proto.ei.UpdateCoopPermissionsRequest.prototype.getClientVersion = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.ei.UpdateCoopPermissionsRequest} returns this
 */
proto.ei.UpdateCoopPermissionsRequest.prototype.setClientVersion = function(value) {
  return jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.UpdateCoopPermissionsRequest} returns this
 */
proto.ei.UpdateCoopPermissionsRequest.prototype.clearClientVersion = function() {
  return jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.UpdateCoopPermissionsRequest.prototype.hasClientVersion = function() {
  return jspb.Message.getField(this, 5) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ei.UpdateCoopPermissionsResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.ei.UpdateCoopPermissionsResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ei.UpdateCoopPermissionsResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.UpdateCoopPermissionsResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    success: (f = jspb.Message.getBooleanField(msg, 1)) == null ? undefined : f,
    message: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ei.UpdateCoopPermissionsResponse}
 */
proto.ei.UpdateCoopPermissionsResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ei.UpdateCoopPermissionsResponse;
  return proto.ei.UpdateCoopPermissionsResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ei.UpdateCoopPermissionsResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ei.UpdateCoopPermissionsResponse}
 */
proto.ei.UpdateCoopPermissionsResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setSuccess(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setMessage(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ei.UpdateCoopPermissionsResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ei.UpdateCoopPermissionsResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ei.UpdateCoopPermissionsResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.UpdateCoopPermissionsResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {boolean} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeBool(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional bool success = 1;
 * @return {boolean}
 */
proto.ei.UpdateCoopPermissionsResponse.prototype.getSuccess = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.ei.UpdateCoopPermissionsResponse} returns this
 */
proto.ei.UpdateCoopPermissionsResponse.prototype.setSuccess = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.UpdateCoopPermissionsResponse} returns this
 */
proto.ei.UpdateCoopPermissionsResponse.prototype.clearSuccess = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.UpdateCoopPermissionsResponse.prototype.hasSuccess = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string message = 2;
 * @return {string}
 */
proto.ei.UpdateCoopPermissionsResponse.prototype.getMessage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.ei.UpdateCoopPermissionsResponse} returns this
 */
proto.ei.UpdateCoopPermissionsResponse.prototype.setMessage = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.UpdateCoopPermissionsResponse} returns this
 */
proto.ei.UpdateCoopPermissionsResponse.prototype.clearMessage = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.UpdateCoopPermissionsResponse.prototype.hasMessage = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ei.LeaveCoopRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.ei.LeaveCoopRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ei.LeaveCoopRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.LeaveCoopRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    rinfo: (f = msg.getRinfo()) && proto.ei.BasicRequestInfo.toObject(includeInstance, f),
    contractIdentifier: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    coopIdentifier: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,
    playerIdentifier: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f,
    clientVersion: (f = jspb.Message.getField(msg, 7)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ei.LeaveCoopRequest}
 */
proto.ei.LeaveCoopRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ei.LeaveCoopRequest;
  return proto.ei.LeaveCoopRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ei.LeaveCoopRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ei.LeaveCoopRequest}
 */
proto.ei.LeaveCoopRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 8:
      var value = new proto.ei.BasicRequestInfo;
      reader.readMessage(value,proto.ei.BasicRequestInfo.deserializeBinaryFromReader);
      msg.setRinfo(value);
      break;
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setContractIdentifier(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setCoopIdentifier(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setPlayerIdentifier(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setClientVersion(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ei.LeaveCoopRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ei.LeaveCoopRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ei.LeaveCoopRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.LeaveCoopRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRinfo();
  if (f != null) {
    writer.writeMessage(
      8,
      f,
      proto.ei.BasicRequestInfo.serializeBinaryToWriter
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeString(
      3,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 7));
  if (f != null) {
    writer.writeUint32(
      7,
      f
    );
  }
};


/**
 * optional BasicRequestInfo rinfo = 8;
 * @return {?proto.ei.BasicRequestInfo}
 */
proto.ei.LeaveCoopRequest.prototype.getRinfo = function() {
  return /** @type{?proto.ei.BasicRequestInfo} */ (
    jspb.Message.getWrapperField(this, proto.ei.BasicRequestInfo, 8));
};


/**
 * @param {?proto.ei.BasicRequestInfo|undefined} value
 * @return {!proto.ei.LeaveCoopRequest} returns this
*/
proto.ei.LeaveCoopRequest.prototype.setRinfo = function(value) {
  return jspb.Message.setWrapperField(this, 8, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.ei.LeaveCoopRequest} returns this
 */
proto.ei.LeaveCoopRequest.prototype.clearRinfo = function() {
  return this.setRinfo(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.LeaveCoopRequest.prototype.hasRinfo = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional string contract_identifier = 1;
 * @return {string}
 */
proto.ei.LeaveCoopRequest.prototype.getContractIdentifier = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.ei.LeaveCoopRequest} returns this
 */
proto.ei.LeaveCoopRequest.prototype.setContractIdentifier = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.LeaveCoopRequest} returns this
 */
proto.ei.LeaveCoopRequest.prototype.clearContractIdentifier = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.LeaveCoopRequest.prototype.hasContractIdentifier = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string coop_identifier = 2;
 * @return {string}
 */
proto.ei.LeaveCoopRequest.prototype.getCoopIdentifier = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.ei.LeaveCoopRequest} returns this
 */
proto.ei.LeaveCoopRequest.prototype.setCoopIdentifier = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.LeaveCoopRequest} returns this
 */
proto.ei.LeaveCoopRequest.prototype.clearCoopIdentifier = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.LeaveCoopRequest.prototype.hasCoopIdentifier = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string player_identifier = 3;
 * @return {string}
 */
proto.ei.LeaveCoopRequest.prototype.getPlayerIdentifier = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.ei.LeaveCoopRequest} returns this
 */
proto.ei.LeaveCoopRequest.prototype.setPlayerIdentifier = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.LeaveCoopRequest} returns this
 */
proto.ei.LeaveCoopRequest.prototype.clearPlayerIdentifier = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.LeaveCoopRequest.prototype.hasPlayerIdentifier = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional uint32 client_version = 7;
 * @return {number}
 */
proto.ei.LeaveCoopRequest.prototype.getClientVersion = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {number} value
 * @return {!proto.ei.LeaveCoopRequest} returns this
 */
proto.ei.LeaveCoopRequest.prototype.setClientVersion = function(value) {
  return jspb.Message.setField(this, 7, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.LeaveCoopRequest} returns this
 */
proto.ei.LeaveCoopRequest.prototype.clearClientVersion = function() {
  return jspb.Message.setField(this, 7, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.LeaveCoopRequest.prototype.hasClientVersion = function() {
  return jspb.Message.getField(this, 7) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ei.GiftPlayerCoopRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.ei.GiftPlayerCoopRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ei.GiftPlayerCoopRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.GiftPlayerCoopRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    rinfo: (f = msg.getRinfo()) && proto.ei.BasicRequestInfo.toObject(includeInstance, f),
    contractIdentifier: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    coopIdentifier: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,
    playerIdentifier: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f,
    requestingUserId: (f = jspb.Message.getField(msg, 4)) == null ? undefined : f,
    requestingUserName: (f = jspb.Message.getField(msg, 6)) == null ? undefined : f,
    amount: (f = jspb.Message.getField(msg, 5)) == null ? undefined : f,
    clientVersion: (f = jspb.Message.getField(msg, 7)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ei.GiftPlayerCoopRequest}
 */
proto.ei.GiftPlayerCoopRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ei.GiftPlayerCoopRequest;
  return proto.ei.GiftPlayerCoopRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ei.GiftPlayerCoopRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ei.GiftPlayerCoopRequest}
 */
proto.ei.GiftPlayerCoopRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 8:
      var value = new proto.ei.BasicRequestInfo;
      reader.readMessage(value,proto.ei.BasicRequestInfo.deserializeBinaryFromReader);
      msg.setRinfo(value);
      break;
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setContractIdentifier(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setCoopIdentifier(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setPlayerIdentifier(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setRequestingUserId(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setRequestingUserName(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setAmount(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setClientVersion(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ei.GiftPlayerCoopRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ei.GiftPlayerCoopRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ei.GiftPlayerCoopRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.GiftPlayerCoopRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRinfo();
  if (f != null) {
    writer.writeMessage(
      8,
      f,
      proto.ei.BasicRequestInfo.serializeBinaryToWriter
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeString(
      3,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeString(
      4,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeString(
      6,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeUint32(
      5,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 7));
  if (f != null) {
    writer.writeUint32(
      7,
      f
    );
  }
};


/**
 * optional BasicRequestInfo rinfo = 8;
 * @return {?proto.ei.BasicRequestInfo}
 */
proto.ei.GiftPlayerCoopRequest.prototype.getRinfo = function() {
  return /** @type{?proto.ei.BasicRequestInfo} */ (
    jspb.Message.getWrapperField(this, proto.ei.BasicRequestInfo, 8));
};


/**
 * @param {?proto.ei.BasicRequestInfo|undefined} value
 * @return {!proto.ei.GiftPlayerCoopRequest} returns this
*/
proto.ei.GiftPlayerCoopRequest.prototype.setRinfo = function(value) {
  return jspb.Message.setWrapperField(this, 8, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.ei.GiftPlayerCoopRequest} returns this
 */
proto.ei.GiftPlayerCoopRequest.prototype.clearRinfo = function() {
  return this.setRinfo(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.GiftPlayerCoopRequest.prototype.hasRinfo = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional string contract_identifier = 1;
 * @return {string}
 */
proto.ei.GiftPlayerCoopRequest.prototype.getContractIdentifier = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.ei.GiftPlayerCoopRequest} returns this
 */
proto.ei.GiftPlayerCoopRequest.prototype.setContractIdentifier = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.GiftPlayerCoopRequest} returns this
 */
proto.ei.GiftPlayerCoopRequest.prototype.clearContractIdentifier = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.GiftPlayerCoopRequest.prototype.hasContractIdentifier = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string coop_identifier = 2;
 * @return {string}
 */
proto.ei.GiftPlayerCoopRequest.prototype.getCoopIdentifier = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.ei.GiftPlayerCoopRequest} returns this
 */
proto.ei.GiftPlayerCoopRequest.prototype.setCoopIdentifier = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.GiftPlayerCoopRequest} returns this
 */
proto.ei.GiftPlayerCoopRequest.prototype.clearCoopIdentifier = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.GiftPlayerCoopRequest.prototype.hasCoopIdentifier = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string player_identifier = 3;
 * @return {string}
 */
proto.ei.GiftPlayerCoopRequest.prototype.getPlayerIdentifier = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.ei.GiftPlayerCoopRequest} returns this
 */
proto.ei.GiftPlayerCoopRequest.prototype.setPlayerIdentifier = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.GiftPlayerCoopRequest} returns this
 */
proto.ei.GiftPlayerCoopRequest.prototype.clearPlayerIdentifier = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.GiftPlayerCoopRequest.prototype.hasPlayerIdentifier = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional string requesting_user_id = 4;
 * @return {string}
 */
proto.ei.GiftPlayerCoopRequest.prototype.getRequestingUserId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.ei.GiftPlayerCoopRequest} returns this
 */
proto.ei.GiftPlayerCoopRequest.prototype.setRequestingUserId = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.GiftPlayerCoopRequest} returns this
 */
proto.ei.GiftPlayerCoopRequest.prototype.clearRequestingUserId = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.GiftPlayerCoopRequest.prototype.hasRequestingUserId = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional string requesting_user_name = 6;
 * @return {string}
 */
proto.ei.GiftPlayerCoopRequest.prototype.getRequestingUserName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.ei.GiftPlayerCoopRequest} returns this
 */
proto.ei.GiftPlayerCoopRequest.prototype.setRequestingUserName = function(value) {
  return jspb.Message.setField(this, 6, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.GiftPlayerCoopRequest} returns this
 */
proto.ei.GiftPlayerCoopRequest.prototype.clearRequestingUserName = function() {
  return jspb.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.GiftPlayerCoopRequest.prototype.hasRequestingUserName = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional uint32 amount = 5;
 * @return {number}
 */
proto.ei.GiftPlayerCoopRequest.prototype.getAmount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.ei.GiftPlayerCoopRequest} returns this
 */
proto.ei.GiftPlayerCoopRequest.prototype.setAmount = function(value) {
  return jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.GiftPlayerCoopRequest} returns this
 */
proto.ei.GiftPlayerCoopRequest.prototype.clearAmount = function() {
  return jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.GiftPlayerCoopRequest.prototype.hasAmount = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional uint32 client_version = 7;
 * @return {number}
 */
proto.ei.GiftPlayerCoopRequest.prototype.getClientVersion = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {number} value
 * @return {!proto.ei.GiftPlayerCoopRequest} returns this
 */
proto.ei.GiftPlayerCoopRequest.prototype.setClientVersion = function(value) {
  return jspb.Message.setField(this, 7, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.GiftPlayerCoopRequest} returns this
 */
proto.ei.GiftPlayerCoopRequest.prototype.clearClientVersion = function() {
  return jspb.Message.setField(this, 7, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.GiftPlayerCoopRequest.prototype.hasClientVersion = function() {
  return jspb.Message.getField(this, 7) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ei.SendChickenRunCoopRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.ei.SendChickenRunCoopRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ei.SendChickenRunCoopRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.SendChickenRunCoopRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    rinfo: (f = msg.getRinfo()) && proto.ei.BasicRequestInfo.toObject(includeInstance, f),
    contractIdentifier: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    coopIdentifier: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,
    playerIdentifier: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f,
    requestingUserId: (f = jspb.Message.getField(msg, 4)) == null ? undefined : f,
    requestingUserName: (f = jspb.Message.getField(msg, 6)) == null ? undefined : f,
    farmPop: (f = jspb.Message.getField(msg, 5)) == null ? undefined : f,
    clientVersion: (f = jspb.Message.getField(msg, 7)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ei.SendChickenRunCoopRequest}
 */
proto.ei.SendChickenRunCoopRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ei.SendChickenRunCoopRequest;
  return proto.ei.SendChickenRunCoopRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ei.SendChickenRunCoopRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ei.SendChickenRunCoopRequest}
 */
proto.ei.SendChickenRunCoopRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 8:
      var value = new proto.ei.BasicRequestInfo;
      reader.readMessage(value,proto.ei.BasicRequestInfo.deserializeBinaryFromReader);
      msg.setRinfo(value);
      break;
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setContractIdentifier(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setCoopIdentifier(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setPlayerIdentifier(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setRequestingUserId(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setRequestingUserName(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setFarmPop(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setClientVersion(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ei.SendChickenRunCoopRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ei.SendChickenRunCoopRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ei.SendChickenRunCoopRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.SendChickenRunCoopRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRinfo();
  if (f != null) {
    writer.writeMessage(
      8,
      f,
      proto.ei.BasicRequestInfo.serializeBinaryToWriter
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeString(
      3,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeString(
      4,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeString(
      6,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeUint64(
      5,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 7));
  if (f != null) {
    writer.writeUint32(
      7,
      f
    );
  }
};


/**
 * optional BasicRequestInfo rinfo = 8;
 * @return {?proto.ei.BasicRequestInfo}
 */
proto.ei.SendChickenRunCoopRequest.prototype.getRinfo = function() {
  return /** @type{?proto.ei.BasicRequestInfo} */ (
    jspb.Message.getWrapperField(this, proto.ei.BasicRequestInfo, 8));
};


/**
 * @param {?proto.ei.BasicRequestInfo|undefined} value
 * @return {!proto.ei.SendChickenRunCoopRequest} returns this
*/
proto.ei.SendChickenRunCoopRequest.prototype.setRinfo = function(value) {
  return jspb.Message.setWrapperField(this, 8, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.ei.SendChickenRunCoopRequest} returns this
 */
proto.ei.SendChickenRunCoopRequest.prototype.clearRinfo = function() {
  return this.setRinfo(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.SendChickenRunCoopRequest.prototype.hasRinfo = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional string contract_identifier = 1;
 * @return {string}
 */
proto.ei.SendChickenRunCoopRequest.prototype.getContractIdentifier = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.ei.SendChickenRunCoopRequest} returns this
 */
proto.ei.SendChickenRunCoopRequest.prototype.setContractIdentifier = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.SendChickenRunCoopRequest} returns this
 */
proto.ei.SendChickenRunCoopRequest.prototype.clearContractIdentifier = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.SendChickenRunCoopRequest.prototype.hasContractIdentifier = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string coop_identifier = 2;
 * @return {string}
 */
proto.ei.SendChickenRunCoopRequest.prototype.getCoopIdentifier = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.ei.SendChickenRunCoopRequest} returns this
 */
proto.ei.SendChickenRunCoopRequest.prototype.setCoopIdentifier = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.SendChickenRunCoopRequest} returns this
 */
proto.ei.SendChickenRunCoopRequest.prototype.clearCoopIdentifier = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.SendChickenRunCoopRequest.prototype.hasCoopIdentifier = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string player_identifier = 3;
 * @return {string}
 */
proto.ei.SendChickenRunCoopRequest.prototype.getPlayerIdentifier = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.ei.SendChickenRunCoopRequest} returns this
 */
proto.ei.SendChickenRunCoopRequest.prototype.setPlayerIdentifier = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.SendChickenRunCoopRequest} returns this
 */
proto.ei.SendChickenRunCoopRequest.prototype.clearPlayerIdentifier = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.SendChickenRunCoopRequest.prototype.hasPlayerIdentifier = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional string requesting_user_id = 4;
 * @return {string}
 */
proto.ei.SendChickenRunCoopRequest.prototype.getRequestingUserId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.ei.SendChickenRunCoopRequest} returns this
 */
proto.ei.SendChickenRunCoopRequest.prototype.setRequestingUserId = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.SendChickenRunCoopRequest} returns this
 */
proto.ei.SendChickenRunCoopRequest.prototype.clearRequestingUserId = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.SendChickenRunCoopRequest.prototype.hasRequestingUserId = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional string requesting_user_name = 6;
 * @return {string}
 */
proto.ei.SendChickenRunCoopRequest.prototype.getRequestingUserName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.ei.SendChickenRunCoopRequest} returns this
 */
proto.ei.SendChickenRunCoopRequest.prototype.setRequestingUserName = function(value) {
  return jspb.Message.setField(this, 6, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.SendChickenRunCoopRequest} returns this
 */
proto.ei.SendChickenRunCoopRequest.prototype.clearRequestingUserName = function() {
  return jspb.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.SendChickenRunCoopRequest.prototype.hasRequestingUserName = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional uint64 farm_pop = 5;
 * @return {number}
 */
proto.ei.SendChickenRunCoopRequest.prototype.getFarmPop = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.ei.SendChickenRunCoopRequest} returns this
 */
proto.ei.SendChickenRunCoopRequest.prototype.setFarmPop = function(value) {
  return jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.SendChickenRunCoopRequest} returns this
 */
proto.ei.SendChickenRunCoopRequest.prototype.clearFarmPop = function() {
  return jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.SendChickenRunCoopRequest.prototype.hasFarmPop = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional uint32 client_version = 7;
 * @return {number}
 */
proto.ei.SendChickenRunCoopRequest.prototype.getClientVersion = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {number} value
 * @return {!proto.ei.SendChickenRunCoopRequest} returns this
 */
proto.ei.SendChickenRunCoopRequest.prototype.setClientVersion = function(value) {
  return jspb.Message.setField(this, 7, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.SendChickenRunCoopRequest} returns this
 */
proto.ei.SendChickenRunCoopRequest.prototype.clearClientVersion = function() {
  return jspb.Message.setField(this, 7, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.SendChickenRunCoopRequest.prototype.hasClientVersion = function() {
  return jspb.Message.getField(this, 7) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ei.ReportPlayerCoopRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.ei.ReportPlayerCoopRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ei.ReportPlayerCoopRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.ReportPlayerCoopRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    rinfo: (f = msg.getRinfo()) && proto.ei.BasicRequestInfo.toObject(includeInstance, f),
    contractIdentifier: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,
    coopIdentifier: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f,
    userId: (f = jspb.Message.getField(msg, 4)) == null ? undefined : f,
    reason: (f = jspb.Message.getField(msg, 5)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ei.ReportPlayerCoopRequest}
 */
proto.ei.ReportPlayerCoopRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ei.ReportPlayerCoopRequest;
  return proto.ei.ReportPlayerCoopRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ei.ReportPlayerCoopRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ei.ReportPlayerCoopRequest}
 */
proto.ei.ReportPlayerCoopRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.ei.BasicRequestInfo;
      reader.readMessage(value,proto.ei.BasicRequestInfo.deserializeBinaryFromReader);
      msg.setRinfo(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setContractIdentifier(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setCoopIdentifier(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserId(value);
      break;
    case 5:
      var value = /** @type {!proto.ei.ReportPlayerCoopRequest.Reason} */ (reader.readEnum());
      msg.setReason(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ei.ReportPlayerCoopRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ei.ReportPlayerCoopRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ei.ReportPlayerCoopRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.ReportPlayerCoopRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRinfo();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.ei.BasicRequestInfo.serializeBinaryToWriter
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeString(
      3,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeString(
      4,
      f
    );
  }
  f = /** @type {!proto.ei.ReportPlayerCoopRequest.Reason} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeEnum(
      5,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.ei.ReportPlayerCoopRequest.Reason = {
  UNKNOWN: 0,
  OFFENSIVE_NAME: 1,
  CHEATING: 2,
  LEECHING: 3
};

/**
 * optional BasicRequestInfo rinfo = 1;
 * @return {?proto.ei.BasicRequestInfo}
 */
proto.ei.ReportPlayerCoopRequest.prototype.getRinfo = function() {
  return /** @type{?proto.ei.BasicRequestInfo} */ (
    jspb.Message.getWrapperField(this, proto.ei.BasicRequestInfo, 1));
};


/**
 * @param {?proto.ei.BasicRequestInfo|undefined} value
 * @return {!proto.ei.ReportPlayerCoopRequest} returns this
*/
proto.ei.ReportPlayerCoopRequest.prototype.setRinfo = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.ei.ReportPlayerCoopRequest} returns this
 */
proto.ei.ReportPlayerCoopRequest.prototype.clearRinfo = function() {
  return this.setRinfo(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ReportPlayerCoopRequest.prototype.hasRinfo = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string contract_identifier = 2;
 * @return {string}
 */
proto.ei.ReportPlayerCoopRequest.prototype.getContractIdentifier = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.ei.ReportPlayerCoopRequest} returns this
 */
proto.ei.ReportPlayerCoopRequest.prototype.setContractIdentifier = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.ReportPlayerCoopRequest} returns this
 */
proto.ei.ReportPlayerCoopRequest.prototype.clearContractIdentifier = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ReportPlayerCoopRequest.prototype.hasContractIdentifier = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string coop_identifier = 3;
 * @return {string}
 */
proto.ei.ReportPlayerCoopRequest.prototype.getCoopIdentifier = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.ei.ReportPlayerCoopRequest} returns this
 */
proto.ei.ReportPlayerCoopRequest.prototype.setCoopIdentifier = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.ReportPlayerCoopRequest} returns this
 */
proto.ei.ReportPlayerCoopRequest.prototype.clearCoopIdentifier = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ReportPlayerCoopRequest.prototype.hasCoopIdentifier = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional string user_id = 4;
 * @return {string}
 */
proto.ei.ReportPlayerCoopRequest.prototype.getUserId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.ei.ReportPlayerCoopRequest} returns this
 */
proto.ei.ReportPlayerCoopRequest.prototype.setUserId = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.ReportPlayerCoopRequest} returns this
 */
proto.ei.ReportPlayerCoopRequest.prototype.clearUserId = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ReportPlayerCoopRequest.prototype.hasUserId = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional Reason reason = 5;
 * @return {!proto.ei.ReportPlayerCoopRequest.Reason}
 */
proto.ei.ReportPlayerCoopRequest.prototype.getReason = function() {
  return /** @type {!proto.ei.ReportPlayerCoopRequest.Reason} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {!proto.ei.ReportPlayerCoopRequest.Reason} value
 * @return {!proto.ei.ReportPlayerCoopRequest} returns this
 */
proto.ei.ReportPlayerCoopRequest.prototype.setReason = function(value) {
  return jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.ReportPlayerCoopRequest} returns this
 */
proto.ei.ReportPlayerCoopRequest.prototype.clearReason = function() {
  return jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ReportPlayerCoopRequest.prototype.hasReason = function() {
  return jspb.Message.getField(this, 5) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ei.KickPlayerCoopRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.ei.KickPlayerCoopRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ei.KickPlayerCoopRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.KickPlayerCoopRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    rinfo: (f = msg.getRinfo()) && proto.ei.BasicRequestInfo.toObject(includeInstance, f),
    contractIdentifier: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    coopIdentifier: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,
    playerIdentifier: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f,
    requestingUserId: (f = jspb.Message.getField(msg, 4)) == null ? undefined : f,
    reason: (f = jspb.Message.getField(msg, 9)) == null ? undefined : f,
    clientVersion: (f = jspb.Message.getField(msg, 7)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ei.KickPlayerCoopRequest}
 */
proto.ei.KickPlayerCoopRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ei.KickPlayerCoopRequest;
  return proto.ei.KickPlayerCoopRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ei.KickPlayerCoopRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ei.KickPlayerCoopRequest}
 */
proto.ei.KickPlayerCoopRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 8:
      var value = new proto.ei.BasicRequestInfo;
      reader.readMessage(value,proto.ei.BasicRequestInfo.deserializeBinaryFromReader);
      msg.setRinfo(value);
      break;
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setContractIdentifier(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setCoopIdentifier(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setPlayerIdentifier(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setRequestingUserId(value);
      break;
    case 9:
      var value = /** @type {!proto.ei.KickPlayerCoopRequest.Reason} */ (reader.readEnum());
      msg.setReason(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setClientVersion(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ei.KickPlayerCoopRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ei.KickPlayerCoopRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ei.KickPlayerCoopRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.KickPlayerCoopRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRinfo();
  if (f != null) {
    writer.writeMessage(
      8,
      f,
      proto.ei.BasicRequestInfo.serializeBinaryToWriter
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeString(
      3,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeString(
      4,
      f
    );
  }
  f = /** @type {!proto.ei.KickPlayerCoopRequest.Reason} */ (jspb.Message.getField(message, 9));
  if (f != null) {
    writer.writeEnum(
      9,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 7));
  if (f != null) {
    writer.writeUint32(
      7,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.ei.KickPlayerCoopRequest.Reason = {
  INVALID: 0,
  CHEATER: 1,
  IDLE: 2,
  LEECH: 3,
  PRIVATE: 4
};

/**
 * optional BasicRequestInfo rinfo = 8;
 * @return {?proto.ei.BasicRequestInfo}
 */
proto.ei.KickPlayerCoopRequest.prototype.getRinfo = function() {
  return /** @type{?proto.ei.BasicRequestInfo} */ (
    jspb.Message.getWrapperField(this, proto.ei.BasicRequestInfo, 8));
};


/**
 * @param {?proto.ei.BasicRequestInfo|undefined} value
 * @return {!proto.ei.KickPlayerCoopRequest} returns this
*/
proto.ei.KickPlayerCoopRequest.prototype.setRinfo = function(value) {
  return jspb.Message.setWrapperField(this, 8, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.ei.KickPlayerCoopRequest} returns this
 */
proto.ei.KickPlayerCoopRequest.prototype.clearRinfo = function() {
  return this.setRinfo(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.KickPlayerCoopRequest.prototype.hasRinfo = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional string contract_identifier = 1;
 * @return {string}
 */
proto.ei.KickPlayerCoopRequest.prototype.getContractIdentifier = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.ei.KickPlayerCoopRequest} returns this
 */
proto.ei.KickPlayerCoopRequest.prototype.setContractIdentifier = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.KickPlayerCoopRequest} returns this
 */
proto.ei.KickPlayerCoopRequest.prototype.clearContractIdentifier = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.KickPlayerCoopRequest.prototype.hasContractIdentifier = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string coop_identifier = 2;
 * @return {string}
 */
proto.ei.KickPlayerCoopRequest.prototype.getCoopIdentifier = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.ei.KickPlayerCoopRequest} returns this
 */
proto.ei.KickPlayerCoopRequest.prototype.setCoopIdentifier = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.KickPlayerCoopRequest} returns this
 */
proto.ei.KickPlayerCoopRequest.prototype.clearCoopIdentifier = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.KickPlayerCoopRequest.prototype.hasCoopIdentifier = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string player_identifier = 3;
 * @return {string}
 */
proto.ei.KickPlayerCoopRequest.prototype.getPlayerIdentifier = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.ei.KickPlayerCoopRequest} returns this
 */
proto.ei.KickPlayerCoopRequest.prototype.setPlayerIdentifier = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.KickPlayerCoopRequest} returns this
 */
proto.ei.KickPlayerCoopRequest.prototype.clearPlayerIdentifier = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.KickPlayerCoopRequest.prototype.hasPlayerIdentifier = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional string requesting_user_id = 4;
 * @return {string}
 */
proto.ei.KickPlayerCoopRequest.prototype.getRequestingUserId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.ei.KickPlayerCoopRequest} returns this
 */
proto.ei.KickPlayerCoopRequest.prototype.setRequestingUserId = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.KickPlayerCoopRequest} returns this
 */
proto.ei.KickPlayerCoopRequest.prototype.clearRequestingUserId = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.KickPlayerCoopRequest.prototype.hasRequestingUserId = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional Reason reason = 9;
 * @return {!proto.ei.KickPlayerCoopRequest.Reason}
 */
proto.ei.KickPlayerCoopRequest.prototype.getReason = function() {
  return /** @type {!proto.ei.KickPlayerCoopRequest.Reason} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};


/**
 * @param {!proto.ei.KickPlayerCoopRequest.Reason} value
 * @return {!proto.ei.KickPlayerCoopRequest} returns this
 */
proto.ei.KickPlayerCoopRequest.prototype.setReason = function(value) {
  return jspb.Message.setField(this, 9, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.KickPlayerCoopRequest} returns this
 */
proto.ei.KickPlayerCoopRequest.prototype.clearReason = function() {
  return jspb.Message.setField(this, 9, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.KickPlayerCoopRequest.prototype.hasReason = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional uint32 client_version = 7;
 * @return {number}
 */
proto.ei.KickPlayerCoopRequest.prototype.getClientVersion = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {number} value
 * @return {!proto.ei.KickPlayerCoopRequest} returns this
 */
proto.ei.KickPlayerCoopRequest.prototype.setClientVersion = function(value) {
  return jspb.Message.setField(this, 7, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.KickPlayerCoopRequest} returns this
 */
proto.ei.KickPlayerCoopRequest.prototype.clearClientVersion = function() {
  return jspb.Message.setField(this, 7, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.KickPlayerCoopRequest.prototype.hasClientVersion = function() {
  return jspb.Message.getField(this, 7) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ei.ContractCoopStatusUpdateRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.ei.ContractCoopStatusUpdateRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ei.ContractCoopStatusUpdateRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.ContractCoopStatusUpdateRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    rinfo: (f = msg.getRinfo()) && proto.ei.BasicRequestInfo.toObject(includeInstance, f),
    userId: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    contractIdentifier: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,
    coopIdentifier: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f,
    pushUserId: (f = jspb.Message.getField(msg, 8)) == null ? undefined : f,
    amount: (f = jspb.Message.getOptionalFloatingPointField(msg, 4)) == null ? undefined : f,
    rate: (f = jspb.Message.getOptionalFloatingPointField(msg, 5)) == null ? undefined : f,
    timeCheatsDetected: (f = jspb.Message.getField(msg, 6)) == null ? undefined : f,
    soulPower: (f = jspb.Message.getOptionalFloatingPointField(msg, 7)) == null ? undefined : f,
    eop: (f = jspb.Message.getField(msg, 15)) == null ? undefined : f,
    boostTokens: (f = jspb.Message.getField(msg, 9)) == null ? undefined : f,
    boostTokensSpent: (f = jspb.Message.getField(msg, 13)) == null ? undefined : f,
    hideCcStatus: (f = jspb.Message.getBooleanField(msg, 17)) == null ? undefined : f,
    productionParams: (f = msg.getProductionParams()) && proto.ei.FarmProductionParams.toObject(includeInstance, f),
    farmInfo: (f = msg.getFarmInfo()) && proto.ei.PlayerFarmInfo.toObject(includeInstance, f),
    eggLayingRateBuff: jspb.Message.getFloatingPointFieldWithDefault(msg, 10, 1.0),
    earningsBuff: jspb.Message.getFloatingPointFieldWithDefault(msg, 11, 1.0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ei.ContractCoopStatusUpdateRequest}
 */
proto.ei.ContractCoopStatusUpdateRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ei.ContractCoopStatusUpdateRequest;
  return proto.ei.ContractCoopStatusUpdateRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ei.ContractCoopStatusUpdateRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ei.ContractCoopStatusUpdateRequest}
 */
proto.ei.ContractCoopStatusUpdateRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 12:
      var value = new proto.ei.BasicRequestInfo;
      reader.readMessage(value,proto.ei.BasicRequestInfo.deserializeBinaryFromReader);
      msg.setRinfo(value);
      break;
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setContractIdentifier(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setCoopIdentifier(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setPushUserId(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setAmount(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setRate(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setTimeCheatsDetected(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setSoulPower(value);
      break;
    case 15:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setEop(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setBoostTokens(value);
      break;
    case 13:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setBoostTokensSpent(value);
      break;
    case 17:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setHideCcStatus(value);
      break;
    case 14:
      var value = new proto.ei.FarmProductionParams;
      reader.readMessage(value,proto.ei.FarmProductionParams.deserializeBinaryFromReader);
      msg.setProductionParams(value);
      break;
    case 16:
      var value = new proto.ei.PlayerFarmInfo;
      reader.readMessage(value,proto.ei.PlayerFarmInfo.deserializeBinaryFromReader);
      msg.setFarmInfo(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setEggLayingRateBuff(value);
      break;
    case 11:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setEarningsBuff(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ei.ContractCoopStatusUpdateRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ei.ContractCoopStatusUpdateRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ei.ContractCoopStatusUpdateRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.ContractCoopStatusUpdateRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRinfo();
  if (f != null) {
    writer.writeMessage(
      12,
      f,
      proto.ei.BasicRequestInfo.serializeBinaryToWriter
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeString(
      3,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 8));
  if (f != null) {
    writer.writeString(
      8,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeDouble(
      4,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeDouble(
      5,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeUint32(
      6,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 7));
  if (f != null) {
    writer.writeDouble(
      7,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 15));
  if (f != null) {
    writer.writeUint32(
      15,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 9));
  if (f != null) {
    writer.writeUint32(
      9,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 13));
  if (f != null) {
    writer.writeUint32(
      13,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 17));
  if (f != null) {
    writer.writeBool(
      17,
      f
    );
  }
  f = message.getProductionParams();
  if (f != null) {
    writer.writeMessage(
      14,
      f,
      proto.ei.FarmProductionParams.serializeBinaryToWriter
    );
  }
  f = message.getFarmInfo();
  if (f != null) {
    writer.writeMessage(
      16,
      f,
      proto.ei.PlayerFarmInfo.serializeBinaryToWriter
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 10));
  if (f != null) {
    writer.writeDouble(
      10,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 11));
  if (f != null) {
    writer.writeDouble(
      11,
      f
    );
  }
};


/**
 * optional BasicRequestInfo rinfo = 12;
 * @return {?proto.ei.BasicRequestInfo}
 */
proto.ei.ContractCoopStatusUpdateRequest.prototype.getRinfo = function() {
  return /** @type{?proto.ei.BasicRequestInfo} */ (
    jspb.Message.getWrapperField(this, proto.ei.BasicRequestInfo, 12));
};


/**
 * @param {?proto.ei.BasicRequestInfo|undefined} value
 * @return {!proto.ei.ContractCoopStatusUpdateRequest} returns this
*/
proto.ei.ContractCoopStatusUpdateRequest.prototype.setRinfo = function(value) {
  return jspb.Message.setWrapperField(this, 12, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.ei.ContractCoopStatusUpdateRequest} returns this
 */
proto.ei.ContractCoopStatusUpdateRequest.prototype.clearRinfo = function() {
  return this.setRinfo(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ContractCoopStatusUpdateRequest.prototype.hasRinfo = function() {
  return jspb.Message.getField(this, 12) != null;
};


/**
 * optional string user_id = 1;
 * @return {string}
 */
proto.ei.ContractCoopStatusUpdateRequest.prototype.getUserId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.ei.ContractCoopStatusUpdateRequest} returns this
 */
proto.ei.ContractCoopStatusUpdateRequest.prototype.setUserId = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.ContractCoopStatusUpdateRequest} returns this
 */
proto.ei.ContractCoopStatusUpdateRequest.prototype.clearUserId = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ContractCoopStatusUpdateRequest.prototype.hasUserId = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string contract_identifier = 2;
 * @return {string}
 */
proto.ei.ContractCoopStatusUpdateRequest.prototype.getContractIdentifier = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.ei.ContractCoopStatusUpdateRequest} returns this
 */
proto.ei.ContractCoopStatusUpdateRequest.prototype.setContractIdentifier = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.ContractCoopStatusUpdateRequest} returns this
 */
proto.ei.ContractCoopStatusUpdateRequest.prototype.clearContractIdentifier = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ContractCoopStatusUpdateRequest.prototype.hasContractIdentifier = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string coop_identifier = 3;
 * @return {string}
 */
proto.ei.ContractCoopStatusUpdateRequest.prototype.getCoopIdentifier = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.ei.ContractCoopStatusUpdateRequest} returns this
 */
proto.ei.ContractCoopStatusUpdateRequest.prototype.setCoopIdentifier = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.ContractCoopStatusUpdateRequest} returns this
 */
proto.ei.ContractCoopStatusUpdateRequest.prototype.clearCoopIdentifier = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ContractCoopStatusUpdateRequest.prototype.hasCoopIdentifier = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional string push_user_id = 8;
 * @return {string}
 */
proto.ei.ContractCoopStatusUpdateRequest.prototype.getPushUserId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.ei.ContractCoopStatusUpdateRequest} returns this
 */
proto.ei.ContractCoopStatusUpdateRequest.prototype.setPushUserId = function(value) {
  return jspb.Message.setField(this, 8, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.ContractCoopStatusUpdateRequest} returns this
 */
proto.ei.ContractCoopStatusUpdateRequest.prototype.clearPushUserId = function() {
  return jspb.Message.setField(this, 8, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ContractCoopStatusUpdateRequest.prototype.hasPushUserId = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional double amount = 4;
 * @return {number}
 */
proto.ei.ContractCoopStatusUpdateRequest.prototype.getAmount = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 4, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.ei.ContractCoopStatusUpdateRequest} returns this
 */
proto.ei.ContractCoopStatusUpdateRequest.prototype.setAmount = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.ContractCoopStatusUpdateRequest} returns this
 */
proto.ei.ContractCoopStatusUpdateRequest.prototype.clearAmount = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ContractCoopStatusUpdateRequest.prototype.hasAmount = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional double rate = 5;
 * @return {number}
 */
proto.ei.ContractCoopStatusUpdateRequest.prototype.getRate = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 5, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.ei.ContractCoopStatusUpdateRequest} returns this
 */
proto.ei.ContractCoopStatusUpdateRequest.prototype.setRate = function(value) {
  return jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.ContractCoopStatusUpdateRequest} returns this
 */
proto.ei.ContractCoopStatusUpdateRequest.prototype.clearRate = function() {
  return jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ContractCoopStatusUpdateRequest.prototype.hasRate = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional uint32 time_cheats_detected = 6;
 * @return {number}
 */
proto.ei.ContractCoopStatusUpdateRequest.prototype.getTimeCheatsDetected = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.ei.ContractCoopStatusUpdateRequest} returns this
 */
proto.ei.ContractCoopStatusUpdateRequest.prototype.setTimeCheatsDetected = function(value) {
  return jspb.Message.setField(this, 6, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.ContractCoopStatusUpdateRequest} returns this
 */
proto.ei.ContractCoopStatusUpdateRequest.prototype.clearTimeCheatsDetected = function() {
  return jspb.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ContractCoopStatusUpdateRequest.prototype.hasTimeCheatsDetected = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional double soul_power = 7;
 * @return {number}
 */
proto.ei.ContractCoopStatusUpdateRequest.prototype.getSoulPower = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 7, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.ei.ContractCoopStatusUpdateRequest} returns this
 */
proto.ei.ContractCoopStatusUpdateRequest.prototype.setSoulPower = function(value) {
  return jspb.Message.setField(this, 7, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.ContractCoopStatusUpdateRequest} returns this
 */
proto.ei.ContractCoopStatusUpdateRequest.prototype.clearSoulPower = function() {
  return jspb.Message.setField(this, 7, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ContractCoopStatusUpdateRequest.prototype.hasSoulPower = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional uint32 eop = 15;
 * @return {number}
 */
proto.ei.ContractCoopStatusUpdateRequest.prototype.getEop = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 15, 0));
};


/**
 * @param {number} value
 * @return {!proto.ei.ContractCoopStatusUpdateRequest} returns this
 */
proto.ei.ContractCoopStatusUpdateRequest.prototype.setEop = function(value) {
  return jspb.Message.setField(this, 15, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.ContractCoopStatusUpdateRequest} returns this
 */
proto.ei.ContractCoopStatusUpdateRequest.prototype.clearEop = function() {
  return jspb.Message.setField(this, 15, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ContractCoopStatusUpdateRequest.prototype.hasEop = function() {
  return jspb.Message.getField(this, 15) != null;
};


/**
 * optional uint32 boost_tokens = 9;
 * @return {number}
 */
proto.ei.ContractCoopStatusUpdateRequest.prototype.getBoostTokens = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};


/**
 * @param {number} value
 * @return {!proto.ei.ContractCoopStatusUpdateRequest} returns this
 */
proto.ei.ContractCoopStatusUpdateRequest.prototype.setBoostTokens = function(value) {
  return jspb.Message.setField(this, 9, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.ContractCoopStatusUpdateRequest} returns this
 */
proto.ei.ContractCoopStatusUpdateRequest.prototype.clearBoostTokens = function() {
  return jspb.Message.setField(this, 9, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ContractCoopStatusUpdateRequest.prototype.hasBoostTokens = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional uint32 boost_tokens_spent = 13;
 * @return {number}
 */
proto.ei.ContractCoopStatusUpdateRequest.prototype.getBoostTokensSpent = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 13, 0));
};


/**
 * @param {number} value
 * @return {!proto.ei.ContractCoopStatusUpdateRequest} returns this
 */
proto.ei.ContractCoopStatusUpdateRequest.prototype.setBoostTokensSpent = function(value) {
  return jspb.Message.setField(this, 13, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.ContractCoopStatusUpdateRequest} returns this
 */
proto.ei.ContractCoopStatusUpdateRequest.prototype.clearBoostTokensSpent = function() {
  return jspb.Message.setField(this, 13, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ContractCoopStatusUpdateRequest.prototype.hasBoostTokensSpent = function() {
  return jspb.Message.getField(this, 13) != null;
};


/**
 * optional bool hide_cc_status = 17;
 * @return {boolean}
 */
proto.ei.ContractCoopStatusUpdateRequest.prototype.getHideCcStatus = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 17, false));
};


/**
 * @param {boolean} value
 * @return {!proto.ei.ContractCoopStatusUpdateRequest} returns this
 */
proto.ei.ContractCoopStatusUpdateRequest.prototype.setHideCcStatus = function(value) {
  return jspb.Message.setField(this, 17, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.ContractCoopStatusUpdateRequest} returns this
 */
proto.ei.ContractCoopStatusUpdateRequest.prototype.clearHideCcStatus = function() {
  return jspb.Message.setField(this, 17, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ContractCoopStatusUpdateRequest.prototype.hasHideCcStatus = function() {
  return jspb.Message.getField(this, 17) != null;
};


/**
 * optional FarmProductionParams production_params = 14;
 * @return {?proto.ei.FarmProductionParams}
 */
proto.ei.ContractCoopStatusUpdateRequest.prototype.getProductionParams = function() {
  return /** @type{?proto.ei.FarmProductionParams} */ (
    jspb.Message.getWrapperField(this, proto.ei.FarmProductionParams, 14));
};


/**
 * @param {?proto.ei.FarmProductionParams|undefined} value
 * @return {!proto.ei.ContractCoopStatusUpdateRequest} returns this
*/
proto.ei.ContractCoopStatusUpdateRequest.prototype.setProductionParams = function(value) {
  return jspb.Message.setWrapperField(this, 14, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.ei.ContractCoopStatusUpdateRequest} returns this
 */
proto.ei.ContractCoopStatusUpdateRequest.prototype.clearProductionParams = function() {
  return this.setProductionParams(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ContractCoopStatusUpdateRequest.prototype.hasProductionParams = function() {
  return jspb.Message.getField(this, 14) != null;
};


/**
 * optional PlayerFarmInfo farm_info = 16;
 * @return {?proto.ei.PlayerFarmInfo}
 */
proto.ei.ContractCoopStatusUpdateRequest.prototype.getFarmInfo = function() {
  return /** @type{?proto.ei.PlayerFarmInfo} */ (
    jspb.Message.getWrapperField(this, proto.ei.PlayerFarmInfo, 16));
};


/**
 * @param {?proto.ei.PlayerFarmInfo|undefined} value
 * @return {!proto.ei.ContractCoopStatusUpdateRequest} returns this
*/
proto.ei.ContractCoopStatusUpdateRequest.prototype.setFarmInfo = function(value) {
  return jspb.Message.setWrapperField(this, 16, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.ei.ContractCoopStatusUpdateRequest} returns this
 */
proto.ei.ContractCoopStatusUpdateRequest.prototype.clearFarmInfo = function() {
  return this.setFarmInfo(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ContractCoopStatusUpdateRequest.prototype.hasFarmInfo = function() {
  return jspb.Message.getField(this, 16) != null;
};


/**
 * optional double egg_laying_rate_buff = 10;
 * @return {number}
 */
proto.ei.ContractCoopStatusUpdateRequest.prototype.getEggLayingRateBuff = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 10, 1.0));
};


/**
 * @param {number} value
 * @return {!proto.ei.ContractCoopStatusUpdateRequest} returns this
 */
proto.ei.ContractCoopStatusUpdateRequest.prototype.setEggLayingRateBuff = function(value) {
  return jspb.Message.setField(this, 10, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.ContractCoopStatusUpdateRequest} returns this
 */
proto.ei.ContractCoopStatusUpdateRequest.prototype.clearEggLayingRateBuff = function() {
  return jspb.Message.setField(this, 10, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ContractCoopStatusUpdateRequest.prototype.hasEggLayingRateBuff = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * optional double earnings_buff = 11;
 * @return {number}
 */
proto.ei.ContractCoopStatusUpdateRequest.prototype.getEarningsBuff = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 11, 1.0));
};


/**
 * @param {number} value
 * @return {!proto.ei.ContractCoopStatusUpdateRequest} returns this
 */
proto.ei.ContractCoopStatusUpdateRequest.prototype.setEarningsBuff = function(value) {
  return jspb.Message.setField(this, 11, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.ContractCoopStatusUpdateRequest} returns this
 */
proto.ei.ContractCoopStatusUpdateRequest.prototype.clearEarningsBuff = function() {
  return jspb.Message.setField(this, 11, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ContractCoopStatusUpdateRequest.prototype.hasEarningsBuff = function() {
  return jspb.Message.getField(this, 11) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ei.ContractCoopStatusUpdateResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.ei.ContractCoopStatusUpdateResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ei.ContractCoopStatusUpdateResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.ContractCoopStatusUpdateResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    finalized: (f = jspb.Message.getBooleanField(msg, 1)) == null ? undefined : f,
    exists: (f = jspb.Message.getBooleanField(msg, 2)) == null ? undefined : f,
    status: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ei.ContractCoopStatusUpdateResponse}
 */
proto.ei.ContractCoopStatusUpdateResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ei.ContractCoopStatusUpdateResponse;
  return proto.ei.ContractCoopStatusUpdateResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ei.ContractCoopStatusUpdateResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ei.ContractCoopStatusUpdateResponse}
 */
proto.ei.ContractCoopStatusUpdateResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setFinalized(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setExists(value);
      break;
    case 3:
      var value = /** @type {!proto.ei.ContractCoopStatusResponse.MemberStatus} */ (reader.readEnum());
      msg.setStatus(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ei.ContractCoopStatusUpdateResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ei.ContractCoopStatusUpdateResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ei.ContractCoopStatusUpdateResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.ContractCoopStatusUpdateResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {boolean} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeBool(
      1,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeBool(
      2,
      f
    );
  }
  f = /** @type {!proto.ei.ContractCoopStatusResponse.MemberStatus} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeEnum(
      3,
      f
    );
  }
};


/**
 * optional bool finalized = 1;
 * @return {boolean}
 */
proto.ei.ContractCoopStatusUpdateResponse.prototype.getFinalized = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.ei.ContractCoopStatusUpdateResponse} returns this
 */
proto.ei.ContractCoopStatusUpdateResponse.prototype.setFinalized = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.ContractCoopStatusUpdateResponse} returns this
 */
proto.ei.ContractCoopStatusUpdateResponse.prototype.clearFinalized = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ContractCoopStatusUpdateResponse.prototype.hasFinalized = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional bool exists = 2;
 * @return {boolean}
 */
proto.ei.ContractCoopStatusUpdateResponse.prototype.getExists = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));
};


/**
 * @param {boolean} value
 * @return {!proto.ei.ContractCoopStatusUpdateResponse} returns this
 */
proto.ei.ContractCoopStatusUpdateResponse.prototype.setExists = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.ContractCoopStatusUpdateResponse} returns this
 */
proto.ei.ContractCoopStatusUpdateResponse.prototype.clearExists = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ContractCoopStatusUpdateResponse.prototype.hasExists = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional ContractCoopStatusResponse.MemberStatus status = 3;
 * @return {!proto.ei.ContractCoopStatusResponse.MemberStatus}
 */
proto.ei.ContractCoopStatusUpdateResponse.prototype.getStatus = function() {
  return /** @type {!proto.ei.ContractCoopStatusResponse.MemberStatus} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {!proto.ei.ContractCoopStatusResponse.MemberStatus} value
 * @return {!proto.ei.ContractCoopStatusUpdateResponse} returns this
 */
proto.ei.ContractCoopStatusUpdateResponse.prototype.setStatus = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.ContractCoopStatusUpdateResponse} returns this
 */
proto.ei.ContractCoopStatusUpdateResponse.prototype.clearStatus = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ContractCoopStatusUpdateResponse.prototype.hasStatus = function() {
  return jspb.Message.getField(this, 3) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ei.CoopBuffState.prototype.toObject = function(opt_includeInstance) {
  return proto.ei.CoopBuffState.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ei.CoopBuffState} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.CoopBuffState.toObject = function(includeInstance, msg) {
  var f, obj = {
    eggLayingRate: jspb.Message.getFloatingPointFieldWithDefault(msg, 1, 1.0),
    earnings: jspb.Message.getFloatingPointFieldWithDefault(msg, 2, 1.0),
    serverTimestamp: (f = jspb.Message.getOptionalFloatingPointField(msg, 3)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ei.CoopBuffState}
 */
proto.ei.CoopBuffState.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ei.CoopBuffState;
  return proto.ei.CoopBuffState.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ei.CoopBuffState} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ei.CoopBuffState}
 */
proto.ei.CoopBuffState.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setEggLayingRate(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setEarnings(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setServerTimestamp(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ei.CoopBuffState.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ei.CoopBuffState.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ei.CoopBuffState} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.CoopBuffState.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {number} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeDouble(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeDouble(
      2,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeDouble(
      3,
      f
    );
  }
};


/**
 * optional double egg_laying_rate = 1;
 * @return {number}
 */
proto.ei.CoopBuffState.prototype.getEggLayingRate = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 1, 1.0));
};


/**
 * @param {number} value
 * @return {!proto.ei.CoopBuffState} returns this
 */
proto.ei.CoopBuffState.prototype.setEggLayingRate = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.CoopBuffState} returns this
 */
proto.ei.CoopBuffState.prototype.clearEggLayingRate = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.CoopBuffState.prototype.hasEggLayingRate = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional double earnings = 2;
 * @return {number}
 */
proto.ei.CoopBuffState.prototype.getEarnings = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 2, 1.0));
};


/**
 * @param {number} value
 * @return {!proto.ei.CoopBuffState} returns this
 */
proto.ei.CoopBuffState.prototype.setEarnings = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.CoopBuffState} returns this
 */
proto.ei.CoopBuffState.prototype.clearEarnings = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.CoopBuffState.prototype.hasEarnings = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional double server_timestamp = 3;
 * @return {number}
 */
proto.ei.CoopBuffState.prototype.getServerTimestamp = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 3, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.ei.CoopBuffState} returns this
 */
proto.ei.CoopBuffState.prototype.setServerTimestamp = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.CoopBuffState} returns this
 */
proto.ei.CoopBuffState.prototype.clearServerTimestamp = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.CoopBuffState.prototype.hasServerTimestamp = function() {
  return jspb.Message.getField(this, 3) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.ei.CoopBuffHistory.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ei.CoopBuffHistory.prototype.toObject = function(opt_includeInstance) {
  return proto.ei.CoopBuffHistory.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ei.CoopBuffHistory} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.CoopBuffHistory.toObject = function(includeInstance, msg) {
  var f, obj = {
    historyList: jspb.Message.toObjectList(msg.getHistoryList(),
    proto.ei.CoopBuffState.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ei.CoopBuffHistory}
 */
proto.ei.CoopBuffHistory.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ei.CoopBuffHistory;
  return proto.ei.CoopBuffHistory.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ei.CoopBuffHistory} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ei.CoopBuffHistory}
 */
proto.ei.CoopBuffHistory.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.ei.CoopBuffState;
      reader.readMessage(value,proto.ei.CoopBuffState.deserializeBinaryFromReader);
      msg.addHistory(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ei.CoopBuffHistory.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ei.CoopBuffHistory.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ei.CoopBuffHistory} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.CoopBuffHistory.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getHistoryList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.ei.CoopBuffState.serializeBinaryToWriter
    );
  }
};


/**
 * repeated CoopBuffState history = 1;
 * @return {!Array<!proto.ei.CoopBuffState>}
 */
proto.ei.CoopBuffHistory.prototype.getHistoryList = function() {
  return /** @type{!Array<!proto.ei.CoopBuffState>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.ei.CoopBuffState, 1));
};


/**
 * @param {!Array<!proto.ei.CoopBuffState>} value
 * @return {!proto.ei.CoopBuffHistory} returns this
*/
proto.ei.CoopBuffHistory.prototype.setHistoryList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.ei.CoopBuffState=} opt_value
 * @param {number=} opt_index
 * @return {!proto.ei.CoopBuffState}
 */
proto.ei.CoopBuffHistory.prototype.addHistory = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.ei.CoopBuffState, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.ei.CoopBuffHistory} returns this
 */
proto.ei.CoopBuffHistory.prototype.clearHistoryList = function() {
  return this.setHistoryList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ei.CoopChickenRunEntry.prototype.toObject = function(opt_includeInstance) {
  return proto.ei.CoopChickenRunEntry.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ei.CoopChickenRunEntry} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.CoopChickenRunEntry.toObject = function(includeInstance, msg) {
  var f, obj = {
    userId: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    serverTimestamp: (f = jspb.Message.getOptionalFloatingPointField(msg, 2)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ei.CoopChickenRunEntry}
 */
proto.ei.CoopChickenRunEntry.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ei.CoopChickenRunEntry;
  return proto.ei.CoopChickenRunEntry.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ei.CoopChickenRunEntry} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ei.CoopChickenRunEntry}
 */
proto.ei.CoopChickenRunEntry.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setServerTimestamp(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ei.CoopChickenRunEntry.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ei.CoopChickenRunEntry.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ei.CoopChickenRunEntry} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.CoopChickenRunEntry.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeDouble(
      2,
      f
    );
  }
};


/**
 * optional string user_id = 1;
 * @return {string}
 */
proto.ei.CoopChickenRunEntry.prototype.getUserId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.ei.CoopChickenRunEntry} returns this
 */
proto.ei.CoopChickenRunEntry.prototype.setUserId = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.CoopChickenRunEntry} returns this
 */
proto.ei.CoopChickenRunEntry.prototype.clearUserId = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.CoopChickenRunEntry.prototype.hasUserId = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional double server_timestamp = 2;
 * @return {number}
 */
proto.ei.CoopChickenRunEntry.prototype.getServerTimestamp = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 2, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.ei.CoopChickenRunEntry} returns this
 */
proto.ei.CoopChickenRunEntry.prototype.setServerTimestamp = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.CoopChickenRunEntry} returns this
 */
proto.ei.CoopChickenRunEntry.prototype.clearServerTimestamp = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.CoopChickenRunEntry.prototype.hasServerTimestamp = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.ei.CoopLastChickenRunTimes.repeatedFields_ = [3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ei.CoopLastChickenRunTimes.prototype.toObject = function(opt_includeInstance) {
  return proto.ei.CoopLastChickenRunTimes.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ei.CoopLastChickenRunTimes} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.CoopLastChickenRunTimes.toObject = function(includeInstance, msg) {
  var f, obj = {
    entriesList: jspb.Message.toObjectList(msg.getEntriesList(),
    proto.ei.CoopChickenRunEntry.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ei.CoopLastChickenRunTimes}
 */
proto.ei.CoopLastChickenRunTimes.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ei.CoopLastChickenRunTimes;
  return proto.ei.CoopLastChickenRunTimes.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ei.CoopLastChickenRunTimes} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ei.CoopLastChickenRunTimes}
 */
proto.ei.CoopLastChickenRunTimes.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 3:
      var value = new proto.ei.CoopChickenRunEntry;
      reader.readMessage(value,proto.ei.CoopChickenRunEntry.deserializeBinaryFromReader);
      msg.addEntries(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ei.CoopLastChickenRunTimes.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ei.CoopLastChickenRunTimes.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ei.CoopLastChickenRunTimes} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.CoopLastChickenRunTimes.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEntriesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      proto.ei.CoopChickenRunEntry.serializeBinaryToWriter
    );
  }
};


/**
 * repeated CoopChickenRunEntry entries = 3;
 * @return {!Array<!proto.ei.CoopChickenRunEntry>}
 */
proto.ei.CoopLastChickenRunTimes.prototype.getEntriesList = function() {
  return /** @type{!Array<!proto.ei.CoopChickenRunEntry>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.ei.CoopChickenRunEntry, 3));
};


/**
 * @param {!Array<!proto.ei.CoopChickenRunEntry>} value
 * @return {!proto.ei.CoopLastChickenRunTimes} returns this
*/
proto.ei.CoopLastChickenRunTimes.prototype.setEntriesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.ei.CoopChickenRunEntry=} opt_value
 * @param {number=} opt_index
 * @return {!proto.ei.CoopChickenRunEntry}
 */
proto.ei.CoopLastChickenRunTimes.prototype.addEntries = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.ei.CoopChickenRunEntry, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.ei.CoopLastChickenRunTimes} returns this
 */
proto.ei.CoopLastChickenRunTimes.prototype.clearEntriesList = function() {
  return this.setEntriesList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.ei.LeaderboardAnalysis.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ei.LeaderboardAnalysis.prototype.toObject = function(opt_includeInstance) {
  return proto.ei.LeaderboardAnalysis.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ei.LeaderboardAnalysis} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.LeaderboardAnalysis.toObject = function(includeInstance, msg) {
  var f, obj = {
    chunksList: jspb.Message.toObjectList(msg.getChunksList(),
    proto.ei.LeaderboardAnalysis.Chunk.toObject, includeInstance),
    count: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,
    highScore: (f = jspb.Message.getOptionalFloatingPointField(msg, 3)) == null ? undefined : f,
    lowScore: (f = jspb.Message.getOptionalFloatingPointField(msg, 4)) == null ? undefined : f,
    cursor: (f = jspb.Message.getField(msg, 5)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ei.LeaderboardAnalysis}
 */
proto.ei.LeaderboardAnalysis.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ei.LeaderboardAnalysis;
  return proto.ei.LeaderboardAnalysis.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ei.LeaderboardAnalysis} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ei.LeaderboardAnalysis}
 */
proto.ei.LeaderboardAnalysis.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.ei.LeaderboardAnalysis.Chunk;
      reader.readMessage(value,proto.ei.LeaderboardAnalysis.Chunk.deserializeBinaryFromReader);
      msg.addChunks(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setCount(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setHighScore(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setLowScore(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setCursor(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ei.LeaderboardAnalysis.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ei.LeaderboardAnalysis.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ei.LeaderboardAnalysis} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.LeaderboardAnalysis.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getChunksList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.ei.LeaderboardAnalysis.Chunk.serializeBinaryToWriter
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeUint32(
      2,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeDouble(
      3,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeDouble(
      4,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeString(
      5,
      f
    );
  }
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ei.LeaderboardAnalysis.Chunk.prototype.toObject = function(opt_includeInstance) {
  return proto.ei.LeaderboardAnalysis.Chunk.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ei.LeaderboardAnalysis.Chunk} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.LeaderboardAnalysis.Chunk.toObject = function(includeInstance, msg) {
  var f, obj = {
    startIndex: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    endIndex: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,
    highScore: (f = jspb.Message.getOptionalFloatingPointField(msg, 3)) == null ? undefined : f,
    lowScore: (f = jspb.Message.getOptionalFloatingPointField(msg, 4)) == null ? undefined : f,
    startCursor: (f = jspb.Message.getField(msg, 5)) == null ? undefined : f,
    endCursor: (f = jspb.Message.getField(msg, 6)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ei.LeaderboardAnalysis.Chunk}
 */
proto.ei.LeaderboardAnalysis.Chunk.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ei.LeaderboardAnalysis.Chunk;
  return proto.ei.LeaderboardAnalysis.Chunk.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ei.LeaderboardAnalysis.Chunk} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ei.LeaderboardAnalysis.Chunk}
 */
proto.ei.LeaderboardAnalysis.Chunk.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setStartIndex(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setEndIndex(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setHighScore(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setLowScore(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setStartCursor(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setEndCursor(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ei.LeaderboardAnalysis.Chunk.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ei.LeaderboardAnalysis.Chunk.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ei.LeaderboardAnalysis.Chunk} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.LeaderboardAnalysis.Chunk.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {number} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeUint32(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeUint32(
      2,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeDouble(
      3,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeDouble(
      4,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeString(
      5,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeString(
      6,
      f
    );
  }
};


/**
 * optional uint32 start_index = 1;
 * @return {number}
 */
proto.ei.LeaderboardAnalysis.Chunk.prototype.getStartIndex = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.ei.LeaderboardAnalysis.Chunk} returns this
 */
proto.ei.LeaderboardAnalysis.Chunk.prototype.setStartIndex = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.LeaderboardAnalysis.Chunk} returns this
 */
proto.ei.LeaderboardAnalysis.Chunk.prototype.clearStartIndex = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.LeaderboardAnalysis.Chunk.prototype.hasStartIndex = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional uint32 end_index = 2;
 * @return {number}
 */
proto.ei.LeaderboardAnalysis.Chunk.prototype.getEndIndex = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.ei.LeaderboardAnalysis.Chunk} returns this
 */
proto.ei.LeaderboardAnalysis.Chunk.prototype.setEndIndex = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.LeaderboardAnalysis.Chunk} returns this
 */
proto.ei.LeaderboardAnalysis.Chunk.prototype.clearEndIndex = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.LeaderboardAnalysis.Chunk.prototype.hasEndIndex = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional double high_score = 3;
 * @return {number}
 */
proto.ei.LeaderboardAnalysis.Chunk.prototype.getHighScore = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 3, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.ei.LeaderboardAnalysis.Chunk} returns this
 */
proto.ei.LeaderboardAnalysis.Chunk.prototype.setHighScore = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.LeaderboardAnalysis.Chunk} returns this
 */
proto.ei.LeaderboardAnalysis.Chunk.prototype.clearHighScore = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.LeaderboardAnalysis.Chunk.prototype.hasHighScore = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional double low_score = 4;
 * @return {number}
 */
proto.ei.LeaderboardAnalysis.Chunk.prototype.getLowScore = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 4, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.ei.LeaderboardAnalysis.Chunk} returns this
 */
proto.ei.LeaderboardAnalysis.Chunk.prototype.setLowScore = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.LeaderboardAnalysis.Chunk} returns this
 */
proto.ei.LeaderboardAnalysis.Chunk.prototype.clearLowScore = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.LeaderboardAnalysis.Chunk.prototype.hasLowScore = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional string start_cursor = 5;
 * @return {string}
 */
proto.ei.LeaderboardAnalysis.Chunk.prototype.getStartCursor = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.ei.LeaderboardAnalysis.Chunk} returns this
 */
proto.ei.LeaderboardAnalysis.Chunk.prototype.setStartCursor = function(value) {
  return jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.LeaderboardAnalysis.Chunk} returns this
 */
proto.ei.LeaderboardAnalysis.Chunk.prototype.clearStartCursor = function() {
  return jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.LeaderboardAnalysis.Chunk.prototype.hasStartCursor = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional string end_cursor = 6;
 * @return {string}
 */
proto.ei.LeaderboardAnalysis.Chunk.prototype.getEndCursor = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.ei.LeaderboardAnalysis.Chunk} returns this
 */
proto.ei.LeaderboardAnalysis.Chunk.prototype.setEndCursor = function(value) {
  return jspb.Message.setField(this, 6, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.LeaderboardAnalysis.Chunk} returns this
 */
proto.ei.LeaderboardAnalysis.Chunk.prototype.clearEndCursor = function() {
  return jspb.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.LeaderboardAnalysis.Chunk.prototype.hasEndCursor = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * repeated Chunk chunks = 1;
 * @return {!Array<!proto.ei.LeaderboardAnalysis.Chunk>}
 */
proto.ei.LeaderboardAnalysis.prototype.getChunksList = function() {
  return /** @type{!Array<!proto.ei.LeaderboardAnalysis.Chunk>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.ei.LeaderboardAnalysis.Chunk, 1));
};


/**
 * @param {!Array<!proto.ei.LeaderboardAnalysis.Chunk>} value
 * @return {!proto.ei.LeaderboardAnalysis} returns this
*/
proto.ei.LeaderboardAnalysis.prototype.setChunksList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.ei.LeaderboardAnalysis.Chunk=} opt_value
 * @param {number=} opt_index
 * @return {!proto.ei.LeaderboardAnalysis.Chunk}
 */
proto.ei.LeaderboardAnalysis.prototype.addChunks = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.ei.LeaderboardAnalysis.Chunk, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.ei.LeaderboardAnalysis} returns this
 */
proto.ei.LeaderboardAnalysis.prototype.clearChunksList = function() {
  return this.setChunksList([]);
};


/**
 * optional uint32 count = 2;
 * @return {number}
 */
proto.ei.LeaderboardAnalysis.prototype.getCount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.ei.LeaderboardAnalysis} returns this
 */
proto.ei.LeaderboardAnalysis.prototype.setCount = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.LeaderboardAnalysis} returns this
 */
proto.ei.LeaderboardAnalysis.prototype.clearCount = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.LeaderboardAnalysis.prototype.hasCount = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional double high_score = 3;
 * @return {number}
 */
proto.ei.LeaderboardAnalysis.prototype.getHighScore = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 3, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.ei.LeaderboardAnalysis} returns this
 */
proto.ei.LeaderboardAnalysis.prototype.setHighScore = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.LeaderboardAnalysis} returns this
 */
proto.ei.LeaderboardAnalysis.prototype.clearHighScore = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.LeaderboardAnalysis.prototype.hasHighScore = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional double low_score = 4;
 * @return {number}
 */
proto.ei.LeaderboardAnalysis.prototype.getLowScore = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 4, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.ei.LeaderboardAnalysis} returns this
 */
proto.ei.LeaderboardAnalysis.prototype.setLowScore = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.LeaderboardAnalysis} returns this
 */
proto.ei.LeaderboardAnalysis.prototype.clearLowScore = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.LeaderboardAnalysis.prototype.hasLowScore = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional string cursor = 5;
 * @return {string}
 */
proto.ei.LeaderboardAnalysis.prototype.getCursor = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.ei.LeaderboardAnalysis} returns this
 */
proto.ei.LeaderboardAnalysis.prototype.setCursor = function(value) {
  return jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.LeaderboardAnalysis} returns this
 */
proto.ei.LeaderboardAnalysis.prototype.clearCursor = function() {
  return jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.LeaderboardAnalysis.prototype.hasCursor = function() {
  return jspb.Message.getField(this, 5) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.ei.LeaderboardInfo.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ei.LeaderboardInfo.prototype.toObject = function(opt_includeInstance) {
  return proto.ei.LeaderboardInfo.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ei.LeaderboardInfo} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.LeaderboardInfo.toObject = function(includeInstance, msg) {
  var f, obj = {
    seasonsList: jspb.Message.toObjectList(msg.getSeasonsList(),
    proto.ei.LeaderboardInfo.Season.toObject, includeInstance),
    allTimeScope: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ei.LeaderboardInfo}
 */
proto.ei.LeaderboardInfo.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ei.LeaderboardInfo;
  return proto.ei.LeaderboardInfo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ei.LeaderboardInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ei.LeaderboardInfo}
 */
proto.ei.LeaderboardInfo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.ei.LeaderboardInfo.Season;
      reader.readMessage(value,proto.ei.LeaderboardInfo.Season.deserializeBinaryFromReader);
      msg.addSeasons(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setAllTimeScope(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ei.LeaderboardInfo.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ei.LeaderboardInfo.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ei.LeaderboardInfo} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.LeaderboardInfo.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSeasonsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.ei.LeaderboardInfo.Season.serializeBinaryToWriter
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ei.LeaderboardInfo.Season.prototype.toObject = function(opt_includeInstance) {
  return proto.ei.LeaderboardInfo.Season.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ei.LeaderboardInfo.Season} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.LeaderboardInfo.Season.toObject = function(includeInstance, msg) {
  var f, obj = {
    scope: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    name: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ei.LeaderboardInfo.Season}
 */
proto.ei.LeaderboardInfo.Season.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ei.LeaderboardInfo.Season;
  return proto.ei.LeaderboardInfo.Season.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ei.LeaderboardInfo.Season} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ei.LeaderboardInfo.Season}
 */
proto.ei.LeaderboardInfo.Season.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setScope(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ei.LeaderboardInfo.Season.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ei.LeaderboardInfo.Season.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ei.LeaderboardInfo.Season} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.LeaderboardInfo.Season.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string scope = 1;
 * @return {string}
 */
proto.ei.LeaderboardInfo.Season.prototype.getScope = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.ei.LeaderboardInfo.Season} returns this
 */
proto.ei.LeaderboardInfo.Season.prototype.setScope = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.LeaderboardInfo.Season} returns this
 */
proto.ei.LeaderboardInfo.Season.prototype.clearScope = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.LeaderboardInfo.Season.prototype.hasScope = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string name = 2;
 * @return {string}
 */
proto.ei.LeaderboardInfo.Season.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.ei.LeaderboardInfo.Season} returns this
 */
proto.ei.LeaderboardInfo.Season.prototype.setName = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.LeaderboardInfo.Season} returns this
 */
proto.ei.LeaderboardInfo.Season.prototype.clearName = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.LeaderboardInfo.Season.prototype.hasName = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * repeated Season seasons = 1;
 * @return {!Array<!proto.ei.LeaderboardInfo.Season>}
 */
proto.ei.LeaderboardInfo.prototype.getSeasonsList = function() {
  return /** @type{!Array<!proto.ei.LeaderboardInfo.Season>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.ei.LeaderboardInfo.Season, 1));
};


/**
 * @param {!Array<!proto.ei.LeaderboardInfo.Season>} value
 * @return {!proto.ei.LeaderboardInfo} returns this
*/
proto.ei.LeaderboardInfo.prototype.setSeasonsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.ei.LeaderboardInfo.Season=} opt_value
 * @param {number=} opt_index
 * @return {!proto.ei.LeaderboardInfo.Season}
 */
proto.ei.LeaderboardInfo.prototype.addSeasons = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.ei.LeaderboardInfo.Season, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.ei.LeaderboardInfo} returns this
 */
proto.ei.LeaderboardInfo.prototype.clearSeasonsList = function() {
  return this.setSeasonsList([]);
};


/**
 * optional string all_time_scope = 2;
 * @return {string}
 */
proto.ei.LeaderboardInfo.prototype.getAllTimeScope = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.ei.LeaderboardInfo} returns this
 */
proto.ei.LeaderboardInfo.prototype.setAllTimeScope = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.LeaderboardInfo} returns this
 */
proto.ei.LeaderboardInfo.prototype.clearAllTimeScope = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.LeaderboardInfo.prototype.hasAllTimeScope = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ei.LeaderboardRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.ei.LeaderboardRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ei.LeaderboardRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.LeaderboardRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    rinfo: (f = msg.getRinfo()) && proto.ei.BasicRequestInfo.toObject(includeInstance, f),
    scope: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,
    grade: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ei.LeaderboardRequest}
 */
proto.ei.LeaderboardRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ei.LeaderboardRequest;
  return proto.ei.LeaderboardRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ei.LeaderboardRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ei.LeaderboardRequest}
 */
proto.ei.LeaderboardRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.ei.BasicRequestInfo;
      reader.readMessage(value,proto.ei.BasicRequestInfo.deserializeBinaryFromReader);
      msg.setRinfo(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setScope(value);
      break;
    case 3:
      var value = /** @type {!proto.ei.Contract.PlayerGrade} */ (reader.readEnum());
      msg.setGrade(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ei.LeaderboardRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ei.LeaderboardRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ei.LeaderboardRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.LeaderboardRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRinfo();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.ei.BasicRequestInfo.serializeBinaryToWriter
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
  f = /** @type {!proto.ei.Contract.PlayerGrade} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeEnum(
      3,
      f
    );
  }
};


/**
 * optional BasicRequestInfo rinfo = 1;
 * @return {?proto.ei.BasicRequestInfo}
 */
proto.ei.LeaderboardRequest.prototype.getRinfo = function() {
  return /** @type{?proto.ei.BasicRequestInfo} */ (
    jspb.Message.getWrapperField(this, proto.ei.BasicRequestInfo, 1));
};


/**
 * @param {?proto.ei.BasicRequestInfo|undefined} value
 * @return {!proto.ei.LeaderboardRequest} returns this
*/
proto.ei.LeaderboardRequest.prototype.setRinfo = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.ei.LeaderboardRequest} returns this
 */
proto.ei.LeaderboardRequest.prototype.clearRinfo = function() {
  return this.setRinfo(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.LeaderboardRequest.prototype.hasRinfo = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string scope = 2;
 * @return {string}
 */
proto.ei.LeaderboardRequest.prototype.getScope = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.ei.LeaderboardRequest} returns this
 */
proto.ei.LeaderboardRequest.prototype.setScope = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.LeaderboardRequest} returns this
 */
proto.ei.LeaderboardRequest.prototype.clearScope = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.LeaderboardRequest.prototype.hasScope = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional Contract.PlayerGrade grade = 3;
 * @return {!proto.ei.Contract.PlayerGrade}
 */
proto.ei.LeaderboardRequest.prototype.getGrade = function() {
  return /** @type {!proto.ei.Contract.PlayerGrade} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {!proto.ei.Contract.PlayerGrade} value
 * @return {!proto.ei.LeaderboardRequest} returns this
 */
proto.ei.LeaderboardRequest.prototype.setGrade = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.LeaderboardRequest} returns this
 */
proto.ei.LeaderboardRequest.prototype.clearGrade = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.LeaderboardRequest.prototype.hasGrade = function() {
  return jspb.Message.getField(this, 3) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.ei.LeaderboardResponse.repeatedFields_ = [3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ei.LeaderboardResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.ei.LeaderboardResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ei.LeaderboardResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.LeaderboardResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    scope: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    grade: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,
    topEntriesList: jspb.Message.toObjectList(msg.getTopEntriesList(),
    proto.ei.LeaderboardResponse.Entry.toObject, includeInstance),
    count: (f = jspb.Message.getField(msg, 4)) == null ? undefined : f,
    rank: (f = jspb.Message.getField(msg, 5)) == null ? undefined : f,
    score: (f = jspb.Message.getOptionalFloatingPointField(msg, 6)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ei.LeaderboardResponse}
 */
proto.ei.LeaderboardResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ei.LeaderboardResponse;
  return proto.ei.LeaderboardResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ei.LeaderboardResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ei.LeaderboardResponse}
 */
proto.ei.LeaderboardResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setScope(value);
      break;
    case 2:
      var value = /** @type {!proto.ei.Contract.PlayerGrade} */ (reader.readEnum());
      msg.setGrade(value);
      break;
    case 3:
      var value = new proto.ei.LeaderboardResponse.Entry;
      reader.readMessage(value,proto.ei.LeaderboardResponse.Entry.deserializeBinaryFromReader);
      msg.addTopEntries(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setCount(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setRank(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setScore(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ei.LeaderboardResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ei.LeaderboardResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ei.LeaderboardResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.LeaderboardResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {!proto.ei.Contract.PlayerGrade} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeEnum(
      2,
      f
    );
  }
  f = message.getTopEntriesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      proto.ei.LeaderboardResponse.Entry.serializeBinaryToWriter
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeUint32(
      4,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeUint32(
      5,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeDouble(
      6,
      f
    );
  }
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ei.LeaderboardResponse.Entry.prototype.toObject = function(opt_includeInstance) {
  return proto.ei.LeaderboardResponse.Entry.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ei.LeaderboardResponse.Entry} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.LeaderboardResponse.Entry.toObject = function(includeInstance, msg) {
  var f, obj = {
    rank: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    alias: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,
    score: (f = jspb.Message.getOptionalFloatingPointField(msg, 3)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ei.LeaderboardResponse.Entry}
 */
proto.ei.LeaderboardResponse.Entry.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ei.LeaderboardResponse.Entry;
  return proto.ei.LeaderboardResponse.Entry.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ei.LeaderboardResponse.Entry} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ei.LeaderboardResponse.Entry}
 */
proto.ei.LeaderboardResponse.Entry.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setRank(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setAlias(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setScore(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ei.LeaderboardResponse.Entry.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ei.LeaderboardResponse.Entry.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ei.LeaderboardResponse.Entry} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.LeaderboardResponse.Entry.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {number} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeUint32(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeDouble(
      3,
      f
    );
  }
};


/**
 * optional uint32 rank = 1;
 * @return {number}
 */
proto.ei.LeaderboardResponse.Entry.prototype.getRank = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.ei.LeaderboardResponse.Entry} returns this
 */
proto.ei.LeaderboardResponse.Entry.prototype.setRank = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.LeaderboardResponse.Entry} returns this
 */
proto.ei.LeaderboardResponse.Entry.prototype.clearRank = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.LeaderboardResponse.Entry.prototype.hasRank = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string alias = 2;
 * @return {string}
 */
proto.ei.LeaderboardResponse.Entry.prototype.getAlias = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.ei.LeaderboardResponse.Entry} returns this
 */
proto.ei.LeaderboardResponse.Entry.prototype.setAlias = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.LeaderboardResponse.Entry} returns this
 */
proto.ei.LeaderboardResponse.Entry.prototype.clearAlias = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.LeaderboardResponse.Entry.prototype.hasAlias = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional double score = 3;
 * @return {number}
 */
proto.ei.LeaderboardResponse.Entry.prototype.getScore = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 3, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.ei.LeaderboardResponse.Entry} returns this
 */
proto.ei.LeaderboardResponse.Entry.prototype.setScore = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.LeaderboardResponse.Entry} returns this
 */
proto.ei.LeaderboardResponse.Entry.prototype.clearScore = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.LeaderboardResponse.Entry.prototype.hasScore = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional string scope = 1;
 * @return {string}
 */
proto.ei.LeaderboardResponse.prototype.getScope = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.ei.LeaderboardResponse} returns this
 */
proto.ei.LeaderboardResponse.prototype.setScope = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.LeaderboardResponse} returns this
 */
proto.ei.LeaderboardResponse.prototype.clearScope = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.LeaderboardResponse.prototype.hasScope = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional Contract.PlayerGrade grade = 2;
 * @return {!proto.ei.Contract.PlayerGrade}
 */
proto.ei.LeaderboardResponse.prototype.getGrade = function() {
  return /** @type {!proto.ei.Contract.PlayerGrade} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {!proto.ei.Contract.PlayerGrade} value
 * @return {!proto.ei.LeaderboardResponse} returns this
 */
proto.ei.LeaderboardResponse.prototype.setGrade = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.LeaderboardResponse} returns this
 */
proto.ei.LeaderboardResponse.prototype.clearGrade = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.LeaderboardResponse.prototype.hasGrade = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * repeated Entry top_entries = 3;
 * @return {!Array<!proto.ei.LeaderboardResponse.Entry>}
 */
proto.ei.LeaderboardResponse.prototype.getTopEntriesList = function() {
  return /** @type{!Array<!proto.ei.LeaderboardResponse.Entry>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.ei.LeaderboardResponse.Entry, 3));
};


/**
 * @param {!Array<!proto.ei.LeaderboardResponse.Entry>} value
 * @return {!proto.ei.LeaderboardResponse} returns this
*/
proto.ei.LeaderboardResponse.prototype.setTopEntriesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.ei.LeaderboardResponse.Entry=} opt_value
 * @param {number=} opt_index
 * @return {!proto.ei.LeaderboardResponse.Entry}
 */
proto.ei.LeaderboardResponse.prototype.addTopEntries = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.ei.LeaderboardResponse.Entry, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.ei.LeaderboardResponse} returns this
 */
proto.ei.LeaderboardResponse.prototype.clearTopEntriesList = function() {
  return this.setTopEntriesList([]);
};


/**
 * optional uint32 count = 4;
 * @return {number}
 */
proto.ei.LeaderboardResponse.prototype.getCount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.ei.LeaderboardResponse} returns this
 */
proto.ei.LeaderboardResponse.prototype.setCount = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.LeaderboardResponse} returns this
 */
proto.ei.LeaderboardResponse.prototype.clearCount = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.LeaderboardResponse.prototype.hasCount = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional uint32 rank = 5;
 * @return {number}
 */
proto.ei.LeaderboardResponse.prototype.getRank = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.ei.LeaderboardResponse} returns this
 */
proto.ei.LeaderboardResponse.prototype.setRank = function(value) {
  return jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.LeaderboardResponse} returns this
 */
proto.ei.LeaderboardResponse.prototype.clearRank = function() {
  return jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.LeaderboardResponse.prototype.hasRank = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional double score = 6;
 * @return {number}
 */
proto.ei.LeaderboardResponse.prototype.getScore = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 6, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.ei.LeaderboardResponse} returns this
 */
proto.ei.LeaderboardResponse.prototype.setScore = function(value) {
  return jspb.Message.setField(this, 6, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.LeaderboardResponse} returns this
 */
proto.ei.LeaderboardResponse.prototype.clearScore = function() {
  return jspb.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.LeaderboardResponse.prototype.hasScore = function() {
  return jspb.Message.getField(this, 6) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.ei.ContractsArchive.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ei.ContractsArchive.prototype.toObject = function(opt_includeInstance) {
  return proto.ei.ContractsArchive.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ei.ContractsArchive} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.ContractsArchive.toObject = function(includeInstance, msg) {
  var f, obj = {
    archiveList: jspb.Message.toObjectList(msg.getArchiveList(),
    proto.ei.LocalContract.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ei.ContractsArchive}
 */
proto.ei.ContractsArchive.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ei.ContractsArchive;
  return proto.ei.ContractsArchive.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ei.ContractsArchive} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ei.ContractsArchive}
 */
proto.ei.ContractsArchive.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.ei.LocalContract;
      reader.readMessage(value,proto.ei.LocalContract.deserializeBinaryFromReader);
      msg.addArchive(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ei.ContractsArchive.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ei.ContractsArchive.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ei.ContractsArchive} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.ContractsArchive.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getArchiveList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.ei.LocalContract.serializeBinaryToWriter
    );
  }
};


/**
 * repeated LocalContract archive = 1;
 * @return {!Array<!proto.ei.LocalContract>}
 */
proto.ei.ContractsArchive.prototype.getArchiveList = function() {
  return /** @type{!Array<!proto.ei.LocalContract>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.ei.LocalContract, 1));
};


/**
 * @param {!Array<!proto.ei.LocalContract>} value
 * @return {!proto.ei.ContractsArchive} returns this
*/
proto.ei.ContractsArchive.prototype.setArchiveList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.ei.LocalContract=} opt_value
 * @param {number=} opt_index
 * @return {!proto.ei.LocalContract}
 */
proto.ei.ContractsArchive.prototype.addArchive = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.ei.LocalContract, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.ei.ContractsArchive} returns this
 */
proto.ei.ContractsArchive.prototype.clearArchiveList = function() {
  return this.setArchiveList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ei.ContractAction.prototype.toObject = function(opt_includeInstance) {
  return proto.ei.ContractAction.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ei.ContractAction} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.ContractAction.toObject = function(includeInstance, msg) {
  var f, obj = {
    userId: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    actionName: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,
    approxTime: (f = jspb.Message.getOptionalFloatingPointField(msg, 3)) == null ? undefined : f,
    destUserId: (f = jspb.Message.getField(msg, 4)) == null ? undefined : f,
    contractId: (f = jspb.Message.getField(msg, 5)) == null ? undefined : f,
    coopId: (f = jspb.Message.getField(msg, 6)) == null ? undefined : f,
    autojoin: (f = jspb.Message.getBooleanField(msg, 7)) == null ? undefined : f,
    grade: (f = jspb.Message.getField(msg, 8)) == null ? undefined : f,
    replay: (f = jspb.Message.getBooleanField(msg, 9)) == null ? undefined : f,
    pointsReplay: (f = jspb.Message.getBooleanField(msg, 10)) == null ? undefined : f,
    rewardType: (f = jspb.Message.getField(msg, 11)) == null ? undefined : f,
    rewardSubtype: (f = jspb.Message.getField(msg, 12)) == null ? undefined : f,
    rewardAmount: (f = jspb.Message.getOptionalFloatingPointField(msg, 13)) == null ? undefined : f,
    goalIndex: (f = jspb.Message.getField(msg, 14)) == null ? undefined : f,
    boostId: (f = jspb.Message.getField(msg, 15)) == null ? undefined : f,
    tokens: (f = jspb.Message.getField(msg, 16)) == null ? undefined : f,
    kickReason: (f = jspb.Message.getField(msg, 17)) == null ? undefined : f,
    pb_public: (f = jspb.Message.getBooleanField(msg, 18)) == null ? undefined : f,
    ccOnly: (f = jspb.Message.getBooleanField(msg, 19)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ei.ContractAction}
 */
proto.ei.ContractAction.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ei.ContractAction;
  return proto.ei.ContractAction.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ei.ContractAction} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ei.ContractAction}
 */
proto.ei.ContractAction.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setActionName(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setApproxTime(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setDestUserId(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setContractId(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setCoopId(value);
      break;
    case 7:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setAutojoin(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setGrade(value);
      break;
    case 9:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setReplay(value);
      break;
    case 10:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setPointsReplay(value);
      break;
    case 11:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setRewardType(value);
      break;
    case 12:
      var value = /** @type {string} */ (reader.readString());
      msg.setRewardSubtype(value);
      break;
    case 13:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setRewardAmount(value);
      break;
    case 14:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setGoalIndex(value);
      break;
    case 15:
      var value = /** @type {string} */ (reader.readString());
      msg.setBoostId(value);
      break;
    case 16:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setTokens(value);
      break;
    case 17:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setKickReason(value);
      break;
    case 18:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setPublic(value);
      break;
    case 19:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setCcOnly(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ei.ContractAction.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ei.ContractAction.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ei.ContractAction} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.ContractAction.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeDouble(
      3,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeString(
      4,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeString(
      5,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeString(
      6,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 7));
  if (f != null) {
    writer.writeBool(
      7,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 8));
  if (f != null) {
    writer.writeUint32(
      8,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 9));
  if (f != null) {
    writer.writeBool(
      9,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 10));
  if (f != null) {
    writer.writeBool(
      10,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 11));
  if (f != null) {
    writer.writeUint32(
      11,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 12));
  if (f != null) {
    writer.writeString(
      12,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 13));
  if (f != null) {
    writer.writeDouble(
      13,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 14));
  if (f != null) {
    writer.writeUint32(
      14,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 15));
  if (f != null) {
    writer.writeString(
      15,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 16));
  if (f != null) {
    writer.writeUint32(
      16,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 17));
  if (f != null) {
    writer.writeUint32(
      17,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 18));
  if (f != null) {
    writer.writeBool(
      18,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 19));
  if (f != null) {
    writer.writeBool(
      19,
      f
    );
  }
};


/**
 * optional string user_id = 1;
 * @return {string}
 */
proto.ei.ContractAction.prototype.getUserId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.ei.ContractAction} returns this
 */
proto.ei.ContractAction.prototype.setUserId = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.ContractAction} returns this
 */
proto.ei.ContractAction.prototype.clearUserId = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ContractAction.prototype.hasUserId = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string action_name = 2;
 * @return {string}
 */
proto.ei.ContractAction.prototype.getActionName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.ei.ContractAction} returns this
 */
proto.ei.ContractAction.prototype.setActionName = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.ContractAction} returns this
 */
proto.ei.ContractAction.prototype.clearActionName = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ContractAction.prototype.hasActionName = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional double approx_time = 3;
 * @return {number}
 */
proto.ei.ContractAction.prototype.getApproxTime = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 3, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.ei.ContractAction} returns this
 */
proto.ei.ContractAction.prototype.setApproxTime = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.ContractAction} returns this
 */
proto.ei.ContractAction.prototype.clearApproxTime = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ContractAction.prototype.hasApproxTime = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional string dest_user_id = 4;
 * @return {string}
 */
proto.ei.ContractAction.prototype.getDestUserId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.ei.ContractAction} returns this
 */
proto.ei.ContractAction.prototype.setDestUserId = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.ContractAction} returns this
 */
proto.ei.ContractAction.prototype.clearDestUserId = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ContractAction.prototype.hasDestUserId = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional string contract_id = 5;
 * @return {string}
 */
proto.ei.ContractAction.prototype.getContractId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.ei.ContractAction} returns this
 */
proto.ei.ContractAction.prototype.setContractId = function(value) {
  return jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.ContractAction} returns this
 */
proto.ei.ContractAction.prototype.clearContractId = function() {
  return jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ContractAction.prototype.hasContractId = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional string coop_id = 6;
 * @return {string}
 */
proto.ei.ContractAction.prototype.getCoopId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.ei.ContractAction} returns this
 */
proto.ei.ContractAction.prototype.setCoopId = function(value) {
  return jspb.Message.setField(this, 6, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.ContractAction} returns this
 */
proto.ei.ContractAction.prototype.clearCoopId = function() {
  return jspb.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ContractAction.prototype.hasCoopId = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional bool autojoin = 7;
 * @return {boolean}
 */
proto.ei.ContractAction.prototype.getAutojoin = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 7, false));
};


/**
 * @param {boolean} value
 * @return {!proto.ei.ContractAction} returns this
 */
proto.ei.ContractAction.prototype.setAutojoin = function(value) {
  return jspb.Message.setField(this, 7, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.ContractAction} returns this
 */
proto.ei.ContractAction.prototype.clearAutojoin = function() {
  return jspb.Message.setField(this, 7, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ContractAction.prototype.hasAutojoin = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional uint32 grade = 8;
 * @return {number}
 */
proto.ei.ContractAction.prototype.getGrade = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/**
 * @param {number} value
 * @return {!proto.ei.ContractAction} returns this
 */
proto.ei.ContractAction.prototype.setGrade = function(value) {
  return jspb.Message.setField(this, 8, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.ContractAction} returns this
 */
proto.ei.ContractAction.prototype.clearGrade = function() {
  return jspb.Message.setField(this, 8, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ContractAction.prototype.hasGrade = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional bool replay = 9;
 * @return {boolean}
 */
proto.ei.ContractAction.prototype.getReplay = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 9, false));
};


/**
 * @param {boolean} value
 * @return {!proto.ei.ContractAction} returns this
 */
proto.ei.ContractAction.prototype.setReplay = function(value) {
  return jspb.Message.setField(this, 9, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.ContractAction} returns this
 */
proto.ei.ContractAction.prototype.clearReplay = function() {
  return jspb.Message.setField(this, 9, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ContractAction.prototype.hasReplay = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional bool points_replay = 10;
 * @return {boolean}
 */
proto.ei.ContractAction.prototype.getPointsReplay = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 10, false));
};


/**
 * @param {boolean} value
 * @return {!proto.ei.ContractAction} returns this
 */
proto.ei.ContractAction.prototype.setPointsReplay = function(value) {
  return jspb.Message.setField(this, 10, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.ContractAction} returns this
 */
proto.ei.ContractAction.prototype.clearPointsReplay = function() {
  return jspb.Message.setField(this, 10, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ContractAction.prototype.hasPointsReplay = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * optional uint32 reward_type = 11;
 * @return {number}
 */
proto.ei.ContractAction.prototype.getRewardType = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 11, 0));
};


/**
 * @param {number} value
 * @return {!proto.ei.ContractAction} returns this
 */
proto.ei.ContractAction.prototype.setRewardType = function(value) {
  return jspb.Message.setField(this, 11, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.ContractAction} returns this
 */
proto.ei.ContractAction.prototype.clearRewardType = function() {
  return jspb.Message.setField(this, 11, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ContractAction.prototype.hasRewardType = function() {
  return jspb.Message.getField(this, 11) != null;
};


/**
 * optional string reward_subtype = 12;
 * @return {string}
 */
proto.ei.ContractAction.prototype.getRewardSubtype = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 12, ""));
};


/**
 * @param {string} value
 * @return {!proto.ei.ContractAction} returns this
 */
proto.ei.ContractAction.prototype.setRewardSubtype = function(value) {
  return jspb.Message.setField(this, 12, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.ContractAction} returns this
 */
proto.ei.ContractAction.prototype.clearRewardSubtype = function() {
  return jspb.Message.setField(this, 12, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ContractAction.prototype.hasRewardSubtype = function() {
  return jspb.Message.getField(this, 12) != null;
};


/**
 * optional double reward_amount = 13;
 * @return {number}
 */
proto.ei.ContractAction.prototype.getRewardAmount = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 13, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.ei.ContractAction} returns this
 */
proto.ei.ContractAction.prototype.setRewardAmount = function(value) {
  return jspb.Message.setField(this, 13, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.ContractAction} returns this
 */
proto.ei.ContractAction.prototype.clearRewardAmount = function() {
  return jspb.Message.setField(this, 13, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ContractAction.prototype.hasRewardAmount = function() {
  return jspb.Message.getField(this, 13) != null;
};


/**
 * optional uint32 goal_index = 14;
 * @return {number}
 */
proto.ei.ContractAction.prototype.getGoalIndex = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 14, 0));
};


/**
 * @param {number} value
 * @return {!proto.ei.ContractAction} returns this
 */
proto.ei.ContractAction.prototype.setGoalIndex = function(value) {
  return jspb.Message.setField(this, 14, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.ContractAction} returns this
 */
proto.ei.ContractAction.prototype.clearGoalIndex = function() {
  return jspb.Message.setField(this, 14, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ContractAction.prototype.hasGoalIndex = function() {
  return jspb.Message.getField(this, 14) != null;
};


/**
 * optional string boost_id = 15;
 * @return {string}
 */
proto.ei.ContractAction.prototype.getBoostId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 15, ""));
};


/**
 * @param {string} value
 * @return {!proto.ei.ContractAction} returns this
 */
proto.ei.ContractAction.prototype.setBoostId = function(value) {
  return jspb.Message.setField(this, 15, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.ContractAction} returns this
 */
proto.ei.ContractAction.prototype.clearBoostId = function() {
  return jspb.Message.setField(this, 15, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ContractAction.prototype.hasBoostId = function() {
  return jspb.Message.getField(this, 15) != null;
};


/**
 * optional uint32 tokens = 16;
 * @return {number}
 */
proto.ei.ContractAction.prototype.getTokens = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 16, 0));
};


/**
 * @param {number} value
 * @return {!proto.ei.ContractAction} returns this
 */
proto.ei.ContractAction.prototype.setTokens = function(value) {
  return jspb.Message.setField(this, 16, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.ContractAction} returns this
 */
proto.ei.ContractAction.prototype.clearTokens = function() {
  return jspb.Message.setField(this, 16, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ContractAction.prototype.hasTokens = function() {
  return jspb.Message.getField(this, 16) != null;
};


/**
 * optional uint32 kick_reason = 17;
 * @return {number}
 */
proto.ei.ContractAction.prototype.getKickReason = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 17, 0));
};


/**
 * @param {number} value
 * @return {!proto.ei.ContractAction} returns this
 */
proto.ei.ContractAction.prototype.setKickReason = function(value) {
  return jspb.Message.setField(this, 17, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.ContractAction} returns this
 */
proto.ei.ContractAction.prototype.clearKickReason = function() {
  return jspb.Message.setField(this, 17, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ContractAction.prototype.hasKickReason = function() {
  return jspb.Message.getField(this, 17) != null;
};


/**
 * optional bool public = 18;
 * @return {boolean}
 */
proto.ei.ContractAction.prototype.getPublic = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 18, false));
};


/**
 * @param {boolean} value
 * @return {!proto.ei.ContractAction} returns this
 */
proto.ei.ContractAction.prototype.setPublic = function(value) {
  return jspb.Message.setField(this, 18, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.ContractAction} returns this
 */
proto.ei.ContractAction.prototype.clearPublic = function() {
  return jspb.Message.setField(this, 18, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ContractAction.prototype.hasPublic = function() {
  return jspb.Message.getField(this, 18) != null;
};


/**
 * optional bool cc_only = 19;
 * @return {boolean}
 */
proto.ei.ContractAction.prototype.getCcOnly = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 19, false));
};


/**
 * @param {boolean} value
 * @return {!proto.ei.ContractAction} returns this
 */
proto.ei.ContractAction.prototype.setCcOnly = function(value) {
  return jspb.Message.setField(this, 19, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.ContractAction} returns this
 */
proto.ei.ContractAction.prototype.clearCcOnly = function() {
  return jspb.Message.setField(this, 19, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ContractAction.prototype.hasCcOnly = function() {
  return jspb.Message.getField(this, 19) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ei.UserDataInfoRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.ei.UserDataInfoRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ei.UserDataInfoRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.UserDataInfoRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    rinfo: (f = msg.getRinfo()) && proto.ei.BasicRequestInfo.toObject(includeInstance, f),
    userId: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    deviceId: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,
    backupChecksum: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ei.UserDataInfoRequest}
 */
proto.ei.UserDataInfoRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ei.UserDataInfoRequest;
  return proto.ei.UserDataInfoRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ei.UserDataInfoRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ei.UserDataInfoRequest}
 */
proto.ei.UserDataInfoRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 4:
      var value = new proto.ei.BasicRequestInfo;
      reader.readMessage(value,proto.ei.BasicRequestInfo.deserializeBinaryFromReader);
      msg.setRinfo(value);
      break;
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setDeviceId(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setBackupChecksum(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ei.UserDataInfoRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ei.UserDataInfoRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ei.UserDataInfoRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.UserDataInfoRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRinfo();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.ei.BasicRequestInfo.serializeBinaryToWriter
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeUint64(
      3,
      f
    );
  }
};


/**
 * optional BasicRequestInfo rinfo = 4;
 * @return {?proto.ei.BasicRequestInfo}
 */
proto.ei.UserDataInfoRequest.prototype.getRinfo = function() {
  return /** @type{?proto.ei.BasicRequestInfo} */ (
    jspb.Message.getWrapperField(this, proto.ei.BasicRequestInfo, 4));
};


/**
 * @param {?proto.ei.BasicRequestInfo|undefined} value
 * @return {!proto.ei.UserDataInfoRequest} returns this
*/
proto.ei.UserDataInfoRequest.prototype.setRinfo = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.ei.UserDataInfoRequest} returns this
 */
proto.ei.UserDataInfoRequest.prototype.clearRinfo = function() {
  return this.setRinfo(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.UserDataInfoRequest.prototype.hasRinfo = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional string user_id = 1;
 * @return {string}
 */
proto.ei.UserDataInfoRequest.prototype.getUserId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.ei.UserDataInfoRequest} returns this
 */
proto.ei.UserDataInfoRequest.prototype.setUserId = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.UserDataInfoRequest} returns this
 */
proto.ei.UserDataInfoRequest.prototype.clearUserId = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.UserDataInfoRequest.prototype.hasUserId = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string device_id = 2;
 * @return {string}
 */
proto.ei.UserDataInfoRequest.prototype.getDeviceId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.ei.UserDataInfoRequest} returns this
 */
proto.ei.UserDataInfoRequest.prototype.setDeviceId = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.UserDataInfoRequest} returns this
 */
proto.ei.UserDataInfoRequest.prototype.clearDeviceId = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.UserDataInfoRequest.prototype.hasDeviceId = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional uint64 backup_checksum = 3;
 * @return {number}
 */
proto.ei.UserDataInfoRequest.prototype.getBackupChecksum = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.ei.UserDataInfoRequest} returns this
 */
proto.ei.UserDataInfoRequest.prototype.setBackupChecksum = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.UserDataInfoRequest} returns this
 */
proto.ei.UserDataInfoRequest.prototype.clearBackupChecksum = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.UserDataInfoRequest.prototype.hasBackupChecksum = function() {
  return jspb.Message.getField(this, 3) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.ei.UserDataInfoResponse.repeatedFields_ = [3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ei.UserDataInfoResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.ei.UserDataInfoResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ei.UserDataInfoResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.UserDataInfoResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    backupChecksum: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    backupTotalCash: (f = jspb.Message.getOptionalFloatingPointField(msg, 2)) == null ? undefined : f,
    coopMembershipsList: (f = jspb.Message.getRepeatedField(msg, 3)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ei.UserDataInfoResponse}
 */
proto.ei.UserDataInfoResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ei.UserDataInfoResponse;
  return proto.ei.UserDataInfoResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ei.UserDataInfoResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ei.UserDataInfoResponse}
 */
proto.ei.UserDataInfoResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setBackupChecksum(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setBackupTotalCash(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.addCoopMemberships(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ei.UserDataInfoResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ei.UserDataInfoResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ei.UserDataInfoResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.UserDataInfoResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {number} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeUint64(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeDouble(
      2,
      f
    );
  }
  f = message.getCoopMembershipsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      3,
      f
    );
  }
};


/**
 * optional uint64 backup_checksum = 1;
 * @return {number}
 */
proto.ei.UserDataInfoResponse.prototype.getBackupChecksum = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.ei.UserDataInfoResponse} returns this
 */
proto.ei.UserDataInfoResponse.prototype.setBackupChecksum = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.UserDataInfoResponse} returns this
 */
proto.ei.UserDataInfoResponse.prototype.clearBackupChecksum = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.UserDataInfoResponse.prototype.hasBackupChecksum = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional double backup_total_cash = 2;
 * @return {number}
 */
proto.ei.UserDataInfoResponse.prototype.getBackupTotalCash = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 2, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.ei.UserDataInfoResponse} returns this
 */
proto.ei.UserDataInfoResponse.prototype.setBackupTotalCash = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.UserDataInfoResponse} returns this
 */
proto.ei.UserDataInfoResponse.prototype.clearBackupTotalCash = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.UserDataInfoResponse.prototype.hasBackupTotalCash = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * repeated string coop_memberships = 3;
 * @return {!Array<string>}
 */
proto.ei.UserDataInfoResponse.prototype.getCoopMembershipsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 3));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.ei.UserDataInfoResponse} returns this
 */
proto.ei.UserDataInfoResponse.prototype.setCoopMembershipsList = function(value) {
  return jspb.Message.setField(this, 3, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.ei.UserDataInfoResponse} returns this
 */
proto.ei.UserDataInfoResponse.prototype.addCoopMemberships = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 3, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.ei.UserDataInfoResponse} returns this
 */
proto.ei.UserDataInfoResponse.prototype.clearCoopMembershipsList = function() {
  return this.setCoopMembershipsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ei.ClearAllUserDataRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.ei.ClearAllUserDataRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ei.ClearAllUserDataRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.ClearAllUserDataRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    rinfo: (f = msg.getRinfo()) && proto.ei.BasicRequestInfo.toObject(includeInstance, f),
    userId: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    deviceId: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,
    backupChecksum: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ei.ClearAllUserDataRequest}
 */
proto.ei.ClearAllUserDataRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ei.ClearAllUserDataRequest;
  return proto.ei.ClearAllUserDataRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ei.ClearAllUserDataRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ei.ClearAllUserDataRequest}
 */
proto.ei.ClearAllUserDataRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 4:
      var value = new proto.ei.BasicRequestInfo;
      reader.readMessage(value,proto.ei.BasicRequestInfo.deserializeBinaryFromReader);
      msg.setRinfo(value);
      break;
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setDeviceId(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setBackupChecksum(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ei.ClearAllUserDataRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ei.ClearAllUserDataRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ei.ClearAllUserDataRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.ClearAllUserDataRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRinfo();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.ei.BasicRequestInfo.serializeBinaryToWriter
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeUint64(
      3,
      f
    );
  }
};


/**
 * optional BasicRequestInfo rinfo = 4;
 * @return {?proto.ei.BasicRequestInfo}
 */
proto.ei.ClearAllUserDataRequest.prototype.getRinfo = function() {
  return /** @type{?proto.ei.BasicRequestInfo} */ (
    jspb.Message.getWrapperField(this, proto.ei.BasicRequestInfo, 4));
};


/**
 * @param {?proto.ei.BasicRequestInfo|undefined} value
 * @return {!proto.ei.ClearAllUserDataRequest} returns this
*/
proto.ei.ClearAllUserDataRequest.prototype.setRinfo = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.ei.ClearAllUserDataRequest} returns this
 */
proto.ei.ClearAllUserDataRequest.prototype.clearRinfo = function() {
  return this.setRinfo(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ClearAllUserDataRequest.prototype.hasRinfo = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional string user_id = 1;
 * @return {string}
 */
proto.ei.ClearAllUserDataRequest.prototype.getUserId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.ei.ClearAllUserDataRequest} returns this
 */
proto.ei.ClearAllUserDataRequest.prototype.setUserId = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.ClearAllUserDataRequest} returns this
 */
proto.ei.ClearAllUserDataRequest.prototype.clearUserId = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ClearAllUserDataRequest.prototype.hasUserId = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string device_id = 2;
 * @return {string}
 */
proto.ei.ClearAllUserDataRequest.prototype.getDeviceId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.ei.ClearAllUserDataRequest} returns this
 */
proto.ei.ClearAllUserDataRequest.prototype.setDeviceId = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.ClearAllUserDataRequest} returns this
 */
proto.ei.ClearAllUserDataRequest.prototype.clearDeviceId = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ClearAllUserDataRequest.prototype.hasDeviceId = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional uint64 backup_checksum = 3;
 * @return {number}
 */
proto.ei.ClearAllUserDataRequest.prototype.getBackupChecksum = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.ei.ClearAllUserDataRequest} returns this
 */
proto.ei.ClearAllUserDataRequest.prototype.setBackupChecksum = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.ClearAllUserDataRequest} returns this
 */
proto.ei.ClearAllUserDataRequest.prototype.clearBackupChecksum = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ClearAllUserDataRequest.prototype.hasBackupChecksum = function() {
  return jspb.Message.getField(this, 3) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ei.ServerGift.prototype.toObject = function(opt_includeInstance) {
  return proto.ei.ServerGift.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ei.ServerGift} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.ServerGift.toObject = function(includeInstance, msg) {
  var f, obj = {
    userId: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    rewardType: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f,
    rewardSubType: (f = jspb.Message.getField(msg, 4)) == null ? undefined : f,
    rewardAmount: (f = jspb.Message.getOptionalFloatingPointField(msg, 5)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ei.ServerGift}
 */
proto.ei.ServerGift.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ei.ServerGift;
  return proto.ei.ServerGift.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ei.ServerGift} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ei.ServerGift}
 */
proto.ei.ServerGift.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserId(value);
      break;
    case 3:
      var value = /** @type {!proto.ei.RewardType} */ (reader.readEnum());
      msg.setRewardType(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setRewardSubType(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setRewardAmount(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ei.ServerGift.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ei.ServerGift.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ei.ServerGift} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.ServerGift.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {!proto.ei.RewardType} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeEnum(
      3,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeString(
      4,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeDouble(
      5,
      f
    );
  }
};


/**
 * optional string user_id = 1;
 * @return {string}
 */
proto.ei.ServerGift.prototype.getUserId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.ei.ServerGift} returns this
 */
proto.ei.ServerGift.prototype.setUserId = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.ServerGift} returns this
 */
proto.ei.ServerGift.prototype.clearUserId = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ServerGift.prototype.hasUserId = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional RewardType reward_type = 3;
 * @return {!proto.ei.RewardType}
 */
proto.ei.ServerGift.prototype.getRewardType = function() {
  return /** @type {!proto.ei.RewardType} */ (jspb.Message.getFieldWithDefault(this, 3, 1));
};


/**
 * @param {!proto.ei.RewardType} value
 * @return {!proto.ei.ServerGift} returns this
 */
proto.ei.ServerGift.prototype.setRewardType = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.ServerGift} returns this
 */
proto.ei.ServerGift.prototype.clearRewardType = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ServerGift.prototype.hasRewardType = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional string reward_sub_type = 4;
 * @return {string}
 */
proto.ei.ServerGift.prototype.getRewardSubType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.ei.ServerGift} returns this
 */
proto.ei.ServerGift.prototype.setRewardSubType = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.ServerGift} returns this
 */
proto.ei.ServerGift.prototype.clearRewardSubType = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ServerGift.prototype.hasRewardSubType = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional double reward_amount = 5;
 * @return {number}
 */
proto.ei.ServerGift.prototype.getRewardAmount = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 5, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.ei.ServerGift} returns this
 */
proto.ei.ServerGift.prototype.setRewardAmount = function(value) {
  return jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.ServerGift} returns this
 */
proto.ei.ServerGift.prototype.clearRewardAmount = function() {
  return jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ServerGift.prototype.hasRewardAmount = function() {
  return jspb.Message.getField(this, 5) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ei.LiveConfig.prototype.toObject = function(opt_includeInstance) {
  return proto.ei.LiveConfig.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ei.LiveConfig} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.LiveConfig.toObject = function(includeInstance, msg) {
  var f, obj = {
    configId: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    boostsConfig: (f = msg.getBoostsConfig()) && proto.ei.LiveConfig.BoostsConfig.toObject(includeInstance, f),
    giftConfig: (f = msg.getGiftConfig()) && proto.ei.LiveConfig.GiftConfig.toObject(includeInstance, f),
    miscConfig: (f = msg.getMiscConfig()) && proto.ei.LiveConfig.MiscConfig.toObject(includeInstance, f),
    helpConfig: (f = msg.getHelpConfig()) && proto.ei.LiveConfig.HelpConfig.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ei.LiveConfig}
 */
proto.ei.LiveConfig.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ei.LiveConfig;
  return proto.ei.LiveConfig.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ei.LiveConfig} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ei.LiveConfig}
 */
proto.ei.LiveConfig.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setConfigId(value);
      break;
    case 2:
      var value = new proto.ei.LiveConfig.BoostsConfig;
      reader.readMessage(value,proto.ei.LiveConfig.BoostsConfig.deserializeBinaryFromReader);
      msg.setBoostsConfig(value);
      break;
    case 3:
      var value = new proto.ei.LiveConfig.GiftConfig;
      reader.readMessage(value,proto.ei.LiveConfig.GiftConfig.deserializeBinaryFromReader);
      msg.setGiftConfig(value);
      break;
    case 4:
      var value = new proto.ei.LiveConfig.MiscConfig;
      reader.readMessage(value,proto.ei.LiveConfig.MiscConfig.deserializeBinaryFromReader);
      msg.setMiscConfig(value);
      break;
    case 5:
      var value = new proto.ei.LiveConfig.HelpConfig;
      reader.readMessage(value,proto.ei.LiveConfig.HelpConfig.deserializeBinaryFromReader);
      msg.setHelpConfig(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ei.LiveConfig.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ei.LiveConfig.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ei.LiveConfig} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.LiveConfig.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getBoostsConfig();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.ei.LiveConfig.BoostsConfig.serializeBinaryToWriter
    );
  }
  f = message.getGiftConfig();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.ei.LiveConfig.GiftConfig.serializeBinaryToWriter
    );
  }
  f = message.getMiscConfig();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.ei.LiveConfig.MiscConfig.serializeBinaryToWriter
    );
  }
  f = message.getHelpConfig();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.ei.LiveConfig.HelpConfig.serializeBinaryToWriter
    );
  }
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.ei.LiveConfig.BoostsConfig.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ei.LiveConfig.BoostsConfig.prototype.toObject = function(opt_includeInstance) {
  return proto.ei.LiveConfig.BoostsConfig.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ei.LiveConfig.BoostsConfig} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.LiveConfig.BoostsConfig.toObject = function(includeInstance, msg) {
  var f, obj = {
    itemConfigsList: jspb.Message.toObjectList(msg.getItemConfigsList(),
    proto.ei.LiveConfig.BoostsConfig.ItemConfig.toObject, includeInstance),
    cashBoostCooloffTime: (f = jspb.Message.getOptionalFloatingPointField(msg, 2)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ei.LiveConfig.BoostsConfig}
 */
proto.ei.LiveConfig.BoostsConfig.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ei.LiveConfig.BoostsConfig;
  return proto.ei.LiveConfig.BoostsConfig.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ei.LiveConfig.BoostsConfig} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ei.LiveConfig.BoostsConfig}
 */
proto.ei.LiveConfig.BoostsConfig.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.ei.LiveConfig.BoostsConfig.ItemConfig;
      reader.readMessage(value,proto.ei.LiveConfig.BoostsConfig.ItemConfig.deserializeBinaryFromReader);
      msg.addItemConfigs(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setCashBoostCooloffTime(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ei.LiveConfig.BoostsConfig.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ei.LiveConfig.BoostsConfig.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ei.LiveConfig.BoostsConfig} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.LiveConfig.BoostsConfig.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getItemConfigsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.ei.LiveConfig.BoostsConfig.ItemConfig.serializeBinaryToWriter
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeDouble(
      2,
      f
    );
  }
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ei.LiveConfig.BoostsConfig.ItemConfig.prototype.toObject = function(opt_includeInstance) {
  return proto.ei.LiveConfig.BoostsConfig.ItemConfig.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ei.LiveConfig.BoostsConfig.ItemConfig} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.LiveConfig.BoostsConfig.ItemConfig.toObject = function(includeInstance, msg) {
  var f, obj = {
    boostId: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    price: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,
    tokenPrice: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f,
    seRequired: (f = jspb.Message.getOptionalFloatingPointField(msg, 4)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ei.LiveConfig.BoostsConfig.ItemConfig}
 */
proto.ei.LiveConfig.BoostsConfig.ItemConfig.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ei.LiveConfig.BoostsConfig.ItemConfig;
  return proto.ei.LiveConfig.BoostsConfig.ItemConfig.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ei.LiveConfig.BoostsConfig.ItemConfig} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ei.LiveConfig.BoostsConfig.ItemConfig}
 */
proto.ei.LiveConfig.BoostsConfig.ItemConfig.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setBoostId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setPrice(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setTokenPrice(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setSeRequired(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ei.LiveConfig.BoostsConfig.ItemConfig.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ei.LiveConfig.BoostsConfig.ItemConfig.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ei.LiveConfig.BoostsConfig.ItemConfig} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.LiveConfig.BoostsConfig.ItemConfig.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeUint32(
      2,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeUint32(
      3,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeDouble(
      4,
      f
    );
  }
};


/**
 * optional string boost_id = 1;
 * @return {string}
 */
proto.ei.LiveConfig.BoostsConfig.ItemConfig.prototype.getBoostId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.ei.LiveConfig.BoostsConfig.ItemConfig} returns this
 */
proto.ei.LiveConfig.BoostsConfig.ItemConfig.prototype.setBoostId = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.LiveConfig.BoostsConfig.ItemConfig} returns this
 */
proto.ei.LiveConfig.BoostsConfig.ItemConfig.prototype.clearBoostId = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.LiveConfig.BoostsConfig.ItemConfig.prototype.hasBoostId = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional uint32 price = 2;
 * @return {number}
 */
proto.ei.LiveConfig.BoostsConfig.ItemConfig.prototype.getPrice = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.ei.LiveConfig.BoostsConfig.ItemConfig} returns this
 */
proto.ei.LiveConfig.BoostsConfig.ItemConfig.prototype.setPrice = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.LiveConfig.BoostsConfig.ItemConfig} returns this
 */
proto.ei.LiveConfig.BoostsConfig.ItemConfig.prototype.clearPrice = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.LiveConfig.BoostsConfig.ItemConfig.prototype.hasPrice = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional uint32 token_price = 3;
 * @return {number}
 */
proto.ei.LiveConfig.BoostsConfig.ItemConfig.prototype.getTokenPrice = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.ei.LiveConfig.BoostsConfig.ItemConfig} returns this
 */
proto.ei.LiveConfig.BoostsConfig.ItemConfig.prototype.setTokenPrice = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.LiveConfig.BoostsConfig.ItemConfig} returns this
 */
proto.ei.LiveConfig.BoostsConfig.ItemConfig.prototype.clearTokenPrice = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.LiveConfig.BoostsConfig.ItemConfig.prototype.hasTokenPrice = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional double se_required = 4;
 * @return {number}
 */
proto.ei.LiveConfig.BoostsConfig.ItemConfig.prototype.getSeRequired = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 4, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.ei.LiveConfig.BoostsConfig.ItemConfig} returns this
 */
proto.ei.LiveConfig.BoostsConfig.ItemConfig.prototype.setSeRequired = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.LiveConfig.BoostsConfig.ItemConfig} returns this
 */
proto.ei.LiveConfig.BoostsConfig.ItemConfig.prototype.clearSeRequired = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.LiveConfig.BoostsConfig.ItemConfig.prototype.hasSeRequired = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * repeated ItemConfig item_configs = 1;
 * @return {!Array<!proto.ei.LiveConfig.BoostsConfig.ItemConfig>}
 */
proto.ei.LiveConfig.BoostsConfig.prototype.getItemConfigsList = function() {
  return /** @type{!Array<!proto.ei.LiveConfig.BoostsConfig.ItemConfig>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.ei.LiveConfig.BoostsConfig.ItemConfig, 1));
};


/**
 * @param {!Array<!proto.ei.LiveConfig.BoostsConfig.ItemConfig>} value
 * @return {!proto.ei.LiveConfig.BoostsConfig} returns this
*/
proto.ei.LiveConfig.BoostsConfig.prototype.setItemConfigsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.ei.LiveConfig.BoostsConfig.ItemConfig=} opt_value
 * @param {number=} opt_index
 * @return {!proto.ei.LiveConfig.BoostsConfig.ItemConfig}
 */
proto.ei.LiveConfig.BoostsConfig.prototype.addItemConfigs = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.ei.LiveConfig.BoostsConfig.ItemConfig, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.ei.LiveConfig.BoostsConfig} returns this
 */
proto.ei.LiveConfig.BoostsConfig.prototype.clearItemConfigsList = function() {
  return this.setItemConfigsList([]);
};


/**
 * optional double cash_boost_cooloff_time = 2;
 * @return {number}
 */
proto.ei.LiveConfig.BoostsConfig.prototype.getCashBoostCooloffTime = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 2, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.ei.LiveConfig.BoostsConfig} returns this
 */
proto.ei.LiveConfig.BoostsConfig.prototype.setCashBoostCooloffTime = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.LiveConfig.BoostsConfig} returns this
 */
proto.ei.LiveConfig.BoostsConfig.prototype.clearCashBoostCooloffTime = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.LiveConfig.BoostsConfig.prototype.hasCashBoostCooloffTime = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.ei.LiveConfig.GiftConfig.repeatedFields_ = [9];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ei.LiveConfig.GiftConfig.prototype.toObject = function(opt_includeInstance) {
  return proto.ei.LiveConfig.GiftConfig.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ei.LiveConfig.GiftConfig} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.LiveConfig.GiftConfig.toObject = function(includeInstance, msg) {
  var f, obj = {
    giftConfigsList: jspb.Message.toObjectList(msg.getGiftConfigsList(),
    proto.ei.LiveConfig.GiftConfig.GiftValueConfig.toObject, includeInstance),
    giftMuMinSpent: (f = jspb.Message.getOptionalFloatingPointField(msg, 10)) == null ? undefined : f,
    giftMuMaxSpent: (f = jspb.Message.getOptionalFloatingPointField(msg, 11)) == null ? undefined : f,
    giftMuOverallMult: (f = jspb.Message.getOptionalFloatingPointField(msg, 12)) == null ? undefined : f,
    randomGiftMuConfig: (f = msg.getRandomGiftMuConfig()) && proto.ei.LiveConfig.GiftConfig.GiftMuConfig.toObject(includeInstance, f),
    videoGiftMuConfig: (f = msg.getVideoGiftMuConfig()) && proto.ei.LiveConfig.GiftConfig.GiftMuConfig.toObject(includeInstance, f),
    packageInterval: (f = jspb.Message.getOptionalFloatingPointField(msg, 1)) == null ? undefined : f,
    videoOfferInterval: (f = jspb.Message.getOptionalFloatingPointField(msg, 2)) == null ? undefined : f,
    videoOfferIntervalContract: (f = jspb.Message.getOptionalFloatingPointField(msg, 3)) == null ? undefined : f,
    videoOfferIntervalPiggyFull: (f = jspb.Message.getOptionalFloatingPointField(msg, 4)) == null ? undefined : f,
    videoOfferIntervalPiggyExtraFull: (f = jspb.Message.getOptionalFloatingPointField(msg, 5)) == null ? undefined : f,
    videoResetOnIdle: (f = jspb.Message.getBooleanField(msg, 14)) == null ? undefined : f,
    packageIntervalContract: (f = jspb.Message.getOptionalFloatingPointField(msg, 6)) == null ? undefined : f,
    packageIntervalPiggyFull: (f = jspb.Message.getOptionalFloatingPointField(msg, 7)) == null ? undefined : f,
    packageIntervalPiggyExtraFull: (f = jspb.Message.getOptionalFloatingPointField(msg, 8)) == null ? undefined : f,
    packageResetOnIdle: (f = jspb.Message.getBooleanField(msg, 13)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ei.LiveConfig.GiftConfig}
 */
proto.ei.LiveConfig.GiftConfig.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ei.LiveConfig.GiftConfig;
  return proto.ei.LiveConfig.GiftConfig.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ei.LiveConfig.GiftConfig} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ei.LiveConfig.GiftConfig}
 */
proto.ei.LiveConfig.GiftConfig.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 9:
      var value = new proto.ei.LiveConfig.GiftConfig.GiftValueConfig;
      reader.readMessage(value,proto.ei.LiveConfig.GiftConfig.GiftValueConfig.deserializeBinaryFromReader);
      msg.addGiftConfigs(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setGiftMuMinSpent(value);
      break;
    case 11:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setGiftMuMaxSpent(value);
      break;
    case 12:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setGiftMuOverallMult(value);
      break;
    case 15:
      var value = new proto.ei.LiveConfig.GiftConfig.GiftMuConfig;
      reader.readMessage(value,proto.ei.LiveConfig.GiftConfig.GiftMuConfig.deserializeBinaryFromReader);
      msg.setRandomGiftMuConfig(value);
      break;
    case 16:
      var value = new proto.ei.LiveConfig.GiftConfig.GiftMuConfig;
      reader.readMessage(value,proto.ei.LiveConfig.GiftConfig.GiftMuConfig.deserializeBinaryFromReader);
      msg.setVideoGiftMuConfig(value);
      break;
    case 1:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setPackageInterval(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setVideoOfferInterval(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setVideoOfferIntervalContract(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setVideoOfferIntervalPiggyFull(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setVideoOfferIntervalPiggyExtraFull(value);
      break;
    case 14:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setVideoResetOnIdle(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setPackageIntervalContract(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setPackageIntervalPiggyFull(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setPackageIntervalPiggyExtraFull(value);
      break;
    case 13:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setPackageResetOnIdle(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ei.LiveConfig.GiftConfig.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ei.LiveConfig.GiftConfig.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ei.LiveConfig.GiftConfig} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.LiveConfig.GiftConfig.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getGiftConfigsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      9,
      f,
      proto.ei.LiveConfig.GiftConfig.GiftValueConfig.serializeBinaryToWriter
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 10));
  if (f != null) {
    writer.writeDouble(
      10,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 11));
  if (f != null) {
    writer.writeDouble(
      11,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 12));
  if (f != null) {
    writer.writeDouble(
      12,
      f
    );
  }
  f = message.getRandomGiftMuConfig();
  if (f != null) {
    writer.writeMessage(
      15,
      f,
      proto.ei.LiveConfig.GiftConfig.GiftMuConfig.serializeBinaryToWriter
    );
  }
  f = message.getVideoGiftMuConfig();
  if (f != null) {
    writer.writeMessage(
      16,
      f,
      proto.ei.LiveConfig.GiftConfig.GiftMuConfig.serializeBinaryToWriter
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeDouble(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeDouble(
      2,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeDouble(
      3,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeDouble(
      4,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeDouble(
      5,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 14));
  if (f != null) {
    writer.writeBool(
      14,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeDouble(
      6,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 7));
  if (f != null) {
    writer.writeDouble(
      7,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 8));
  if (f != null) {
    writer.writeDouble(
      8,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 13));
  if (f != null) {
    writer.writeBool(
      13,
      f
    );
  }
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ei.LiveConfig.GiftConfig.GiftValueConfig.prototype.toObject = function(opt_includeInstance) {
  return proto.ei.LiveConfig.GiftConfig.GiftValueConfig.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ei.LiveConfig.GiftConfig.GiftValueConfig} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.LiveConfig.GiftConfig.GiftValueConfig.toObject = function(includeInstance, msg) {
  var f, obj = {
    giftId: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    amount: (f = jspb.Message.getOptionalFloatingPointField(msg, 4)) == null ? undefined : f,
    randMin: (f = jspb.Message.getOptionalFloatingPointField(msg, 2)) == null ? undefined : f,
    randMax: (f = jspb.Message.getOptionalFloatingPointField(msg, 3)) == null ? undefined : f,
    videoMin: (f = jspb.Message.getOptionalFloatingPointField(msg, 5)) == null ? undefined : f,
    videoMax: (f = jspb.Message.getOptionalFloatingPointField(msg, 6)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ei.LiveConfig.GiftConfig.GiftValueConfig}
 */
proto.ei.LiveConfig.GiftConfig.GiftValueConfig.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ei.LiveConfig.GiftConfig.GiftValueConfig;
  return proto.ei.LiveConfig.GiftConfig.GiftValueConfig.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ei.LiveConfig.GiftConfig.GiftValueConfig} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ei.LiveConfig.GiftConfig.GiftValueConfig}
 */
proto.ei.LiveConfig.GiftConfig.GiftValueConfig.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setGiftId(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setAmount(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setRandMin(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setRandMax(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setVideoMin(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setVideoMax(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ei.LiveConfig.GiftConfig.GiftValueConfig.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ei.LiveConfig.GiftConfig.GiftValueConfig.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ei.LiveConfig.GiftConfig.GiftValueConfig} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.LiveConfig.GiftConfig.GiftValueConfig.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeDouble(
      4,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeDouble(
      2,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeDouble(
      3,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeDouble(
      5,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeDouble(
      6,
      f
    );
  }
};


/**
 * optional string gift_id = 1;
 * @return {string}
 */
proto.ei.LiveConfig.GiftConfig.GiftValueConfig.prototype.getGiftId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.ei.LiveConfig.GiftConfig.GiftValueConfig} returns this
 */
proto.ei.LiveConfig.GiftConfig.GiftValueConfig.prototype.setGiftId = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.LiveConfig.GiftConfig.GiftValueConfig} returns this
 */
proto.ei.LiveConfig.GiftConfig.GiftValueConfig.prototype.clearGiftId = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.LiveConfig.GiftConfig.GiftValueConfig.prototype.hasGiftId = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional double amount = 4;
 * @return {number}
 */
proto.ei.LiveConfig.GiftConfig.GiftValueConfig.prototype.getAmount = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 4, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.ei.LiveConfig.GiftConfig.GiftValueConfig} returns this
 */
proto.ei.LiveConfig.GiftConfig.GiftValueConfig.prototype.setAmount = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.LiveConfig.GiftConfig.GiftValueConfig} returns this
 */
proto.ei.LiveConfig.GiftConfig.GiftValueConfig.prototype.clearAmount = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.LiveConfig.GiftConfig.GiftValueConfig.prototype.hasAmount = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional double rand_min = 2;
 * @return {number}
 */
proto.ei.LiveConfig.GiftConfig.GiftValueConfig.prototype.getRandMin = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 2, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.ei.LiveConfig.GiftConfig.GiftValueConfig} returns this
 */
proto.ei.LiveConfig.GiftConfig.GiftValueConfig.prototype.setRandMin = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.LiveConfig.GiftConfig.GiftValueConfig} returns this
 */
proto.ei.LiveConfig.GiftConfig.GiftValueConfig.prototype.clearRandMin = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.LiveConfig.GiftConfig.GiftValueConfig.prototype.hasRandMin = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional double rand_max = 3;
 * @return {number}
 */
proto.ei.LiveConfig.GiftConfig.GiftValueConfig.prototype.getRandMax = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 3, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.ei.LiveConfig.GiftConfig.GiftValueConfig} returns this
 */
proto.ei.LiveConfig.GiftConfig.GiftValueConfig.prototype.setRandMax = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.LiveConfig.GiftConfig.GiftValueConfig} returns this
 */
proto.ei.LiveConfig.GiftConfig.GiftValueConfig.prototype.clearRandMax = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.LiveConfig.GiftConfig.GiftValueConfig.prototype.hasRandMax = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional double video_min = 5;
 * @return {number}
 */
proto.ei.LiveConfig.GiftConfig.GiftValueConfig.prototype.getVideoMin = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 5, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.ei.LiveConfig.GiftConfig.GiftValueConfig} returns this
 */
proto.ei.LiveConfig.GiftConfig.GiftValueConfig.prototype.setVideoMin = function(value) {
  return jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.LiveConfig.GiftConfig.GiftValueConfig} returns this
 */
proto.ei.LiveConfig.GiftConfig.GiftValueConfig.prototype.clearVideoMin = function() {
  return jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.LiveConfig.GiftConfig.GiftValueConfig.prototype.hasVideoMin = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional double video_max = 6;
 * @return {number}
 */
proto.ei.LiveConfig.GiftConfig.GiftValueConfig.prototype.getVideoMax = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 6, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.ei.LiveConfig.GiftConfig.GiftValueConfig} returns this
 */
proto.ei.LiveConfig.GiftConfig.GiftValueConfig.prototype.setVideoMax = function(value) {
  return jspb.Message.setField(this, 6, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.LiveConfig.GiftConfig.GiftValueConfig} returns this
 */
proto.ei.LiveConfig.GiftConfig.GiftValueConfig.prototype.clearVideoMax = function() {
  return jspb.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.LiveConfig.GiftConfig.GiftValueConfig.prototype.hasVideoMax = function() {
  return jspb.Message.getField(this, 6) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ei.LiveConfig.GiftConfig.GiftMuConfig.prototype.toObject = function(opt_includeInstance) {
  return proto.ei.LiveConfig.GiftConfig.GiftMuConfig.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ei.LiveConfig.GiftConfig.GiftMuConfig} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.LiveConfig.GiftConfig.GiftMuConfig.toObject = function(includeInstance, msg) {
  var f, obj = {
    minSpent: (f = jspb.Message.getOptionalFloatingPointField(msg, 1)) == null ? undefined : f,
    maxSpent: (f = jspb.Message.getOptionalFloatingPointField(msg, 2)) == null ? undefined : f,
    overallMult: (f = jspb.Message.getOptionalFloatingPointField(msg, 3)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ei.LiveConfig.GiftConfig.GiftMuConfig}
 */
proto.ei.LiveConfig.GiftConfig.GiftMuConfig.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ei.LiveConfig.GiftConfig.GiftMuConfig;
  return proto.ei.LiveConfig.GiftConfig.GiftMuConfig.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ei.LiveConfig.GiftConfig.GiftMuConfig} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ei.LiveConfig.GiftConfig.GiftMuConfig}
 */
proto.ei.LiveConfig.GiftConfig.GiftMuConfig.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setMinSpent(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setMaxSpent(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setOverallMult(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ei.LiveConfig.GiftConfig.GiftMuConfig.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ei.LiveConfig.GiftConfig.GiftMuConfig.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ei.LiveConfig.GiftConfig.GiftMuConfig} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.LiveConfig.GiftConfig.GiftMuConfig.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {number} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeDouble(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeDouble(
      2,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeDouble(
      3,
      f
    );
  }
};


/**
 * optional double min_spent = 1;
 * @return {number}
 */
proto.ei.LiveConfig.GiftConfig.GiftMuConfig.prototype.getMinSpent = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 1, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.ei.LiveConfig.GiftConfig.GiftMuConfig} returns this
 */
proto.ei.LiveConfig.GiftConfig.GiftMuConfig.prototype.setMinSpent = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.LiveConfig.GiftConfig.GiftMuConfig} returns this
 */
proto.ei.LiveConfig.GiftConfig.GiftMuConfig.prototype.clearMinSpent = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.LiveConfig.GiftConfig.GiftMuConfig.prototype.hasMinSpent = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional double max_spent = 2;
 * @return {number}
 */
proto.ei.LiveConfig.GiftConfig.GiftMuConfig.prototype.getMaxSpent = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 2, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.ei.LiveConfig.GiftConfig.GiftMuConfig} returns this
 */
proto.ei.LiveConfig.GiftConfig.GiftMuConfig.prototype.setMaxSpent = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.LiveConfig.GiftConfig.GiftMuConfig} returns this
 */
proto.ei.LiveConfig.GiftConfig.GiftMuConfig.prototype.clearMaxSpent = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.LiveConfig.GiftConfig.GiftMuConfig.prototype.hasMaxSpent = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional double overall_mult = 3;
 * @return {number}
 */
proto.ei.LiveConfig.GiftConfig.GiftMuConfig.prototype.getOverallMult = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 3, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.ei.LiveConfig.GiftConfig.GiftMuConfig} returns this
 */
proto.ei.LiveConfig.GiftConfig.GiftMuConfig.prototype.setOverallMult = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.LiveConfig.GiftConfig.GiftMuConfig} returns this
 */
proto.ei.LiveConfig.GiftConfig.GiftMuConfig.prototype.clearOverallMult = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.LiveConfig.GiftConfig.GiftMuConfig.prototype.hasOverallMult = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * repeated GiftValueConfig gift_configs = 9;
 * @return {!Array<!proto.ei.LiveConfig.GiftConfig.GiftValueConfig>}
 */
proto.ei.LiveConfig.GiftConfig.prototype.getGiftConfigsList = function() {
  return /** @type{!Array<!proto.ei.LiveConfig.GiftConfig.GiftValueConfig>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.ei.LiveConfig.GiftConfig.GiftValueConfig, 9));
};


/**
 * @param {!Array<!proto.ei.LiveConfig.GiftConfig.GiftValueConfig>} value
 * @return {!proto.ei.LiveConfig.GiftConfig} returns this
*/
proto.ei.LiveConfig.GiftConfig.prototype.setGiftConfigsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 9, value);
};


/**
 * @param {!proto.ei.LiveConfig.GiftConfig.GiftValueConfig=} opt_value
 * @param {number=} opt_index
 * @return {!proto.ei.LiveConfig.GiftConfig.GiftValueConfig}
 */
proto.ei.LiveConfig.GiftConfig.prototype.addGiftConfigs = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 9, opt_value, proto.ei.LiveConfig.GiftConfig.GiftValueConfig, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.ei.LiveConfig.GiftConfig} returns this
 */
proto.ei.LiveConfig.GiftConfig.prototype.clearGiftConfigsList = function() {
  return this.setGiftConfigsList([]);
};


/**
 * optional double gift_mu_min_spent = 10;
 * @return {number}
 */
proto.ei.LiveConfig.GiftConfig.prototype.getGiftMuMinSpent = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 10, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.ei.LiveConfig.GiftConfig} returns this
 */
proto.ei.LiveConfig.GiftConfig.prototype.setGiftMuMinSpent = function(value) {
  return jspb.Message.setField(this, 10, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.LiveConfig.GiftConfig} returns this
 */
proto.ei.LiveConfig.GiftConfig.prototype.clearGiftMuMinSpent = function() {
  return jspb.Message.setField(this, 10, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.LiveConfig.GiftConfig.prototype.hasGiftMuMinSpent = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * optional double gift_mu_max_spent = 11;
 * @return {number}
 */
proto.ei.LiveConfig.GiftConfig.prototype.getGiftMuMaxSpent = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 11, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.ei.LiveConfig.GiftConfig} returns this
 */
proto.ei.LiveConfig.GiftConfig.prototype.setGiftMuMaxSpent = function(value) {
  return jspb.Message.setField(this, 11, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.LiveConfig.GiftConfig} returns this
 */
proto.ei.LiveConfig.GiftConfig.prototype.clearGiftMuMaxSpent = function() {
  return jspb.Message.setField(this, 11, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.LiveConfig.GiftConfig.prototype.hasGiftMuMaxSpent = function() {
  return jspb.Message.getField(this, 11) != null;
};


/**
 * optional double gift_mu_overall_mult = 12;
 * @return {number}
 */
proto.ei.LiveConfig.GiftConfig.prototype.getGiftMuOverallMult = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 12, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.ei.LiveConfig.GiftConfig} returns this
 */
proto.ei.LiveConfig.GiftConfig.prototype.setGiftMuOverallMult = function(value) {
  return jspb.Message.setField(this, 12, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.LiveConfig.GiftConfig} returns this
 */
proto.ei.LiveConfig.GiftConfig.prototype.clearGiftMuOverallMult = function() {
  return jspb.Message.setField(this, 12, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.LiveConfig.GiftConfig.prototype.hasGiftMuOverallMult = function() {
  return jspb.Message.getField(this, 12) != null;
};


/**
 * optional GiftMuConfig random_gift_mu_config = 15;
 * @return {?proto.ei.LiveConfig.GiftConfig.GiftMuConfig}
 */
proto.ei.LiveConfig.GiftConfig.prototype.getRandomGiftMuConfig = function() {
  return /** @type{?proto.ei.LiveConfig.GiftConfig.GiftMuConfig} */ (
    jspb.Message.getWrapperField(this, proto.ei.LiveConfig.GiftConfig.GiftMuConfig, 15));
};


/**
 * @param {?proto.ei.LiveConfig.GiftConfig.GiftMuConfig|undefined} value
 * @return {!proto.ei.LiveConfig.GiftConfig} returns this
*/
proto.ei.LiveConfig.GiftConfig.prototype.setRandomGiftMuConfig = function(value) {
  return jspb.Message.setWrapperField(this, 15, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.ei.LiveConfig.GiftConfig} returns this
 */
proto.ei.LiveConfig.GiftConfig.prototype.clearRandomGiftMuConfig = function() {
  return this.setRandomGiftMuConfig(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.LiveConfig.GiftConfig.prototype.hasRandomGiftMuConfig = function() {
  return jspb.Message.getField(this, 15) != null;
};


/**
 * optional GiftMuConfig video_gift_mu_config = 16;
 * @return {?proto.ei.LiveConfig.GiftConfig.GiftMuConfig}
 */
proto.ei.LiveConfig.GiftConfig.prototype.getVideoGiftMuConfig = function() {
  return /** @type{?proto.ei.LiveConfig.GiftConfig.GiftMuConfig} */ (
    jspb.Message.getWrapperField(this, proto.ei.LiveConfig.GiftConfig.GiftMuConfig, 16));
};


/**
 * @param {?proto.ei.LiveConfig.GiftConfig.GiftMuConfig|undefined} value
 * @return {!proto.ei.LiveConfig.GiftConfig} returns this
*/
proto.ei.LiveConfig.GiftConfig.prototype.setVideoGiftMuConfig = function(value) {
  return jspb.Message.setWrapperField(this, 16, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.ei.LiveConfig.GiftConfig} returns this
 */
proto.ei.LiveConfig.GiftConfig.prototype.clearVideoGiftMuConfig = function() {
  return this.setVideoGiftMuConfig(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.LiveConfig.GiftConfig.prototype.hasVideoGiftMuConfig = function() {
  return jspb.Message.getField(this, 16) != null;
};


/**
 * optional double package_interval = 1;
 * @return {number}
 */
proto.ei.LiveConfig.GiftConfig.prototype.getPackageInterval = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 1, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.ei.LiveConfig.GiftConfig} returns this
 */
proto.ei.LiveConfig.GiftConfig.prototype.setPackageInterval = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.LiveConfig.GiftConfig} returns this
 */
proto.ei.LiveConfig.GiftConfig.prototype.clearPackageInterval = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.LiveConfig.GiftConfig.prototype.hasPackageInterval = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional double video_offer_interval = 2;
 * @return {number}
 */
proto.ei.LiveConfig.GiftConfig.prototype.getVideoOfferInterval = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 2, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.ei.LiveConfig.GiftConfig} returns this
 */
proto.ei.LiveConfig.GiftConfig.prototype.setVideoOfferInterval = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.LiveConfig.GiftConfig} returns this
 */
proto.ei.LiveConfig.GiftConfig.prototype.clearVideoOfferInterval = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.LiveConfig.GiftConfig.prototype.hasVideoOfferInterval = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional double video_offer_interval_contract = 3;
 * @return {number}
 */
proto.ei.LiveConfig.GiftConfig.prototype.getVideoOfferIntervalContract = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 3, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.ei.LiveConfig.GiftConfig} returns this
 */
proto.ei.LiveConfig.GiftConfig.prototype.setVideoOfferIntervalContract = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.LiveConfig.GiftConfig} returns this
 */
proto.ei.LiveConfig.GiftConfig.prototype.clearVideoOfferIntervalContract = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.LiveConfig.GiftConfig.prototype.hasVideoOfferIntervalContract = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional double video_offer_interval_piggy_full = 4;
 * @return {number}
 */
proto.ei.LiveConfig.GiftConfig.prototype.getVideoOfferIntervalPiggyFull = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 4, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.ei.LiveConfig.GiftConfig} returns this
 */
proto.ei.LiveConfig.GiftConfig.prototype.setVideoOfferIntervalPiggyFull = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.LiveConfig.GiftConfig} returns this
 */
proto.ei.LiveConfig.GiftConfig.prototype.clearVideoOfferIntervalPiggyFull = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.LiveConfig.GiftConfig.prototype.hasVideoOfferIntervalPiggyFull = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional double video_offer_interval_piggy_extra_full = 5;
 * @return {number}
 */
proto.ei.LiveConfig.GiftConfig.prototype.getVideoOfferIntervalPiggyExtraFull = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 5, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.ei.LiveConfig.GiftConfig} returns this
 */
proto.ei.LiveConfig.GiftConfig.prototype.setVideoOfferIntervalPiggyExtraFull = function(value) {
  return jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.LiveConfig.GiftConfig} returns this
 */
proto.ei.LiveConfig.GiftConfig.prototype.clearVideoOfferIntervalPiggyExtraFull = function() {
  return jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.LiveConfig.GiftConfig.prototype.hasVideoOfferIntervalPiggyExtraFull = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional bool video_reset_on_idle = 14;
 * @return {boolean}
 */
proto.ei.LiveConfig.GiftConfig.prototype.getVideoResetOnIdle = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 14, false));
};


/**
 * @param {boolean} value
 * @return {!proto.ei.LiveConfig.GiftConfig} returns this
 */
proto.ei.LiveConfig.GiftConfig.prototype.setVideoResetOnIdle = function(value) {
  return jspb.Message.setField(this, 14, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.LiveConfig.GiftConfig} returns this
 */
proto.ei.LiveConfig.GiftConfig.prototype.clearVideoResetOnIdle = function() {
  return jspb.Message.setField(this, 14, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.LiveConfig.GiftConfig.prototype.hasVideoResetOnIdle = function() {
  return jspb.Message.getField(this, 14) != null;
};


/**
 * optional double package_interval_contract = 6;
 * @return {number}
 */
proto.ei.LiveConfig.GiftConfig.prototype.getPackageIntervalContract = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 6, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.ei.LiveConfig.GiftConfig} returns this
 */
proto.ei.LiveConfig.GiftConfig.prototype.setPackageIntervalContract = function(value) {
  return jspb.Message.setField(this, 6, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.LiveConfig.GiftConfig} returns this
 */
proto.ei.LiveConfig.GiftConfig.prototype.clearPackageIntervalContract = function() {
  return jspb.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.LiveConfig.GiftConfig.prototype.hasPackageIntervalContract = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional double package_interval_piggy_full = 7;
 * @return {number}
 */
proto.ei.LiveConfig.GiftConfig.prototype.getPackageIntervalPiggyFull = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 7, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.ei.LiveConfig.GiftConfig} returns this
 */
proto.ei.LiveConfig.GiftConfig.prototype.setPackageIntervalPiggyFull = function(value) {
  return jspb.Message.setField(this, 7, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.LiveConfig.GiftConfig} returns this
 */
proto.ei.LiveConfig.GiftConfig.prototype.clearPackageIntervalPiggyFull = function() {
  return jspb.Message.setField(this, 7, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.LiveConfig.GiftConfig.prototype.hasPackageIntervalPiggyFull = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional double package_interval_piggy_extra_full = 8;
 * @return {number}
 */
proto.ei.LiveConfig.GiftConfig.prototype.getPackageIntervalPiggyExtraFull = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 8, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.ei.LiveConfig.GiftConfig} returns this
 */
proto.ei.LiveConfig.GiftConfig.prototype.setPackageIntervalPiggyExtraFull = function(value) {
  return jspb.Message.setField(this, 8, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.LiveConfig.GiftConfig} returns this
 */
proto.ei.LiveConfig.GiftConfig.prototype.clearPackageIntervalPiggyExtraFull = function() {
  return jspb.Message.setField(this, 8, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.LiveConfig.GiftConfig.prototype.hasPackageIntervalPiggyExtraFull = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional bool package_reset_on_idle = 13;
 * @return {boolean}
 */
proto.ei.LiveConfig.GiftConfig.prototype.getPackageResetOnIdle = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 13, false));
};


/**
 * @param {boolean} value
 * @return {!proto.ei.LiveConfig.GiftConfig} returns this
 */
proto.ei.LiveConfig.GiftConfig.prototype.setPackageResetOnIdle = function(value) {
  return jspb.Message.setField(this, 13, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.LiveConfig.GiftConfig} returns this
 */
proto.ei.LiveConfig.GiftConfig.prototype.clearPackageResetOnIdle = function() {
  return jspb.Message.setField(this, 13, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.LiveConfig.GiftConfig.prototype.hasPackageResetOnIdle = function() {
  return jspb.Message.getField(this, 13) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ei.LiveConfig.MiscConfig.prototype.toObject = function(opt_includeInstance) {
  return proto.ei.LiveConfig.MiscConfig.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ei.LiveConfig.MiscConfig} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.LiveConfig.MiscConfig.toObject = function(includeInstance, msg) {
  var f, obj = {
    askToTrack: (f = jspb.Message.getBooleanField(msg, 1)) == null ? undefined : f,
    askToTrackMinSoulEggs: (f = jspb.Message.getOptionalFloatingPointField(msg, 2)) == null ? undefined : f,
    askToTrackMessage: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f,
    askToTrackShowPreDialog: (f = jspb.Message.getBooleanField(msg, 4)) == null ? undefined : f,
    askToTrackAfterPrivacy: (f = jspb.Message.getBooleanField(msg, 5)) == null ? undefined : f,
    chickenRunBoostPercentage: (f = jspb.Message.getOptionalFloatingPointField(msg, 6)) == null ? undefined : f,
    shellsIntroTickets: (f = jspb.Message.getField(msg, 7)) == null ? undefined : f,
    shellsMaxFreeChickenConfigs: (f = jspb.Message.getField(msg, 8)) == null ? undefined : f,
    shellsIntroAlertThreshold: (f = jspb.Message.getField(msg, 9)) == null ? undefined : f,
    shellsLightingControlsPrice: jspb.Message.getFieldWithDefault(msg, 14, 175),
    contractsExpertLeagueMinSoulPower: (f = jspb.Message.getOptionalFloatingPointField(msg, 10)) == null ? undefined : f,
    newPlayerEventDuration: (f = jspb.Message.getOptionalFloatingPointField(msg, 11)) == null ? undefined : f,
    contractsClubAvailable: (f = jspb.Message.getBooleanField(msg, 12)) == null ? undefined : f,
    contractsBeta: (f = jspb.Message.getBooleanField(msg, 13)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ei.LiveConfig.MiscConfig}
 */
proto.ei.LiveConfig.MiscConfig.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ei.LiveConfig.MiscConfig;
  return proto.ei.LiveConfig.MiscConfig.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ei.LiveConfig.MiscConfig} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ei.LiveConfig.MiscConfig}
 */
proto.ei.LiveConfig.MiscConfig.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setAskToTrack(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setAskToTrackMinSoulEggs(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setAskToTrackMessage(value);
      break;
    case 4:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setAskToTrackShowPreDialog(value);
      break;
    case 5:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setAskToTrackAfterPrivacy(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setChickenRunBoostPercentage(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setShellsIntroTickets(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setShellsMaxFreeChickenConfigs(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setShellsIntroAlertThreshold(value);
      break;
    case 14:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setShellsLightingControlsPrice(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setContractsExpertLeagueMinSoulPower(value);
      break;
    case 11:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setNewPlayerEventDuration(value);
      break;
    case 12:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setContractsClubAvailable(value);
      break;
    case 13:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setContractsBeta(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ei.LiveConfig.MiscConfig.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ei.LiveConfig.MiscConfig.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ei.LiveConfig.MiscConfig} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.LiveConfig.MiscConfig.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {boolean} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeBool(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeDouble(
      2,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeString(
      3,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeBool(
      4,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeBool(
      5,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeDouble(
      6,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 7));
  if (f != null) {
    writer.writeUint32(
      7,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 8));
  if (f != null) {
    writer.writeUint32(
      8,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 9));
  if (f != null) {
    writer.writeUint32(
      9,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 14));
  if (f != null) {
    writer.writeUint32(
      14,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 10));
  if (f != null) {
    writer.writeDouble(
      10,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 11));
  if (f != null) {
    writer.writeDouble(
      11,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 12));
  if (f != null) {
    writer.writeBool(
      12,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 13));
  if (f != null) {
    writer.writeBool(
      13,
      f
    );
  }
};


/**
 * optional bool ask_to_track = 1;
 * @return {boolean}
 */
proto.ei.LiveConfig.MiscConfig.prototype.getAskToTrack = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.ei.LiveConfig.MiscConfig} returns this
 */
proto.ei.LiveConfig.MiscConfig.prototype.setAskToTrack = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.LiveConfig.MiscConfig} returns this
 */
proto.ei.LiveConfig.MiscConfig.prototype.clearAskToTrack = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.LiveConfig.MiscConfig.prototype.hasAskToTrack = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional double ask_to_track_min_soul_eggs = 2;
 * @return {number}
 */
proto.ei.LiveConfig.MiscConfig.prototype.getAskToTrackMinSoulEggs = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 2, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.ei.LiveConfig.MiscConfig} returns this
 */
proto.ei.LiveConfig.MiscConfig.prototype.setAskToTrackMinSoulEggs = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.LiveConfig.MiscConfig} returns this
 */
proto.ei.LiveConfig.MiscConfig.prototype.clearAskToTrackMinSoulEggs = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.LiveConfig.MiscConfig.prototype.hasAskToTrackMinSoulEggs = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string ask_to_track_message = 3;
 * @return {string}
 */
proto.ei.LiveConfig.MiscConfig.prototype.getAskToTrackMessage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.ei.LiveConfig.MiscConfig} returns this
 */
proto.ei.LiveConfig.MiscConfig.prototype.setAskToTrackMessage = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.LiveConfig.MiscConfig} returns this
 */
proto.ei.LiveConfig.MiscConfig.prototype.clearAskToTrackMessage = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.LiveConfig.MiscConfig.prototype.hasAskToTrackMessage = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional bool ask_to_track_show_pre_dialog = 4;
 * @return {boolean}
 */
proto.ei.LiveConfig.MiscConfig.prototype.getAskToTrackShowPreDialog = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 4, false));
};


/**
 * @param {boolean} value
 * @return {!proto.ei.LiveConfig.MiscConfig} returns this
 */
proto.ei.LiveConfig.MiscConfig.prototype.setAskToTrackShowPreDialog = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.LiveConfig.MiscConfig} returns this
 */
proto.ei.LiveConfig.MiscConfig.prototype.clearAskToTrackShowPreDialog = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.LiveConfig.MiscConfig.prototype.hasAskToTrackShowPreDialog = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional bool ask_to_track_after_privacy = 5;
 * @return {boolean}
 */
proto.ei.LiveConfig.MiscConfig.prototype.getAskToTrackAfterPrivacy = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 5, false));
};


/**
 * @param {boolean} value
 * @return {!proto.ei.LiveConfig.MiscConfig} returns this
 */
proto.ei.LiveConfig.MiscConfig.prototype.setAskToTrackAfterPrivacy = function(value) {
  return jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.LiveConfig.MiscConfig} returns this
 */
proto.ei.LiveConfig.MiscConfig.prototype.clearAskToTrackAfterPrivacy = function() {
  return jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.LiveConfig.MiscConfig.prototype.hasAskToTrackAfterPrivacy = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional double chicken_run_boost_percentage = 6;
 * @return {number}
 */
proto.ei.LiveConfig.MiscConfig.prototype.getChickenRunBoostPercentage = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 6, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.ei.LiveConfig.MiscConfig} returns this
 */
proto.ei.LiveConfig.MiscConfig.prototype.setChickenRunBoostPercentage = function(value) {
  return jspb.Message.setField(this, 6, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.LiveConfig.MiscConfig} returns this
 */
proto.ei.LiveConfig.MiscConfig.prototype.clearChickenRunBoostPercentage = function() {
  return jspb.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.LiveConfig.MiscConfig.prototype.hasChickenRunBoostPercentage = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional uint32 shells_intro_tickets = 7;
 * @return {number}
 */
proto.ei.LiveConfig.MiscConfig.prototype.getShellsIntroTickets = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {number} value
 * @return {!proto.ei.LiveConfig.MiscConfig} returns this
 */
proto.ei.LiveConfig.MiscConfig.prototype.setShellsIntroTickets = function(value) {
  return jspb.Message.setField(this, 7, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.LiveConfig.MiscConfig} returns this
 */
proto.ei.LiveConfig.MiscConfig.prototype.clearShellsIntroTickets = function() {
  return jspb.Message.setField(this, 7, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.LiveConfig.MiscConfig.prototype.hasShellsIntroTickets = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional uint32 shells_max_free_chicken_configs = 8;
 * @return {number}
 */
proto.ei.LiveConfig.MiscConfig.prototype.getShellsMaxFreeChickenConfigs = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/**
 * @param {number} value
 * @return {!proto.ei.LiveConfig.MiscConfig} returns this
 */
proto.ei.LiveConfig.MiscConfig.prototype.setShellsMaxFreeChickenConfigs = function(value) {
  return jspb.Message.setField(this, 8, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.LiveConfig.MiscConfig} returns this
 */
proto.ei.LiveConfig.MiscConfig.prototype.clearShellsMaxFreeChickenConfigs = function() {
  return jspb.Message.setField(this, 8, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.LiveConfig.MiscConfig.prototype.hasShellsMaxFreeChickenConfigs = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional uint32 shells_intro_alert_threshold = 9;
 * @return {number}
 */
proto.ei.LiveConfig.MiscConfig.prototype.getShellsIntroAlertThreshold = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};


/**
 * @param {number} value
 * @return {!proto.ei.LiveConfig.MiscConfig} returns this
 */
proto.ei.LiveConfig.MiscConfig.prototype.setShellsIntroAlertThreshold = function(value) {
  return jspb.Message.setField(this, 9, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.LiveConfig.MiscConfig} returns this
 */
proto.ei.LiveConfig.MiscConfig.prototype.clearShellsIntroAlertThreshold = function() {
  return jspb.Message.setField(this, 9, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.LiveConfig.MiscConfig.prototype.hasShellsIntroAlertThreshold = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional uint32 shells_lighting_controls_price = 14;
 * @return {number}
 */
proto.ei.LiveConfig.MiscConfig.prototype.getShellsLightingControlsPrice = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 14, 175));
};


/**
 * @param {number} value
 * @return {!proto.ei.LiveConfig.MiscConfig} returns this
 */
proto.ei.LiveConfig.MiscConfig.prototype.setShellsLightingControlsPrice = function(value) {
  return jspb.Message.setField(this, 14, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.LiveConfig.MiscConfig} returns this
 */
proto.ei.LiveConfig.MiscConfig.prototype.clearShellsLightingControlsPrice = function() {
  return jspb.Message.setField(this, 14, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.LiveConfig.MiscConfig.prototype.hasShellsLightingControlsPrice = function() {
  return jspb.Message.getField(this, 14) != null;
};


/**
 * optional double contracts_expert_league_min_soul_power = 10;
 * @return {number}
 */
proto.ei.LiveConfig.MiscConfig.prototype.getContractsExpertLeagueMinSoulPower = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 10, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.ei.LiveConfig.MiscConfig} returns this
 */
proto.ei.LiveConfig.MiscConfig.prototype.setContractsExpertLeagueMinSoulPower = function(value) {
  return jspb.Message.setField(this, 10, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.LiveConfig.MiscConfig} returns this
 */
proto.ei.LiveConfig.MiscConfig.prototype.clearContractsExpertLeagueMinSoulPower = function() {
  return jspb.Message.setField(this, 10, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.LiveConfig.MiscConfig.prototype.hasContractsExpertLeagueMinSoulPower = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * optional double new_player_event_duration = 11;
 * @return {number}
 */
proto.ei.LiveConfig.MiscConfig.prototype.getNewPlayerEventDuration = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 11, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.ei.LiveConfig.MiscConfig} returns this
 */
proto.ei.LiveConfig.MiscConfig.prototype.setNewPlayerEventDuration = function(value) {
  return jspb.Message.setField(this, 11, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.LiveConfig.MiscConfig} returns this
 */
proto.ei.LiveConfig.MiscConfig.prototype.clearNewPlayerEventDuration = function() {
  return jspb.Message.setField(this, 11, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.LiveConfig.MiscConfig.prototype.hasNewPlayerEventDuration = function() {
  return jspb.Message.getField(this, 11) != null;
};


/**
 * optional bool contracts_club_available = 12;
 * @return {boolean}
 */
proto.ei.LiveConfig.MiscConfig.prototype.getContractsClubAvailable = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 12, false));
};


/**
 * @param {boolean} value
 * @return {!proto.ei.LiveConfig.MiscConfig} returns this
 */
proto.ei.LiveConfig.MiscConfig.prototype.setContractsClubAvailable = function(value) {
  return jspb.Message.setField(this, 12, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.LiveConfig.MiscConfig} returns this
 */
proto.ei.LiveConfig.MiscConfig.prototype.clearContractsClubAvailable = function() {
  return jspb.Message.setField(this, 12, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.LiveConfig.MiscConfig.prototype.hasContractsClubAvailable = function() {
  return jspb.Message.getField(this, 12) != null;
};


/**
 * optional bool contracts_beta = 13;
 * @return {boolean}
 */
proto.ei.LiveConfig.MiscConfig.prototype.getContractsBeta = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 13, false));
};


/**
 * @param {boolean} value
 * @return {!proto.ei.LiveConfig.MiscConfig} returns this
 */
proto.ei.LiveConfig.MiscConfig.prototype.setContractsBeta = function(value) {
  return jspb.Message.setField(this, 13, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.LiveConfig.MiscConfig} returns this
 */
proto.ei.LiveConfig.MiscConfig.prototype.clearContractsBeta = function() {
  return jspb.Message.setField(this, 13, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.LiveConfig.MiscConfig.prototype.hasContractsBeta = function() {
  return jspb.Message.getField(this, 13) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.ei.LiveConfig.HelpConfig.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ei.LiveConfig.HelpConfig.prototype.toObject = function(opt_includeInstance) {
  return proto.ei.LiveConfig.HelpConfig.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ei.LiveConfig.HelpConfig} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.LiveConfig.HelpConfig.toObject = function(includeInstance, msg) {
  var f, obj = {
    videoInfosList: jspb.Message.toObjectList(msg.getVideoInfosList(),
    proto.ei.LiveConfig.HelpConfig.HowToVideoInfo.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ei.LiveConfig.HelpConfig}
 */
proto.ei.LiveConfig.HelpConfig.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ei.LiveConfig.HelpConfig;
  return proto.ei.LiveConfig.HelpConfig.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ei.LiveConfig.HelpConfig} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ei.LiveConfig.HelpConfig}
 */
proto.ei.LiveConfig.HelpConfig.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.ei.LiveConfig.HelpConfig.HowToVideoInfo;
      reader.readMessage(value,proto.ei.LiveConfig.HelpConfig.HowToVideoInfo.deserializeBinaryFromReader);
      msg.addVideoInfos(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ei.LiveConfig.HelpConfig.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ei.LiveConfig.HelpConfig.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ei.LiveConfig.HelpConfig} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.LiveConfig.HelpConfig.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getVideoInfosList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.ei.LiveConfig.HelpConfig.HowToVideoInfo.serializeBinaryToWriter
    );
  }
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ei.LiveConfig.HelpConfig.HowToVideoInfo.prototype.toObject = function(opt_includeInstance) {
  return proto.ei.LiveConfig.HelpConfig.HowToVideoInfo.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ei.LiveConfig.HelpConfig.HowToVideoInfo} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.LiveConfig.HelpConfig.HowToVideoInfo.toObject = function(includeInstance, msg) {
  var f, obj = {
    type: (f = jspb.Message.getField(msg, 6)) == null ? undefined : f,
    name: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    description: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,
    duration: (f = jspb.Message.getField(msg, 5)) == null ? undefined : f,
    url: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f,
    soulEggs: (f = jspb.Message.getOptionalFloatingPointField(msg, 4)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ei.LiveConfig.HelpConfig.HowToVideoInfo}
 */
proto.ei.LiveConfig.HelpConfig.HowToVideoInfo.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ei.LiveConfig.HelpConfig.HowToVideoInfo;
  return proto.ei.LiveConfig.HelpConfig.HowToVideoInfo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ei.LiveConfig.HelpConfig.HowToVideoInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ei.LiveConfig.HelpConfig.HowToVideoInfo}
 */
proto.ei.LiveConfig.HelpConfig.HowToVideoInfo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 6:
      var value = /** @type {!proto.ei.LiveConfig.HelpConfig.HowToVideoInfo.Type} */ (reader.readEnum());
      msg.setType(value);
      break;
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setDuration(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setUrl(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setSoulEggs(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ei.LiveConfig.HelpConfig.HowToVideoInfo.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ei.LiveConfig.HelpConfig.HowToVideoInfo.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ei.LiveConfig.HelpConfig.HowToVideoInfo} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.LiveConfig.HelpConfig.HowToVideoInfo.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {!proto.ei.LiveConfig.HelpConfig.HowToVideoInfo.Type} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeEnum(
      6,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeString(
      5,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeString(
      3,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeDouble(
      4,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.ei.LiveConfig.HelpConfig.HowToVideoInfo.Type = {
  VIDEO: 0,
  ARTICLE: 1
};

/**
 * optional Type type = 6;
 * @return {!proto.ei.LiveConfig.HelpConfig.HowToVideoInfo.Type}
 */
proto.ei.LiveConfig.HelpConfig.HowToVideoInfo.prototype.getType = function() {
  return /** @type {!proto.ei.LiveConfig.HelpConfig.HowToVideoInfo.Type} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {!proto.ei.LiveConfig.HelpConfig.HowToVideoInfo.Type} value
 * @return {!proto.ei.LiveConfig.HelpConfig.HowToVideoInfo} returns this
 */
proto.ei.LiveConfig.HelpConfig.HowToVideoInfo.prototype.setType = function(value) {
  return jspb.Message.setField(this, 6, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.LiveConfig.HelpConfig.HowToVideoInfo} returns this
 */
proto.ei.LiveConfig.HelpConfig.HowToVideoInfo.prototype.clearType = function() {
  return jspb.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.LiveConfig.HelpConfig.HowToVideoInfo.prototype.hasType = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.ei.LiveConfig.HelpConfig.HowToVideoInfo.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.ei.LiveConfig.HelpConfig.HowToVideoInfo} returns this
 */
proto.ei.LiveConfig.HelpConfig.HowToVideoInfo.prototype.setName = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.LiveConfig.HelpConfig.HowToVideoInfo} returns this
 */
proto.ei.LiveConfig.HelpConfig.HowToVideoInfo.prototype.clearName = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.LiveConfig.HelpConfig.HowToVideoInfo.prototype.hasName = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string description = 2;
 * @return {string}
 */
proto.ei.LiveConfig.HelpConfig.HowToVideoInfo.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.ei.LiveConfig.HelpConfig.HowToVideoInfo} returns this
 */
proto.ei.LiveConfig.HelpConfig.HowToVideoInfo.prototype.setDescription = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.LiveConfig.HelpConfig.HowToVideoInfo} returns this
 */
proto.ei.LiveConfig.HelpConfig.HowToVideoInfo.prototype.clearDescription = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.LiveConfig.HelpConfig.HowToVideoInfo.prototype.hasDescription = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string duration = 5;
 * @return {string}
 */
proto.ei.LiveConfig.HelpConfig.HowToVideoInfo.prototype.getDuration = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.ei.LiveConfig.HelpConfig.HowToVideoInfo} returns this
 */
proto.ei.LiveConfig.HelpConfig.HowToVideoInfo.prototype.setDuration = function(value) {
  return jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.LiveConfig.HelpConfig.HowToVideoInfo} returns this
 */
proto.ei.LiveConfig.HelpConfig.HowToVideoInfo.prototype.clearDuration = function() {
  return jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.LiveConfig.HelpConfig.HowToVideoInfo.prototype.hasDuration = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional string url = 3;
 * @return {string}
 */
proto.ei.LiveConfig.HelpConfig.HowToVideoInfo.prototype.getUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.ei.LiveConfig.HelpConfig.HowToVideoInfo} returns this
 */
proto.ei.LiveConfig.HelpConfig.HowToVideoInfo.prototype.setUrl = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.LiveConfig.HelpConfig.HowToVideoInfo} returns this
 */
proto.ei.LiveConfig.HelpConfig.HowToVideoInfo.prototype.clearUrl = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.LiveConfig.HelpConfig.HowToVideoInfo.prototype.hasUrl = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional double soul_eggs = 4;
 * @return {number}
 */
proto.ei.LiveConfig.HelpConfig.HowToVideoInfo.prototype.getSoulEggs = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 4, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.ei.LiveConfig.HelpConfig.HowToVideoInfo} returns this
 */
proto.ei.LiveConfig.HelpConfig.HowToVideoInfo.prototype.setSoulEggs = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.LiveConfig.HelpConfig.HowToVideoInfo} returns this
 */
proto.ei.LiveConfig.HelpConfig.HowToVideoInfo.prototype.clearSoulEggs = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.LiveConfig.HelpConfig.HowToVideoInfo.prototype.hasSoulEggs = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * repeated HowToVideoInfo video_infos = 1;
 * @return {!Array<!proto.ei.LiveConfig.HelpConfig.HowToVideoInfo>}
 */
proto.ei.LiveConfig.HelpConfig.prototype.getVideoInfosList = function() {
  return /** @type{!Array<!proto.ei.LiveConfig.HelpConfig.HowToVideoInfo>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.ei.LiveConfig.HelpConfig.HowToVideoInfo, 1));
};


/**
 * @param {!Array<!proto.ei.LiveConfig.HelpConfig.HowToVideoInfo>} value
 * @return {!proto.ei.LiveConfig.HelpConfig} returns this
*/
proto.ei.LiveConfig.HelpConfig.prototype.setVideoInfosList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.ei.LiveConfig.HelpConfig.HowToVideoInfo=} opt_value
 * @param {number=} opt_index
 * @return {!proto.ei.LiveConfig.HelpConfig.HowToVideoInfo}
 */
proto.ei.LiveConfig.HelpConfig.prototype.addVideoInfos = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.ei.LiveConfig.HelpConfig.HowToVideoInfo, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.ei.LiveConfig.HelpConfig} returns this
 */
proto.ei.LiveConfig.HelpConfig.prototype.clearVideoInfosList = function() {
  return this.setVideoInfosList([]);
};


/**
 * optional string config_id = 1;
 * @return {string}
 */
proto.ei.LiveConfig.prototype.getConfigId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.ei.LiveConfig} returns this
 */
proto.ei.LiveConfig.prototype.setConfigId = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.LiveConfig} returns this
 */
proto.ei.LiveConfig.prototype.clearConfigId = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.LiveConfig.prototype.hasConfigId = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional BoostsConfig boosts_config = 2;
 * @return {?proto.ei.LiveConfig.BoostsConfig}
 */
proto.ei.LiveConfig.prototype.getBoostsConfig = function() {
  return /** @type{?proto.ei.LiveConfig.BoostsConfig} */ (
    jspb.Message.getWrapperField(this, proto.ei.LiveConfig.BoostsConfig, 2));
};


/**
 * @param {?proto.ei.LiveConfig.BoostsConfig|undefined} value
 * @return {!proto.ei.LiveConfig} returns this
*/
proto.ei.LiveConfig.prototype.setBoostsConfig = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.ei.LiveConfig} returns this
 */
proto.ei.LiveConfig.prototype.clearBoostsConfig = function() {
  return this.setBoostsConfig(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.LiveConfig.prototype.hasBoostsConfig = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional GiftConfig gift_config = 3;
 * @return {?proto.ei.LiveConfig.GiftConfig}
 */
proto.ei.LiveConfig.prototype.getGiftConfig = function() {
  return /** @type{?proto.ei.LiveConfig.GiftConfig} */ (
    jspb.Message.getWrapperField(this, proto.ei.LiveConfig.GiftConfig, 3));
};


/**
 * @param {?proto.ei.LiveConfig.GiftConfig|undefined} value
 * @return {!proto.ei.LiveConfig} returns this
*/
proto.ei.LiveConfig.prototype.setGiftConfig = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.ei.LiveConfig} returns this
 */
proto.ei.LiveConfig.prototype.clearGiftConfig = function() {
  return this.setGiftConfig(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.LiveConfig.prototype.hasGiftConfig = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional MiscConfig misc_config = 4;
 * @return {?proto.ei.LiveConfig.MiscConfig}
 */
proto.ei.LiveConfig.prototype.getMiscConfig = function() {
  return /** @type{?proto.ei.LiveConfig.MiscConfig} */ (
    jspb.Message.getWrapperField(this, proto.ei.LiveConfig.MiscConfig, 4));
};


/**
 * @param {?proto.ei.LiveConfig.MiscConfig|undefined} value
 * @return {!proto.ei.LiveConfig} returns this
*/
proto.ei.LiveConfig.prototype.setMiscConfig = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.ei.LiveConfig} returns this
 */
proto.ei.LiveConfig.prototype.clearMiscConfig = function() {
  return this.setMiscConfig(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.LiveConfig.prototype.hasMiscConfig = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional HelpConfig help_config = 5;
 * @return {?proto.ei.LiveConfig.HelpConfig}
 */
proto.ei.LiveConfig.prototype.getHelpConfig = function() {
  return /** @type{?proto.ei.LiveConfig.HelpConfig} */ (
    jspb.Message.getWrapperField(this, proto.ei.LiveConfig.HelpConfig, 5));
};


/**
 * @param {?proto.ei.LiveConfig.HelpConfig|undefined} value
 * @return {!proto.ei.LiveConfig} returns this
*/
proto.ei.LiveConfig.prototype.setHelpConfig = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.ei.LiveConfig} returns this
 */
proto.ei.LiveConfig.prototype.clearHelpConfig = function() {
  return this.setHelpConfig(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.LiveConfig.prototype.hasHelpConfig = function() {
  return jspb.Message.getField(this, 5) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.ei.InGameMail.repeatedFields_ = [9];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ei.InGameMail.prototype.toObject = function(opt_includeInstance) {
  return proto.ei.InGameMail.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ei.InGameMail} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.InGameMail.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    title: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,
    date: (f = jspb.Message.getField(msg, 8)) == null ? undefined : f,
    message: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f,
    action: (f = jspb.Message.getField(msg, 4)) == null ? undefined : f,
    url: (f = jspb.Message.getField(msg, 5)) == null ? undefined : f,
    appLink: (f = jspb.Message.getField(msg, 14)) == null ? undefined : f,
    appLinkExtra: (f = jspb.Message.getField(msg, 15)) == null ? undefined : f,
    image: (f = msg.getImage()) && proto.ei.DLCItem.toObject(includeInstance, f),
    imageWidth: (f = jspb.Message.getOptionalFloatingPointField(msg, 21)) == null ? undefined : f,
    imageHeight: (f = jspb.Message.getOptionalFloatingPointField(msg, 22)) == null ? undefined : f,
    platform: (f = jspb.Message.getField(msg, 7)) == null ? undefined : f,
    buildsList: (f = jspb.Message.getRepeatedField(msg, 9)) == null ? undefined : f,
    minClientVersion: (f = jspb.Message.getField(msg, 10)) == null ? undefined : f,
    maxClientVersion: (f = jspb.Message.getField(msg, 12)) == null ? undefined : f,
    minSoulEggs: (f = jspb.Message.getOptionalFloatingPointField(msg, 11)) == null ? undefined : f,
    maxSoulEggs: (f = jspb.Message.getOptionalFloatingPointField(msg, 29)) == null ? undefined : f,
    minMysticalBonus: (f = jspb.Message.getOptionalFloatingPointField(msg, 13)) == null ? undefined : f,
    userType: (f = jspb.Message.getField(msg, 17)) == null ? undefined : f,
    minPiggyBreaks: (f = jspb.Message.getField(msg, 20)) == null ? undefined : f,
    goldTip: (f = jspb.Message.getOptionalFloatingPointField(msg, 6)) == null ? undefined : f,
    tip: (f = jspb.Message.getBooleanField(msg, 23)) == null ? undefined : f,
    priority: (f = jspb.Message.getField(msg, 27)) == null ? undefined : f,
    minDaysSinceLastTip: (f = jspb.Message.getOptionalFloatingPointField(msg, 24)) == null ? undefined : f,
    maxRetries: (f = jspb.Message.getField(msg, 25)) == null ? undefined : f,
    daysUntilRetry: (f = jspb.Message.getOptionalFloatingPointField(msg, 26)) == null ? undefined : f,
    category: (f = jspb.Message.getField(msg, 28)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ei.InGameMail}
 */
proto.ei.InGameMail.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ei.InGameMail;
  return proto.ei.InGameMail.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ei.InGameMail} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ei.InGameMail}
 */
proto.ei.InGameMail.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setTitle(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setDate(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setMessage(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setAction(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setUrl(value);
      break;
    case 14:
      var value = /** @type {!proto.ei.UILocation} */ (reader.readEnum());
      msg.setAppLink(value);
      break;
    case 15:
      var value = /** @type {string} */ (reader.readString());
      msg.setAppLinkExtra(value);
      break;
    case 16:
      var value = new proto.ei.DLCItem;
      reader.readMessage(value,proto.ei.DLCItem.deserializeBinaryFromReader);
      msg.setImage(value);
      break;
    case 21:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setImageWidth(value);
      break;
    case 22:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setImageHeight(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setPlatform(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.addBuilds(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setMinClientVersion(value);
      break;
    case 12:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setMaxClientVersion(value);
      break;
    case 11:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setMinSoulEggs(value);
      break;
    case 29:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setMaxSoulEggs(value);
      break;
    case 13:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setMinMysticalBonus(value);
      break;
    case 17:
      var value = /** @type {!proto.ei.UserType} */ (reader.readEnum());
      msg.setUserType(value);
      break;
    case 20:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setMinPiggyBreaks(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setGoldTip(value);
      break;
    case 23:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setTip(value);
      break;
    case 27:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setPriority(value);
      break;
    case 24:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setMinDaysSinceLastTip(value);
      break;
    case 25:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setMaxRetries(value);
      break;
    case 26:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setDaysUntilRetry(value);
      break;
    case 28:
      var value = /** @type {string} */ (reader.readString());
      msg.setCategory(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ei.InGameMail.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ei.InGameMail.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ei.InGameMail} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.InGameMail.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 8));
  if (f != null) {
    writer.writeString(
      8,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeString(
      3,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeString(
      4,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeString(
      5,
      f
    );
  }
  f = /** @type {!proto.ei.UILocation} */ (jspb.Message.getField(message, 14));
  if (f != null) {
    writer.writeEnum(
      14,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 15));
  if (f != null) {
    writer.writeString(
      15,
      f
    );
  }
  f = message.getImage();
  if (f != null) {
    writer.writeMessage(
      16,
      f,
      proto.ei.DLCItem.serializeBinaryToWriter
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 21));
  if (f != null) {
    writer.writeDouble(
      21,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 22));
  if (f != null) {
    writer.writeDouble(
      22,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 7));
  if (f != null) {
    writer.writeUint32(
      7,
      f
    );
  }
  f = message.getBuildsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      9,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 10));
  if (f != null) {
    writer.writeUint32(
      10,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 12));
  if (f != null) {
    writer.writeUint32(
      12,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 11));
  if (f != null) {
    writer.writeDouble(
      11,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 29));
  if (f != null) {
    writer.writeDouble(
      29,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 13));
  if (f != null) {
    writer.writeDouble(
      13,
      f
    );
  }
  f = /** @type {!proto.ei.UserType} */ (jspb.Message.getField(message, 17));
  if (f != null) {
    writer.writeEnum(
      17,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 20));
  if (f != null) {
    writer.writeUint32(
      20,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeDouble(
      6,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 23));
  if (f != null) {
    writer.writeBool(
      23,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 27));
  if (f != null) {
    writer.writeUint32(
      27,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 24));
  if (f != null) {
    writer.writeDouble(
      24,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 25));
  if (f != null) {
    writer.writeUint32(
      25,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 26));
  if (f != null) {
    writer.writeDouble(
      26,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 28));
  if (f != null) {
    writer.writeString(
      28,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.ei.InGameMail.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.ei.InGameMail} returns this
 */
proto.ei.InGameMail.prototype.setId = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.InGameMail} returns this
 */
proto.ei.InGameMail.prototype.clearId = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.InGameMail.prototype.hasId = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string title = 2;
 * @return {string}
 */
proto.ei.InGameMail.prototype.getTitle = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.ei.InGameMail} returns this
 */
proto.ei.InGameMail.prototype.setTitle = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.InGameMail} returns this
 */
proto.ei.InGameMail.prototype.clearTitle = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.InGameMail.prototype.hasTitle = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string date = 8;
 * @return {string}
 */
proto.ei.InGameMail.prototype.getDate = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.ei.InGameMail} returns this
 */
proto.ei.InGameMail.prototype.setDate = function(value) {
  return jspb.Message.setField(this, 8, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.InGameMail} returns this
 */
proto.ei.InGameMail.prototype.clearDate = function() {
  return jspb.Message.setField(this, 8, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.InGameMail.prototype.hasDate = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional string message = 3;
 * @return {string}
 */
proto.ei.InGameMail.prototype.getMessage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.ei.InGameMail} returns this
 */
proto.ei.InGameMail.prototype.setMessage = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.InGameMail} returns this
 */
proto.ei.InGameMail.prototype.clearMessage = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.InGameMail.prototype.hasMessage = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional string action = 4;
 * @return {string}
 */
proto.ei.InGameMail.prototype.getAction = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.ei.InGameMail} returns this
 */
proto.ei.InGameMail.prototype.setAction = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.InGameMail} returns this
 */
proto.ei.InGameMail.prototype.clearAction = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.InGameMail.prototype.hasAction = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional string url = 5;
 * @return {string}
 */
proto.ei.InGameMail.prototype.getUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.ei.InGameMail} returns this
 */
proto.ei.InGameMail.prototype.setUrl = function(value) {
  return jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.InGameMail} returns this
 */
proto.ei.InGameMail.prototype.clearUrl = function() {
  return jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.InGameMail.prototype.hasUrl = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional UILocation app_link = 14;
 * @return {!proto.ei.UILocation}
 */
proto.ei.InGameMail.prototype.getAppLink = function() {
  return /** @type {!proto.ei.UILocation} */ (jspb.Message.getFieldWithDefault(this, 14, 0));
};


/**
 * @param {!proto.ei.UILocation} value
 * @return {!proto.ei.InGameMail} returns this
 */
proto.ei.InGameMail.prototype.setAppLink = function(value) {
  return jspb.Message.setField(this, 14, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.InGameMail} returns this
 */
proto.ei.InGameMail.prototype.clearAppLink = function() {
  return jspb.Message.setField(this, 14, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.InGameMail.prototype.hasAppLink = function() {
  return jspb.Message.getField(this, 14) != null;
};


/**
 * optional string app_link_extra = 15;
 * @return {string}
 */
proto.ei.InGameMail.prototype.getAppLinkExtra = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 15, ""));
};


/**
 * @param {string} value
 * @return {!proto.ei.InGameMail} returns this
 */
proto.ei.InGameMail.prototype.setAppLinkExtra = function(value) {
  return jspb.Message.setField(this, 15, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.InGameMail} returns this
 */
proto.ei.InGameMail.prototype.clearAppLinkExtra = function() {
  return jspb.Message.setField(this, 15, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.InGameMail.prototype.hasAppLinkExtra = function() {
  return jspb.Message.getField(this, 15) != null;
};


/**
 * optional DLCItem image = 16;
 * @return {?proto.ei.DLCItem}
 */
proto.ei.InGameMail.prototype.getImage = function() {
  return /** @type{?proto.ei.DLCItem} */ (
    jspb.Message.getWrapperField(this, proto.ei.DLCItem, 16));
};


/**
 * @param {?proto.ei.DLCItem|undefined} value
 * @return {!proto.ei.InGameMail} returns this
*/
proto.ei.InGameMail.prototype.setImage = function(value) {
  return jspb.Message.setWrapperField(this, 16, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.ei.InGameMail} returns this
 */
proto.ei.InGameMail.prototype.clearImage = function() {
  return this.setImage(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.InGameMail.prototype.hasImage = function() {
  return jspb.Message.getField(this, 16) != null;
};


/**
 * optional double image_width = 21;
 * @return {number}
 */
proto.ei.InGameMail.prototype.getImageWidth = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 21, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.ei.InGameMail} returns this
 */
proto.ei.InGameMail.prototype.setImageWidth = function(value) {
  return jspb.Message.setField(this, 21, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.InGameMail} returns this
 */
proto.ei.InGameMail.prototype.clearImageWidth = function() {
  return jspb.Message.setField(this, 21, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.InGameMail.prototype.hasImageWidth = function() {
  return jspb.Message.getField(this, 21) != null;
};


/**
 * optional double image_height = 22;
 * @return {number}
 */
proto.ei.InGameMail.prototype.getImageHeight = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 22, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.ei.InGameMail} returns this
 */
proto.ei.InGameMail.prototype.setImageHeight = function(value) {
  return jspb.Message.setField(this, 22, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.InGameMail} returns this
 */
proto.ei.InGameMail.prototype.clearImageHeight = function() {
  return jspb.Message.setField(this, 22, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.InGameMail.prototype.hasImageHeight = function() {
  return jspb.Message.getField(this, 22) != null;
};


/**
 * optional uint32 platform = 7;
 * @return {number}
 */
proto.ei.InGameMail.prototype.getPlatform = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {number} value
 * @return {!proto.ei.InGameMail} returns this
 */
proto.ei.InGameMail.prototype.setPlatform = function(value) {
  return jspb.Message.setField(this, 7, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.InGameMail} returns this
 */
proto.ei.InGameMail.prototype.clearPlatform = function() {
  return jspb.Message.setField(this, 7, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.InGameMail.prototype.hasPlatform = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * repeated string builds = 9;
 * @return {!Array<string>}
 */
proto.ei.InGameMail.prototype.getBuildsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 9));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.ei.InGameMail} returns this
 */
proto.ei.InGameMail.prototype.setBuildsList = function(value) {
  return jspb.Message.setField(this, 9, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.ei.InGameMail} returns this
 */
proto.ei.InGameMail.prototype.addBuilds = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 9, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.ei.InGameMail} returns this
 */
proto.ei.InGameMail.prototype.clearBuildsList = function() {
  return this.setBuildsList([]);
};


/**
 * optional uint32 min_client_version = 10;
 * @return {number}
 */
proto.ei.InGameMail.prototype.getMinClientVersion = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 10, 0));
};


/**
 * @param {number} value
 * @return {!proto.ei.InGameMail} returns this
 */
proto.ei.InGameMail.prototype.setMinClientVersion = function(value) {
  return jspb.Message.setField(this, 10, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.InGameMail} returns this
 */
proto.ei.InGameMail.prototype.clearMinClientVersion = function() {
  return jspb.Message.setField(this, 10, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.InGameMail.prototype.hasMinClientVersion = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * optional uint32 max_client_version = 12;
 * @return {number}
 */
proto.ei.InGameMail.prototype.getMaxClientVersion = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 12, 0));
};


/**
 * @param {number} value
 * @return {!proto.ei.InGameMail} returns this
 */
proto.ei.InGameMail.prototype.setMaxClientVersion = function(value) {
  return jspb.Message.setField(this, 12, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.InGameMail} returns this
 */
proto.ei.InGameMail.prototype.clearMaxClientVersion = function() {
  return jspb.Message.setField(this, 12, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.InGameMail.prototype.hasMaxClientVersion = function() {
  return jspb.Message.getField(this, 12) != null;
};


/**
 * optional double min_soul_eggs = 11;
 * @return {number}
 */
proto.ei.InGameMail.prototype.getMinSoulEggs = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 11, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.ei.InGameMail} returns this
 */
proto.ei.InGameMail.prototype.setMinSoulEggs = function(value) {
  return jspb.Message.setField(this, 11, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.InGameMail} returns this
 */
proto.ei.InGameMail.prototype.clearMinSoulEggs = function() {
  return jspb.Message.setField(this, 11, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.InGameMail.prototype.hasMinSoulEggs = function() {
  return jspb.Message.getField(this, 11) != null;
};


/**
 * optional double max_soul_eggs = 29;
 * @return {number}
 */
proto.ei.InGameMail.prototype.getMaxSoulEggs = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 29, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.ei.InGameMail} returns this
 */
proto.ei.InGameMail.prototype.setMaxSoulEggs = function(value) {
  return jspb.Message.setField(this, 29, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.InGameMail} returns this
 */
proto.ei.InGameMail.prototype.clearMaxSoulEggs = function() {
  return jspb.Message.setField(this, 29, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.InGameMail.prototype.hasMaxSoulEggs = function() {
  return jspb.Message.getField(this, 29) != null;
};


/**
 * optional double min_mystical_bonus = 13;
 * @return {number}
 */
proto.ei.InGameMail.prototype.getMinMysticalBonus = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 13, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.ei.InGameMail} returns this
 */
proto.ei.InGameMail.prototype.setMinMysticalBonus = function(value) {
  return jspb.Message.setField(this, 13, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.InGameMail} returns this
 */
proto.ei.InGameMail.prototype.clearMinMysticalBonus = function() {
  return jspb.Message.setField(this, 13, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.InGameMail.prototype.hasMinMysticalBonus = function() {
  return jspb.Message.getField(this, 13) != null;
};


/**
 * optional UserType user_type = 17;
 * @return {!proto.ei.UserType}
 */
proto.ei.InGameMail.prototype.getUserType = function() {
  return /** @type {!proto.ei.UserType} */ (jspb.Message.getFieldWithDefault(this, 17, 0));
};


/**
 * @param {!proto.ei.UserType} value
 * @return {!proto.ei.InGameMail} returns this
 */
proto.ei.InGameMail.prototype.setUserType = function(value) {
  return jspb.Message.setField(this, 17, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.InGameMail} returns this
 */
proto.ei.InGameMail.prototype.clearUserType = function() {
  return jspb.Message.setField(this, 17, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.InGameMail.prototype.hasUserType = function() {
  return jspb.Message.getField(this, 17) != null;
};


/**
 * optional uint32 min_piggy_breaks = 20;
 * @return {number}
 */
proto.ei.InGameMail.prototype.getMinPiggyBreaks = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 20, 0));
};


/**
 * @param {number} value
 * @return {!proto.ei.InGameMail} returns this
 */
proto.ei.InGameMail.prototype.setMinPiggyBreaks = function(value) {
  return jspb.Message.setField(this, 20, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.InGameMail} returns this
 */
proto.ei.InGameMail.prototype.clearMinPiggyBreaks = function() {
  return jspb.Message.setField(this, 20, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.InGameMail.prototype.hasMinPiggyBreaks = function() {
  return jspb.Message.getField(this, 20) != null;
};


/**
 * optional double gold_tip = 6;
 * @return {number}
 */
proto.ei.InGameMail.prototype.getGoldTip = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 6, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.ei.InGameMail} returns this
 */
proto.ei.InGameMail.prototype.setGoldTip = function(value) {
  return jspb.Message.setField(this, 6, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.InGameMail} returns this
 */
proto.ei.InGameMail.prototype.clearGoldTip = function() {
  return jspb.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.InGameMail.prototype.hasGoldTip = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional bool tip = 23;
 * @return {boolean}
 */
proto.ei.InGameMail.prototype.getTip = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 23, false));
};


/**
 * @param {boolean} value
 * @return {!proto.ei.InGameMail} returns this
 */
proto.ei.InGameMail.prototype.setTip = function(value) {
  return jspb.Message.setField(this, 23, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.InGameMail} returns this
 */
proto.ei.InGameMail.prototype.clearTip = function() {
  return jspb.Message.setField(this, 23, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.InGameMail.prototype.hasTip = function() {
  return jspb.Message.getField(this, 23) != null;
};


/**
 * optional uint32 priority = 27;
 * @return {number}
 */
proto.ei.InGameMail.prototype.getPriority = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 27, 0));
};


/**
 * @param {number} value
 * @return {!proto.ei.InGameMail} returns this
 */
proto.ei.InGameMail.prototype.setPriority = function(value) {
  return jspb.Message.setField(this, 27, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.InGameMail} returns this
 */
proto.ei.InGameMail.prototype.clearPriority = function() {
  return jspb.Message.setField(this, 27, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.InGameMail.prototype.hasPriority = function() {
  return jspb.Message.getField(this, 27) != null;
};


/**
 * optional double min_days_since_last_tip = 24;
 * @return {number}
 */
proto.ei.InGameMail.prototype.getMinDaysSinceLastTip = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 24, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.ei.InGameMail} returns this
 */
proto.ei.InGameMail.prototype.setMinDaysSinceLastTip = function(value) {
  return jspb.Message.setField(this, 24, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.InGameMail} returns this
 */
proto.ei.InGameMail.prototype.clearMinDaysSinceLastTip = function() {
  return jspb.Message.setField(this, 24, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.InGameMail.prototype.hasMinDaysSinceLastTip = function() {
  return jspb.Message.getField(this, 24) != null;
};


/**
 * optional uint32 max_retries = 25;
 * @return {number}
 */
proto.ei.InGameMail.prototype.getMaxRetries = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 25, 0));
};


/**
 * @param {number} value
 * @return {!proto.ei.InGameMail} returns this
 */
proto.ei.InGameMail.prototype.setMaxRetries = function(value) {
  return jspb.Message.setField(this, 25, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.InGameMail} returns this
 */
proto.ei.InGameMail.prototype.clearMaxRetries = function() {
  return jspb.Message.setField(this, 25, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.InGameMail.prototype.hasMaxRetries = function() {
  return jspb.Message.getField(this, 25) != null;
};


/**
 * optional double days_until_retry = 26;
 * @return {number}
 */
proto.ei.InGameMail.prototype.getDaysUntilRetry = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 26, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.ei.InGameMail} returns this
 */
proto.ei.InGameMail.prototype.setDaysUntilRetry = function(value) {
  return jspb.Message.setField(this, 26, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.InGameMail} returns this
 */
proto.ei.InGameMail.prototype.clearDaysUntilRetry = function() {
  return jspb.Message.setField(this, 26, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.InGameMail.prototype.hasDaysUntilRetry = function() {
  return jspb.Message.getField(this, 26) != null;
};


/**
 * optional string category = 28;
 * @return {string}
 */
proto.ei.InGameMail.prototype.getCategory = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 28, ""));
};


/**
 * @param {string} value
 * @return {!proto.ei.InGameMail} returns this
 */
proto.ei.InGameMail.prototype.setCategory = function(value) {
  return jspb.Message.setField(this, 28, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.InGameMail} returns this
 */
proto.ei.InGameMail.prototype.clearCategory = function() {
  return jspb.Message.setField(this, 28, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.InGameMail.prototype.hasCategory = function() {
  return jspb.Message.getField(this, 28) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.ei.MailDB.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ei.MailDB.prototype.toObject = function(opt_includeInstance) {
  return proto.ei.MailDB.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ei.MailDB} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.MailDB.toObject = function(includeInstance, msg) {
  var f, obj = {
    mailList: jspb.Message.toObjectList(msg.getMailList(),
    proto.ei.InGameMail.toObject, includeInstance),
    tipsDbData: msg.getTipsDbData_asB64(),
    tipsChecksum: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ei.MailDB}
 */
proto.ei.MailDB.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ei.MailDB;
  return proto.ei.MailDB.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ei.MailDB} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ei.MailDB}
 */
proto.ei.MailDB.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.ei.InGameMail;
      reader.readMessage(value,proto.ei.InGameMail.deserializeBinaryFromReader);
      msg.addMail(value);
      break;
    case 2:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setTipsDbData(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setTipsChecksum(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ei.MailDB.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ei.MailDB.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ei.MailDB} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.MailDB.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMailList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.ei.InGameMail.serializeBinaryToWriter
    );
  }
  f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeBytes(
      2,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * repeated InGameMail mail = 1;
 * @return {!Array<!proto.ei.InGameMail>}
 */
proto.ei.MailDB.prototype.getMailList = function() {
  return /** @type{!Array<!proto.ei.InGameMail>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.ei.InGameMail, 1));
};


/**
 * @param {!Array<!proto.ei.InGameMail>} value
 * @return {!proto.ei.MailDB} returns this
*/
proto.ei.MailDB.prototype.setMailList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.ei.InGameMail=} opt_value
 * @param {number=} opt_index
 * @return {!proto.ei.InGameMail}
 */
proto.ei.MailDB.prototype.addMail = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.ei.InGameMail, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.ei.MailDB} returns this
 */
proto.ei.MailDB.prototype.clearMailList = function() {
  return this.setMailList([]);
};


/**
 * optional bytes tips_db_data = 2;
 * @return {string}
 */
proto.ei.MailDB.prototype.getTipsDbData = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * optional bytes tips_db_data = 2;
 * This is a type-conversion wrapper around `getTipsDbData()`
 * @return {string}
 */
proto.ei.MailDB.prototype.getTipsDbData_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getTipsDbData()));
};


/**
 * optional bytes tips_db_data = 2;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getTipsDbData()`
 * @return {!Uint8Array}
 */
proto.ei.MailDB.prototype.getTipsDbData_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getTipsDbData()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.ei.MailDB} returns this
 */
proto.ei.MailDB.prototype.setTipsDbData = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.MailDB} returns this
 */
proto.ei.MailDB.prototype.clearTipsDbData = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.MailDB.prototype.hasTipsDbData = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string tips_checksum = 3;
 * @return {string}
 */
proto.ei.MailDB.prototype.getTipsChecksum = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.ei.MailDB} returns this
 */
proto.ei.MailDB.prototype.setTipsChecksum = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.MailDB} returns this
 */
proto.ei.MailDB.prototype.clearTipsChecksum = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.MailDB.prototype.hasTipsChecksum = function() {
  return jspb.Message.getField(this, 3) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.ei.TipsDB.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ei.TipsDB.prototype.toObject = function(opt_includeInstance) {
  return proto.ei.TipsDB.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ei.TipsDB} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.TipsDB.toObject = function(includeInstance, msg) {
  var f, obj = {
    tipsList: jspb.Message.toObjectList(msg.getTipsList(),
    proto.ei.InGameMail.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ei.TipsDB}
 */
proto.ei.TipsDB.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ei.TipsDB;
  return proto.ei.TipsDB.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ei.TipsDB} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ei.TipsDB}
 */
proto.ei.TipsDB.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.ei.InGameMail;
      reader.readMessage(value,proto.ei.InGameMail.deserializeBinaryFromReader);
      msg.addTips(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ei.TipsDB.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ei.TipsDB.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ei.TipsDB} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.TipsDB.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTipsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.ei.InGameMail.serializeBinaryToWriter
    );
  }
};


/**
 * repeated InGameMail tips = 1;
 * @return {!Array<!proto.ei.InGameMail>}
 */
proto.ei.TipsDB.prototype.getTipsList = function() {
  return /** @type{!Array<!proto.ei.InGameMail>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.ei.InGameMail, 1));
};


/**
 * @param {!Array<!proto.ei.InGameMail>} value
 * @return {!proto.ei.TipsDB} returns this
*/
proto.ei.TipsDB.prototype.setTipsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.ei.InGameMail=} opt_value
 * @param {number=} opt_index
 * @return {!proto.ei.InGameMail}
 */
proto.ei.TipsDB.prototype.addTips = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.ei.InGameMail, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.ei.TipsDB} returns this
 */
proto.ei.TipsDB.prototype.clearTipsList = function() {
  return this.setTipsList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.ei.MailState.repeatedFields_ = [1,2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ei.MailState.prototype.toObject = function(opt_includeInstance) {
  return proto.ei.MailState.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ei.MailState} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.MailState.toObject = function(includeInstance, msg) {
  var f, obj = {
    readMailIdsList: (f = jspb.Message.getRepeatedField(msg, 1)) == null ? undefined : f,
    tipsStatesList: jspb.Message.toObjectList(msg.getTipsStatesList(),
    proto.ei.MailState.TipState.toObject, includeInstance),
    tipsChecksum: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ei.MailState}
 */
proto.ei.MailState.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ei.MailState;
  return proto.ei.MailState.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ei.MailState} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ei.MailState}
 */
proto.ei.MailState.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.addReadMailIds(value);
      break;
    case 2:
      var value = new proto.ei.MailState.TipState;
      reader.readMessage(value,proto.ei.MailState.TipState.deserializeBinaryFromReader);
      msg.addTipsStates(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setTipsChecksum(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ei.MailState.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ei.MailState.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ei.MailState} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.MailState.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getReadMailIdsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      1,
      f
    );
  }
  f = message.getTipsStatesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.ei.MailState.TipState.serializeBinaryToWriter
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeString(
      3,
      f
    );
  }
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ei.MailState.TipState.prototype.toObject = function(opt_includeInstance) {
  return proto.ei.MailState.TipState.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ei.MailState.TipState} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.MailState.TipState.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    reads: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,
    timeRead: (f = jspb.Message.getOptionalFloatingPointField(msg, 3)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ei.MailState.TipState}
 */
proto.ei.MailState.TipState.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ei.MailState.TipState;
  return proto.ei.MailState.TipState.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ei.MailState.TipState} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ei.MailState.TipState}
 */
proto.ei.MailState.TipState.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setReads(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setTimeRead(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ei.MailState.TipState.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ei.MailState.TipState.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ei.MailState.TipState} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.MailState.TipState.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeUint32(
      2,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeDouble(
      3,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.ei.MailState.TipState.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.ei.MailState.TipState} returns this
 */
proto.ei.MailState.TipState.prototype.setId = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.MailState.TipState} returns this
 */
proto.ei.MailState.TipState.prototype.clearId = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.MailState.TipState.prototype.hasId = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional uint32 reads = 2;
 * @return {number}
 */
proto.ei.MailState.TipState.prototype.getReads = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.ei.MailState.TipState} returns this
 */
proto.ei.MailState.TipState.prototype.setReads = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.MailState.TipState} returns this
 */
proto.ei.MailState.TipState.prototype.clearReads = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.MailState.TipState.prototype.hasReads = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional double time_read = 3;
 * @return {number}
 */
proto.ei.MailState.TipState.prototype.getTimeRead = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 3, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.ei.MailState.TipState} returns this
 */
proto.ei.MailState.TipState.prototype.setTimeRead = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.MailState.TipState} returns this
 */
proto.ei.MailState.TipState.prototype.clearTimeRead = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.MailState.TipState.prototype.hasTimeRead = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * repeated string read_mail_ids = 1;
 * @return {!Array<string>}
 */
proto.ei.MailState.prototype.getReadMailIdsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 1));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.ei.MailState} returns this
 */
proto.ei.MailState.prototype.setReadMailIdsList = function(value) {
  return jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.ei.MailState} returns this
 */
proto.ei.MailState.prototype.addReadMailIds = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.ei.MailState} returns this
 */
proto.ei.MailState.prototype.clearReadMailIdsList = function() {
  return this.setReadMailIdsList([]);
};


/**
 * repeated TipState tips_states = 2;
 * @return {!Array<!proto.ei.MailState.TipState>}
 */
proto.ei.MailState.prototype.getTipsStatesList = function() {
  return /** @type{!Array<!proto.ei.MailState.TipState>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.ei.MailState.TipState, 2));
};


/**
 * @param {!Array<!proto.ei.MailState.TipState>} value
 * @return {!proto.ei.MailState} returns this
*/
proto.ei.MailState.prototype.setTipsStatesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.ei.MailState.TipState=} opt_value
 * @param {number=} opt_index
 * @return {!proto.ei.MailState.TipState}
 */
proto.ei.MailState.prototype.addTipsStates = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.ei.MailState.TipState, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.ei.MailState} returns this
 */
proto.ei.MailState.prototype.clearTipsStatesList = function() {
  return this.setTipsStatesList([]);
};


/**
 * optional string tips_checksum = 3;
 * @return {string}
 */
proto.ei.MailState.prototype.getTipsChecksum = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.ei.MailState} returns this
 */
proto.ei.MailState.prototype.setTipsChecksum = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.MailState} returns this
 */
proto.ei.MailState.prototype.clearTipsChecksum = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.MailState.prototype.hasTipsChecksum = function() {
  return jspb.Message.getField(this, 3) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.ei.PeriodicalsResponse.repeatedFields_ = [8,4,9,10];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ei.PeriodicalsResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.ei.PeriodicalsResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ei.PeriodicalsResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.PeriodicalsResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    sales: (f = msg.getSales()) && proto.ei.SalesInfo.toObject(includeInstance, f),
    events: (f = msg.getEvents()) && proto.ei.EggIncCurrentEvents.toObject(includeInstance, f),
    contracts: (f = msg.getContracts()) && proto.ei.ContractsResponse.toObject(includeInstance, f),
    evaluationsList: jspb.Message.toObjectList(msg.getEvaluationsList(),
    proto.ei.ContractEvaluation.toObject, includeInstance),
    giftsList: jspb.Message.toObjectList(msg.getGiftsList(),
    proto.ei.ServerGift.toObject, includeInstance),
    artifactCasesList: jspb.Message.toObjectList(msg.getArtifactCasesList(),
    proto.ei.CompleteMissionResponse.toObject, includeInstance),
    liveConfig: (f = msg.getLiveConfig()) && proto.ei.LiveConfig.toObject(includeInstance, f),
    mailBag: (f = msg.getMailBag()) && proto.ei.MailDB.toObject(includeInstance, f),
    contractPlayerInfo: (f = msg.getContractPlayerInfo()) && proto.ei.ContractPlayerInfo.toObject(includeInstance, f),
    showcaseRoyaltiesList: jspb.Message.toObjectList(msg.getShowcaseRoyaltiesList(),
    proto.ei.PeriodicalsResponse.RoyaltyInfo.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ei.PeriodicalsResponse}
 */
proto.ei.PeriodicalsResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ei.PeriodicalsResponse;
  return proto.ei.PeriodicalsResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ei.PeriodicalsResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ei.PeriodicalsResponse}
 */
proto.ei.PeriodicalsResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.ei.SalesInfo;
      reader.readMessage(value,proto.ei.SalesInfo.deserializeBinaryFromReader);
      msg.setSales(value);
      break;
    case 2:
      var value = new proto.ei.EggIncCurrentEvents;
      reader.readMessage(value,proto.ei.EggIncCurrentEvents.deserializeBinaryFromReader);
      msg.setEvents(value);
      break;
    case 3:
      var value = new proto.ei.ContractsResponse;
      reader.readMessage(value,proto.ei.ContractsResponse.deserializeBinaryFromReader);
      msg.setContracts(value);
      break;
    case 8:
      var value = new proto.ei.ContractEvaluation;
      reader.readMessage(value,proto.ei.ContractEvaluation.deserializeBinaryFromReader);
      msg.addEvaluations(value);
      break;
    case 4:
      var value = new proto.ei.ServerGift;
      reader.readMessage(value,proto.ei.ServerGift.deserializeBinaryFromReader);
      msg.addGifts(value);
      break;
    case 9:
      var value = new proto.ei.CompleteMissionResponse;
      reader.readMessage(value,proto.ei.CompleteMissionResponse.deserializeBinaryFromReader);
      msg.addArtifactCases(value);
      break;
    case 5:
      var value = new proto.ei.LiveConfig;
      reader.readMessage(value,proto.ei.LiveConfig.deserializeBinaryFromReader);
      msg.setLiveConfig(value);
      break;
    case 6:
      var value = new proto.ei.MailDB;
      reader.readMessage(value,proto.ei.MailDB.deserializeBinaryFromReader);
      msg.setMailBag(value);
      break;
    case 7:
      var value = new proto.ei.ContractPlayerInfo;
      reader.readMessage(value,proto.ei.ContractPlayerInfo.deserializeBinaryFromReader);
      msg.setContractPlayerInfo(value);
      break;
    case 10:
      var value = new proto.ei.PeriodicalsResponse.RoyaltyInfo;
      reader.readMessage(value,proto.ei.PeriodicalsResponse.RoyaltyInfo.deserializeBinaryFromReader);
      msg.addShowcaseRoyalties(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ei.PeriodicalsResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ei.PeriodicalsResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ei.PeriodicalsResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.PeriodicalsResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSales();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.ei.SalesInfo.serializeBinaryToWriter
    );
  }
  f = message.getEvents();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.ei.EggIncCurrentEvents.serializeBinaryToWriter
    );
  }
  f = message.getContracts();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.ei.ContractsResponse.serializeBinaryToWriter
    );
  }
  f = message.getEvaluationsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      8,
      f,
      proto.ei.ContractEvaluation.serializeBinaryToWriter
    );
  }
  f = message.getGiftsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      4,
      f,
      proto.ei.ServerGift.serializeBinaryToWriter
    );
  }
  f = message.getArtifactCasesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      9,
      f,
      proto.ei.CompleteMissionResponse.serializeBinaryToWriter
    );
  }
  f = message.getLiveConfig();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.ei.LiveConfig.serializeBinaryToWriter
    );
  }
  f = message.getMailBag();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      proto.ei.MailDB.serializeBinaryToWriter
    );
  }
  f = message.getContractPlayerInfo();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      proto.ei.ContractPlayerInfo.serializeBinaryToWriter
    );
  }
  f = message.getShowcaseRoyaltiesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      10,
      f,
      proto.ei.PeriodicalsResponse.RoyaltyInfo.serializeBinaryToWriter
    );
  }
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ei.PeriodicalsResponse.RoyaltyInfo.prototype.toObject = function(opt_includeInstance) {
  return proto.ei.PeriodicalsResponse.RoyaltyInfo.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ei.PeriodicalsResponse.RoyaltyInfo} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.PeriodicalsResponse.RoyaltyInfo.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    amount: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ei.PeriodicalsResponse.RoyaltyInfo}
 */
proto.ei.PeriodicalsResponse.RoyaltyInfo.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ei.PeriodicalsResponse.RoyaltyInfo;
  return proto.ei.PeriodicalsResponse.RoyaltyInfo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ei.PeriodicalsResponse.RoyaltyInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ei.PeriodicalsResponse.RoyaltyInfo}
 */
proto.ei.PeriodicalsResponse.RoyaltyInfo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setAmount(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ei.PeriodicalsResponse.RoyaltyInfo.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ei.PeriodicalsResponse.RoyaltyInfo.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ei.PeriodicalsResponse.RoyaltyInfo} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.PeriodicalsResponse.RoyaltyInfo.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeUint32(
      2,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.ei.PeriodicalsResponse.RoyaltyInfo.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.ei.PeriodicalsResponse.RoyaltyInfo} returns this
 */
proto.ei.PeriodicalsResponse.RoyaltyInfo.prototype.setId = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.PeriodicalsResponse.RoyaltyInfo} returns this
 */
proto.ei.PeriodicalsResponse.RoyaltyInfo.prototype.clearId = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.PeriodicalsResponse.RoyaltyInfo.prototype.hasId = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional uint32 amount = 2;
 * @return {number}
 */
proto.ei.PeriodicalsResponse.RoyaltyInfo.prototype.getAmount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.ei.PeriodicalsResponse.RoyaltyInfo} returns this
 */
proto.ei.PeriodicalsResponse.RoyaltyInfo.prototype.setAmount = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.PeriodicalsResponse.RoyaltyInfo} returns this
 */
proto.ei.PeriodicalsResponse.RoyaltyInfo.prototype.clearAmount = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.PeriodicalsResponse.RoyaltyInfo.prototype.hasAmount = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional SalesInfo sales = 1;
 * @return {?proto.ei.SalesInfo}
 */
proto.ei.PeriodicalsResponse.prototype.getSales = function() {
  return /** @type{?proto.ei.SalesInfo} */ (
    jspb.Message.getWrapperField(this, proto.ei.SalesInfo, 1));
};


/**
 * @param {?proto.ei.SalesInfo|undefined} value
 * @return {!proto.ei.PeriodicalsResponse} returns this
*/
proto.ei.PeriodicalsResponse.prototype.setSales = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.ei.PeriodicalsResponse} returns this
 */
proto.ei.PeriodicalsResponse.prototype.clearSales = function() {
  return this.setSales(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.PeriodicalsResponse.prototype.hasSales = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional EggIncCurrentEvents events = 2;
 * @return {?proto.ei.EggIncCurrentEvents}
 */
proto.ei.PeriodicalsResponse.prototype.getEvents = function() {
  return /** @type{?proto.ei.EggIncCurrentEvents} */ (
    jspb.Message.getWrapperField(this, proto.ei.EggIncCurrentEvents, 2));
};


/**
 * @param {?proto.ei.EggIncCurrentEvents|undefined} value
 * @return {!proto.ei.PeriodicalsResponse} returns this
*/
proto.ei.PeriodicalsResponse.prototype.setEvents = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.ei.PeriodicalsResponse} returns this
 */
proto.ei.PeriodicalsResponse.prototype.clearEvents = function() {
  return this.setEvents(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.PeriodicalsResponse.prototype.hasEvents = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional ContractsResponse contracts = 3;
 * @return {?proto.ei.ContractsResponse}
 */
proto.ei.PeriodicalsResponse.prototype.getContracts = function() {
  return /** @type{?proto.ei.ContractsResponse} */ (
    jspb.Message.getWrapperField(this, proto.ei.ContractsResponse, 3));
};


/**
 * @param {?proto.ei.ContractsResponse|undefined} value
 * @return {!proto.ei.PeriodicalsResponse} returns this
*/
proto.ei.PeriodicalsResponse.prototype.setContracts = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.ei.PeriodicalsResponse} returns this
 */
proto.ei.PeriodicalsResponse.prototype.clearContracts = function() {
  return this.setContracts(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.PeriodicalsResponse.prototype.hasContracts = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * repeated ContractEvaluation evaluations = 8;
 * @return {!Array<!proto.ei.ContractEvaluation>}
 */
proto.ei.PeriodicalsResponse.prototype.getEvaluationsList = function() {
  return /** @type{!Array<!proto.ei.ContractEvaluation>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.ei.ContractEvaluation, 8));
};


/**
 * @param {!Array<!proto.ei.ContractEvaluation>} value
 * @return {!proto.ei.PeriodicalsResponse} returns this
*/
proto.ei.PeriodicalsResponse.prototype.setEvaluationsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 8, value);
};


/**
 * @param {!proto.ei.ContractEvaluation=} opt_value
 * @param {number=} opt_index
 * @return {!proto.ei.ContractEvaluation}
 */
proto.ei.PeriodicalsResponse.prototype.addEvaluations = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 8, opt_value, proto.ei.ContractEvaluation, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.ei.PeriodicalsResponse} returns this
 */
proto.ei.PeriodicalsResponse.prototype.clearEvaluationsList = function() {
  return this.setEvaluationsList([]);
};


/**
 * repeated ServerGift gifts = 4;
 * @return {!Array<!proto.ei.ServerGift>}
 */
proto.ei.PeriodicalsResponse.prototype.getGiftsList = function() {
  return /** @type{!Array<!proto.ei.ServerGift>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.ei.ServerGift, 4));
};


/**
 * @param {!Array<!proto.ei.ServerGift>} value
 * @return {!proto.ei.PeriodicalsResponse} returns this
*/
proto.ei.PeriodicalsResponse.prototype.setGiftsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 4, value);
};


/**
 * @param {!proto.ei.ServerGift=} opt_value
 * @param {number=} opt_index
 * @return {!proto.ei.ServerGift}
 */
proto.ei.PeriodicalsResponse.prototype.addGifts = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 4, opt_value, proto.ei.ServerGift, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.ei.PeriodicalsResponse} returns this
 */
proto.ei.PeriodicalsResponse.prototype.clearGiftsList = function() {
  return this.setGiftsList([]);
};


/**
 * repeated CompleteMissionResponse artifact_cases = 9;
 * @return {!Array<!proto.ei.CompleteMissionResponse>}
 */
proto.ei.PeriodicalsResponse.prototype.getArtifactCasesList = function() {
  return /** @type{!Array<!proto.ei.CompleteMissionResponse>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.ei.CompleteMissionResponse, 9));
};


/**
 * @param {!Array<!proto.ei.CompleteMissionResponse>} value
 * @return {!proto.ei.PeriodicalsResponse} returns this
*/
proto.ei.PeriodicalsResponse.prototype.setArtifactCasesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 9, value);
};


/**
 * @param {!proto.ei.CompleteMissionResponse=} opt_value
 * @param {number=} opt_index
 * @return {!proto.ei.CompleteMissionResponse}
 */
proto.ei.PeriodicalsResponse.prototype.addArtifactCases = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 9, opt_value, proto.ei.CompleteMissionResponse, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.ei.PeriodicalsResponse} returns this
 */
proto.ei.PeriodicalsResponse.prototype.clearArtifactCasesList = function() {
  return this.setArtifactCasesList([]);
};


/**
 * optional LiveConfig live_config = 5;
 * @return {?proto.ei.LiveConfig}
 */
proto.ei.PeriodicalsResponse.prototype.getLiveConfig = function() {
  return /** @type{?proto.ei.LiveConfig} */ (
    jspb.Message.getWrapperField(this, proto.ei.LiveConfig, 5));
};


/**
 * @param {?proto.ei.LiveConfig|undefined} value
 * @return {!proto.ei.PeriodicalsResponse} returns this
*/
proto.ei.PeriodicalsResponse.prototype.setLiveConfig = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.ei.PeriodicalsResponse} returns this
 */
proto.ei.PeriodicalsResponse.prototype.clearLiveConfig = function() {
  return this.setLiveConfig(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.PeriodicalsResponse.prototype.hasLiveConfig = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional MailDB mail_bag = 6;
 * @return {?proto.ei.MailDB}
 */
proto.ei.PeriodicalsResponse.prototype.getMailBag = function() {
  return /** @type{?proto.ei.MailDB} */ (
    jspb.Message.getWrapperField(this, proto.ei.MailDB, 6));
};


/**
 * @param {?proto.ei.MailDB|undefined} value
 * @return {!proto.ei.PeriodicalsResponse} returns this
*/
proto.ei.PeriodicalsResponse.prototype.setMailBag = function(value) {
  return jspb.Message.setWrapperField(this, 6, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.ei.PeriodicalsResponse} returns this
 */
proto.ei.PeriodicalsResponse.prototype.clearMailBag = function() {
  return this.setMailBag(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.PeriodicalsResponse.prototype.hasMailBag = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional ContractPlayerInfo contract_player_info = 7;
 * @return {?proto.ei.ContractPlayerInfo}
 */
proto.ei.PeriodicalsResponse.prototype.getContractPlayerInfo = function() {
  return /** @type{?proto.ei.ContractPlayerInfo} */ (
    jspb.Message.getWrapperField(this, proto.ei.ContractPlayerInfo, 7));
};


/**
 * @param {?proto.ei.ContractPlayerInfo|undefined} value
 * @return {!proto.ei.PeriodicalsResponse} returns this
*/
proto.ei.PeriodicalsResponse.prototype.setContractPlayerInfo = function(value) {
  return jspb.Message.setWrapperField(this, 7, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.ei.PeriodicalsResponse} returns this
 */
proto.ei.PeriodicalsResponse.prototype.clearContractPlayerInfo = function() {
  return this.setContractPlayerInfo(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.PeriodicalsResponse.prototype.hasContractPlayerInfo = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * repeated RoyaltyInfo showcase_royalties = 10;
 * @return {!Array<!proto.ei.PeriodicalsResponse.RoyaltyInfo>}
 */
proto.ei.PeriodicalsResponse.prototype.getShowcaseRoyaltiesList = function() {
  return /** @type{!Array<!proto.ei.PeriodicalsResponse.RoyaltyInfo>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.ei.PeriodicalsResponse.RoyaltyInfo, 10));
};


/**
 * @param {!Array<!proto.ei.PeriodicalsResponse.RoyaltyInfo>} value
 * @return {!proto.ei.PeriodicalsResponse} returns this
*/
proto.ei.PeriodicalsResponse.prototype.setShowcaseRoyaltiesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 10, value);
};


/**
 * @param {!proto.ei.PeriodicalsResponse.RoyaltyInfo=} opt_value
 * @param {number=} opt_index
 * @return {!proto.ei.PeriodicalsResponse.RoyaltyInfo}
 */
proto.ei.PeriodicalsResponse.prototype.addShowcaseRoyalties = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 10, opt_value, proto.ei.PeriodicalsResponse.RoyaltyInfo, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.ei.PeriodicalsResponse} returns this
 */
proto.ei.PeriodicalsResponse.prototype.clearShowcaseRoyaltiesList = function() {
  return this.setShowcaseRoyaltiesList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ei.GetPeriodicalsRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.ei.GetPeriodicalsRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ei.GetPeriodicalsRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.GetPeriodicalsRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    rinfo: (f = msg.getRinfo()) && proto.ei.BasicRequestInfo.toObject(includeInstance, f),
    userId: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    piggyFull: (f = jspb.Message.getBooleanField(msg, 2)) == null ? undefined : f,
    piggyFoundFull: (f = jspb.Message.getBooleanField(msg, 3)) == null ? undefined : f,
    secondsFullRealtime: (f = jspb.Message.getOptionalFloatingPointField(msg, 4)) == null ? undefined : f,
    secondsFullGametime: (f = jspb.Message.getOptionalFloatingPointField(msg, 5)) == null ? undefined : f,
    lostIncrements: (f = jspb.Message.getField(msg, 7)) == null ? undefined : f,
    soulEggs: (f = jspb.Message.getOptionalFloatingPointField(msg, 8)) == null ? undefined : f,
    mysticalEarningsMult: (f = jspb.Message.getOptionalFloatingPointField(msg, 13)) == null ? undefined : f,
    eop: (f = jspb.Message.getField(msg, 14)) == null ? undefined : f,
    contractsUnlocked: (f = jspb.Message.getBooleanField(msg, 15)) == null ? undefined : f,
    artifactsUnlocked: (f = jspb.Message.getBooleanField(msg, 16)) == null ? undefined : f,
    currentClientVersion: (f = jspb.Message.getField(msg, 10)) == null ? undefined : f,
    debug: (f = jspb.Message.getBooleanField(msg, 11)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ei.GetPeriodicalsRequest}
 */
proto.ei.GetPeriodicalsRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ei.GetPeriodicalsRequest;
  return proto.ei.GetPeriodicalsRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ei.GetPeriodicalsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ei.GetPeriodicalsRequest}
 */
proto.ei.GetPeriodicalsRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 12:
      var value = new proto.ei.BasicRequestInfo;
      reader.readMessage(value,proto.ei.BasicRequestInfo.deserializeBinaryFromReader);
      msg.setRinfo(value);
      break;
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserId(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setPiggyFull(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setPiggyFoundFull(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setSecondsFullRealtime(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setSecondsFullGametime(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setLostIncrements(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setSoulEggs(value);
      break;
    case 13:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setMysticalEarningsMult(value);
      break;
    case 14:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setEop(value);
      break;
    case 15:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setContractsUnlocked(value);
      break;
    case 16:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setArtifactsUnlocked(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setCurrentClientVersion(value);
      break;
    case 11:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setDebug(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ei.GetPeriodicalsRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ei.GetPeriodicalsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ei.GetPeriodicalsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.GetPeriodicalsRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRinfo();
  if (f != null) {
    writer.writeMessage(
      12,
      f,
      proto.ei.BasicRequestInfo.serializeBinaryToWriter
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeBool(
      2,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeBool(
      3,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeDouble(
      4,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeDouble(
      5,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 7));
  if (f != null) {
    writer.writeUint32(
      7,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 8));
  if (f != null) {
    writer.writeDouble(
      8,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 13));
  if (f != null) {
    writer.writeDouble(
      13,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 14));
  if (f != null) {
    writer.writeUint32(
      14,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 15));
  if (f != null) {
    writer.writeBool(
      15,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 16));
  if (f != null) {
    writer.writeBool(
      16,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 10));
  if (f != null) {
    writer.writeUint32(
      10,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 11));
  if (f != null) {
    writer.writeBool(
      11,
      f
    );
  }
};


/**
 * optional BasicRequestInfo rinfo = 12;
 * @return {?proto.ei.BasicRequestInfo}
 */
proto.ei.GetPeriodicalsRequest.prototype.getRinfo = function() {
  return /** @type{?proto.ei.BasicRequestInfo} */ (
    jspb.Message.getWrapperField(this, proto.ei.BasicRequestInfo, 12));
};


/**
 * @param {?proto.ei.BasicRequestInfo|undefined} value
 * @return {!proto.ei.GetPeriodicalsRequest} returns this
*/
proto.ei.GetPeriodicalsRequest.prototype.setRinfo = function(value) {
  return jspb.Message.setWrapperField(this, 12, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.ei.GetPeriodicalsRequest} returns this
 */
proto.ei.GetPeriodicalsRequest.prototype.clearRinfo = function() {
  return this.setRinfo(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.GetPeriodicalsRequest.prototype.hasRinfo = function() {
  return jspb.Message.getField(this, 12) != null;
};


/**
 * optional string user_id = 1;
 * @return {string}
 */
proto.ei.GetPeriodicalsRequest.prototype.getUserId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.ei.GetPeriodicalsRequest} returns this
 */
proto.ei.GetPeriodicalsRequest.prototype.setUserId = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.GetPeriodicalsRequest} returns this
 */
proto.ei.GetPeriodicalsRequest.prototype.clearUserId = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.GetPeriodicalsRequest.prototype.hasUserId = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional bool piggy_full = 2;
 * @return {boolean}
 */
proto.ei.GetPeriodicalsRequest.prototype.getPiggyFull = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));
};


/**
 * @param {boolean} value
 * @return {!proto.ei.GetPeriodicalsRequest} returns this
 */
proto.ei.GetPeriodicalsRequest.prototype.setPiggyFull = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.GetPeriodicalsRequest} returns this
 */
proto.ei.GetPeriodicalsRequest.prototype.clearPiggyFull = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.GetPeriodicalsRequest.prototype.hasPiggyFull = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional bool piggy_found_full = 3;
 * @return {boolean}
 */
proto.ei.GetPeriodicalsRequest.prototype.getPiggyFoundFull = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 3, false));
};


/**
 * @param {boolean} value
 * @return {!proto.ei.GetPeriodicalsRequest} returns this
 */
proto.ei.GetPeriodicalsRequest.prototype.setPiggyFoundFull = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.GetPeriodicalsRequest} returns this
 */
proto.ei.GetPeriodicalsRequest.prototype.clearPiggyFoundFull = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.GetPeriodicalsRequest.prototype.hasPiggyFoundFull = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional double seconds_full_realtime = 4;
 * @return {number}
 */
proto.ei.GetPeriodicalsRequest.prototype.getSecondsFullRealtime = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 4, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.ei.GetPeriodicalsRequest} returns this
 */
proto.ei.GetPeriodicalsRequest.prototype.setSecondsFullRealtime = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.GetPeriodicalsRequest} returns this
 */
proto.ei.GetPeriodicalsRequest.prototype.clearSecondsFullRealtime = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.GetPeriodicalsRequest.prototype.hasSecondsFullRealtime = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional double seconds_full_gametime = 5;
 * @return {number}
 */
proto.ei.GetPeriodicalsRequest.prototype.getSecondsFullGametime = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 5, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.ei.GetPeriodicalsRequest} returns this
 */
proto.ei.GetPeriodicalsRequest.prototype.setSecondsFullGametime = function(value) {
  return jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.GetPeriodicalsRequest} returns this
 */
proto.ei.GetPeriodicalsRequest.prototype.clearSecondsFullGametime = function() {
  return jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.GetPeriodicalsRequest.prototype.hasSecondsFullGametime = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional uint32 lost_increments = 7;
 * @return {number}
 */
proto.ei.GetPeriodicalsRequest.prototype.getLostIncrements = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {number} value
 * @return {!proto.ei.GetPeriodicalsRequest} returns this
 */
proto.ei.GetPeriodicalsRequest.prototype.setLostIncrements = function(value) {
  return jspb.Message.setField(this, 7, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.GetPeriodicalsRequest} returns this
 */
proto.ei.GetPeriodicalsRequest.prototype.clearLostIncrements = function() {
  return jspb.Message.setField(this, 7, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.GetPeriodicalsRequest.prototype.hasLostIncrements = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional double soul_eggs = 8;
 * @return {number}
 */
proto.ei.GetPeriodicalsRequest.prototype.getSoulEggs = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 8, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.ei.GetPeriodicalsRequest} returns this
 */
proto.ei.GetPeriodicalsRequest.prototype.setSoulEggs = function(value) {
  return jspb.Message.setField(this, 8, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.GetPeriodicalsRequest} returns this
 */
proto.ei.GetPeriodicalsRequest.prototype.clearSoulEggs = function() {
  return jspb.Message.setField(this, 8, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.GetPeriodicalsRequest.prototype.hasSoulEggs = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional double mystical_earnings_mult = 13;
 * @return {number}
 */
proto.ei.GetPeriodicalsRequest.prototype.getMysticalEarningsMult = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 13, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.ei.GetPeriodicalsRequest} returns this
 */
proto.ei.GetPeriodicalsRequest.prototype.setMysticalEarningsMult = function(value) {
  return jspb.Message.setField(this, 13, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.GetPeriodicalsRequest} returns this
 */
proto.ei.GetPeriodicalsRequest.prototype.clearMysticalEarningsMult = function() {
  return jspb.Message.setField(this, 13, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.GetPeriodicalsRequest.prototype.hasMysticalEarningsMult = function() {
  return jspb.Message.getField(this, 13) != null;
};


/**
 * optional uint32 eop = 14;
 * @return {number}
 */
proto.ei.GetPeriodicalsRequest.prototype.getEop = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 14, 0));
};


/**
 * @param {number} value
 * @return {!proto.ei.GetPeriodicalsRequest} returns this
 */
proto.ei.GetPeriodicalsRequest.prototype.setEop = function(value) {
  return jspb.Message.setField(this, 14, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.GetPeriodicalsRequest} returns this
 */
proto.ei.GetPeriodicalsRequest.prototype.clearEop = function() {
  return jspb.Message.setField(this, 14, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.GetPeriodicalsRequest.prototype.hasEop = function() {
  return jspb.Message.getField(this, 14) != null;
};


/**
 * optional bool contracts_unlocked = 15;
 * @return {boolean}
 */
proto.ei.GetPeriodicalsRequest.prototype.getContractsUnlocked = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 15, false));
};


/**
 * @param {boolean} value
 * @return {!proto.ei.GetPeriodicalsRequest} returns this
 */
proto.ei.GetPeriodicalsRequest.prototype.setContractsUnlocked = function(value) {
  return jspb.Message.setField(this, 15, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.GetPeriodicalsRequest} returns this
 */
proto.ei.GetPeriodicalsRequest.prototype.clearContractsUnlocked = function() {
  return jspb.Message.setField(this, 15, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.GetPeriodicalsRequest.prototype.hasContractsUnlocked = function() {
  return jspb.Message.getField(this, 15) != null;
};


/**
 * optional bool artifacts_unlocked = 16;
 * @return {boolean}
 */
proto.ei.GetPeriodicalsRequest.prototype.getArtifactsUnlocked = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 16, false));
};


/**
 * @param {boolean} value
 * @return {!proto.ei.GetPeriodicalsRequest} returns this
 */
proto.ei.GetPeriodicalsRequest.prototype.setArtifactsUnlocked = function(value) {
  return jspb.Message.setField(this, 16, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.GetPeriodicalsRequest} returns this
 */
proto.ei.GetPeriodicalsRequest.prototype.clearArtifactsUnlocked = function() {
  return jspb.Message.setField(this, 16, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.GetPeriodicalsRequest.prototype.hasArtifactsUnlocked = function() {
  return jspb.Message.getField(this, 16) != null;
};


/**
 * optional uint32 current_client_version = 10;
 * @return {number}
 */
proto.ei.GetPeriodicalsRequest.prototype.getCurrentClientVersion = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 10, 0));
};


/**
 * @param {number} value
 * @return {!proto.ei.GetPeriodicalsRequest} returns this
 */
proto.ei.GetPeriodicalsRequest.prototype.setCurrentClientVersion = function(value) {
  return jspb.Message.setField(this, 10, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.GetPeriodicalsRequest} returns this
 */
proto.ei.GetPeriodicalsRequest.prototype.clearCurrentClientVersion = function() {
  return jspb.Message.setField(this, 10, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.GetPeriodicalsRequest.prototype.hasCurrentClientVersion = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * optional bool debug = 11;
 * @return {boolean}
 */
proto.ei.GetPeriodicalsRequest.prototype.getDebug = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 11, false));
};


/**
 * @param {boolean} value
 * @return {!proto.ei.GetPeriodicalsRequest} returns this
 */
proto.ei.GetPeriodicalsRequest.prototype.setDebug = function(value) {
  return jspb.Message.setField(this, 11, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.GetPeriodicalsRequest} returns this
 */
proto.ei.GetPeriodicalsRequest.prototype.clearDebug = function() {
  return jspb.Message.setField(this, 11, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.GetPeriodicalsRequest.prototype.hasDebug = function() {
  return jspb.Message.getField(this, 11) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ei.ConfigRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.ei.ConfigRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ei.ConfigRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.ConfigRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    rinfo: (f = msg.getRinfo()) && proto.ei.BasicRequestInfo.toObject(includeInstance, f),
    soulEggs: (f = jspb.Message.getOptionalFloatingPointField(msg, 2)) == null ? undefined : f,
    contractsUnlocked: (f = jspb.Message.getBooleanField(msg, 5)) == null ? undefined : f,
    artifactsUnlocked: (f = jspb.Message.getBooleanField(msg, 3)) == null ? undefined : f,
    fuelTankUnlocked: (f = jspb.Message.getBooleanField(msg, 4)) == null ? undefined : f,
    proPermit: (f = jspb.Message.getBooleanField(msg, 6)) == null ? undefined : f,
    ultra: (f = jspb.Message.getBooleanField(msg, 7)) == null ? undefined : f,
    tipsChecksum: (f = jspb.Message.getField(msg, 8)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ei.ConfigRequest}
 */
proto.ei.ConfigRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ei.ConfigRequest;
  return proto.ei.ConfigRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ei.ConfigRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ei.ConfigRequest}
 */
proto.ei.ConfigRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.ei.BasicRequestInfo;
      reader.readMessage(value,proto.ei.BasicRequestInfo.deserializeBinaryFromReader);
      msg.setRinfo(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setSoulEggs(value);
      break;
    case 5:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setContractsUnlocked(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setArtifactsUnlocked(value);
      break;
    case 4:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setFuelTankUnlocked(value);
      break;
    case 6:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setProPermit(value);
      break;
    case 7:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setUltra(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setTipsChecksum(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ei.ConfigRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ei.ConfigRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ei.ConfigRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.ConfigRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRinfo();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.ei.BasicRequestInfo.serializeBinaryToWriter
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeDouble(
      2,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeBool(
      5,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeBool(
      3,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeBool(
      4,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeBool(
      6,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 7));
  if (f != null) {
    writer.writeBool(
      7,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 8));
  if (f != null) {
    writer.writeString(
      8,
      f
    );
  }
};


/**
 * optional BasicRequestInfo rinfo = 1;
 * @return {?proto.ei.BasicRequestInfo}
 */
proto.ei.ConfigRequest.prototype.getRinfo = function() {
  return /** @type{?proto.ei.BasicRequestInfo} */ (
    jspb.Message.getWrapperField(this, proto.ei.BasicRequestInfo, 1));
};


/**
 * @param {?proto.ei.BasicRequestInfo|undefined} value
 * @return {!proto.ei.ConfigRequest} returns this
*/
proto.ei.ConfigRequest.prototype.setRinfo = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.ei.ConfigRequest} returns this
 */
proto.ei.ConfigRequest.prototype.clearRinfo = function() {
  return this.setRinfo(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ConfigRequest.prototype.hasRinfo = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional double soul_eggs = 2;
 * @return {number}
 */
proto.ei.ConfigRequest.prototype.getSoulEggs = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 2, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.ei.ConfigRequest} returns this
 */
proto.ei.ConfigRequest.prototype.setSoulEggs = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.ConfigRequest} returns this
 */
proto.ei.ConfigRequest.prototype.clearSoulEggs = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ConfigRequest.prototype.hasSoulEggs = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional bool contracts_unlocked = 5;
 * @return {boolean}
 */
proto.ei.ConfigRequest.prototype.getContractsUnlocked = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 5, false));
};


/**
 * @param {boolean} value
 * @return {!proto.ei.ConfigRequest} returns this
 */
proto.ei.ConfigRequest.prototype.setContractsUnlocked = function(value) {
  return jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.ConfigRequest} returns this
 */
proto.ei.ConfigRequest.prototype.clearContractsUnlocked = function() {
  return jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ConfigRequest.prototype.hasContractsUnlocked = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional bool artifacts_unlocked = 3;
 * @return {boolean}
 */
proto.ei.ConfigRequest.prototype.getArtifactsUnlocked = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 3, false));
};


/**
 * @param {boolean} value
 * @return {!proto.ei.ConfigRequest} returns this
 */
proto.ei.ConfigRequest.prototype.setArtifactsUnlocked = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.ConfigRequest} returns this
 */
proto.ei.ConfigRequest.prototype.clearArtifactsUnlocked = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ConfigRequest.prototype.hasArtifactsUnlocked = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional bool fuel_tank_unlocked = 4;
 * @return {boolean}
 */
proto.ei.ConfigRequest.prototype.getFuelTankUnlocked = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 4, false));
};


/**
 * @param {boolean} value
 * @return {!proto.ei.ConfigRequest} returns this
 */
proto.ei.ConfigRequest.prototype.setFuelTankUnlocked = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.ConfigRequest} returns this
 */
proto.ei.ConfigRequest.prototype.clearFuelTankUnlocked = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ConfigRequest.prototype.hasFuelTankUnlocked = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional bool pro_permit = 6;
 * @return {boolean}
 */
proto.ei.ConfigRequest.prototype.getProPermit = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 6, false));
};


/**
 * @param {boolean} value
 * @return {!proto.ei.ConfigRequest} returns this
 */
proto.ei.ConfigRequest.prototype.setProPermit = function(value) {
  return jspb.Message.setField(this, 6, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.ConfigRequest} returns this
 */
proto.ei.ConfigRequest.prototype.clearProPermit = function() {
  return jspb.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ConfigRequest.prototype.hasProPermit = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional bool ultra = 7;
 * @return {boolean}
 */
proto.ei.ConfigRequest.prototype.getUltra = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 7, false));
};


/**
 * @param {boolean} value
 * @return {!proto.ei.ConfigRequest} returns this
 */
proto.ei.ConfigRequest.prototype.setUltra = function(value) {
  return jspb.Message.setField(this, 7, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.ConfigRequest} returns this
 */
proto.ei.ConfigRequest.prototype.clearUltra = function() {
  return jspb.Message.setField(this, 7, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ConfigRequest.prototype.hasUltra = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional string tips_checksum = 8;
 * @return {string}
 */
proto.ei.ConfigRequest.prototype.getTipsChecksum = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.ei.ConfigRequest} returns this
 */
proto.ei.ConfigRequest.prototype.setTipsChecksum = function(value) {
  return jspb.Message.setField(this, 8, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.ConfigRequest} returns this
 */
proto.ei.ConfigRequest.prototype.clearTipsChecksum = function() {
  return jspb.Message.setField(this, 8, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ConfigRequest.prototype.hasTipsChecksum = function() {
  return jspb.Message.getField(this, 8) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ei.ConfigResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.ei.ConfigResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ei.ConfigResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.ConfigResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    liveConfig: (f = msg.getLiveConfig()) && proto.ei.LiveConfig.toObject(includeInstance, f),
    mailBag: (f = msg.getMailBag()) && proto.ei.MailDB.toObject(includeInstance, f),
    dlcCatalog: (f = msg.getDlcCatalog()) && proto.ei.DLCCatalog.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ei.ConfigResponse}
 */
proto.ei.ConfigResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ei.ConfigResponse;
  return proto.ei.ConfigResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ei.ConfigResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ei.ConfigResponse}
 */
proto.ei.ConfigResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.ei.LiveConfig;
      reader.readMessage(value,proto.ei.LiveConfig.deserializeBinaryFromReader);
      msg.setLiveConfig(value);
      break;
    case 2:
      var value = new proto.ei.MailDB;
      reader.readMessage(value,proto.ei.MailDB.deserializeBinaryFromReader);
      msg.setMailBag(value);
      break;
    case 3:
      var value = new proto.ei.DLCCatalog;
      reader.readMessage(value,proto.ei.DLCCatalog.deserializeBinaryFromReader);
      msg.setDlcCatalog(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ei.ConfigResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ei.ConfigResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ei.ConfigResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.ConfigResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getLiveConfig();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.ei.LiveConfig.serializeBinaryToWriter
    );
  }
  f = message.getMailBag();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.ei.MailDB.serializeBinaryToWriter
    );
  }
  f = message.getDlcCatalog();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.ei.DLCCatalog.serializeBinaryToWriter
    );
  }
};


/**
 * optional LiveConfig live_config = 1;
 * @return {?proto.ei.LiveConfig}
 */
proto.ei.ConfigResponse.prototype.getLiveConfig = function() {
  return /** @type{?proto.ei.LiveConfig} */ (
    jspb.Message.getWrapperField(this, proto.ei.LiveConfig, 1));
};


/**
 * @param {?proto.ei.LiveConfig|undefined} value
 * @return {!proto.ei.ConfigResponse} returns this
*/
proto.ei.ConfigResponse.prototype.setLiveConfig = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.ei.ConfigResponse} returns this
 */
proto.ei.ConfigResponse.prototype.clearLiveConfig = function() {
  return this.setLiveConfig(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ConfigResponse.prototype.hasLiveConfig = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional MailDB mail_bag = 2;
 * @return {?proto.ei.MailDB}
 */
proto.ei.ConfigResponse.prototype.getMailBag = function() {
  return /** @type{?proto.ei.MailDB} */ (
    jspb.Message.getWrapperField(this, proto.ei.MailDB, 2));
};


/**
 * @param {?proto.ei.MailDB|undefined} value
 * @return {!proto.ei.ConfigResponse} returns this
*/
proto.ei.ConfigResponse.prototype.setMailBag = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.ei.ConfigResponse} returns this
 */
proto.ei.ConfigResponse.prototype.clearMailBag = function() {
  return this.setMailBag(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ConfigResponse.prototype.hasMailBag = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional DLCCatalog dlc_catalog = 3;
 * @return {?proto.ei.DLCCatalog}
 */
proto.ei.ConfigResponse.prototype.getDlcCatalog = function() {
  return /** @type{?proto.ei.DLCCatalog} */ (
    jspb.Message.getWrapperField(this, proto.ei.DLCCatalog, 3));
};


/**
 * @param {?proto.ei.DLCCatalog|undefined} value
 * @return {!proto.ei.ConfigResponse} returns this
*/
proto.ei.ConfigResponse.prototype.setDlcCatalog = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.ei.ConfigResponse} returns this
 */
proto.ei.ConfigResponse.prototype.clearDlcCatalog = function() {
  return this.setDlcCatalog(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ConfigResponse.prototype.hasDlcCatalog = function() {
  return jspb.Message.getField(this, 3) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ei.AdAttributionRawData.prototype.toObject = function(opt_includeInstance) {
  return proto.ei.AdAttributionRawData.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ei.AdAttributionRawData} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.AdAttributionRawData.toObject = function(includeInstance, msg) {
  var f, obj = {
    deviceAdId: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    userId: (f = jspb.Message.getField(msg, 4)) == null ? undefined : f,
    adNetwork: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,
    jsonData: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ei.AdAttributionRawData}
 */
proto.ei.AdAttributionRawData.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ei.AdAttributionRawData;
  return proto.ei.AdAttributionRawData.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ei.AdAttributionRawData} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ei.AdAttributionRawData}
 */
proto.ei.AdAttributionRawData.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setDeviceAdId(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setAdNetwork(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setJsonData(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ei.AdAttributionRawData.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ei.AdAttributionRawData.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ei.AdAttributionRawData} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.AdAttributionRawData.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeString(
      4,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional string device_ad_id = 1;
 * @return {string}
 */
proto.ei.AdAttributionRawData.prototype.getDeviceAdId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.ei.AdAttributionRawData} returns this
 */
proto.ei.AdAttributionRawData.prototype.setDeviceAdId = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.AdAttributionRawData} returns this
 */
proto.ei.AdAttributionRawData.prototype.clearDeviceAdId = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.AdAttributionRawData.prototype.hasDeviceAdId = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string user_id = 4;
 * @return {string}
 */
proto.ei.AdAttributionRawData.prototype.getUserId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.ei.AdAttributionRawData} returns this
 */
proto.ei.AdAttributionRawData.prototype.setUserId = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.AdAttributionRawData} returns this
 */
proto.ei.AdAttributionRawData.prototype.clearUserId = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.AdAttributionRawData.prototype.hasUserId = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional string ad_network = 2;
 * @return {string}
 */
proto.ei.AdAttributionRawData.prototype.getAdNetwork = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.ei.AdAttributionRawData} returns this
 */
proto.ei.AdAttributionRawData.prototype.setAdNetwork = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.AdAttributionRawData} returns this
 */
proto.ei.AdAttributionRawData.prototype.clearAdNetwork = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.AdAttributionRawData.prototype.hasAdNetwork = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string json_data = 3;
 * @return {string}
 */
proto.ei.AdAttributionRawData.prototype.getJsonData = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.ei.AdAttributionRawData} returns this
 */
proto.ei.AdAttributionRawData.prototype.setJsonData = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.AdAttributionRawData} returns this
 */
proto.ei.AdAttributionRawData.prototype.clearJsonData = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.AdAttributionRawData.prototype.hasJsonData = function() {
  return jspb.Message.getField(this, 3) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ei.AdAttributionRow.prototype.toObject = function(opt_includeInstance) {
  return proto.ei.AdAttributionRow.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ei.AdAttributionRow} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.AdAttributionRow.toObject = function(includeInstance, msg) {
  var f, obj = {
    userId: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    adId: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,
    adNetwork: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f,
    campaign: (f = jspb.Message.getField(msg, 4)) == null ? undefined : f,
    keyword: (f = jspb.Message.getField(msg, 5)) == null ? undefined : f,
    extra: (f = jspb.Message.getField(msg, 6)) == null ? undefined : f,
    clickDate: (f = jspb.Message.getOptionalFloatingPointField(msg, 7)) == null ? undefined : f,
    downloadDate: (f = jspb.Message.getOptionalFloatingPointField(msg, 8)) == null ? undefined : f,
    approxTime: (f = jspb.Message.getOptionalFloatingPointField(msg, 9)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ei.AdAttributionRow}
 */
proto.ei.AdAttributionRow.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ei.AdAttributionRow;
  return proto.ei.AdAttributionRow.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ei.AdAttributionRow} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ei.AdAttributionRow}
 */
proto.ei.AdAttributionRow.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setAdId(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setAdNetwork(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setCampaign(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setKeyword(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setExtra(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setClickDate(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setDownloadDate(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setApproxTime(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ei.AdAttributionRow.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ei.AdAttributionRow.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ei.AdAttributionRow} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.AdAttributionRow.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeString(
      3,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeString(
      4,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeString(
      5,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeString(
      6,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 7));
  if (f != null) {
    writer.writeFloat(
      7,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 8));
  if (f != null) {
    writer.writeFloat(
      8,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 9));
  if (f != null) {
    writer.writeFloat(
      9,
      f
    );
  }
};


/**
 * optional string user_id = 1;
 * @return {string}
 */
proto.ei.AdAttributionRow.prototype.getUserId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.ei.AdAttributionRow} returns this
 */
proto.ei.AdAttributionRow.prototype.setUserId = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.AdAttributionRow} returns this
 */
proto.ei.AdAttributionRow.prototype.clearUserId = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.AdAttributionRow.prototype.hasUserId = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string ad_id = 2;
 * @return {string}
 */
proto.ei.AdAttributionRow.prototype.getAdId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.ei.AdAttributionRow} returns this
 */
proto.ei.AdAttributionRow.prototype.setAdId = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.AdAttributionRow} returns this
 */
proto.ei.AdAttributionRow.prototype.clearAdId = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.AdAttributionRow.prototype.hasAdId = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string ad_network = 3;
 * @return {string}
 */
proto.ei.AdAttributionRow.prototype.getAdNetwork = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.ei.AdAttributionRow} returns this
 */
proto.ei.AdAttributionRow.prototype.setAdNetwork = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.AdAttributionRow} returns this
 */
proto.ei.AdAttributionRow.prototype.clearAdNetwork = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.AdAttributionRow.prototype.hasAdNetwork = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional string campaign = 4;
 * @return {string}
 */
proto.ei.AdAttributionRow.prototype.getCampaign = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.ei.AdAttributionRow} returns this
 */
proto.ei.AdAttributionRow.prototype.setCampaign = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.AdAttributionRow} returns this
 */
proto.ei.AdAttributionRow.prototype.clearCampaign = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.AdAttributionRow.prototype.hasCampaign = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional string keyword = 5;
 * @return {string}
 */
proto.ei.AdAttributionRow.prototype.getKeyword = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.ei.AdAttributionRow} returns this
 */
proto.ei.AdAttributionRow.prototype.setKeyword = function(value) {
  return jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.AdAttributionRow} returns this
 */
proto.ei.AdAttributionRow.prototype.clearKeyword = function() {
  return jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.AdAttributionRow.prototype.hasKeyword = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional string extra = 6;
 * @return {string}
 */
proto.ei.AdAttributionRow.prototype.getExtra = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.ei.AdAttributionRow} returns this
 */
proto.ei.AdAttributionRow.prototype.setExtra = function(value) {
  return jspb.Message.setField(this, 6, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.AdAttributionRow} returns this
 */
proto.ei.AdAttributionRow.prototype.clearExtra = function() {
  return jspb.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.AdAttributionRow.prototype.hasExtra = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional float click_date = 7;
 * @return {number}
 */
proto.ei.AdAttributionRow.prototype.getClickDate = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 7, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.ei.AdAttributionRow} returns this
 */
proto.ei.AdAttributionRow.prototype.setClickDate = function(value) {
  return jspb.Message.setField(this, 7, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.AdAttributionRow} returns this
 */
proto.ei.AdAttributionRow.prototype.clearClickDate = function() {
  return jspb.Message.setField(this, 7, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.AdAttributionRow.prototype.hasClickDate = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional float download_date = 8;
 * @return {number}
 */
proto.ei.AdAttributionRow.prototype.getDownloadDate = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 8, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.ei.AdAttributionRow} returns this
 */
proto.ei.AdAttributionRow.prototype.setDownloadDate = function(value) {
  return jspb.Message.setField(this, 8, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.AdAttributionRow} returns this
 */
proto.ei.AdAttributionRow.prototype.clearDownloadDate = function() {
  return jspb.Message.setField(this, 8, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.AdAttributionRow.prototype.hasDownloadDate = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional float approx_time = 9;
 * @return {number}
 */
proto.ei.AdAttributionRow.prototype.getApproxTime = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 9, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.ei.AdAttributionRow} returns this
 */
proto.ei.AdAttributionRow.prototype.setApproxTime = function(value) {
  return jspb.Message.setField(this, 9, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.AdAttributionRow} returns this
 */
proto.ei.AdAttributionRow.prototype.clearApproxTime = function() {
  return jspb.Message.setField(this, 9, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.AdAttributionRow.prototype.hasApproxTime = function() {
  return jspb.Message.getField(this, 9) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ei.AdAttributionInfo.prototype.toObject = function(opt_includeInstance) {
  return proto.ei.AdAttributionInfo.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ei.AdAttributionInfo} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.AdAttributionInfo.toObject = function(includeInstance, msg) {
  var f, obj = {
    deviceAdId: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    networkName: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,
    attribution: (f = jspb.Message.getBooleanField(msg, 3)) == null ? undefined : f,
    orgName: (f = jspb.Message.getField(msg, 4)) == null ? undefined : f,
    orgId: (f = jspb.Message.getField(msg, 5)) == null ? undefined : f,
    campaignName: (f = jspb.Message.getField(msg, 6)) == null ? undefined : f,
    campaignId: (f = jspb.Message.getField(msg, 7)) == null ? undefined : f,
    clickDate: (f = jspb.Message.getField(msg, 8)) == null ? undefined : f,
    conversionDate: (f = jspb.Message.getField(msg, 9)) == null ? undefined : f,
    conversionType: (f = jspb.Message.getField(msg, 10)) == null ? undefined : f,
    geo: (f = jspb.Message.getField(msg, 11)) == null ? undefined : f,
    adgroupName: (f = jspb.Message.getField(msg, 12)) == null ? undefined : f,
    adgroupId: (f = jspb.Message.getField(msg, 13)) == null ? undefined : f,
    keyword: (f = jspb.Message.getField(msg, 14)) == null ? undefined : f,
    keywordId: (f = jspb.Message.getField(msg, 15)) == null ? undefined : f,
    keywordExtra: (f = jspb.Message.getField(msg, 16)) == null ? undefined : f,
    creativesetName: (f = jspb.Message.getField(msg, 17)) == null ? undefined : f,
    creativesetId: (f = jspb.Message.getField(msg, 18)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ei.AdAttributionInfo}
 */
proto.ei.AdAttributionInfo.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ei.AdAttributionInfo;
  return proto.ei.AdAttributionInfo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ei.AdAttributionInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ei.AdAttributionInfo}
 */
proto.ei.AdAttributionInfo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setDeviceAdId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setNetworkName(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setAttribution(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setOrgName(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setOrgId(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setCampaignName(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setCampaignId(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setClickDate(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setConversionDate(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.setConversionType(value);
      break;
    case 11:
      var value = /** @type {string} */ (reader.readString());
      msg.setGeo(value);
      break;
    case 12:
      var value = /** @type {string} */ (reader.readString());
      msg.setAdgroupName(value);
      break;
    case 13:
      var value = /** @type {string} */ (reader.readString());
      msg.setAdgroupId(value);
      break;
    case 14:
      var value = /** @type {string} */ (reader.readString());
      msg.setKeyword(value);
      break;
    case 15:
      var value = /** @type {string} */ (reader.readString());
      msg.setKeywordId(value);
      break;
    case 16:
      var value = /** @type {string} */ (reader.readString());
      msg.setKeywordExtra(value);
      break;
    case 17:
      var value = /** @type {string} */ (reader.readString());
      msg.setCreativesetName(value);
      break;
    case 18:
      var value = /** @type {string} */ (reader.readString());
      msg.setCreativesetId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ei.AdAttributionInfo.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ei.AdAttributionInfo.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ei.AdAttributionInfo} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.AdAttributionInfo.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeBool(
      3,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeString(
      4,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeString(
      5,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeString(
      6,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 7));
  if (f != null) {
    writer.writeString(
      7,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 8));
  if (f != null) {
    writer.writeString(
      8,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 9));
  if (f != null) {
    writer.writeString(
      9,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 10));
  if (f != null) {
    writer.writeString(
      10,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 11));
  if (f != null) {
    writer.writeString(
      11,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 12));
  if (f != null) {
    writer.writeString(
      12,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 13));
  if (f != null) {
    writer.writeString(
      13,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 14));
  if (f != null) {
    writer.writeString(
      14,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 15));
  if (f != null) {
    writer.writeString(
      15,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 16));
  if (f != null) {
    writer.writeString(
      16,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 17));
  if (f != null) {
    writer.writeString(
      17,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 18));
  if (f != null) {
    writer.writeString(
      18,
      f
    );
  }
};


/**
 * optional string device_ad_id = 1;
 * @return {string}
 */
proto.ei.AdAttributionInfo.prototype.getDeviceAdId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.ei.AdAttributionInfo} returns this
 */
proto.ei.AdAttributionInfo.prototype.setDeviceAdId = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.AdAttributionInfo} returns this
 */
proto.ei.AdAttributionInfo.prototype.clearDeviceAdId = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.AdAttributionInfo.prototype.hasDeviceAdId = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string network_name = 2;
 * @return {string}
 */
proto.ei.AdAttributionInfo.prototype.getNetworkName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.ei.AdAttributionInfo} returns this
 */
proto.ei.AdAttributionInfo.prototype.setNetworkName = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.AdAttributionInfo} returns this
 */
proto.ei.AdAttributionInfo.prototype.clearNetworkName = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.AdAttributionInfo.prototype.hasNetworkName = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional bool attribution = 3;
 * @return {boolean}
 */
proto.ei.AdAttributionInfo.prototype.getAttribution = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 3, false));
};


/**
 * @param {boolean} value
 * @return {!proto.ei.AdAttributionInfo} returns this
 */
proto.ei.AdAttributionInfo.prototype.setAttribution = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.AdAttributionInfo} returns this
 */
proto.ei.AdAttributionInfo.prototype.clearAttribution = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.AdAttributionInfo.prototype.hasAttribution = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional string org_name = 4;
 * @return {string}
 */
proto.ei.AdAttributionInfo.prototype.getOrgName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.ei.AdAttributionInfo} returns this
 */
proto.ei.AdAttributionInfo.prototype.setOrgName = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.AdAttributionInfo} returns this
 */
proto.ei.AdAttributionInfo.prototype.clearOrgName = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.AdAttributionInfo.prototype.hasOrgName = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional string org_id = 5;
 * @return {string}
 */
proto.ei.AdAttributionInfo.prototype.getOrgId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.ei.AdAttributionInfo} returns this
 */
proto.ei.AdAttributionInfo.prototype.setOrgId = function(value) {
  return jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.AdAttributionInfo} returns this
 */
proto.ei.AdAttributionInfo.prototype.clearOrgId = function() {
  return jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.AdAttributionInfo.prototype.hasOrgId = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional string campaign_name = 6;
 * @return {string}
 */
proto.ei.AdAttributionInfo.prototype.getCampaignName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.ei.AdAttributionInfo} returns this
 */
proto.ei.AdAttributionInfo.prototype.setCampaignName = function(value) {
  return jspb.Message.setField(this, 6, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.AdAttributionInfo} returns this
 */
proto.ei.AdAttributionInfo.prototype.clearCampaignName = function() {
  return jspb.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.AdAttributionInfo.prototype.hasCampaignName = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional string campaign_id = 7;
 * @return {string}
 */
proto.ei.AdAttributionInfo.prototype.getCampaignId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.ei.AdAttributionInfo} returns this
 */
proto.ei.AdAttributionInfo.prototype.setCampaignId = function(value) {
  return jspb.Message.setField(this, 7, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.AdAttributionInfo} returns this
 */
proto.ei.AdAttributionInfo.prototype.clearCampaignId = function() {
  return jspb.Message.setField(this, 7, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.AdAttributionInfo.prototype.hasCampaignId = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional string click_date = 8;
 * @return {string}
 */
proto.ei.AdAttributionInfo.prototype.getClickDate = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.ei.AdAttributionInfo} returns this
 */
proto.ei.AdAttributionInfo.prototype.setClickDate = function(value) {
  return jspb.Message.setField(this, 8, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.AdAttributionInfo} returns this
 */
proto.ei.AdAttributionInfo.prototype.clearClickDate = function() {
  return jspb.Message.setField(this, 8, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.AdAttributionInfo.prototype.hasClickDate = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional string conversion_date = 9;
 * @return {string}
 */
proto.ei.AdAttributionInfo.prototype.getConversionDate = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.ei.AdAttributionInfo} returns this
 */
proto.ei.AdAttributionInfo.prototype.setConversionDate = function(value) {
  return jspb.Message.setField(this, 9, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.AdAttributionInfo} returns this
 */
proto.ei.AdAttributionInfo.prototype.clearConversionDate = function() {
  return jspb.Message.setField(this, 9, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.AdAttributionInfo.prototype.hasConversionDate = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional string conversion_type = 10;
 * @return {string}
 */
proto.ei.AdAttributionInfo.prototype.getConversionType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/**
 * @param {string} value
 * @return {!proto.ei.AdAttributionInfo} returns this
 */
proto.ei.AdAttributionInfo.prototype.setConversionType = function(value) {
  return jspb.Message.setField(this, 10, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.AdAttributionInfo} returns this
 */
proto.ei.AdAttributionInfo.prototype.clearConversionType = function() {
  return jspb.Message.setField(this, 10, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.AdAttributionInfo.prototype.hasConversionType = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * optional string geo = 11;
 * @return {string}
 */
proto.ei.AdAttributionInfo.prototype.getGeo = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 11, ""));
};


/**
 * @param {string} value
 * @return {!proto.ei.AdAttributionInfo} returns this
 */
proto.ei.AdAttributionInfo.prototype.setGeo = function(value) {
  return jspb.Message.setField(this, 11, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.AdAttributionInfo} returns this
 */
proto.ei.AdAttributionInfo.prototype.clearGeo = function() {
  return jspb.Message.setField(this, 11, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.AdAttributionInfo.prototype.hasGeo = function() {
  return jspb.Message.getField(this, 11) != null;
};


/**
 * optional string adgroup_name = 12;
 * @return {string}
 */
proto.ei.AdAttributionInfo.prototype.getAdgroupName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 12, ""));
};


/**
 * @param {string} value
 * @return {!proto.ei.AdAttributionInfo} returns this
 */
proto.ei.AdAttributionInfo.prototype.setAdgroupName = function(value) {
  return jspb.Message.setField(this, 12, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.AdAttributionInfo} returns this
 */
proto.ei.AdAttributionInfo.prototype.clearAdgroupName = function() {
  return jspb.Message.setField(this, 12, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.AdAttributionInfo.prototype.hasAdgroupName = function() {
  return jspb.Message.getField(this, 12) != null;
};


/**
 * optional string adgroup_id = 13;
 * @return {string}
 */
proto.ei.AdAttributionInfo.prototype.getAdgroupId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 13, ""));
};


/**
 * @param {string} value
 * @return {!proto.ei.AdAttributionInfo} returns this
 */
proto.ei.AdAttributionInfo.prototype.setAdgroupId = function(value) {
  return jspb.Message.setField(this, 13, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.AdAttributionInfo} returns this
 */
proto.ei.AdAttributionInfo.prototype.clearAdgroupId = function() {
  return jspb.Message.setField(this, 13, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.AdAttributionInfo.prototype.hasAdgroupId = function() {
  return jspb.Message.getField(this, 13) != null;
};


/**
 * optional string keyword = 14;
 * @return {string}
 */
proto.ei.AdAttributionInfo.prototype.getKeyword = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 14, ""));
};


/**
 * @param {string} value
 * @return {!proto.ei.AdAttributionInfo} returns this
 */
proto.ei.AdAttributionInfo.prototype.setKeyword = function(value) {
  return jspb.Message.setField(this, 14, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.AdAttributionInfo} returns this
 */
proto.ei.AdAttributionInfo.prototype.clearKeyword = function() {
  return jspb.Message.setField(this, 14, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.AdAttributionInfo.prototype.hasKeyword = function() {
  return jspb.Message.getField(this, 14) != null;
};


/**
 * optional string keyword_id = 15;
 * @return {string}
 */
proto.ei.AdAttributionInfo.prototype.getKeywordId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 15, ""));
};


/**
 * @param {string} value
 * @return {!proto.ei.AdAttributionInfo} returns this
 */
proto.ei.AdAttributionInfo.prototype.setKeywordId = function(value) {
  return jspb.Message.setField(this, 15, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.AdAttributionInfo} returns this
 */
proto.ei.AdAttributionInfo.prototype.clearKeywordId = function() {
  return jspb.Message.setField(this, 15, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.AdAttributionInfo.prototype.hasKeywordId = function() {
  return jspb.Message.getField(this, 15) != null;
};


/**
 * optional string keyword_extra = 16;
 * @return {string}
 */
proto.ei.AdAttributionInfo.prototype.getKeywordExtra = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 16, ""));
};


/**
 * @param {string} value
 * @return {!proto.ei.AdAttributionInfo} returns this
 */
proto.ei.AdAttributionInfo.prototype.setKeywordExtra = function(value) {
  return jspb.Message.setField(this, 16, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.AdAttributionInfo} returns this
 */
proto.ei.AdAttributionInfo.prototype.clearKeywordExtra = function() {
  return jspb.Message.setField(this, 16, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.AdAttributionInfo.prototype.hasKeywordExtra = function() {
  return jspb.Message.getField(this, 16) != null;
};


/**
 * optional string creativeset_name = 17;
 * @return {string}
 */
proto.ei.AdAttributionInfo.prototype.getCreativesetName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 17, ""));
};


/**
 * @param {string} value
 * @return {!proto.ei.AdAttributionInfo} returns this
 */
proto.ei.AdAttributionInfo.prototype.setCreativesetName = function(value) {
  return jspb.Message.setField(this, 17, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.AdAttributionInfo} returns this
 */
proto.ei.AdAttributionInfo.prototype.clearCreativesetName = function() {
  return jspb.Message.setField(this, 17, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.AdAttributionInfo.prototype.hasCreativesetName = function() {
  return jspb.Message.getField(this, 17) != null;
};


/**
 * optional string creativeset_id = 18;
 * @return {string}
 */
proto.ei.AdAttributionInfo.prototype.getCreativesetId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 18, ""));
};


/**
 * @param {string} value
 * @return {!proto.ei.AdAttributionInfo} returns this
 */
proto.ei.AdAttributionInfo.prototype.setCreativesetId = function(value) {
  return jspb.Message.setField(this, 18, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.AdAttributionInfo} returns this
 */
proto.ei.AdAttributionInfo.prototype.clearCreativesetId = function() {
  return jspb.Message.setField(this, 18, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.AdAttributionInfo.prototype.hasCreativesetId = function() {
  return jspb.Message.getField(this, 18) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.ei.ArtifactsClientInfo.repeatedFields_ = [3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ei.ArtifactsClientInfo.prototype.toObject = function(opt_includeInstance) {
  return proto.ei.ArtifactsClientInfo.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ei.ArtifactsClientInfo} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.ArtifactsClientInfo.toObject = function(includeInstance, msg) {
  var f, obj = {
    missionCapacityMult: (f = jspb.Message.getOptionalFloatingPointField(msg, 1)) == null ? undefined : f,
    missionDurationMult: (f = jspb.Message.getOptionalFloatingPointField(msg, 2)) == null ? undefined : f,
    missionFtlDurationMult: (f = jspb.Message.getOptionalFloatingPointField(msg, 4)) == null ? undefined : f,
    launchCountsList: jspb.Message.toObjectList(msg.getLaunchCountsList(),
    proto.ei.ArtifactsClientInfo.LaunchCount.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ei.ArtifactsClientInfo}
 */
proto.ei.ArtifactsClientInfo.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ei.ArtifactsClientInfo;
  return proto.ei.ArtifactsClientInfo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ei.ArtifactsClientInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ei.ArtifactsClientInfo}
 */
proto.ei.ArtifactsClientInfo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setMissionCapacityMult(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setMissionDurationMult(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setMissionFtlDurationMult(value);
      break;
    case 3:
      var value = new proto.ei.ArtifactsClientInfo.LaunchCount;
      reader.readMessage(value,proto.ei.ArtifactsClientInfo.LaunchCount.deserializeBinaryFromReader);
      msg.addLaunchCounts(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ei.ArtifactsClientInfo.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ei.ArtifactsClientInfo.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ei.ArtifactsClientInfo} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.ArtifactsClientInfo.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {number} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeDouble(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeDouble(
      2,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeDouble(
      4,
      f
    );
  }
  f = message.getLaunchCountsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      proto.ei.ArtifactsClientInfo.LaunchCount.serializeBinaryToWriter
    );
  }
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ei.ArtifactsClientInfo.LaunchCount.prototype.toObject = function(opt_includeInstance) {
  return proto.ei.ArtifactsClientInfo.LaunchCount.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ei.ArtifactsClientInfo.LaunchCount} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.ArtifactsClientInfo.LaunchCount.toObject = function(includeInstance, msg) {
  var f, obj = {
    ship: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    numLaunches: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,
    launchPoints: (f = jspb.Message.getOptionalFloatingPointField(msg, 3)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ei.ArtifactsClientInfo.LaunchCount}
 */
proto.ei.ArtifactsClientInfo.LaunchCount.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ei.ArtifactsClientInfo.LaunchCount;
  return proto.ei.ArtifactsClientInfo.LaunchCount.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ei.ArtifactsClientInfo.LaunchCount} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ei.ArtifactsClientInfo.LaunchCount}
 */
proto.ei.ArtifactsClientInfo.LaunchCount.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.ei.MissionInfo.Spaceship} */ (reader.readEnum());
      msg.setShip(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setNumLaunches(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setLaunchPoints(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ei.ArtifactsClientInfo.LaunchCount.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ei.ArtifactsClientInfo.LaunchCount.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ei.ArtifactsClientInfo.LaunchCount} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.ArtifactsClientInfo.LaunchCount.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {!proto.ei.MissionInfo.Spaceship} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeUint32(
      2,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeDouble(
      3,
      f
    );
  }
};


/**
 * optional MissionInfo.Spaceship ship = 1;
 * @return {!proto.ei.MissionInfo.Spaceship}
 */
proto.ei.ArtifactsClientInfo.LaunchCount.prototype.getShip = function() {
  return /** @type {!proto.ei.MissionInfo.Spaceship} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.ei.MissionInfo.Spaceship} value
 * @return {!proto.ei.ArtifactsClientInfo.LaunchCount} returns this
 */
proto.ei.ArtifactsClientInfo.LaunchCount.prototype.setShip = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.ArtifactsClientInfo.LaunchCount} returns this
 */
proto.ei.ArtifactsClientInfo.LaunchCount.prototype.clearShip = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ArtifactsClientInfo.LaunchCount.prototype.hasShip = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional uint32 num_launches = 2;
 * @return {number}
 */
proto.ei.ArtifactsClientInfo.LaunchCount.prototype.getNumLaunches = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.ei.ArtifactsClientInfo.LaunchCount} returns this
 */
proto.ei.ArtifactsClientInfo.LaunchCount.prototype.setNumLaunches = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.ArtifactsClientInfo.LaunchCount} returns this
 */
proto.ei.ArtifactsClientInfo.LaunchCount.prototype.clearNumLaunches = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ArtifactsClientInfo.LaunchCount.prototype.hasNumLaunches = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional double launch_points = 3;
 * @return {number}
 */
proto.ei.ArtifactsClientInfo.LaunchCount.prototype.getLaunchPoints = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 3, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.ei.ArtifactsClientInfo.LaunchCount} returns this
 */
proto.ei.ArtifactsClientInfo.LaunchCount.prototype.setLaunchPoints = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.ArtifactsClientInfo.LaunchCount} returns this
 */
proto.ei.ArtifactsClientInfo.LaunchCount.prototype.clearLaunchPoints = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ArtifactsClientInfo.LaunchCount.prototype.hasLaunchPoints = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional double mission_capacity_mult = 1;
 * @return {number}
 */
proto.ei.ArtifactsClientInfo.prototype.getMissionCapacityMult = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 1, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.ei.ArtifactsClientInfo} returns this
 */
proto.ei.ArtifactsClientInfo.prototype.setMissionCapacityMult = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.ArtifactsClientInfo} returns this
 */
proto.ei.ArtifactsClientInfo.prototype.clearMissionCapacityMult = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ArtifactsClientInfo.prototype.hasMissionCapacityMult = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional double mission_duration_mult = 2;
 * @return {number}
 */
proto.ei.ArtifactsClientInfo.prototype.getMissionDurationMult = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 2, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.ei.ArtifactsClientInfo} returns this
 */
proto.ei.ArtifactsClientInfo.prototype.setMissionDurationMult = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.ArtifactsClientInfo} returns this
 */
proto.ei.ArtifactsClientInfo.prototype.clearMissionDurationMult = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ArtifactsClientInfo.prototype.hasMissionDurationMult = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional double mission_ftl_duration_mult = 4;
 * @return {number}
 */
proto.ei.ArtifactsClientInfo.prototype.getMissionFtlDurationMult = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 4, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.ei.ArtifactsClientInfo} returns this
 */
proto.ei.ArtifactsClientInfo.prototype.setMissionFtlDurationMult = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.ArtifactsClientInfo} returns this
 */
proto.ei.ArtifactsClientInfo.prototype.clearMissionFtlDurationMult = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ArtifactsClientInfo.prototype.hasMissionFtlDurationMult = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * repeated LaunchCount launch_counts = 3;
 * @return {!Array<!proto.ei.ArtifactsClientInfo.LaunchCount>}
 */
proto.ei.ArtifactsClientInfo.prototype.getLaunchCountsList = function() {
  return /** @type{!Array<!proto.ei.ArtifactsClientInfo.LaunchCount>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.ei.ArtifactsClientInfo.LaunchCount, 3));
};


/**
 * @param {!Array<!proto.ei.ArtifactsClientInfo.LaunchCount>} value
 * @return {!proto.ei.ArtifactsClientInfo} returns this
*/
proto.ei.ArtifactsClientInfo.prototype.setLaunchCountsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.ei.ArtifactsClientInfo.LaunchCount=} opt_value
 * @param {number=} opt_index
 * @return {!proto.ei.ArtifactsClientInfo.LaunchCount}
 */
proto.ei.ArtifactsClientInfo.prototype.addLaunchCounts = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.ei.ArtifactsClientInfo.LaunchCount, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.ei.ArtifactsClientInfo} returns this
 */
proto.ei.ArtifactsClientInfo.prototype.clearLaunchCountsList = function() {
  return this.setLaunchCountsList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.ei.MissionInfo.repeatedFields_ = [4];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ei.MissionInfo.prototype.toObject = function(opt_includeInstance) {
  return proto.ei.MissionInfo.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ei.MissionInfo} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.MissionInfo.toObject = function(includeInstance, msg) {
  var f, obj = {
    ship: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    status: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,
    durationType: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f,
    fuelList: jspb.Message.toObjectList(msg.getFuelList(),
    proto.ei.MissionInfo.Fuel.toObject, includeInstance),
    level: (f = jspb.Message.getField(msg, 12)) == null ? undefined : f,
    durationSeconds: (f = jspb.Message.getOptionalFloatingPointField(msg, 5)) == null ? undefined : f,
    capacity: (f = jspb.Message.getField(msg, 9)) == null ? undefined : f,
    qualityBump: (f = jspb.Message.getOptionalFloatingPointField(msg, 11)) == null ? undefined : f,
    targetArtifact: (f = jspb.Message.getField(msg, 13)) == null ? undefined : f,
    secondsRemaining: (f = jspb.Message.getOptionalFloatingPointField(msg, 6)) == null ? undefined : f,
    startTimeDerived: (f = jspb.Message.getOptionalFloatingPointField(msg, 8)) == null ? undefined : f,
    missionLog: (f = jspb.Message.getField(msg, 10)) == null ? undefined : f,
    identifier: (f = jspb.Message.getField(msg, 7)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ei.MissionInfo}
 */
proto.ei.MissionInfo.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ei.MissionInfo;
  return proto.ei.MissionInfo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ei.MissionInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ei.MissionInfo}
 */
proto.ei.MissionInfo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.ei.MissionInfo.Spaceship} */ (reader.readEnum());
      msg.setShip(value);
      break;
    case 2:
      var value = /** @type {!proto.ei.MissionInfo.Status} */ (reader.readEnum());
      msg.setStatus(value);
      break;
    case 3:
      var value = /** @type {!proto.ei.MissionInfo.DurationType} */ (reader.readEnum());
      msg.setDurationType(value);
      break;
    case 4:
      var value = new proto.ei.MissionInfo.Fuel;
      reader.readMessage(value,proto.ei.MissionInfo.Fuel.deserializeBinaryFromReader);
      msg.addFuel(value);
      break;
    case 12:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setLevel(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setDurationSeconds(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setCapacity(value);
      break;
    case 11:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setQualityBump(value);
      break;
    case 13:
      var value = /** @type {!proto.ei.ArtifactSpec.Name} */ (reader.readEnum());
      msg.setTargetArtifact(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setSecondsRemaining(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setStartTimeDerived(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.setMissionLog(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setIdentifier(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ei.MissionInfo.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ei.MissionInfo.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ei.MissionInfo} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.MissionInfo.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {!proto.ei.MissionInfo.Spaceship} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = /** @type {!proto.ei.MissionInfo.Status} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeEnum(
      2,
      f
    );
  }
  f = /** @type {!proto.ei.MissionInfo.DurationType} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeEnum(
      3,
      f
    );
  }
  f = message.getFuelList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      4,
      f,
      proto.ei.MissionInfo.Fuel.serializeBinaryToWriter
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 12));
  if (f != null) {
    writer.writeUint32(
      12,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeDouble(
      5,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 9));
  if (f != null) {
    writer.writeUint32(
      9,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 11));
  if (f != null) {
    writer.writeDouble(
      11,
      f
    );
  }
  f = /** @type {!proto.ei.ArtifactSpec.Name} */ (jspb.Message.getField(message, 13));
  if (f != null) {
    writer.writeEnum(
      13,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeDouble(
      6,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 8));
  if (f != null) {
    writer.writeDouble(
      8,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 10));
  if (f != null) {
    writer.writeString(
      10,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 7));
  if (f != null) {
    writer.writeString(
      7,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.ei.MissionInfo.Spaceship = {
  CHICKEN_ONE: 0,
  CHICKEN_NINE: 1,
  CHICKEN_HEAVY: 2,
  BCR: 3,
  MILLENIUM_CHICKEN: 4,
  CORELLIHEN_CORVETTE: 5,
  GALEGGTICA: 6,
  CHICKFIANT: 7,
  VOYEGGER: 8,
  HENERPRISE: 9,
  ATREGGIES: 10
};

/**
 * @enum {number}
 */
proto.ei.MissionInfo.Status = {
  FUELING: 0,
  PREPARE_TO_LAUNCH: 5,
  EXPLORING: 10,
  RETURNED: 15,
  ANALYZING: 16,
  COMPLETE: 20,
  ARCHIVED: 25
};

/**
 * @enum {number}
 */
proto.ei.MissionInfo.DurationType = {
  SHORT: 0,
  LONG: 1,
  EPIC: 2,
  TUTORIAL: 3
};




if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ei.MissionInfo.Fuel.prototype.toObject = function(opt_includeInstance) {
  return proto.ei.MissionInfo.Fuel.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ei.MissionInfo.Fuel} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.MissionInfo.Fuel.toObject = function(includeInstance, msg) {
  var f, obj = {
    egg: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    amount: (f = jspb.Message.getOptionalFloatingPointField(msg, 2)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ei.MissionInfo.Fuel}
 */
proto.ei.MissionInfo.Fuel.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ei.MissionInfo.Fuel;
  return proto.ei.MissionInfo.Fuel.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ei.MissionInfo.Fuel} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ei.MissionInfo.Fuel}
 */
proto.ei.MissionInfo.Fuel.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.ei.Egg} */ (reader.readEnum());
      msg.setEgg(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setAmount(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ei.MissionInfo.Fuel.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ei.MissionInfo.Fuel.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ei.MissionInfo.Fuel} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.MissionInfo.Fuel.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {!proto.ei.Egg} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeDouble(
      2,
      f
    );
  }
};


/**
 * optional Egg egg = 1;
 * @return {!proto.ei.Egg}
 */
proto.ei.MissionInfo.Fuel.prototype.getEgg = function() {
  return /** @type {!proto.ei.Egg} */ (jspb.Message.getFieldWithDefault(this, 1, 1));
};


/**
 * @param {!proto.ei.Egg} value
 * @return {!proto.ei.MissionInfo.Fuel} returns this
 */
proto.ei.MissionInfo.Fuel.prototype.setEgg = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.MissionInfo.Fuel} returns this
 */
proto.ei.MissionInfo.Fuel.prototype.clearEgg = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.MissionInfo.Fuel.prototype.hasEgg = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional double amount = 2;
 * @return {number}
 */
proto.ei.MissionInfo.Fuel.prototype.getAmount = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 2, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.ei.MissionInfo.Fuel} returns this
 */
proto.ei.MissionInfo.Fuel.prototype.setAmount = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.MissionInfo.Fuel} returns this
 */
proto.ei.MissionInfo.Fuel.prototype.clearAmount = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.MissionInfo.Fuel.prototype.hasAmount = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional Spaceship ship = 1;
 * @return {!proto.ei.MissionInfo.Spaceship}
 */
proto.ei.MissionInfo.prototype.getShip = function() {
  return /** @type {!proto.ei.MissionInfo.Spaceship} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.ei.MissionInfo.Spaceship} value
 * @return {!proto.ei.MissionInfo} returns this
 */
proto.ei.MissionInfo.prototype.setShip = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.MissionInfo} returns this
 */
proto.ei.MissionInfo.prototype.clearShip = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.MissionInfo.prototype.hasShip = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional Status status = 2;
 * @return {!proto.ei.MissionInfo.Status}
 */
proto.ei.MissionInfo.prototype.getStatus = function() {
  return /** @type {!proto.ei.MissionInfo.Status} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {!proto.ei.MissionInfo.Status} value
 * @return {!proto.ei.MissionInfo} returns this
 */
proto.ei.MissionInfo.prototype.setStatus = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.MissionInfo} returns this
 */
proto.ei.MissionInfo.prototype.clearStatus = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.MissionInfo.prototype.hasStatus = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional DurationType duration_type = 3;
 * @return {!proto.ei.MissionInfo.DurationType}
 */
proto.ei.MissionInfo.prototype.getDurationType = function() {
  return /** @type {!proto.ei.MissionInfo.DurationType} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {!proto.ei.MissionInfo.DurationType} value
 * @return {!proto.ei.MissionInfo} returns this
 */
proto.ei.MissionInfo.prototype.setDurationType = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.MissionInfo} returns this
 */
proto.ei.MissionInfo.prototype.clearDurationType = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.MissionInfo.prototype.hasDurationType = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * repeated Fuel fuel = 4;
 * @return {!Array<!proto.ei.MissionInfo.Fuel>}
 */
proto.ei.MissionInfo.prototype.getFuelList = function() {
  return /** @type{!Array<!proto.ei.MissionInfo.Fuel>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.ei.MissionInfo.Fuel, 4));
};


/**
 * @param {!Array<!proto.ei.MissionInfo.Fuel>} value
 * @return {!proto.ei.MissionInfo} returns this
*/
proto.ei.MissionInfo.prototype.setFuelList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 4, value);
};


/**
 * @param {!proto.ei.MissionInfo.Fuel=} opt_value
 * @param {number=} opt_index
 * @return {!proto.ei.MissionInfo.Fuel}
 */
proto.ei.MissionInfo.prototype.addFuel = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 4, opt_value, proto.ei.MissionInfo.Fuel, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.ei.MissionInfo} returns this
 */
proto.ei.MissionInfo.prototype.clearFuelList = function() {
  return this.setFuelList([]);
};


/**
 * optional uint32 level = 12;
 * @return {number}
 */
proto.ei.MissionInfo.prototype.getLevel = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 12, 0));
};


/**
 * @param {number} value
 * @return {!proto.ei.MissionInfo} returns this
 */
proto.ei.MissionInfo.prototype.setLevel = function(value) {
  return jspb.Message.setField(this, 12, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.MissionInfo} returns this
 */
proto.ei.MissionInfo.prototype.clearLevel = function() {
  return jspb.Message.setField(this, 12, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.MissionInfo.prototype.hasLevel = function() {
  return jspb.Message.getField(this, 12) != null;
};


/**
 * optional double duration_seconds = 5;
 * @return {number}
 */
proto.ei.MissionInfo.prototype.getDurationSeconds = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 5, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.ei.MissionInfo} returns this
 */
proto.ei.MissionInfo.prototype.setDurationSeconds = function(value) {
  return jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.MissionInfo} returns this
 */
proto.ei.MissionInfo.prototype.clearDurationSeconds = function() {
  return jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.MissionInfo.prototype.hasDurationSeconds = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional uint32 capacity = 9;
 * @return {number}
 */
proto.ei.MissionInfo.prototype.getCapacity = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};


/**
 * @param {number} value
 * @return {!proto.ei.MissionInfo} returns this
 */
proto.ei.MissionInfo.prototype.setCapacity = function(value) {
  return jspb.Message.setField(this, 9, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.MissionInfo} returns this
 */
proto.ei.MissionInfo.prototype.clearCapacity = function() {
  return jspb.Message.setField(this, 9, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.MissionInfo.prototype.hasCapacity = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional double quality_bump = 11;
 * @return {number}
 */
proto.ei.MissionInfo.prototype.getQualityBump = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 11, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.ei.MissionInfo} returns this
 */
proto.ei.MissionInfo.prototype.setQualityBump = function(value) {
  return jspb.Message.setField(this, 11, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.MissionInfo} returns this
 */
proto.ei.MissionInfo.prototype.clearQualityBump = function() {
  return jspb.Message.setField(this, 11, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.MissionInfo.prototype.hasQualityBump = function() {
  return jspb.Message.getField(this, 11) != null;
};


/**
 * optional ArtifactSpec.Name target_artifact = 13;
 * @return {!proto.ei.ArtifactSpec.Name}
 */
proto.ei.MissionInfo.prototype.getTargetArtifact = function() {
  return /** @type {!proto.ei.ArtifactSpec.Name} */ (jspb.Message.getFieldWithDefault(this, 13, 0));
};


/**
 * @param {!proto.ei.ArtifactSpec.Name} value
 * @return {!proto.ei.MissionInfo} returns this
 */
proto.ei.MissionInfo.prototype.setTargetArtifact = function(value) {
  return jspb.Message.setField(this, 13, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.MissionInfo} returns this
 */
proto.ei.MissionInfo.prototype.clearTargetArtifact = function() {
  return jspb.Message.setField(this, 13, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.MissionInfo.prototype.hasTargetArtifact = function() {
  return jspb.Message.getField(this, 13) != null;
};


/**
 * optional double seconds_remaining = 6;
 * @return {number}
 */
proto.ei.MissionInfo.prototype.getSecondsRemaining = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 6, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.ei.MissionInfo} returns this
 */
proto.ei.MissionInfo.prototype.setSecondsRemaining = function(value) {
  return jspb.Message.setField(this, 6, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.MissionInfo} returns this
 */
proto.ei.MissionInfo.prototype.clearSecondsRemaining = function() {
  return jspb.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.MissionInfo.prototype.hasSecondsRemaining = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional double start_time_derived = 8;
 * @return {number}
 */
proto.ei.MissionInfo.prototype.getStartTimeDerived = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 8, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.ei.MissionInfo} returns this
 */
proto.ei.MissionInfo.prototype.setStartTimeDerived = function(value) {
  return jspb.Message.setField(this, 8, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.MissionInfo} returns this
 */
proto.ei.MissionInfo.prototype.clearStartTimeDerived = function() {
  return jspb.Message.setField(this, 8, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.MissionInfo.prototype.hasStartTimeDerived = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional string mission_log = 10;
 * @return {string}
 */
proto.ei.MissionInfo.prototype.getMissionLog = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/**
 * @param {string} value
 * @return {!proto.ei.MissionInfo} returns this
 */
proto.ei.MissionInfo.prototype.setMissionLog = function(value) {
  return jspb.Message.setField(this, 10, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.MissionInfo} returns this
 */
proto.ei.MissionInfo.prototype.clearMissionLog = function() {
  return jspb.Message.setField(this, 10, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.MissionInfo.prototype.hasMissionLog = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * optional string identifier = 7;
 * @return {string}
 */
proto.ei.MissionInfo.prototype.getIdentifier = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.ei.MissionInfo} returns this
 */
proto.ei.MissionInfo.prototype.setIdentifier = function(value) {
  return jspb.Message.setField(this, 7, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.MissionInfo} returns this
 */
proto.ei.MissionInfo.prototype.clearIdentifier = function() {
  return jspb.Message.setField(this, 7, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.MissionInfo.prototype.hasIdentifier = function() {
  return jspb.Message.getField(this, 7) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ei.ArtifactSpec.prototype.toObject = function(opt_includeInstance) {
  return proto.ei.ArtifactSpec.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ei.ArtifactSpec} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.ArtifactSpec.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    level: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,
    rarity: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f,
    egg: (f = jspb.Message.getField(msg, 4)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ei.ArtifactSpec}
 */
proto.ei.ArtifactSpec.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ei.ArtifactSpec;
  return proto.ei.ArtifactSpec.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ei.ArtifactSpec} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ei.ArtifactSpec}
 */
proto.ei.ArtifactSpec.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.ei.ArtifactSpec.Name} */ (reader.readEnum());
      msg.setName(value);
      break;
    case 2:
      var value = /** @type {!proto.ei.ArtifactSpec.Level} */ (reader.readEnum());
      msg.setLevel(value);
      break;
    case 3:
      var value = /** @type {!proto.ei.ArtifactSpec.Rarity} */ (reader.readEnum());
      msg.setRarity(value);
      break;
    case 4:
      var value = /** @type {!proto.ei.Egg} */ (reader.readEnum());
      msg.setEgg(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ei.ArtifactSpec.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ei.ArtifactSpec.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ei.ArtifactSpec} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.ArtifactSpec.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {!proto.ei.ArtifactSpec.Name} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = /** @type {!proto.ei.ArtifactSpec.Level} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeEnum(
      2,
      f
    );
  }
  f = /** @type {!proto.ei.ArtifactSpec.Rarity} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeEnum(
      3,
      f
    );
  }
  f = /** @type {!proto.ei.Egg} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeEnum(
      4,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.ei.ArtifactSpec.Name = {
  LUNAR_TOTEM: 0,
  NEODYMIUM_MEDALLION: 3,
  BEAK_OF_MIDAS: 4,
  LIGHT_OF_EGGENDIL: 5,
  DEMETERS_NECKLACE: 6,
  VIAL_MARTIAN_DUST: 7,
  ORNATE_GUSSET: 8,
  THE_CHALICE: 9,
  BOOK_OF_BASAN: 10,
  PHOENIX_FEATHER: 11,
  TUNGSTEN_ANKH: 12,
  AURELIAN_BROOCH: 21,
  CARVED_RAINSTICK: 22,
  PUZZLE_CUBE: 23,
  QUANTUM_METRONOME: 24,
  SHIP_IN_A_BOTTLE: 25,
  TACHYON_DEFLECTOR: 26,
  INTERSTELLAR_COMPASS: 27,
  DILITHIUM_MONOCLE: 28,
  TITANIUM_ACTUATOR: 29,
  MERCURYS_LENS: 30,
  TACHYON_STONE: 1,
  DILITHIUM_STONE: 31,
  SHELL_STONE: 32,
  LUNAR_STONE: 33,
  SOUL_STONE: 34,
  PROPHECY_STONE: 39,
  QUANTUM_STONE: 36,
  TERRA_STONE: 37,
  LIFE_STONE: 38,
  CLARITY_STONE: 40,
  EXTRATERRESTRIAL_ALUMINUM: 13,
  ANCIENT_TUNGSTEN: 14,
  SPACE_ROCKS: 15,
  ALIEN_WOOD: 16,
  GOLD_METEORITE: 17,
  TAU_CETI_GEODE: 18,
  CENTAURIAN_STEEL: 19,
  ERIDANI_FEATHER: 20,
  DRONE_PARTS: 35,
  CELESTIAL_BRONZE: 41,
  LALANDE_HIDE: 42,
  SOLAR_TITANIUM: 43,
  TACHYON_STONE_FRAGMENT: 2,
  DILITHIUM_STONE_FRAGMENT: 44,
  SHELL_STONE_FRAGMENT: 45,
  LUNAR_STONE_FRAGMENT: 46,
  SOUL_STONE_FRAGMENT: 47,
  PROPHECY_STONE_FRAGMENT: 48,
  QUANTUM_STONE_FRAGMENT: 49,
  TERRA_STONE_FRAGMENT: 50,
  LIFE_STONE_FRAGMENT: 51,
  CLARITY_STONE_FRAGMENT: 52,
  UNKNOWN: 10000
};

/**
 * @enum {number}
 */
proto.ei.ArtifactSpec.Level = {
  INFERIOR: 0,
  LESSER: 1,
  NORMAL: 2,
  GREATER: 3,
  SUPERIOR: 4
};

/**
 * @enum {number}
 */
proto.ei.ArtifactSpec.Rarity = {
  COMMON: 0,
  RARE: 1,
  EPIC: 2,
  LEGENDARY: 3
};

/**
 * @enum {number}
 */
proto.ei.ArtifactSpec.Type = {
  ARTIFACT: 0,
  STONE: 1,
  INGREDIENT: 2,
  STONE_INGREDIENT: 3
};

/**
 * optional Name name = 1;
 * @return {!proto.ei.ArtifactSpec.Name}
 */
proto.ei.ArtifactSpec.prototype.getName = function() {
  return /** @type {!proto.ei.ArtifactSpec.Name} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.ei.ArtifactSpec.Name} value
 * @return {!proto.ei.ArtifactSpec} returns this
 */
proto.ei.ArtifactSpec.prototype.setName = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.ArtifactSpec} returns this
 */
proto.ei.ArtifactSpec.prototype.clearName = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ArtifactSpec.prototype.hasName = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional Level level = 2;
 * @return {!proto.ei.ArtifactSpec.Level}
 */
proto.ei.ArtifactSpec.prototype.getLevel = function() {
  return /** @type {!proto.ei.ArtifactSpec.Level} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {!proto.ei.ArtifactSpec.Level} value
 * @return {!proto.ei.ArtifactSpec} returns this
 */
proto.ei.ArtifactSpec.prototype.setLevel = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.ArtifactSpec} returns this
 */
proto.ei.ArtifactSpec.prototype.clearLevel = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ArtifactSpec.prototype.hasLevel = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional Rarity rarity = 3;
 * @return {!proto.ei.ArtifactSpec.Rarity}
 */
proto.ei.ArtifactSpec.prototype.getRarity = function() {
  return /** @type {!proto.ei.ArtifactSpec.Rarity} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {!proto.ei.ArtifactSpec.Rarity} value
 * @return {!proto.ei.ArtifactSpec} returns this
 */
proto.ei.ArtifactSpec.prototype.setRarity = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.ArtifactSpec} returns this
 */
proto.ei.ArtifactSpec.prototype.clearRarity = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ArtifactSpec.prototype.hasRarity = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional Egg egg = 4;
 * @return {!proto.ei.Egg}
 */
proto.ei.ArtifactSpec.prototype.getEgg = function() {
  return /** @type {!proto.ei.Egg} */ (jspb.Message.getFieldWithDefault(this, 4, 1));
};


/**
 * @param {!proto.ei.Egg} value
 * @return {!proto.ei.ArtifactSpec} returns this
 */
proto.ei.ArtifactSpec.prototype.setEgg = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.ArtifactSpec} returns this
 */
proto.ei.ArtifactSpec.prototype.clearEgg = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ArtifactSpec.prototype.hasEgg = function() {
  return jspb.Message.getField(this, 4) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.ei.CompleteArtifact.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ei.CompleteArtifact.prototype.toObject = function(opt_includeInstance) {
  return proto.ei.CompleteArtifact.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ei.CompleteArtifact} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.CompleteArtifact.toObject = function(includeInstance, msg) {
  var f, obj = {
    spec: (f = msg.getSpec()) && proto.ei.ArtifactSpec.toObject(includeInstance, f),
    stonesList: jspb.Message.toObjectList(msg.getStonesList(),
    proto.ei.ArtifactSpec.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ei.CompleteArtifact}
 */
proto.ei.CompleteArtifact.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ei.CompleteArtifact;
  return proto.ei.CompleteArtifact.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ei.CompleteArtifact} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ei.CompleteArtifact}
 */
proto.ei.CompleteArtifact.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.ei.ArtifactSpec;
      reader.readMessage(value,proto.ei.ArtifactSpec.deserializeBinaryFromReader);
      msg.setSpec(value);
      break;
    case 2:
      var value = new proto.ei.ArtifactSpec;
      reader.readMessage(value,proto.ei.ArtifactSpec.deserializeBinaryFromReader);
      msg.addStones(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ei.CompleteArtifact.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ei.CompleteArtifact.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ei.CompleteArtifact} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.CompleteArtifact.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSpec();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.ei.ArtifactSpec.serializeBinaryToWriter
    );
  }
  f = message.getStonesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.ei.ArtifactSpec.serializeBinaryToWriter
    );
  }
};


/**
 * optional ArtifactSpec spec = 1;
 * @return {?proto.ei.ArtifactSpec}
 */
proto.ei.CompleteArtifact.prototype.getSpec = function() {
  return /** @type{?proto.ei.ArtifactSpec} */ (
    jspb.Message.getWrapperField(this, proto.ei.ArtifactSpec, 1));
};


/**
 * @param {?proto.ei.ArtifactSpec|undefined} value
 * @return {!proto.ei.CompleteArtifact} returns this
*/
proto.ei.CompleteArtifact.prototype.setSpec = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.ei.CompleteArtifact} returns this
 */
proto.ei.CompleteArtifact.prototype.clearSpec = function() {
  return this.setSpec(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.CompleteArtifact.prototype.hasSpec = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * repeated ArtifactSpec stones = 2;
 * @return {!Array<!proto.ei.ArtifactSpec>}
 */
proto.ei.CompleteArtifact.prototype.getStonesList = function() {
  return /** @type{!Array<!proto.ei.ArtifactSpec>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.ei.ArtifactSpec, 2));
};


/**
 * @param {!Array<!proto.ei.ArtifactSpec>} value
 * @return {!proto.ei.CompleteArtifact} returns this
*/
proto.ei.CompleteArtifact.prototype.setStonesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.ei.ArtifactSpec=} opt_value
 * @param {number=} opt_index
 * @return {!proto.ei.ArtifactSpec}
 */
proto.ei.CompleteArtifact.prototype.addStones = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.ei.ArtifactSpec, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.ei.CompleteArtifact} returns this
 */
proto.ei.CompleteArtifact.prototype.clearStonesList = function() {
  return this.setStonesList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ei.ArtifactInventoryItem.prototype.toObject = function(opt_includeInstance) {
  return proto.ei.ArtifactInventoryItem.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ei.ArtifactInventoryItem} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.ArtifactInventoryItem.toObject = function(includeInstance, msg) {
  var f, obj = {
    itemId: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    artifact: (f = msg.getArtifact()) && proto.ei.CompleteArtifact.toObject(includeInstance, f),
    quantity: (f = jspb.Message.getOptionalFloatingPointField(msg, 3)) == null ? undefined : f,
    serverId: (f = jspb.Message.getField(msg, 4)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ei.ArtifactInventoryItem}
 */
proto.ei.ArtifactInventoryItem.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ei.ArtifactInventoryItem;
  return proto.ei.ArtifactInventoryItem.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ei.ArtifactInventoryItem} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ei.ArtifactInventoryItem}
 */
proto.ei.ArtifactInventoryItem.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setItemId(value);
      break;
    case 2:
      var value = new proto.ei.CompleteArtifact;
      reader.readMessage(value,proto.ei.CompleteArtifact.deserializeBinaryFromReader);
      msg.setArtifact(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setQuantity(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setServerId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ei.ArtifactInventoryItem.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ei.ArtifactInventoryItem.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ei.ArtifactInventoryItem} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.ArtifactInventoryItem.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {number} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeUint64(
      1,
      f
    );
  }
  f = message.getArtifact();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.ei.CompleteArtifact.serializeBinaryToWriter
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeDouble(
      3,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * optional uint64 item_id = 1;
 * @return {number}
 */
proto.ei.ArtifactInventoryItem.prototype.getItemId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.ei.ArtifactInventoryItem} returns this
 */
proto.ei.ArtifactInventoryItem.prototype.setItemId = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.ArtifactInventoryItem} returns this
 */
proto.ei.ArtifactInventoryItem.prototype.clearItemId = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ArtifactInventoryItem.prototype.hasItemId = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional CompleteArtifact artifact = 2;
 * @return {?proto.ei.CompleteArtifact}
 */
proto.ei.ArtifactInventoryItem.prototype.getArtifact = function() {
  return /** @type{?proto.ei.CompleteArtifact} */ (
    jspb.Message.getWrapperField(this, proto.ei.CompleteArtifact, 2));
};


/**
 * @param {?proto.ei.CompleteArtifact|undefined} value
 * @return {!proto.ei.ArtifactInventoryItem} returns this
*/
proto.ei.ArtifactInventoryItem.prototype.setArtifact = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.ei.ArtifactInventoryItem} returns this
 */
proto.ei.ArtifactInventoryItem.prototype.clearArtifact = function() {
  return this.setArtifact(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ArtifactInventoryItem.prototype.hasArtifact = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional double quantity = 3;
 * @return {number}
 */
proto.ei.ArtifactInventoryItem.prototype.getQuantity = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 3, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.ei.ArtifactInventoryItem} returns this
 */
proto.ei.ArtifactInventoryItem.prototype.setQuantity = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.ArtifactInventoryItem} returns this
 */
proto.ei.ArtifactInventoryItem.prototype.clearQuantity = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ArtifactInventoryItem.prototype.hasQuantity = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional string server_id = 4;
 * @return {string}
 */
proto.ei.ArtifactInventoryItem.prototype.getServerId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.ei.ArtifactInventoryItem} returns this
 */
proto.ei.ArtifactInventoryItem.prototype.setServerId = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.ArtifactInventoryItem} returns this
 */
proto.ei.ArtifactInventoryItem.prototype.clearServerId = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ArtifactInventoryItem.prototype.hasServerId = function() {
  return jspb.Message.getField(this, 4) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ei.InventorySlot.prototype.toObject = function(opt_includeInstance) {
  return proto.ei.InventorySlot.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ei.InventorySlot} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.InventorySlot.toObject = function(includeInstance, msg) {
  var f, obj = {
    occupied: (f = jspb.Message.getBooleanField(msg, 1)) == null ? undefined : f,
    itemId: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ei.InventorySlot}
 */
proto.ei.InventorySlot.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ei.InventorySlot;
  return proto.ei.InventorySlot.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ei.InventorySlot} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ei.InventorySlot}
 */
proto.ei.InventorySlot.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setOccupied(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setItemId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ei.InventorySlot.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ei.InventorySlot.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ei.InventorySlot} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.InventorySlot.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {boolean} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeBool(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeUint32(
      2,
      f
    );
  }
};


/**
 * optional bool occupied = 1;
 * @return {boolean}
 */
proto.ei.InventorySlot.prototype.getOccupied = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.ei.InventorySlot} returns this
 */
proto.ei.InventorySlot.prototype.setOccupied = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.InventorySlot} returns this
 */
proto.ei.InventorySlot.prototype.clearOccupied = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.InventorySlot.prototype.hasOccupied = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional uint32 item_id = 2;
 * @return {number}
 */
proto.ei.InventorySlot.prototype.getItemId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.ei.InventorySlot} returns this
 */
proto.ei.InventorySlot.prototype.setItemId = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.InventorySlot} returns this
 */
proto.ei.InventorySlot.prototype.clearItemId = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.InventorySlot.prototype.hasItemId = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ei.ArtifactsConfigurationRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.ei.ArtifactsConfigurationRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ei.ArtifactsConfigurationRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.ArtifactsConfigurationRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    rinfo: (f = msg.getRinfo()) && proto.ei.BasicRequestInfo.toObject(includeInstance, f),
    clientVersion: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ei.ArtifactsConfigurationRequest}
 */
proto.ei.ArtifactsConfigurationRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ei.ArtifactsConfigurationRequest;
  return proto.ei.ArtifactsConfigurationRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ei.ArtifactsConfigurationRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ei.ArtifactsConfigurationRequest}
 */
proto.ei.ArtifactsConfigurationRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 2:
      var value = new proto.ei.BasicRequestInfo;
      reader.readMessage(value,proto.ei.BasicRequestInfo.deserializeBinaryFromReader);
      msg.setRinfo(value);
      break;
    case 1:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setClientVersion(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ei.ArtifactsConfigurationRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ei.ArtifactsConfigurationRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ei.ArtifactsConfigurationRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.ArtifactsConfigurationRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRinfo();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.ei.BasicRequestInfo.serializeBinaryToWriter
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeUint32(
      1,
      f
    );
  }
};


/**
 * optional BasicRequestInfo rinfo = 2;
 * @return {?proto.ei.BasicRequestInfo}
 */
proto.ei.ArtifactsConfigurationRequest.prototype.getRinfo = function() {
  return /** @type{?proto.ei.BasicRequestInfo} */ (
    jspb.Message.getWrapperField(this, proto.ei.BasicRequestInfo, 2));
};


/**
 * @param {?proto.ei.BasicRequestInfo|undefined} value
 * @return {!proto.ei.ArtifactsConfigurationRequest} returns this
*/
proto.ei.ArtifactsConfigurationRequest.prototype.setRinfo = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.ei.ArtifactsConfigurationRequest} returns this
 */
proto.ei.ArtifactsConfigurationRequest.prototype.clearRinfo = function() {
  return this.setRinfo(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ArtifactsConfigurationRequest.prototype.hasRinfo = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional uint32 client_version = 1;
 * @return {number}
 */
proto.ei.ArtifactsConfigurationRequest.prototype.getClientVersion = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.ei.ArtifactsConfigurationRequest} returns this
 */
proto.ei.ArtifactsConfigurationRequest.prototype.setClientVersion = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.ArtifactsConfigurationRequest} returns this
 */
proto.ei.ArtifactsConfigurationRequest.prototype.clearClientVersion = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ArtifactsConfigurationRequest.prototype.hasClientVersion = function() {
  return jspb.Message.getField(this, 1) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.ei.ArtifactsConfigurationResponse.repeatedFields_ = [1,2,3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ei.ArtifactsConfigurationResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.ei.ArtifactsConfigurationResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ei.ArtifactsConfigurationResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.ArtifactsConfigurationResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    missionParametersList: jspb.Message.toObjectList(msg.getMissionParametersList(),
    proto.ei.ArtifactsConfigurationResponse.MissionParameters.toObject, includeInstance),
    artifactParametersList: jspb.Message.toObjectList(msg.getArtifactParametersList(),
    proto.ei.ArtifactsConfigurationResponse.ArtifactParameters.toObject, includeInstance),
    craftingLevelInfosList: jspb.Message.toObjectList(msg.getCraftingLevelInfosList(),
    proto.ei.ArtifactsConfigurationResponse.CraftingLevelInfo.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ei.ArtifactsConfigurationResponse}
 */
proto.ei.ArtifactsConfigurationResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ei.ArtifactsConfigurationResponse;
  return proto.ei.ArtifactsConfigurationResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ei.ArtifactsConfigurationResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ei.ArtifactsConfigurationResponse}
 */
proto.ei.ArtifactsConfigurationResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.ei.ArtifactsConfigurationResponse.MissionParameters;
      reader.readMessage(value,proto.ei.ArtifactsConfigurationResponse.MissionParameters.deserializeBinaryFromReader);
      msg.addMissionParameters(value);
      break;
    case 2:
      var value = new proto.ei.ArtifactsConfigurationResponse.ArtifactParameters;
      reader.readMessage(value,proto.ei.ArtifactsConfigurationResponse.ArtifactParameters.deserializeBinaryFromReader);
      msg.addArtifactParameters(value);
      break;
    case 3:
      var value = new proto.ei.ArtifactsConfigurationResponse.CraftingLevelInfo;
      reader.readMessage(value,proto.ei.ArtifactsConfigurationResponse.CraftingLevelInfo.deserializeBinaryFromReader);
      msg.addCraftingLevelInfos(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ei.ArtifactsConfigurationResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ei.ArtifactsConfigurationResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ei.ArtifactsConfigurationResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.ArtifactsConfigurationResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMissionParametersList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.ei.ArtifactsConfigurationResponse.MissionParameters.serializeBinaryToWriter
    );
  }
  f = message.getArtifactParametersList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.ei.ArtifactsConfigurationResponse.ArtifactParameters.serializeBinaryToWriter
    );
  }
  f = message.getCraftingLevelInfosList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      proto.ei.ArtifactsConfigurationResponse.CraftingLevelInfo.serializeBinaryToWriter
    );
  }
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.ei.ArtifactsConfigurationResponse.MissionParameters.repeatedFields_ = [3,4];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ei.ArtifactsConfigurationResponse.MissionParameters.prototype.toObject = function(opt_includeInstance) {
  return proto.ei.ArtifactsConfigurationResponse.MissionParameters.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ei.ArtifactsConfigurationResponse.MissionParameters} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.ArtifactsConfigurationResponse.MissionParameters.toObject = function(includeInstance, msg) {
  var f, obj = {
    ship: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    durationsList: jspb.Message.toObjectList(msg.getDurationsList(),
    proto.ei.ArtifactsConfigurationResponse.MissionParameters.Duration.toObject, includeInstance),
    levelMissionRequirementsList: (f = jspb.Message.getRepeatedField(msg, 4)) == null ? undefined : f,
    capacityDeprecated: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ei.ArtifactsConfigurationResponse.MissionParameters}
 */
proto.ei.ArtifactsConfigurationResponse.MissionParameters.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ei.ArtifactsConfigurationResponse.MissionParameters;
  return proto.ei.ArtifactsConfigurationResponse.MissionParameters.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ei.ArtifactsConfigurationResponse.MissionParameters} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ei.ArtifactsConfigurationResponse.MissionParameters}
 */
proto.ei.ArtifactsConfigurationResponse.MissionParameters.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.ei.MissionInfo.Spaceship} */ (reader.readEnum());
      msg.setShip(value);
      break;
    case 3:
      var value = new proto.ei.ArtifactsConfigurationResponse.MissionParameters.Duration;
      reader.readMessage(value,proto.ei.ArtifactsConfigurationResponse.MissionParameters.Duration.deserializeBinaryFromReader);
      msg.addDurations(value);
      break;
    case 4:
      var values = /** @type {!Array<number>} */ (reader.isDelimited() ? reader.readPackedUint32() : [reader.readUint32()]);
      for (var i = 0; i < values.length; i++) {
        msg.addLevelMissionRequirements(values[i]);
      }
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setCapacityDeprecated(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ei.ArtifactsConfigurationResponse.MissionParameters.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ei.ArtifactsConfigurationResponse.MissionParameters.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ei.ArtifactsConfigurationResponse.MissionParameters} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.ArtifactsConfigurationResponse.MissionParameters.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {!proto.ei.MissionInfo.Spaceship} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getDurationsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      proto.ei.ArtifactsConfigurationResponse.MissionParameters.Duration.serializeBinaryToWriter
    );
  }
  f = message.getLevelMissionRequirementsList();
  if (f.length > 0) {
    writer.writeRepeatedUint32(
      4,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeUint32(
      2,
      f
    );
  }
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ei.ArtifactsConfigurationResponse.MissionParameters.Duration.prototype.toObject = function(opt_includeInstance) {
  return proto.ei.ArtifactsConfigurationResponse.MissionParameters.Duration.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ei.ArtifactsConfigurationResponse.MissionParameters.Duration} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.ArtifactsConfigurationResponse.MissionParameters.Duration.toObject = function(includeInstance, msg) {
  var f, obj = {
    durationType: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    seconds: (f = jspb.Message.getOptionalFloatingPointField(msg, 2)) == null ? undefined : f,
    quality: (f = jspb.Message.getOptionalFloatingPointField(msg, 3)) == null ? undefined : f,
    minQuality: (f = jspb.Message.getOptionalFloatingPointField(msg, 4)) == null ? undefined : f,
    maxQuality: (f = jspb.Message.getOptionalFloatingPointField(msg, 5)) == null ? undefined : f,
    capacity: (f = jspb.Message.getField(msg, 6)) == null ? undefined : f,
    levelCapacityBump: (f = jspb.Message.getField(msg, 7)) == null ? undefined : f,
    levelQualityBump: (f = jspb.Message.getOptionalFloatingPointField(msg, 8)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ei.ArtifactsConfigurationResponse.MissionParameters.Duration}
 */
proto.ei.ArtifactsConfigurationResponse.MissionParameters.Duration.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ei.ArtifactsConfigurationResponse.MissionParameters.Duration;
  return proto.ei.ArtifactsConfigurationResponse.MissionParameters.Duration.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ei.ArtifactsConfigurationResponse.MissionParameters.Duration} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ei.ArtifactsConfigurationResponse.MissionParameters.Duration}
 */
proto.ei.ArtifactsConfigurationResponse.MissionParameters.Duration.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.ei.MissionInfo.DurationType} */ (reader.readEnum());
      msg.setDurationType(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setSeconds(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setQuality(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setMinQuality(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setMaxQuality(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setCapacity(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setLevelCapacityBump(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setLevelQualityBump(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ei.ArtifactsConfigurationResponse.MissionParameters.Duration.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ei.ArtifactsConfigurationResponse.MissionParameters.Duration.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ei.ArtifactsConfigurationResponse.MissionParameters.Duration} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.ArtifactsConfigurationResponse.MissionParameters.Duration.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {!proto.ei.MissionInfo.DurationType} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeDouble(
      2,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeFloat(
      3,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeFloat(
      4,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeFloat(
      5,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeUint32(
      6,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 7));
  if (f != null) {
    writer.writeUint32(
      7,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 8));
  if (f != null) {
    writer.writeFloat(
      8,
      f
    );
  }
};


/**
 * optional MissionInfo.DurationType duration_type = 1;
 * @return {!proto.ei.MissionInfo.DurationType}
 */
proto.ei.ArtifactsConfigurationResponse.MissionParameters.Duration.prototype.getDurationType = function() {
  return /** @type {!proto.ei.MissionInfo.DurationType} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.ei.MissionInfo.DurationType} value
 * @return {!proto.ei.ArtifactsConfigurationResponse.MissionParameters.Duration} returns this
 */
proto.ei.ArtifactsConfigurationResponse.MissionParameters.Duration.prototype.setDurationType = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.ArtifactsConfigurationResponse.MissionParameters.Duration} returns this
 */
proto.ei.ArtifactsConfigurationResponse.MissionParameters.Duration.prototype.clearDurationType = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ArtifactsConfigurationResponse.MissionParameters.Duration.prototype.hasDurationType = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional double seconds = 2;
 * @return {number}
 */
proto.ei.ArtifactsConfigurationResponse.MissionParameters.Duration.prototype.getSeconds = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 2, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.ei.ArtifactsConfigurationResponse.MissionParameters.Duration} returns this
 */
proto.ei.ArtifactsConfigurationResponse.MissionParameters.Duration.prototype.setSeconds = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.ArtifactsConfigurationResponse.MissionParameters.Duration} returns this
 */
proto.ei.ArtifactsConfigurationResponse.MissionParameters.Duration.prototype.clearSeconds = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ArtifactsConfigurationResponse.MissionParameters.Duration.prototype.hasSeconds = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional float quality = 3;
 * @return {number}
 */
proto.ei.ArtifactsConfigurationResponse.MissionParameters.Duration.prototype.getQuality = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 3, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.ei.ArtifactsConfigurationResponse.MissionParameters.Duration} returns this
 */
proto.ei.ArtifactsConfigurationResponse.MissionParameters.Duration.prototype.setQuality = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.ArtifactsConfigurationResponse.MissionParameters.Duration} returns this
 */
proto.ei.ArtifactsConfigurationResponse.MissionParameters.Duration.prototype.clearQuality = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ArtifactsConfigurationResponse.MissionParameters.Duration.prototype.hasQuality = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional float min_quality = 4;
 * @return {number}
 */
proto.ei.ArtifactsConfigurationResponse.MissionParameters.Duration.prototype.getMinQuality = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 4, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.ei.ArtifactsConfigurationResponse.MissionParameters.Duration} returns this
 */
proto.ei.ArtifactsConfigurationResponse.MissionParameters.Duration.prototype.setMinQuality = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.ArtifactsConfigurationResponse.MissionParameters.Duration} returns this
 */
proto.ei.ArtifactsConfigurationResponse.MissionParameters.Duration.prototype.clearMinQuality = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ArtifactsConfigurationResponse.MissionParameters.Duration.prototype.hasMinQuality = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional float max_quality = 5;
 * @return {number}
 */
proto.ei.ArtifactsConfigurationResponse.MissionParameters.Duration.prototype.getMaxQuality = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 5, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.ei.ArtifactsConfigurationResponse.MissionParameters.Duration} returns this
 */
proto.ei.ArtifactsConfigurationResponse.MissionParameters.Duration.prototype.setMaxQuality = function(value) {
  return jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.ArtifactsConfigurationResponse.MissionParameters.Duration} returns this
 */
proto.ei.ArtifactsConfigurationResponse.MissionParameters.Duration.prototype.clearMaxQuality = function() {
  return jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ArtifactsConfigurationResponse.MissionParameters.Duration.prototype.hasMaxQuality = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional uint32 capacity = 6;
 * @return {number}
 */
proto.ei.ArtifactsConfigurationResponse.MissionParameters.Duration.prototype.getCapacity = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.ei.ArtifactsConfigurationResponse.MissionParameters.Duration} returns this
 */
proto.ei.ArtifactsConfigurationResponse.MissionParameters.Duration.prototype.setCapacity = function(value) {
  return jspb.Message.setField(this, 6, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.ArtifactsConfigurationResponse.MissionParameters.Duration} returns this
 */
proto.ei.ArtifactsConfigurationResponse.MissionParameters.Duration.prototype.clearCapacity = function() {
  return jspb.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ArtifactsConfigurationResponse.MissionParameters.Duration.prototype.hasCapacity = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional uint32 level_capacity_bump = 7;
 * @return {number}
 */
proto.ei.ArtifactsConfigurationResponse.MissionParameters.Duration.prototype.getLevelCapacityBump = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {number} value
 * @return {!proto.ei.ArtifactsConfigurationResponse.MissionParameters.Duration} returns this
 */
proto.ei.ArtifactsConfigurationResponse.MissionParameters.Duration.prototype.setLevelCapacityBump = function(value) {
  return jspb.Message.setField(this, 7, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.ArtifactsConfigurationResponse.MissionParameters.Duration} returns this
 */
proto.ei.ArtifactsConfigurationResponse.MissionParameters.Duration.prototype.clearLevelCapacityBump = function() {
  return jspb.Message.setField(this, 7, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ArtifactsConfigurationResponse.MissionParameters.Duration.prototype.hasLevelCapacityBump = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional float level_quality_bump = 8;
 * @return {number}
 */
proto.ei.ArtifactsConfigurationResponse.MissionParameters.Duration.prototype.getLevelQualityBump = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 8, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.ei.ArtifactsConfigurationResponse.MissionParameters.Duration} returns this
 */
proto.ei.ArtifactsConfigurationResponse.MissionParameters.Duration.prototype.setLevelQualityBump = function(value) {
  return jspb.Message.setField(this, 8, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.ArtifactsConfigurationResponse.MissionParameters.Duration} returns this
 */
proto.ei.ArtifactsConfigurationResponse.MissionParameters.Duration.prototype.clearLevelQualityBump = function() {
  return jspb.Message.setField(this, 8, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ArtifactsConfigurationResponse.MissionParameters.Duration.prototype.hasLevelQualityBump = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional MissionInfo.Spaceship ship = 1;
 * @return {!proto.ei.MissionInfo.Spaceship}
 */
proto.ei.ArtifactsConfigurationResponse.MissionParameters.prototype.getShip = function() {
  return /** @type {!proto.ei.MissionInfo.Spaceship} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.ei.MissionInfo.Spaceship} value
 * @return {!proto.ei.ArtifactsConfigurationResponse.MissionParameters} returns this
 */
proto.ei.ArtifactsConfigurationResponse.MissionParameters.prototype.setShip = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.ArtifactsConfigurationResponse.MissionParameters} returns this
 */
proto.ei.ArtifactsConfigurationResponse.MissionParameters.prototype.clearShip = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ArtifactsConfigurationResponse.MissionParameters.prototype.hasShip = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * repeated Duration durations = 3;
 * @return {!Array<!proto.ei.ArtifactsConfigurationResponse.MissionParameters.Duration>}
 */
proto.ei.ArtifactsConfigurationResponse.MissionParameters.prototype.getDurationsList = function() {
  return /** @type{!Array<!proto.ei.ArtifactsConfigurationResponse.MissionParameters.Duration>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.ei.ArtifactsConfigurationResponse.MissionParameters.Duration, 3));
};


/**
 * @param {!Array<!proto.ei.ArtifactsConfigurationResponse.MissionParameters.Duration>} value
 * @return {!proto.ei.ArtifactsConfigurationResponse.MissionParameters} returns this
*/
proto.ei.ArtifactsConfigurationResponse.MissionParameters.prototype.setDurationsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.ei.ArtifactsConfigurationResponse.MissionParameters.Duration=} opt_value
 * @param {number=} opt_index
 * @return {!proto.ei.ArtifactsConfigurationResponse.MissionParameters.Duration}
 */
proto.ei.ArtifactsConfigurationResponse.MissionParameters.prototype.addDurations = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.ei.ArtifactsConfigurationResponse.MissionParameters.Duration, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.ei.ArtifactsConfigurationResponse.MissionParameters} returns this
 */
proto.ei.ArtifactsConfigurationResponse.MissionParameters.prototype.clearDurationsList = function() {
  return this.setDurationsList([]);
};


/**
 * repeated uint32 level_mission_requirements = 4;
 * @return {!Array<number>}
 */
proto.ei.ArtifactsConfigurationResponse.MissionParameters.prototype.getLevelMissionRequirementsList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 4));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.ei.ArtifactsConfigurationResponse.MissionParameters} returns this
 */
proto.ei.ArtifactsConfigurationResponse.MissionParameters.prototype.setLevelMissionRequirementsList = function(value) {
  return jspb.Message.setField(this, 4, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.ei.ArtifactsConfigurationResponse.MissionParameters} returns this
 */
proto.ei.ArtifactsConfigurationResponse.MissionParameters.prototype.addLevelMissionRequirements = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 4, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.ei.ArtifactsConfigurationResponse.MissionParameters} returns this
 */
proto.ei.ArtifactsConfigurationResponse.MissionParameters.prototype.clearLevelMissionRequirementsList = function() {
  return this.setLevelMissionRequirementsList([]);
};


/**
 * optional uint32 capacity_DEPRECATED = 2;
 * @return {number}
 */
proto.ei.ArtifactsConfigurationResponse.MissionParameters.prototype.getCapacityDeprecated = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.ei.ArtifactsConfigurationResponse.MissionParameters} returns this
 */
proto.ei.ArtifactsConfigurationResponse.MissionParameters.prototype.setCapacityDeprecated = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.ArtifactsConfigurationResponse.MissionParameters} returns this
 */
proto.ei.ArtifactsConfigurationResponse.MissionParameters.prototype.clearCapacityDeprecated = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ArtifactsConfigurationResponse.MissionParameters.prototype.hasCapacityDeprecated = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ei.ArtifactsConfigurationResponse.ArtifactParameters.prototype.toObject = function(opt_includeInstance) {
  return proto.ei.ArtifactsConfigurationResponse.ArtifactParameters.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ei.ArtifactsConfigurationResponse.ArtifactParameters} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.ArtifactsConfigurationResponse.ArtifactParameters.toObject = function(includeInstance, msg) {
  var f, obj = {
    spec: (f = msg.getSpec()) && proto.ei.ArtifactSpec.toObject(includeInstance, f),
    baseQuality: (f = jspb.Message.getOptionalFloatingPointField(msg, 2)) == null ? undefined : f,
    oddsMultiplier: (f = jspb.Message.getOptionalFloatingPointField(msg, 4)) == null ? undefined : f,
    value: (f = jspb.Message.getOptionalFloatingPointField(msg, 3)) == null ? undefined : f,
    craftingPrice: (f = jspb.Message.getOptionalFloatingPointField(msg, 5)) == null ? undefined : f,
    craftingPriceLow: (f = jspb.Message.getOptionalFloatingPointField(msg, 6)) == null ? undefined : f,
    craftingPriceDomain: (f = jspb.Message.getField(msg, 7)) == null ? undefined : f,
    craftingPriceCurve: (f = jspb.Message.getOptionalFloatingPointField(msg, 8)) == null ? undefined : f,
    craftingXp: (f = jspb.Message.getField(msg, 9)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ei.ArtifactsConfigurationResponse.ArtifactParameters}
 */
proto.ei.ArtifactsConfigurationResponse.ArtifactParameters.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ei.ArtifactsConfigurationResponse.ArtifactParameters;
  return proto.ei.ArtifactsConfigurationResponse.ArtifactParameters.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ei.ArtifactsConfigurationResponse.ArtifactParameters} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ei.ArtifactsConfigurationResponse.ArtifactParameters}
 */
proto.ei.ArtifactsConfigurationResponse.ArtifactParameters.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.ei.ArtifactSpec;
      reader.readMessage(value,proto.ei.ArtifactSpec.deserializeBinaryFromReader);
      msg.setSpec(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setBaseQuality(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setOddsMultiplier(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setValue(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setCraftingPrice(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setCraftingPriceLow(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setCraftingPriceDomain(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setCraftingPriceCurve(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setCraftingXp(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ei.ArtifactsConfigurationResponse.ArtifactParameters.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ei.ArtifactsConfigurationResponse.ArtifactParameters.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ei.ArtifactsConfigurationResponse.ArtifactParameters} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.ArtifactsConfigurationResponse.ArtifactParameters.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSpec();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.ei.ArtifactSpec.serializeBinaryToWriter
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeDouble(
      2,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeDouble(
      4,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeDouble(
      3,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeDouble(
      5,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeDouble(
      6,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 7));
  if (f != null) {
    writer.writeUint32(
      7,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 8));
  if (f != null) {
    writer.writeDouble(
      8,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 9));
  if (f != null) {
    writer.writeUint64(
      9,
      f
    );
  }
};


/**
 * optional ArtifactSpec spec = 1;
 * @return {?proto.ei.ArtifactSpec}
 */
proto.ei.ArtifactsConfigurationResponse.ArtifactParameters.prototype.getSpec = function() {
  return /** @type{?proto.ei.ArtifactSpec} */ (
    jspb.Message.getWrapperField(this, proto.ei.ArtifactSpec, 1));
};


/**
 * @param {?proto.ei.ArtifactSpec|undefined} value
 * @return {!proto.ei.ArtifactsConfigurationResponse.ArtifactParameters} returns this
*/
proto.ei.ArtifactsConfigurationResponse.ArtifactParameters.prototype.setSpec = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.ei.ArtifactsConfigurationResponse.ArtifactParameters} returns this
 */
proto.ei.ArtifactsConfigurationResponse.ArtifactParameters.prototype.clearSpec = function() {
  return this.setSpec(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ArtifactsConfigurationResponse.ArtifactParameters.prototype.hasSpec = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional double base_quality = 2;
 * @return {number}
 */
proto.ei.ArtifactsConfigurationResponse.ArtifactParameters.prototype.getBaseQuality = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 2, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.ei.ArtifactsConfigurationResponse.ArtifactParameters} returns this
 */
proto.ei.ArtifactsConfigurationResponse.ArtifactParameters.prototype.setBaseQuality = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.ArtifactsConfigurationResponse.ArtifactParameters} returns this
 */
proto.ei.ArtifactsConfigurationResponse.ArtifactParameters.prototype.clearBaseQuality = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ArtifactsConfigurationResponse.ArtifactParameters.prototype.hasBaseQuality = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional double odds_multiplier = 4;
 * @return {number}
 */
proto.ei.ArtifactsConfigurationResponse.ArtifactParameters.prototype.getOddsMultiplier = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 4, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.ei.ArtifactsConfigurationResponse.ArtifactParameters} returns this
 */
proto.ei.ArtifactsConfigurationResponse.ArtifactParameters.prototype.setOddsMultiplier = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.ArtifactsConfigurationResponse.ArtifactParameters} returns this
 */
proto.ei.ArtifactsConfigurationResponse.ArtifactParameters.prototype.clearOddsMultiplier = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ArtifactsConfigurationResponse.ArtifactParameters.prototype.hasOddsMultiplier = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional double value = 3;
 * @return {number}
 */
proto.ei.ArtifactsConfigurationResponse.ArtifactParameters.prototype.getValue = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 3, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.ei.ArtifactsConfigurationResponse.ArtifactParameters} returns this
 */
proto.ei.ArtifactsConfigurationResponse.ArtifactParameters.prototype.setValue = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.ArtifactsConfigurationResponse.ArtifactParameters} returns this
 */
proto.ei.ArtifactsConfigurationResponse.ArtifactParameters.prototype.clearValue = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ArtifactsConfigurationResponse.ArtifactParameters.prototype.hasValue = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional double crafting_price = 5;
 * @return {number}
 */
proto.ei.ArtifactsConfigurationResponse.ArtifactParameters.prototype.getCraftingPrice = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 5, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.ei.ArtifactsConfigurationResponse.ArtifactParameters} returns this
 */
proto.ei.ArtifactsConfigurationResponse.ArtifactParameters.prototype.setCraftingPrice = function(value) {
  return jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.ArtifactsConfigurationResponse.ArtifactParameters} returns this
 */
proto.ei.ArtifactsConfigurationResponse.ArtifactParameters.prototype.clearCraftingPrice = function() {
  return jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ArtifactsConfigurationResponse.ArtifactParameters.prototype.hasCraftingPrice = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional double crafting_price_low = 6;
 * @return {number}
 */
proto.ei.ArtifactsConfigurationResponse.ArtifactParameters.prototype.getCraftingPriceLow = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 6, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.ei.ArtifactsConfigurationResponse.ArtifactParameters} returns this
 */
proto.ei.ArtifactsConfigurationResponse.ArtifactParameters.prototype.setCraftingPriceLow = function(value) {
  return jspb.Message.setField(this, 6, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.ArtifactsConfigurationResponse.ArtifactParameters} returns this
 */
proto.ei.ArtifactsConfigurationResponse.ArtifactParameters.prototype.clearCraftingPriceLow = function() {
  return jspb.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ArtifactsConfigurationResponse.ArtifactParameters.prototype.hasCraftingPriceLow = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional uint32 crafting_price_domain = 7;
 * @return {number}
 */
proto.ei.ArtifactsConfigurationResponse.ArtifactParameters.prototype.getCraftingPriceDomain = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {number} value
 * @return {!proto.ei.ArtifactsConfigurationResponse.ArtifactParameters} returns this
 */
proto.ei.ArtifactsConfigurationResponse.ArtifactParameters.prototype.setCraftingPriceDomain = function(value) {
  return jspb.Message.setField(this, 7, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.ArtifactsConfigurationResponse.ArtifactParameters} returns this
 */
proto.ei.ArtifactsConfigurationResponse.ArtifactParameters.prototype.clearCraftingPriceDomain = function() {
  return jspb.Message.setField(this, 7, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ArtifactsConfigurationResponse.ArtifactParameters.prototype.hasCraftingPriceDomain = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional double crafting_price_curve = 8;
 * @return {number}
 */
proto.ei.ArtifactsConfigurationResponse.ArtifactParameters.prototype.getCraftingPriceCurve = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 8, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.ei.ArtifactsConfigurationResponse.ArtifactParameters} returns this
 */
proto.ei.ArtifactsConfigurationResponse.ArtifactParameters.prototype.setCraftingPriceCurve = function(value) {
  return jspb.Message.setField(this, 8, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.ArtifactsConfigurationResponse.ArtifactParameters} returns this
 */
proto.ei.ArtifactsConfigurationResponse.ArtifactParameters.prototype.clearCraftingPriceCurve = function() {
  return jspb.Message.setField(this, 8, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ArtifactsConfigurationResponse.ArtifactParameters.prototype.hasCraftingPriceCurve = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional uint64 crafting_xp = 9;
 * @return {number}
 */
proto.ei.ArtifactsConfigurationResponse.ArtifactParameters.prototype.getCraftingXp = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};


/**
 * @param {number} value
 * @return {!proto.ei.ArtifactsConfigurationResponse.ArtifactParameters} returns this
 */
proto.ei.ArtifactsConfigurationResponse.ArtifactParameters.prototype.setCraftingXp = function(value) {
  return jspb.Message.setField(this, 9, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.ArtifactsConfigurationResponse.ArtifactParameters} returns this
 */
proto.ei.ArtifactsConfigurationResponse.ArtifactParameters.prototype.clearCraftingXp = function() {
  return jspb.Message.setField(this, 9, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ArtifactsConfigurationResponse.ArtifactParameters.prototype.hasCraftingXp = function() {
  return jspb.Message.getField(this, 9) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ei.ArtifactsConfigurationResponse.CraftingLevelInfo.prototype.toObject = function(opt_includeInstance) {
  return proto.ei.ArtifactsConfigurationResponse.CraftingLevelInfo.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ei.ArtifactsConfigurationResponse.CraftingLevelInfo} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.ArtifactsConfigurationResponse.CraftingLevelInfo.toObject = function(includeInstance, msg) {
  var f, obj = {
    xpRequired: (f = jspb.Message.getOptionalFloatingPointField(msg, 1)) == null ? undefined : f,
    rarityMult: (f = jspb.Message.getOptionalFloatingPointField(msg, 2)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ei.ArtifactsConfigurationResponse.CraftingLevelInfo}
 */
proto.ei.ArtifactsConfigurationResponse.CraftingLevelInfo.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ei.ArtifactsConfigurationResponse.CraftingLevelInfo;
  return proto.ei.ArtifactsConfigurationResponse.CraftingLevelInfo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ei.ArtifactsConfigurationResponse.CraftingLevelInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ei.ArtifactsConfigurationResponse.CraftingLevelInfo}
 */
proto.ei.ArtifactsConfigurationResponse.CraftingLevelInfo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setXpRequired(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setRarityMult(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ei.ArtifactsConfigurationResponse.CraftingLevelInfo.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ei.ArtifactsConfigurationResponse.CraftingLevelInfo.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ei.ArtifactsConfigurationResponse.CraftingLevelInfo} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.ArtifactsConfigurationResponse.CraftingLevelInfo.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {number} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeDouble(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeFloat(
      2,
      f
    );
  }
};


/**
 * optional double xp_required = 1;
 * @return {number}
 */
proto.ei.ArtifactsConfigurationResponse.CraftingLevelInfo.prototype.getXpRequired = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 1, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.ei.ArtifactsConfigurationResponse.CraftingLevelInfo} returns this
 */
proto.ei.ArtifactsConfigurationResponse.CraftingLevelInfo.prototype.setXpRequired = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.ArtifactsConfigurationResponse.CraftingLevelInfo} returns this
 */
proto.ei.ArtifactsConfigurationResponse.CraftingLevelInfo.prototype.clearXpRequired = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ArtifactsConfigurationResponse.CraftingLevelInfo.prototype.hasXpRequired = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional float rarity_mult = 2;
 * @return {number}
 */
proto.ei.ArtifactsConfigurationResponse.CraftingLevelInfo.prototype.getRarityMult = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 2, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.ei.ArtifactsConfigurationResponse.CraftingLevelInfo} returns this
 */
proto.ei.ArtifactsConfigurationResponse.CraftingLevelInfo.prototype.setRarityMult = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.ArtifactsConfigurationResponse.CraftingLevelInfo} returns this
 */
proto.ei.ArtifactsConfigurationResponse.CraftingLevelInfo.prototype.clearRarityMult = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ArtifactsConfigurationResponse.CraftingLevelInfo.prototype.hasRarityMult = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * repeated MissionParameters mission_parameters = 1;
 * @return {!Array<!proto.ei.ArtifactsConfigurationResponse.MissionParameters>}
 */
proto.ei.ArtifactsConfigurationResponse.prototype.getMissionParametersList = function() {
  return /** @type{!Array<!proto.ei.ArtifactsConfigurationResponse.MissionParameters>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.ei.ArtifactsConfigurationResponse.MissionParameters, 1));
};


/**
 * @param {!Array<!proto.ei.ArtifactsConfigurationResponse.MissionParameters>} value
 * @return {!proto.ei.ArtifactsConfigurationResponse} returns this
*/
proto.ei.ArtifactsConfigurationResponse.prototype.setMissionParametersList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.ei.ArtifactsConfigurationResponse.MissionParameters=} opt_value
 * @param {number=} opt_index
 * @return {!proto.ei.ArtifactsConfigurationResponse.MissionParameters}
 */
proto.ei.ArtifactsConfigurationResponse.prototype.addMissionParameters = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.ei.ArtifactsConfigurationResponse.MissionParameters, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.ei.ArtifactsConfigurationResponse} returns this
 */
proto.ei.ArtifactsConfigurationResponse.prototype.clearMissionParametersList = function() {
  return this.setMissionParametersList([]);
};


/**
 * repeated ArtifactParameters artifact_parameters = 2;
 * @return {!Array<!proto.ei.ArtifactsConfigurationResponse.ArtifactParameters>}
 */
proto.ei.ArtifactsConfigurationResponse.prototype.getArtifactParametersList = function() {
  return /** @type{!Array<!proto.ei.ArtifactsConfigurationResponse.ArtifactParameters>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.ei.ArtifactsConfigurationResponse.ArtifactParameters, 2));
};


/**
 * @param {!Array<!proto.ei.ArtifactsConfigurationResponse.ArtifactParameters>} value
 * @return {!proto.ei.ArtifactsConfigurationResponse} returns this
*/
proto.ei.ArtifactsConfigurationResponse.prototype.setArtifactParametersList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.ei.ArtifactsConfigurationResponse.ArtifactParameters=} opt_value
 * @param {number=} opt_index
 * @return {!proto.ei.ArtifactsConfigurationResponse.ArtifactParameters}
 */
proto.ei.ArtifactsConfigurationResponse.prototype.addArtifactParameters = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.ei.ArtifactsConfigurationResponse.ArtifactParameters, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.ei.ArtifactsConfigurationResponse} returns this
 */
proto.ei.ArtifactsConfigurationResponse.prototype.clearArtifactParametersList = function() {
  return this.setArtifactParametersList([]);
};


/**
 * repeated CraftingLevelInfo crafting_level_infos = 3;
 * @return {!Array<!proto.ei.ArtifactsConfigurationResponse.CraftingLevelInfo>}
 */
proto.ei.ArtifactsConfigurationResponse.prototype.getCraftingLevelInfosList = function() {
  return /** @type{!Array<!proto.ei.ArtifactsConfigurationResponse.CraftingLevelInfo>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.ei.ArtifactsConfigurationResponse.CraftingLevelInfo, 3));
};


/**
 * @param {!Array<!proto.ei.ArtifactsConfigurationResponse.CraftingLevelInfo>} value
 * @return {!proto.ei.ArtifactsConfigurationResponse} returns this
*/
proto.ei.ArtifactsConfigurationResponse.prototype.setCraftingLevelInfosList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.ei.ArtifactsConfigurationResponse.CraftingLevelInfo=} opt_value
 * @param {number=} opt_index
 * @return {!proto.ei.ArtifactsConfigurationResponse.CraftingLevelInfo}
 */
proto.ei.ArtifactsConfigurationResponse.prototype.addCraftingLevelInfos = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.ei.ArtifactsConfigurationResponse.CraftingLevelInfo, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.ei.ArtifactsConfigurationResponse} returns this
 */
proto.ei.ArtifactsConfigurationResponse.prototype.clearCraftingLevelInfosList = function() {
  return this.setCraftingLevelInfosList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ei.MissionRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.ei.MissionRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ei.MissionRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.MissionRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    rinfo: (f = msg.getRinfo()) && proto.ei.BasicRequestInfo.toObject(includeInstance, f),
    clientVersion: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    eiUserId: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f,
    info: (f = msg.getInfo()) && proto.ei.MissionInfo.toObject(includeInstance, f),
    clientInfo: (f = msg.getClientInfo()) && proto.ei.ArtifactsClientInfo.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ei.MissionRequest}
 */
proto.ei.MissionRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ei.MissionRequest;
  return proto.ei.MissionRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ei.MissionRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ei.MissionRequest}
 */
proto.ei.MissionRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 4:
      var value = new proto.ei.BasicRequestInfo;
      reader.readMessage(value,proto.ei.BasicRequestInfo.deserializeBinaryFromReader);
      msg.setRinfo(value);
      break;
    case 1:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setClientVersion(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setEiUserId(value);
      break;
    case 2:
      var value = new proto.ei.MissionInfo;
      reader.readMessage(value,proto.ei.MissionInfo.deserializeBinaryFromReader);
      msg.setInfo(value);
      break;
    case 5:
      var value = new proto.ei.ArtifactsClientInfo;
      reader.readMessage(value,proto.ei.ArtifactsClientInfo.deserializeBinaryFromReader);
      msg.setClientInfo(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ei.MissionRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ei.MissionRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ei.MissionRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.MissionRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRinfo();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.ei.BasicRequestInfo.serializeBinaryToWriter
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeUint32(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getInfo();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.ei.MissionInfo.serializeBinaryToWriter
    );
  }
  f = message.getClientInfo();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.ei.ArtifactsClientInfo.serializeBinaryToWriter
    );
  }
};


/**
 * optional BasicRequestInfo rinfo = 4;
 * @return {?proto.ei.BasicRequestInfo}
 */
proto.ei.MissionRequest.prototype.getRinfo = function() {
  return /** @type{?proto.ei.BasicRequestInfo} */ (
    jspb.Message.getWrapperField(this, proto.ei.BasicRequestInfo, 4));
};


/**
 * @param {?proto.ei.BasicRequestInfo|undefined} value
 * @return {!proto.ei.MissionRequest} returns this
*/
proto.ei.MissionRequest.prototype.setRinfo = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.ei.MissionRequest} returns this
 */
proto.ei.MissionRequest.prototype.clearRinfo = function() {
  return this.setRinfo(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.MissionRequest.prototype.hasRinfo = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional uint32 client_version = 1;
 * @return {number}
 */
proto.ei.MissionRequest.prototype.getClientVersion = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.ei.MissionRequest} returns this
 */
proto.ei.MissionRequest.prototype.setClientVersion = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.MissionRequest} returns this
 */
proto.ei.MissionRequest.prototype.clearClientVersion = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.MissionRequest.prototype.hasClientVersion = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string ei_user_id = 3;
 * @return {string}
 */
proto.ei.MissionRequest.prototype.getEiUserId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.ei.MissionRequest} returns this
 */
proto.ei.MissionRequest.prototype.setEiUserId = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.MissionRequest} returns this
 */
proto.ei.MissionRequest.prototype.clearEiUserId = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.MissionRequest.prototype.hasEiUserId = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional MissionInfo info = 2;
 * @return {?proto.ei.MissionInfo}
 */
proto.ei.MissionRequest.prototype.getInfo = function() {
  return /** @type{?proto.ei.MissionInfo} */ (
    jspb.Message.getWrapperField(this, proto.ei.MissionInfo, 2));
};


/**
 * @param {?proto.ei.MissionInfo|undefined} value
 * @return {!proto.ei.MissionRequest} returns this
*/
proto.ei.MissionRequest.prototype.setInfo = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.ei.MissionRequest} returns this
 */
proto.ei.MissionRequest.prototype.clearInfo = function() {
  return this.setInfo(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.MissionRequest.prototype.hasInfo = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional ArtifactsClientInfo client_info = 5;
 * @return {?proto.ei.ArtifactsClientInfo}
 */
proto.ei.MissionRequest.prototype.getClientInfo = function() {
  return /** @type{?proto.ei.ArtifactsClientInfo} */ (
    jspb.Message.getWrapperField(this, proto.ei.ArtifactsClientInfo, 5));
};


/**
 * @param {?proto.ei.ArtifactsClientInfo|undefined} value
 * @return {!proto.ei.MissionRequest} returns this
*/
proto.ei.MissionRequest.prototype.setClientInfo = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.ei.MissionRequest} returns this
 */
proto.ei.MissionRequest.prototype.clearClientInfo = function() {
  return this.setClientInfo(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.MissionRequest.prototype.hasClientInfo = function() {
  return jspb.Message.getField(this, 5) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ei.MissionResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.ei.MissionResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ei.MissionResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.MissionResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    success: (f = jspb.Message.getBooleanField(msg, 1)) == null ? undefined : f,
    info: (f = msg.getInfo()) && proto.ei.MissionInfo.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ei.MissionResponse}
 */
proto.ei.MissionResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ei.MissionResponse;
  return proto.ei.MissionResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ei.MissionResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ei.MissionResponse}
 */
proto.ei.MissionResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setSuccess(value);
      break;
    case 2:
      var value = new proto.ei.MissionInfo;
      reader.readMessage(value,proto.ei.MissionInfo.deserializeBinaryFromReader);
      msg.setInfo(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ei.MissionResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ei.MissionResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ei.MissionResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.MissionResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {boolean} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeBool(
      1,
      f
    );
  }
  f = message.getInfo();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.ei.MissionInfo.serializeBinaryToWriter
    );
  }
};


/**
 * optional bool success = 1;
 * @return {boolean}
 */
proto.ei.MissionResponse.prototype.getSuccess = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.ei.MissionResponse} returns this
 */
proto.ei.MissionResponse.prototype.setSuccess = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.MissionResponse} returns this
 */
proto.ei.MissionResponse.prototype.clearSuccess = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.MissionResponse.prototype.hasSuccess = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional MissionInfo info = 2;
 * @return {?proto.ei.MissionInfo}
 */
proto.ei.MissionResponse.prototype.getInfo = function() {
  return /** @type{?proto.ei.MissionInfo} */ (
    jspb.Message.getWrapperField(this, proto.ei.MissionInfo, 2));
};


/**
 * @param {?proto.ei.MissionInfo|undefined} value
 * @return {!proto.ei.MissionResponse} returns this
*/
proto.ei.MissionResponse.prototype.setInfo = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.ei.MissionResponse} returns this
 */
proto.ei.MissionResponse.prototype.clearInfo = function() {
  return this.setInfo(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.MissionResponse.prototype.hasInfo = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.ei.GetActiveMissionsResponse.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ei.GetActiveMissionsResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.ei.GetActiveMissionsResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ei.GetActiveMissionsResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.GetActiveMissionsResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    success: (f = jspb.Message.getBooleanField(msg, 1)) == null ? undefined : f,
    activeMissionsList: jspb.Message.toObjectList(msg.getActiveMissionsList(),
    proto.ei.MissionInfo.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ei.GetActiveMissionsResponse}
 */
proto.ei.GetActiveMissionsResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ei.GetActiveMissionsResponse;
  return proto.ei.GetActiveMissionsResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ei.GetActiveMissionsResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ei.GetActiveMissionsResponse}
 */
proto.ei.GetActiveMissionsResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setSuccess(value);
      break;
    case 2:
      var value = new proto.ei.MissionInfo;
      reader.readMessage(value,proto.ei.MissionInfo.deserializeBinaryFromReader);
      msg.addActiveMissions(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ei.GetActiveMissionsResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ei.GetActiveMissionsResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ei.GetActiveMissionsResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.GetActiveMissionsResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {boolean} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeBool(
      1,
      f
    );
  }
  f = message.getActiveMissionsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.ei.MissionInfo.serializeBinaryToWriter
    );
  }
};


/**
 * optional bool success = 1;
 * @return {boolean}
 */
proto.ei.GetActiveMissionsResponse.prototype.getSuccess = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.ei.GetActiveMissionsResponse} returns this
 */
proto.ei.GetActiveMissionsResponse.prototype.setSuccess = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.GetActiveMissionsResponse} returns this
 */
proto.ei.GetActiveMissionsResponse.prototype.clearSuccess = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.GetActiveMissionsResponse.prototype.hasSuccess = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * repeated MissionInfo active_missions = 2;
 * @return {!Array<!proto.ei.MissionInfo>}
 */
proto.ei.GetActiveMissionsResponse.prototype.getActiveMissionsList = function() {
  return /** @type{!Array<!proto.ei.MissionInfo>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.ei.MissionInfo, 2));
};


/**
 * @param {!Array<!proto.ei.MissionInfo>} value
 * @return {!proto.ei.GetActiveMissionsResponse} returns this
*/
proto.ei.GetActiveMissionsResponse.prototype.setActiveMissionsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.ei.MissionInfo=} opt_value
 * @param {number=} opt_index
 * @return {!proto.ei.MissionInfo}
 */
proto.ei.GetActiveMissionsResponse.prototype.addActiveMissions = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.ei.MissionInfo, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.ei.GetActiveMissionsResponse} returns this
 */
proto.ei.GetActiveMissionsResponse.prototype.clearActiveMissionsList = function() {
  return this.setActiveMissionsList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.ei.CompleteMissionResponse.repeatedFields_ = [3,4];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ei.CompleteMissionResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.ei.CompleteMissionResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ei.CompleteMissionResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.CompleteMissionResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    success: (f = jspb.Message.getBooleanField(msg, 1)) == null ? undefined : f,
    info: (f = msg.getInfo()) && proto.ei.MissionInfo.toObject(includeInstance, f),
    artifactsList: jspb.Message.toObjectList(msg.getArtifactsList(),
    proto.ei.CompleteMissionResponse.SecureArtifactSpec.toObject, includeInstance),
    otherRewardsList: jspb.Message.toObjectList(msg.getOtherRewardsList(),
    proto.ei.Reward.toObject, includeInstance),
    eiUserId: (f = jspb.Message.getField(msg, 5)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ei.CompleteMissionResponse}
 */
proto.ei.CompleteMissionResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ei.CompleteMissionResponse;
  return proto.ei.CompleteMissionResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ei.CompleteMissionResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ei.CompleteMissionResponse}
 */
proto.ei.CompleteMissionResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setSuccess(value);
      break;
    case 2:
      var value = new proto.ei.MissionInfo;
      reader.readMessage(value,proto.ei.MissionInfo.deserializeBinaryFromReader);
      msg.setInfo(value);
      break;
    case 3:
      var value = new proto.ei.CompleteMissionResponse.SecureArtifactSpec;
      reader.readMessage(value,proto.ei.CompleteMissionResponse.SecureArtifactSpec.deserializeBinaryFromReader);
      msg.addArtifacts(value);
      break;
    case 4:
      var value = new proto.ei.Reward;
      reader.readMessage(value,proto.ei.Reward.deserializeBinaryFromReader);
      msg.addOtherRewards(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setEiUserId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ei.CompleteMissionResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ei.CompleteMissionResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ei.CompleteMissionResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.CompleteMissionResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {boolean} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeBool(
      1,
      f
    );
  }
  f = message.getInfo();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.ei.MissionInfo.serializeBinaryToWriter
    );
  }
  f = message.getArtifactsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      proto.ei.CompleteMissionResponse.SecureArtifactSpec.serializeBinaryToWriter
    );
  }
  f = message.getOtherRewardsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      4,
      f,
      proto.ei.Reward.serializeBinaryToWriter
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeString(
      5,
      f
    );
  }
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ei.CompleteMissionResponse.SecureArtifactSpec.prototype.toObject = function(opt_includeInstance) {
  return proto.ei.CompleteMissionResponse.SecureArtifactSpec.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ei.CompleteMissionResponse.SecureArtifactSpec} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.CompleteMissionResponse.SecureArtifactSpec.toObject = function(includeInstance, msg) {
  var f, obj = {
    spec: (f = msg.getSpec()) && proto.ei.ArtifactSpec.toObject(includeInstance, f),
    serverId: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ei.CompleteMissionResponse.SecureArtifactSpec}
 */
proto.ei.CompleteMissionResponse.SecureArtifactSpec.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ei.CompleteMissionResponse.SecureArtifactSpec;
  return proto.ei.CompleteMissionResponse.SecureArtifactSpec.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ei.CompleteMissionResponse.SecureArtifactSpec} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ei.CompleteMissionResponse.SecureArtifactSpec}
 */
proto.ei.CompleteMissionResponse.SecureArtifactSpec.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.ei.ArtifactSpec;
      reader.readMessage(value,proto.ei.ArtifactSpec.deserializeBinaryFromReader);
      msg.setSpec(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setServerId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ei.CompleteMissionResponse.SecureArtifactSpec.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ei.CompleteMissionResponse.SecureArtifactSpec.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ei.CompleteMissionResponse.SecureArtifactSpec} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.CompleteMissionResponse.SecureArtifactSpec.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSpec();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.ei.ArtifactSpec.serializeBinaryToWriter
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional ArtifactSpec spec = 1;
 * @return {?proto.ei.ArtifactSpec}
 */
proto.ei.CompleteMissionResponse.SecureArtifactSpec.prototype.getSpec = function() {
  return /** @type{?proto.ei.ArtifactSpec} */ (
    jspb.Message.getWrapperField(this, proto.ei.ArtifactSpec, 1));
};


/**
 * @param {?proto.ei.ArtifactSpec|undefined} value
 * @return {!proto.ei.CompleteMissionResponse.SecureArtifactSpec} returns this
*/
proto.ei.CompleteMissionResponse.SecureArtifactSpec.prototype.setSpec = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.ei.CompleteMissionResponse.SecureArtifactSpec} returns this
 */
proto.ei.CompleteMissionResponse.SecureArtifactSpec.prototype.clearSpec = function() {
  return this.setSpec(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.CompleteMissionResponse.SecureArtifactSpec.prototype.hasSpec = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string server_id = 2;
 * @return {string}
 */
proto.ei.CompleteMissionResponse.SecureArtifactSpec.prototype.getServerId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.ei.CompleteMissionResponse.SecureArtifactSpec} returns this
 */
proto.ei.CompleteMissionResponse.SecureArtifactSpec.prototype.setServerId = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.CompleteMissionResponse.SecureArtifactSpec} returns this
 */
proto.ei.CompleteMissionResponse.SecureArtifactSpec.prototype.clearServerId = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.CompleteMissionResponse.SecureArtifactSpec.prototype.hasServerId = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional bool success = 1;
 * @return {boolean}
 */
proto.ei.CompleteMissionResponse.prototype.getSuccess = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.ei.CompleteMissionResponse} returns this
 */
proto.ei.CompleteMissionResponse.prototype.setSuccess = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.CompleteMissionResponse} returns this
 */
proto.ei.CompleteMissionResponse.prototype.clearSuccess = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.CompleteMissionResponse.prototype.hasSuccess = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional MissionInfo info = 2;
 * @return {?proto.ei.MissionInfo}
 */
proto.ei.CompleteMissionResponse.prototype.getInfo = function() {
  return /** @type{?proto.ei.MissionInfo} */ (
    jspb.Message.getWrapperField(this, proto.ei.MissionInfo, 2));
};


/**
 * @param {?proto.ei.MissionInfo|undefined} value
 * @return {!proto.ei.CompleteMissionResponse} returns this
*/
proto.ei.CompleteMissionResponse.prototype.setInfo = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.ei.CompleteMissionResponse} returns this
 */
proto.ei.CompleteMissionResponse.prototype.clearInfo = function() {
  return this.setInfo(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.CompleteMissionResponse.prototype.hasInfo = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * repeated SecureArtifactSpec artifacts = 3;
 * @return {!Array<!proto.ei.CompleteMissionResponse.SecureArtifactSpec>}
 */
proto.ei.CompleteMissionResponse.prototype.getArtifactsList = function() {
  return /** @type{!Array<!proto.ei.CompleteMissionResponse.SecureArtifactSpec>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.ei.CompleteMissionResponse.SecureArtifactSpec, 3));
};


/**
 * @param {!Array<!proto.ei.CompleteMissionResponse.SecureArtifactSpec>} value
 * @return {!proto.ei.CompleteMissionResponse} returns this
*/
proto.ei.CompleteMissionResponse.prototype.setArtifactsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.ei.CompleteMissionResponse.SecureArtifactSpec=} opt_value
 * @param {number=} opt_index
 * @return {!proto.ei.CompleteMissionResponse.SecureArtifactSpec}
 */
proto.ei.CompleteMissionResponse.prototype.addArtifacts = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.ei.CompleteMissionResponse.SecureArtifactSpec, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.ei.CompleteMissionResponse} returns this
 */
proto.ei.CompleteMissionResponse.prototype.clearArtifactsList = function() {
  return this.setArtifactsList([]);
};


/**
 * repeated Reward other_rewards = 4;
 * @return {!Array<!proto.ei.Reward>}
 */
proto.ei.CompleteMissionResponse.prototype.getOtherRewardsList = function() {
  return /** @type{!Array<!proto.ei.Reward>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.ei.Reward, 4));
};


/**
 * @param {!Array<!proto.ei.Reward>} value
 * @return {!proto.ei.CompleteMissionResponse} returns this
*/
proto.ei.CompleteMissionResponse.prototype.setOtherRewardsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 4, value);
};


/**
 * @param {!proto.ei.Reward=} opt_value
 * @param {number=} opt_index
 * @return {!proto.ei.Reward}
 */
proto.ei.CompleteMissionResponse.prototype.addOtherRewards = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 4, opt_value, proto.ei.Reward, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.ei.CompleteMissionResponse} returns this
 */
proto.ei.CompleteMissionResponse.prototype.clearOtherRewardsList = function() {
  return this.setOtherRewardsList([]);
};


/**
 * optional string ei_user_id = 5;
 * @return {string}
 */
proto.ei.CompleteMissionResponse.prototype.getEiUserId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.ei.CompleteMissionResponse} returns this
 */
proto.ei.CompleteMissionResponse.prototype.setEiUserId = function(value) {
  return jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.CompleteMissionResponse} returns this
 */
proto.ei.CompleteMissionResponse.prototype.clearEiUserId = function() {
  return jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.CompleteMissionResponse.prototype.hasEiUserId = function() {
  return jspb.Message.getField(this, 5) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ei.CollectContractArtifactRewardsRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.ei.CollectContractArtifactRewardsRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ei.CollectContractArtifactRewardsRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.CollectContractArtifactRewardsRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    rinfo: (f = msg.getRinfo()) && proto.ei.BasicRequestInfo.toObject(includeInstance, f),
    contractIdentifier: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,
    league: (f = jspb.Message.getField(msg, 5)) == null ? undefined : f,
    grade: (f = jspb.Message.getField(msg, 6)) == null ? undefined : f,
    goalIndex: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f,
    bestShip: (f = jspb.Message.getField(msg, 4)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ei.CollectContractArtifactRewardsRequest}
 */
proto.ei.CollectContractArtifactRewardsRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ei.CollectContractArtifactRewardsRequest;
  return proto.ei.CollectContractArtifactRewardsRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ei.CollectContractArtifactRewardsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ei.CollectContractArtifactRewardsRequest}
 */
proto.ei.CollectContractArtifactRewardsRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.ei.BasicRequestInfo;
      reader.readMessage(value,proto.ei.BasicRequestInfo.deserializeBinaryFromReader);
      msg.setRinfo(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setContractIdentifier(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setLeague(value);
      break;
    case 6:
      var value = /** @type {!proto.ei.Contract.PlayerGrade} */ (reader.readEnum());
      msg.setGrade(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setGoalIndex(value);
      break;
    case 4:
      var value = /** @type {!proto.ei.MissionInfo.Spaceship} */ (reader.readEnum());
      msg.setBestShip(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ei.CollectContractArtifactRewardsRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ei.CollectContractArtifactRewardsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ei.CollectContractArtifactRewardsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.CollectContractArtifactRewardsRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRinfo();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.ei.BasicRequestInfo.serializeBinaryToWriter
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeUint32(
      5,
      f
    );
  }
  f = /** @type {!proto.ei.Contract.PlayerGrade} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeEnum(
      6,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeUint32(
      3,
      f
    );
  }
  f = /** @type {!proto.ei.MissionInfo.Spaceship} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeEnum(
      4,
      f
    );
  }
};


/**
 * optional BasicRequestInfo rinfo = 1;
 * @return {?proto.ei.BasicRequestInfo}
 */
proto.ei.CollectContractArtifactRewardsRequest.prototype.getRinfo = function() {
  return /** @type{?proto.ei.BasicRequestInfo} */ (
    jspb.Message.getWrapperField(this, proto.ei.BasicRequestInfo, 1));
};


/**
 * @param {?proto.ei.BasicRequestInfo|undefined} value
 * @return {!proto.ei.CollectContractArtifactRewardsRequest} returns this
*/
proto.ei.CollectContractArtifactRewardsRequest.prototype.setRinfo = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.ei.CollectContractArtifactRewardsRequest} returns this
 */
proto.ei.CollectContractArtifactRewardsRequest.prototype.clearRinfo = function() {
  return this.setRinfo(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.CollectContractArtifactRewardsRequest.prototype.hasRinfo = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string contract_identifier = 2;
 * @return {string}
 */
proto.ei.CollectContractArtifactRewardsRequest.prototype.getContractIdentifier = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.ei.CollectContractArtifactRewardsRequest} returns this
 */
proto.ei.CollectContractArtifactRewardsRequest.prototype.setContractIdentifier = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.CollectContractArtifactRewardsRequest} returns this
 */
proto.ei.CollectContractArtifactRewardsRequest.prototype.clearContractIdentifier = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.CollectContractArtifactRewardsRequest.prototype.hasContractIdentifier = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional uint32 league = 5;
 * @return {number}
 */
proto.ei.CollectContractArtifactRewardsRequest.prototype.getLeague = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.ei.CollectContractArtifactRewardsRequest} returns this
 */
proto.ei.CollectContractArtifactRewardsRequest.prototype.setLeague = function(value) {
  return jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.CollectContractArtifactRewardsRequest} returns this
 */
proto.ei.CollectContractArtifactRewardsRequest.prototype.clearLeague = function() {
  return jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.CollectContractArtifactRewardsRequest.prototype.hasLeague = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional Contract.PlayerGrade grade = 6;
 * @return {!proto.ei.Contract.PlayerGrade}
 */
proto.ei.CollectContractArtifactRewardsRequest.prototype.getGrade = function() {
  return /** @type {!proto.ei.Contract.PlayerGrade} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {!proto.ei.Contract.PlayerGrade} value
 * @return {!proto.ei.CollectContractArtifactRewardsRequest} returns this
 */
proto.ei.CollectContractArtifactRewardsRequest.prototype.setGrade = function(value) {
  return jspb.Message.setField(this, 6, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.CollectContractArtifactRewardsRequest} returns this
 */
proto.ei.CollectContractArtifactRewardsRequest.prototype.clearGrade = function() {
  return jspb.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.CollectContractArtifactRewardsRequest.prototype.hasGrade = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional uint32 goal_index = 3;
 * @return {number}
 */
proto.ei.CollectContractArtifactRewardsRequest.prototype.getGoalIndex = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.ei.CollectContractArtifactRewardsRequest} returns this
 */
proto.ei.CollectContractArtifactRewardsRequest.prototype.setGoalIndex = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.CollectContractArtifactRewardsRequest} returns this
 */
proto.ei.CollectContractArtifactRewardsRequest.prototype.clearGoalIndex = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.CollectContractArtifactRewardsRequest.prototype.hasGoalIndex = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional MissionInfo.Spaceship best_ship = 4;
 * @return {!proto.ei.MissionInfo.Spaceship}
 */
proto.ei.CollectContractArtifactRewardsRequest.prototype.getBestShip = function() {
  return /** @type {!proto.ei.MissionInfo.Spaceship} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {!proto.ei.MissionInfo.Spaceship} value
 * @return {!proto.ei.CollectContractArtifactRewardsRequest} returns this
 */
proto.ei.CollectContractArtifactRewardsRequest.prototype.setBestShip = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.CollectContractArtifactRewardsRequest} returns this
 */
proto.ei.CollectContractArtifactRewardsRequest.prototype.clearBestShip = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.CollectContractArtifactRewardsRequest.prototype.hasBestShip = function() {
  return jspb.Message.getField(this, 4) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.ei.CraftArtifactRequest.repeatedFields_ = [4];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ei.CraftArtifactRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.ei.CraftArtifactRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ei.CraftArtifactRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.CraftArtifactRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    rinfo: (f = msg.getRinfo()) && proto.ei.BasicRequestInfo.toObject(includeInstance, f),
    eiUserId: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    spec: (f = msg.getSpec()) && proto.ei.ArtifactSpec.toObject(includeInstance, f),
    itemId: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f,
    goldPricePaid: (f = jspb.Message.getOptionalFloatingPointField(msg, 6)) == null ? undefined : f,
    craftingCount: (f = jspb.Message.getField(msg, 7)) == null ? undefined : f,
    craftingXp: (f = jspb.Message.getOptionalFloatingPointField(msg, 8)) == null ? undefined : f,
    ingredientsList: jspb.Message.toObjectList(msg.getIngredientsList(),
    proto.ei.ArtifactInventoryItem.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ei.CraftArtifactRequest}
 */
proto.ei.CraftArtifactRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ei.CraftArtifactRequest;
  return proto.ei.CraftArtifactRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ei.CraftArtifactRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ei.CraftArtifactRequest}
 */
proto.ei.CraftArtifactRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 5:
      var value = new proto.ei.BasicRequestInfo;
      reader.readMessage(value,proto.ei.BasicRequestInfo.deserializeBinaryFromReader);
      msg.setRinfo(value);
      break;
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setEiUserId(value);
      break;
    case 2:
      var value = new proto.ei.ArtifactSpec;
      reader.readMessage(value,proto.ei.ArtifactSpec.deserializeBinaryFromReader);
      msg.setSpec(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setItemId(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setGoldPricePaid(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setCraftingCount(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setCraftingXp(value);
      break;
    case 4:
      var value = new proto.ei.ArtifactInventoryItem;
      reader.readMessage(value,proto.ei.ArtifactInventoryItem.deserializeBinaryFromReader);
      msg.addIngredients(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ei.CraftArtifactRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ei.CraftArtifactRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ei.CraftArtifactRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.CraftArtifactRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRinfo();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.ei.BasicRequestInfo.serializeBinaryToWriter
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getSpec();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.ei.ArtifactSpec.serializeBinaryToWriter
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeUint64(
      3,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeDouble(
      6,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 7));
  if (f != null) {
    writer.writeUint32(
      7,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 8));
  if (f != null) {
    writer.writeDouble(
      8,
      f
    );
  }
  f = message.getIngredientsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      4,
      f,
      proto.ei.ArtifactInventoryItem.serializeBinaryToWriter
    );
  }
};


/**
 * optional BasicRequestInfo rinfo = 5;
 * @return {?proto.ei.BasicRequestInfo}
 */
proto.ei.CraftArtifactRequest.prototype.getRinfo = function() {
  return /** @type{?proto.ei.BasicRequestInfo} */ (
    jspb.Message.getWrapperField(this, proto.ei.BasicRequestInfo, 5));
};


/**
 * @param {?proto.ei.BasicRequestInfo|undefined} value
 * @return {!proto.ei.CraftArtifactRequest} returns this
*/
proto.ei.CraftArtifactRequest.prototype.setRinfo = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.ei.CraftArtifactRequest} returns this
 */
proto.ei.CraftArtifactRequest.prototype.clearRinfo = function() {
  return this.setRinfo(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.CraftArtifactRequest.prototype.hasRinfo = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional string ei_user_id = 1;
 * @return {string}
 */
proto.ei.CraftArtifactRequest.prototype.getEiUserId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.ei.CraftArtifactRequest} returns this
 */
proto.ei.CraftArtifactRequest.prototype.setEiUserId = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.CraftArtifactRequest} returns this
 */
proto.ei.CraftArtifactRequest.prototype.clearEiUserId = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.CraftArtifactRequest.prototype.hasEiUserId = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional ArtifactSpec spec = 2;
 * @return {?proto.ei.ArtifactSpec}
 */
proto.ei.CraftArtifactRequest.prototype.getSpec = function() {
  return /** @type{?proto.ei.ArtifactSpec} */ (
    jspb.Message.getWrapperField(this, proto.ei.ArtifactSpec, 2));
};


/**
 * @param {?proto.ei.ArtifactSpec|undefined} value
 * @return {!proto.ei.CraftArtifactRequest} returns this
*/
proto.ei.CraftArtifactRequest.prototype.setSpec = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.ei.CraftArtifactRequest} returns this
 */
proto.ei.CraftArtifactRequest.prototype.clearSpec = function() {
  return this.setSpec(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.CraftArtifactRequest.prototype.hasSpec = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional uint64 item_id = 3;
 * @return {number}
 */
proto.ei.CraftArtifactRequest.prototype.getItemId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.ei.CraftArtifactRequest} returns this
 */
proto.ei.CraftArtifactRequest.prototype.setItemId = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.CraftArtifactRequest} returns this
 */
proto.ei.CraftArtifactRequest.prototype.clearItemId = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.CraftArtifactRequest.prototype.hasItemId = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional double gold_price_paid = 6;
 * @return {number}
 */
proto.ei.CraftArtifactRequest.prototype.getGoldPricePaid = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 6, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.ei.CraftArtifactRequest} returns this
 */
proto.ei.CraftArtifactRequest.prototype.setGoldPricePaid = function(value) {
  return jspb.Message.setField(this, 6, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.CraftArtifactRequest} returns this
 */
proto.ei.CraftArtifactRequest.prototype.clearGoldPricePaid = function() {
  return jspb.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.CraftArtifactRequest.prototype.hasGoldPricePaid = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional uint32 crafting_count = 7;
 * @return {number}
 */
proto.ei.CraftArtifactRequest.prototype.getCraftingCount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {number} value
 * @return {!proto.ei.CraftArtifactRequest} returns this
 */
proto.ei.CraftArtifactRequest.prototype.setCraftingCount = function(value) {
  return jspb.Message.setField(this, 7, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.CraftArtifactRequest} returns this
 */
proto.ei.CraftArtifactRequest.prototype.clearCraftingCount = function() {
  return jspb.Message.setField(this, 7, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.CraftArtifactRequest.prototype.hasCraftingCount = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional double crafting_xp = 8;
 * @return {number}
 */
proto.ei.CraftArtifactRequest.prototype.getCraftingXp = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 8, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.ei.CraftArtifactRequest} returns this
 */
proto.ei.CraftArtifactRequest.prototype.setCraftingXp = function(value) {
  return jspb.Message.setField(this, 8, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.CraftArtifactRequest} returns this
 */
proto.ei.CraftArtifactRequest.prototype.clearCraftingXp = function() {
  return jspb.Message.setField(this, 8, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.CraftArtifactRequest.prototype.hasCraftingXp = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * repeated ArtifactInventoryItem ingredients = 4;
 * @return {!Array<!proto.ei.ArtifactInventoryItem>}
 */
proto.ei.CraftArtifactRequest.prototype.getIngredientsList = function() {
  return /** @type{!Array<!proto.ei.ArtifactInventoryItem>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.ei.ArtifactInventoryItem, 4));
};


/**
 * @param {!Array<!proto.ei.ArtifactInventoryItem>} value
 * @return {!proto.ei.CraftArtifactRequest} returns this
*/
proto.ei.CraftArtifactRequest.prototype.setIngredientsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 4, value);
};


/**
 * @param {!proto.ei.ArtifactInventoryItem=} opt_value
 * @param {number=} opt_index
 * @return {!proto.ei.ArtifactInventoryItem}
 */
proto.ei.CraftArtifactRequest.prototype.addIngredients = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 4, opt_value, proto.ei.ArtifactInventoryItem, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.ei.CraftArtifactRequest} returns this
 */
proto.ei.CraftArtifactRequest.prototype.clearIngredientsList = function() {
  return this.setIngredientsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ei.CraftArtifactResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.ei.CraftArtifactResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ei.CraftArtifactResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.CraftArtifactResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    itemId: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    eiUserId: (f = jspb.Message.getField(msg, 5)) == null ? undefined : f,
    rarityAchieved: jspb.Message.getFieldWithDefault(msg, 2, 0),
    serverId: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ei.CraftArtifactResponse}
 */
proto.ei.CraftArtifactResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ei.CraftArtifactResponse;
  return proto.ei.CraftArtifactResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ei.CraftArtifactResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ei.CraftArtifactResponse}
 */
proto.ei.CraftArtifactResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setItemId(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setEiUserId(value);
      break;
    case 2:
      var value = /** @type {!proto.ei.ArtifactSpec.Rarity} */ (reader.readEnum());
      msg.setRarityAchieved(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setServerId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ei.CraftArtifactResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ei.CraftArtifactResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ei.CraftArtifactResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.CraftArtifactResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {number} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeUint64(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeString(
      5,
      f
    );
  }
  f = /** @type {!proto.ei.ArtifactSpec.Rarity} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeEnum(
      2,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional uint64 item_id = 1;
 * @return {number}
 */
proto.ei.CraftArtifactResponse.prototype.getItemId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.ei.CraftArtifactResponse} returns this
 */
proto.ei.CraftArtifactResponse.prototype.setItemId = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.CraftArtifactResponse} returns this
 */
proto.ei.CraftArtifactResponse.prototype.clearItemId = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.CraftArtifactResponse.prototype.hasItemId = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string ei_user_id = 5;
 * @return {string}
 */
proto.ei.CraftArtifactResponse.prototype.getEiUserId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.ei.CraftArtifactResponse} returns this
 */
proto.ei.CraftArtifactResponse.prototype.setEiUserId = function(value) {
  return jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.CraftArtifactResponse} returns this
 */
proto.ei.CraftArtifactResponse.prototype.clearEiUserId = function() {
  return jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.CraftArtifactResponse.prototype.hasEiUserId = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional ArtifactSpec.Rarity rarity_achieved = 2;
 * @return {!proto.ei.ArtifactSpec.Rarity}
 */
proto.ei.CraftArtifactResponse.prototype.getRarityAchieved = function() {
  return /** @type {!proto.ei.ArtifactSpec.Rarity} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {!proto.ei.ArtifactSpec.Rarity} value
 * @return {!proto.ei.CraftArtifactResponse} returns this
 */
proto.ei.CraftArtifactResponse.prototype.setRarityAchieved = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.CraftArtifactResponse} returns this
 */
proto.ei.CraftArtifactResponse.prototype.clearRarityAchieved = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.CraftArtifactResponse.prototype.hasRarityAchieved = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string server_id = 3;
 * @return {string}
 */
proto.ei.CraftArtifactResponse.prototype.getServerId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.ei.CraftArtifactResponse} returns this
 */
proto.ei.CraftArtifactResponse.prototype.setServerId = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.CraftArtifactResponse} returns this
 */
proto.ei.CraftArtifactResponse.prototype.clearServerId = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.CraftArtifactResponse.prototype.hasServerId = function() {
  return jspb.Message.getField(this, 3) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.ei.ConsumeArtifactRequest.repeatedFields_ = [7,8];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ei.ConsumeArtifactRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.ei.ConsumeArtifactRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ei.ConsumeArtifactRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.ConsumeArtifactRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    rinfo: (f = msg.getRinfo()) && proto.ei.BasicRequestInfo.toObject(includeInstance, f),
    eiUserId: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f,
    spec: (f = msg.getSpec()) && proto.ei.ArtifactSpec.toObject(includeInstance, f),
    artifactServerId: (f = jspb.Message.getField(msg, 5)) == null ? undefined : f,
    originalItemId: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,
    additionalServerIdsList: (f = jspb.Message.getRepeatedField(msg, 7)) == null ? undefined : f,
    additionalItemIdsList: (f = jspb.Message.getRepeatedField(msg, 8)) == null ? undefined : f,
    quantity: (f = jspb.Message.getField(msg, 6)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ei.ConsumeArtifactRequest}
 */
proto.ei.ConsumeArtifactRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ei.ConsumeArtifactRequest;
  return proto.ei.ConsumeArtifactRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ei.ConsumeArtifactRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ei.ConsumeArtifactRequest}
 */
proto.ei.ConsumeArtifactRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 4:
      var value = new proto.ei.BasicRequestInfo;
      reader.readMessage(value,proto.ei.BasicRequestInfo.deserializeBinaryFromReader);
      msg.setRinfo(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setEiUserId(value);
      break;
    case 1:
      var value = new proto.ei.ArtifactSpec;
      reader.readMessage(value,proto.ei.ArtifactSpec.deserializeBinaryFromReader);
      msg.setSpec(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setArtifactServerId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setOriginalItemId(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.addAdditionalServerIds(value);
      break;
    case 8:
      var values = /** @type {!Array<number>} */ (reader.isDelimited() ? reader.readPackedUint64() : [reader.readUint64()]);
      for (var i = 0; i < values.length; i++) {
        msg.addAdditionalItemIds(values[i]);
      }
      break;
    case 6:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setQuantity(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ei.ConsumeArtifactRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ei.ConsumeArtifactRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ei.ConsumeArtifactRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.ConsumeArtifactRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRinfo();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.ei.BasicRequestInfo.serializeBinaryToWriter
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getSpec();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.ei.ArtifactSpec.serializeBinaryToWriter
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeString(
      5,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeUint64(
      2,
      f
    );
  }
  f = message.getAdditionalServerIdsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      7,
      f
    );
  }
  f = message.getAdditionalItemIdsList();
  if (f.length > 0) {
    writer.writeRepeatedUint64(
      8,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeUint32(
      6,
      f
    );
  }
};


/**
 * optional BasicRequestInfo rinfo = 4;
 * @return {?proto.ei.BasicRequestInfo}
 */
proto.ei.ConsumeArtifactRequest.prototype.getRinfo = function() {
  return /** @type{?proto.ei.BasicRequestInfo} */ (
    jspb.Message.getWrapperField(this, proto.ei.BasicRequestInfo, 4));
};


/**
 * @param {?proto.ei.BasicRequestInfo|undefined} value
 * @return {!proto.ei.ConsumeArtifactRequest} returns this
*/
proto.ei.ConsumeArtifactRequest.prototype.setRinfo = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.ei.ConsumeArtifactRequest} returns this
 */
proto.ei.ConsumeArtifactRequest.prototype.clearRinfo = function() {
  return this.setRinfo(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ConsumeArtifactRequest.prototype.hasRinfo = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional string ei_user_id = 3;
 * @return {string}
 */
proto.ei.ConsumeArtifactRequest.prototype.getEiUserId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.ei.ConsumeArtifactRequest} returns this
 */
proto.ei.ConsumeArtifactRequest.prototype.setEiUserId = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.ConsumeArtifactRequest} returns this
 */
proto.ei.ConsumeArtifactRequest.prototype.clearEiUserId = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ConsumeArtifactRequest.prototype.hasEiUserId = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional ArtifactSpec spec = 1;
 * @return {?proto.ei.ArtifactSpec}
 */
proto.ei.ConsumeArtifactRequest.prototype.getSpec = function() {
  return /** @type{?proto.ei.ArtifactSpec} */ (
    jspb.Message.getWrapperField(this, proto.ei.ArtifactSpec, 1));
};


/**
 * @param {?proto.ei.ArtifactSpec|undefined} value
 * @return {!proto.ei.ConsumeArtifactRequest} returns this
*/
proto.ei.ConsumeArtifactRequest.prototype.setSpec = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.ei.ConsumeArtifactRequest} returns this
 */
proto.ei.ConsumeArtifactRequest.prototype.clearSpec = function() {
  return this.setSpec(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ConsumeArtifactRequest.prototype.hasSpec = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string artifact_server_id = 5;
 * @return {string}
 */
proto.ei.ConsumeArtifactRequest.prototype.getArtifactServerId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.ei.ConsumeArtifactRequest} returns this
 */
proto.ei.ConsumeArtifactRequest.prototype.setArtifactServerId = function(value) {
  return jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.ConsumeArtifactRequest} returns this
 */
proto.ei.ConsumeArtifactRequest.prototype.clearArtifactServerId = function() {
  return jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ConsumeArtifactRequest.prototype.hasArtifactServerId = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional uint64 original_item_id = 2;
 * @return {number}
 */
proto.ei.ConsumeArtifactRequest.prototype.getOriginalItemId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.ei.ConsumeArtifactRequest} returns this
 */
proto.ei.ConsumeArtifactRequest.prototype.setOriginalItemId = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.ConsumeArtifactRequest} returns this
 */
proto.ei.ConsumeArtifactRequest.prototype.clearOriginalItemId = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ConsumeArtifactRequest.prototype.hasOriginalItemId = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * repeated string additional_server_ids = 7;
 * @return {!Array<string>}
 */
proto.ei.ConsumeArtifactRequest.prototype.getAdditionalServerIdsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 7));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.ei.ConsumeArtifactRequest} returns this
 */
proto.ei.ConsumeArtifactRequest.prototype.setAdditionalServerIdsList = function(value) {
  return jspb.Message.setField(this, 7, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.ei.ConsumeArtifactRequest} returns this
 */
proto.ei.ConsumeArtifactRequest.prototype.addAdditionalServerIds = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 7, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.ei.ConsumeArtifactRequest} returns this
 */
proto.ei.ConsumeArtifactRequest.prototype.clearAdditionalServerIdsList = function() {
  return this.setAdditionalServerIdsList([]);
};


/**
 * repeated uint64 additional_item_ids = 8;
 * @return {!Array<number>}
 */
proto.ei.ConsumeArtifactRequest.prototype.getAdditionalItemIdsList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 8));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.ei.ConsumeArtifactRequest} returns this
 */
proto.ei.ConsumeArtifactRequest.prototype.setAdditionalItemIdsList = function(value) {
  return jspb.Message.setField(this, 8, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.ei.ConsumeArtifactRequest} returns this
 */
proto.ei.ConsumeArtifactRequest.prototype.addAdditionalItemIds = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 8, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.ei.ConsumeArtifactRequest} returns this
 */
proto.ei.ConsumeArtifactRequest.prototype.clearAdditionalItemIdsList = function() {
  return this.setAdditionalItemIdsList([]);
};


/**
 * optional uint32 quantity = 6;
 * @return {number}
 */
proto.ei.ConsumeArtifactRequest.prototype.getQuantity = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.ei.ConsumeArtifactRequest} returns this
 */
proto.ei.ConsumeArtifactRequest.prototype.setQuantity = function(value) {
  return jspb.Message.setField(this, 6, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.ConsumeArtifactRequest} returns this
 */
proto.ei.ConsumeArtifactRequest.prototype.clearQuantity = function() {
  return jspb.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ConsumeArtifactRequest.prototype.hasQuantity = function() {
  return jspb.Message.getField(this, 6) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.ei.ConsumeArtifactResponse.repeatedFields_ = [6,3,4];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ei.ConsumeArtifactResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.ei.ConsumeArtifactResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ei.ConsumeArtifactResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.ConsumeArtifactResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    success: (f = jspb.Message.getBooleanField(msg, 1)) == null ? undefined : f,
    originalItemId: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,
    additionalItemIdsList: (f = jspb.Message.getRepeatedField(msg, 6)) == null ? undefined : f,
    byproductsList: jspb.Message.toObjectList(msg.getByproductsList(),
    proto.ei.ArtifactSpec.toObject, includeInstance),
    otherRewardsList: jspb.Message.toObjectList(msg.getOtherRewardsList(),
    proto.ei.Reward.toObject, includeInstance),
    eiUserId: (f = jspb.Message.getField(msg, 5)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ei.ConsumeArtifactResponse}
 */
proto.ei.ConsumeArtifactResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ei.ConsumeArtifactResponse;
  return proto.ei.ConsumeArtifactResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ei.ConsumeArtifactResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ei.ConsumeArtifactResponse}
 */
proto.ei.ConsumeArtifactResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setSuccess(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setOriginalItemId(value);
      break;
    case 6:
      var values = /** @type {!Array<number>} */ (reader.isDelimited() ? reader.readPackedUint64() : [reader.readUint64()]);
      for (var i = 0; i < values.length; i++) {
        msg.addAdditionalItemIds(values[i]);
      }
      break;
    case 3:
      var value = new proto.ei.ArtifactSpec;
      reader.readMessage(value,proto.ei.ArtifactSpec.deserializeBinaryFromReader);
      msg.addByproducts(value);
      break;
    case 4:
      var value = new proto.ei.Reward;
      reader.readMessage(value,proto.ei.Reward.deserializeBinaryFromReader);
      msg.addOtherRewards(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setEiUserId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ei.ConsumeArtifactResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ei.ConsumeArtifactResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ei.ConsumeArtifactResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.ConsumeArtifactResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {boolean} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeBool(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeUint64(
      2,
      f
    );
  }
  f = message.getAdditionalItemIdsList();
  if (f.length > 0) {
    writer.writeRepeatedUint64(
      6,
      f
    );
  }
  f = message.getByproductsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      proto.ei.ArtifactSpec.serializeBinaryToWriter
    );
  }
  f = message.getOtherRewardsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      4,
      f,
      proto.ei.Reward.serializeBinaryToWriter
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeString(
      5,
      f
    );
  }
};


/**
 * optional bool success = 1;
 * @return {boolean}
 */
proto.ei.ConsumeArtifactResponse.prototype.getSuccess = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.ei.ConsumeArtifactResponse} returns this
 */
proto.ei.ConsumeArtifactResponse.prototype.setSuccess = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.ConsumeArtifactResponse} returns this
 */
proto.ei.ConsumeArtifactResponse.prototype.clearSuccess = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ConsumeArtifactResponse.prototype.hasSuccess = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional uint64 original_item_id = 2;
 * @return {number}
 */
proto.ei.ConsumeArtifactResponse.prototype.getOriginalItemId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.ei.ConsumeArtifactResponse} returns this
 */
proto.ei.ConsumeArtifactResponse.prototype.setOriginalItemId = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.ConsumeArtifactResponse} returns this
 */
proto.ei.ConsumeArtifactResponse.prototype.clearOriginalItemId = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ConsumeArtifactResponse.prototype.hasOriginalItemId = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * repeated uint64 additional_item_ids = 6;
 * @return {!Array<number>}
 */
proto.ei.ConsumeArtifactResponse.prototype.getAdditionalItemIdsList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 6));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.ei.ConsumeArtifactResponse} returns this
 */
proto.ei.ConsumeArtifactResponse.prototype.setAdditionalItemIdsList = function(value) {
  return jspb.Message.setField(this, 6, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.ei.ConsumeArtifactResponse} returns this
 */
proto.ei.ConsumeArtifactResponse.prototype.addAdditionalItemIds = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 6, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.ei.ConsumeArtifactResponse} returns this
 */
proto.ei.ConsumeArtifactResponse.prototype.clearAdditionalItemIdsList = function() {
  return this.setAdditionalItemIdsList([]);
};


/**
 * repeated ArtifactSpec byproducts = 3;
 * @return {!Array<!proto.ei.ArtifactSpec>}
 */
proto.ei.ConsumeArtifactResponse.prototype.getByproductsList = function() {
  return /** @type{!Array<!proto.ei.ArtifactSpec>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.ei.ArtifactSpec, 3));
};


/**
 * @param {!Array<!proto.ei.ArtifactSpec>} value
 * @return {!proto.ei.ConsumeArtifactResponse} returns this
*/
proto.ei.ConsumeArtifactResponse.prototype.setByproductsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.ei.ArtifactSpec=} opt_value
 * @param {number=} opt_index
 * @return {!proto.ei.ArtifactSpec}
 */
proto.ei.ConsumeArtifactResponse.prototype.addByproducts = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.ei.ArtifactSpec, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.ei.ConsumeArtifactResponse} returns this
 */
proto.ei.ConsumeArtifactResponse.prototype.clearByproductsList = function() {
  return this.setByproductsList([]);
};


/**
 * repeated Reward other_rewards = 4;
 * @return {!Array<!proto.ei.Reward>}
 */
proto.ei.ConsumeArtifactResponse.prototype.getOtherRewardsList = function() {
  return /** @type{!Array<!proto.ei.Reward>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.ei.Reward, 4));
};


/**
 * @param {!Array<!proto.ei.Reward>} value
 * @return {!proto.ei.ConsumeArtifactResponse} returns this
*/
proto.ei.ConsumeArtifactResponse.prototype.setOtherRewardsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 4, value);
};


/**
 * @param {!proto.ei.Reward=} opt_value
 * @param {number=} opt_index
 * @return {!proto.ei.Reward}
 */
proto.ei.ConsumeArtifactResponse.prototype.addOtherRewards = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 4, opt_value, proto.ei.Reward, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.ei.ConsumeArtifactResponse} returns this
 */
proto.ei.ConsumeArtifactResponse.prototype.clearOtherRewardsList = function() {
  return this.setOtherRewardsList([]);
};


/**
 * optional string ei_user_id = 5;
 * @return {string}
 */
proto.ei.ConsumeArtifactResponse.prototype.getEiUserId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.ei.ConsumeArtifactResponse} returns this
 */
proto.ei.ConsumeArtifactResponse.prototype.setEiUserId = function(value) {
  return jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.ConsumeArtifactResponse} returns this
 */
proto.ei.ConsumeArtifactResponse.prototype.clearEiUserId = function() {
  return jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ConsumeArtifactResponse.prototype.hasEiUserId = function() {
  return jspb.Message.getField(this, 5) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ei.AuthenticateArtifactResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.ei.AuthenticateArtifactResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ei.AuthenticateArtifactResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.AuthenticateArtifactResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    success: (f = jspb.Message.getBooleanField(msg, 1)) == null ? undefined : f,
    originalItemId: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,
    demote: (f = jspb.Message.getBooleanField(msg, 3)) == null ? undefined : f,
    pb_delete: (f = jspb.Message.getBooleanField(msg, 4)) == null ? undefined : f,
    eiUserId: (f = jspb.Message.getField(msg, 5)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ei.AuthenticateArtifactResponse}
 */
proto.ei.AuthenticateArtifactResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ei.AuthenticateArtifactResponse;
  return proto.ei.AuthenticateArtifactResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ei.AuthenticateArtifactResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ei.AuthenticateArtifactResponse}
 */
proto.ei.AuthenticateArtifactResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setSuccess(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setOriginalItemId(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setDemote(value);
      break;
    case 4:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setDelete(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setEiUserId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ei.AuthenticateArtifactResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ei.AuthenticateArtifactResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ei.AuthenticateArtifactResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.AuthenticateArtifactResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {boolean} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeBool(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeUint64(
      2,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeBool(
      3,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeBool(
      4,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeString(
      5,
      f
    );
  }
};


/**
 * optional bool success = 1;
 * @return {boolean}
 */
proto.ei.AuthenticateArtifactResponse.prototype.getSuccess = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.ei.AuthenticateArtifactResponse} returns this
 */
proto.ei.AuthenticateArtifactResponse.prototype.setSuccess = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.AuthenticateArtifactResponse} returns this
 */
proto.ei.AuthenticateArtifactResponse.prototype.clearSuccess = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.AuthenticateArtifactResponse.prototype.hasSuccess = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional uint64 original_item_id = 2;
 * @return {number}
 */
proto.ei.AuthenticateArtifactResponse.prototype.getOriginalItemId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.ei.AuthenticateArtifactResponse} returns this
 */
proto.ei.AuthenticateArtifactResponse.prototype.setOriginalItemId = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.AuthenticateArtifactResponse} returns this
 */
proto.ei.AuthenticateArtifactResponse.prototype.clearOriginalItemId = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.AuthenticateArtifactResponse.prototype.hasOriginalItemId = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional bool demote = 3;
 * @return {boolean}
 */
proto.ei.AuthenticateArtifactResponse.prototype.getDemote = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 3, false));
};


/**
 * @param {boolean} value
 * @return {!proto.ei.AuthenticateArtifactResponse} returns this
 */
proto.ei.AuthenticateArtifactResponse.prototype.setDemote = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.AuthenticateArtifactResponse} returns this
 */
proto.ei.AuthenticateArtifactResponse.prototype.clearDemote = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.AuthenticateArtifactResponse.prototype.hasDemote = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional bool delete = 4;
 * @return {boolean}
 */
proto.ei.AuthenticateArtifactResponse.prototype.getDelete = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 4, false));
};


/**
 * @param {boolean} value
 * @return {!proto.ei.AuthenticateArtifactResponse} returns this
 */
proto.ei.AuthenticateArtifactResponse.prototype.setDelete = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.AuthenticateArtifactResponse} returns this
 */
proto.ei.AuthenticateArtifactResponse.prototype.clearDelete = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.AuthenticateArtifactResponse.prototype.hasDelete = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional string ei_user_id = 5;
 * @return {string}
 */
proto.ei.AuthenticateArtifactResponse.prototype.getEiUserId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.ei.AuthenticateArtifactResponse} returns this
 */
proto.ei.AuthenticateArtifactResponse.prototype.setEiUserId = function(value) {
  return jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.AuthenticateArtifactResponse} returns this
 */
proto.ei.AuthenticateArtifactResponse.prototype.clearEiUserId = function() {
  return jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.AuthenticateArtifactResponse.prototype.hasEiUserId = function() {
  return jspb.Message.getField(this, 5) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.ei.SetArtifactRequest.repeatedFields_ = [3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ei.SetArtifactRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.ei.SetArtifactRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ei.SetArtifactRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.SetArtifactRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    rinfo: (f = msg.getRinfo()) && proto.ei.BasicRequestInfo.toObject(includeInstance, f),
    artifact: (f = msg.getArtifact()) && proto.ei.ArtifactInventoryItem.toObject(includeInstance, f),
    stonesList: jspb.Message.toObjectList(msg.getStonesList(),
    proto.ei.ArtifactSpec.toObject, includeInstance),
    goldPricePaid: (f = jspb.Message.getOptionalFloatingPointField(msg, 4)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ei.SetArtifactRequest}
 */
proto.ei.SetArtifactRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ei.SetArtifactRequest;
  return proto.ei.SetArtifactRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ei.SetArtifactRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ei.SetArtifactRequest}
 */
proto.ei.SetArtifactRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.ei.BasicRequestInfo;
      reader.readMessage(value,proto.ei.BasicRequestInfo.deserializeBinaryFromReader);
      msg.setRinfo(value);
      break;
    case 2:
      var value = new proto.ei.ArtifactInventoryItem;
      reader.readMessage(value,proto.ei.ArtifactInventoryItem.deserializeBinaryFromReader);
      msg.setArtifact(value);
      break;
    case 3:
      var value = new proto.ei.ArtifactSpec;
      reader.readMessage(value,proto.ei.ArtifactSpec.deserializeBinaryFromReader);
      msg.addStones(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setGoldPricePaid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ei.SetArtifactRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ei.SetArtifactRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ei.SetArtifactRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.SetArtifactRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRinfo();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.ei.BasicRequestInfo.serializeBinaryToWriter
    );
  }
  f = message.getArtifact();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.ei.ArtifactInventoryItem.serializeBinaryToWriter
    );
  }
  f = message.getStonesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      proto.ei.ArtifactSpec.serializeBinaryToWriter
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeDouble(
      4,
      f
    );
  }
};


/**
 * optional BasicRequestInfo rinfo = 1;
 * @return {?proto.ei.BasicRequestInfo}
 */
proto.ei.SetArtifactRequest.prototype.getRinfo = function() {
  return /** @type{?proto.ei.BasicRequestInfo} */ (
    jspb.Message.getWrapperField(this, proto.ei.BasicRequestInfo, 1));
};


/**
 * @param {?proto.ei.BasicRequestInfo|undefined} value
 * @return {!proto.ei.SetArtifactRequest} returns this
*/
proto.ei.SetArtifactRequest.prototype.setRinfo = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.ei.SetArtifactRequest} returns this
 */
proto.ei.SetArtifactRequest.prototype.clearRinfo = function() {
  return this.setRinfo(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.SetArtifactRequest.prototype.hasRinfo = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional ArtifactInventoryItem artifact = 2;
 * @return {?proto.ei.ArtifactInventoryItem}
 */
proto.ei.SetArtifactRequest.prototype.getArtifact = function() {
  return /** @type{?proto.ei.ArtifactInventoryItem} */ (
    jspb.Message.getWrapperField(this, proto.ei.ArtifactInventoryItem, 2));
};


/**
 * @param {?proto.ei.ArtifactInventoryItem|undefined} value
 * @return {!proto.ei.SetArtifactRequest} returns this
*/
proto.ei.SetArtifactRequest.prototype.setArtifact = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.ei.SetArtifactRequest} returns this
 */
proto.ei.SetArtifactRequest.prototype.clearArtifact = function() {
  return this.setArtifact(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.SetArtifactRequest.prototype.hasArtifact = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * repeated ArtifactSpec stones = 3;
 * @return {!Array<!proto.ei.ArtifactSpec>}
 */
proto.ei.SetArtifactRequest.prototype.getStonesList = function() {
  return /** @type{!Array<!proto.ei.ArtifactSpec>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.ei.ArtifactSpec, 3));
};


/**
 * @param {!Array<!proto.ei.ArtifactSpec>} value
 * @return {!proto.ei.SetArtifactRequest} returns this
*/
proto.ei.SetArtifactRequest.prototype.setStonesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.ei.ArtifactSpec=} opt_value
 * @param {number=} opt_index
 * @return {!proto.ei.ArtifactSpec}
 */
proto.ei.SetArtifactRequest.prototype.addStones = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.ei.ArtifactSpec, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.ei.SetArtifactRequest} returns this
 */
proto.ei.SetArtifactRequest.prototype.clearStonesList = function() {
  return this.setStonesList([]);
};


/**
 * optional double gold_price_paid = 4;
 * @return {number}
 */
proto.ei.SetArtifactRequest.prototype.getGoldPricePaid = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 4, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.ei.SetArtifactRequest} returns this
 */
proto.ei.SetArtifactRequest.prototype.setGoldPricePaid = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.SetArtifactRequest} returns this
 */
proto.ei.SetArtifactRequest.prototype.clearGoldPricePaid = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.SetArtifactRequest.prototype.hasGoldPricePaid = function() {
  return jspb.Message.getField(this, 4) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ei.SetArtifactResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.ei.SetArtifactResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ei.SetArtifactResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.SetArtifactResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    success: (f = jspb.Message.getBooleanField(msg, 1)) == null ? undefined : f,
    originalItemId: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,
    eiUserId: (f = jspb.Message.getField(msg, 5)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ei.SetArtifactResponse}
 */
proto.ei.SetArtifactResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ei.SetArtifactResponse;
  return proto.ei.SetArtifactResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ei.SetArtifactResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ei.SetArtifactResponse}
 */
proto.ei.SetArtifactResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setSuccess(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setOriginalItemId(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setEiUserId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ei.SetArtifactResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ei.SetArtifactResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ei.SetArtifactResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.SetArtifactResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {boolean} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeBool(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeUint64(
      2,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeString(
      5,
      f
    );
  }
};


/**
 * optional bool success = 1;
 * @return {boolean}
 */
proto.ei.SetArtifactResponse.prototype.getSuccess = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.ei.SetArtifactResponse} returns this
 */
proto.ei.SetArtifactResponse.prototype.setSuccess = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.SetArtifactResponse} returns this
 */
proto.ei.SetArtifactResponse.prototype.clearSuccess = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.SetArtifactResponse.prototype.hasSuccess = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional uint64 original_item_id = 2;
 * @return {number}
 */
proto.ei.SetArtifactResponse.prototype.getOriginalItemId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.ei.SetArtifactResponse} returns this
 */
proto.ei.SetArtifactResponse.prototype.setOriginalItemId = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.SetArtifactResponse} returns this
 */
proto.ei.SetArtifactResponse.prototype.clearOriginalItemId = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.SetArtifactResponse.prototype.hasOriginalItemId = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string ei_user_id = 5;
 * @return {string}
 */
proto.ei.SetArtifactResponse.prototype.getEiUserId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.ei.SetArtifactResponse} returns this
 */
proto.ei.SetArtifactResponse.prototype.setEiUserId = function(value) {
  return jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.SetArtifactResponse} returns this
 */
proto.ei.SetArtifactResponse.prototype.clearEiUserId = function() {
  return jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.SetArtifactResponse.prototype.hasEiUserId = function() {
  return jspb.Message.getField(this, 5) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.ei.ArtifactsDB.repeatedFields_ = [1,3,7,11,13,12,4,5,8,9,10];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ei.ArtifactsDB.prototype.toObject = function(opt_includeInstance) {
  return proto.ei.ArtifactsDB.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ei.ArtifactsDB} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.ArtifactsDB.toObject = function(includeInstance, msg) {
  var f, obj = {
    inventoryItemsList: jspb.Message.toObjectList(msg.getInventoryItemsList(),
    proto.ei.ArtifactInventoryItem.toObject, includeInstance),
    itemSequence: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,
    inventorySlotsList: jspb.Message.toObjectList(msg.getInventorySlotsList(),
    proto.ei.InventorySlot.toObject, includeInstance),
    activeArtifactsDeprecatedList: jspb.Message.toObjectList(msg.getActiveArtifactsDeprecatedList(),
    proto.ei.ArtifactsDB.ActiveArtifactSlot.toObject, includeInstance),
    activeArtifactSetsList: jspb.Message.toObjectList(msg.getActiveArtifactSetsList(),
    proto.ei.ArtifactsDB.ActiveArtifactSet.toObject, includeInstance),
    savedArtifactSetsList: jspb.Message.toObjectList(msg.getSavedArtifactSetsList(),
    proto.ei.ArtifactsDB.ActiveArtifactSet.toObject, includeInstance),
    artifactStatusList: jspb.Message.toObjectList(msg.getArtifactStatusList(),
    proto.ei.ArtifactsDB.CraftableArtifact.toObject, includeInstance),
    fuelingMission: (f = msg.getFuelingMission()) && proto.ei.MissionInfo.toObject(includeInstance, f),
    missionInfosList: jspb.Message.toObjectList(msg.getMissionInfosList(),
    proto.ei.MissionInfo.toObject, includeInstance),
    missionArchiveList: jspb.Message.toObjectList(msg.getMissionArchiveList(),
    proto.ei.MissionInfo.toObject, includeInstance),
    discoveredArtifactsDeprecatedList: jspb.Message.toObjectList(msg.getDiscoveredArtifactsDeprecatedList(),
    proto.ei.ArtifactSpec.toObject, includeInstance),
    craftableArtifactsDeprecatedList: jspb.Message.toObjectList(msg.getCraftableArtifactsDeprecatedList(),
    proto.ei.ArtifactsDB.CraftableArtifact.toObject, includeInstance),
    craftingCountsDeprecatedList: jspb.Message.toObjectList(msg.getCraftingCountsDeprecatedList(),
    proto.ei.ArtifactsDB.CraftableArtifact.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ei.ArtifactsDB}
 */
proto.ei.ArtifactsDB.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ei.ArtifactsDB;
  return proto.ei.ArtifactsDB.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ei.ArtifactsDB} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ei.ArtifactsDB}
 */
proto.ei.ArtifactsDB.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.ei.ArtifactInventoryItem;
      reader.readMessage(value,proto.ei.ArtifactInventoryItem.deserializeBinaryFromReader);
      msg.addInventoryItems(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setItemSequence(value);
      break;
    case 3:
      var value = new proto.ei.InventorySlot;
      reader.readMessage(value,proto.ei.InventorySlot.deserializeBinaryFromReader);
      msg.addInventorySlots(value);
      break;
    case 7:
      var value = new proto.ei.ArtifactsDB.ActiveArtifactSlot;
      reader.readMessage(value,proto.ei.ArtifactsDB.ActiveArtifactSlot.deserializeBinaryFromReader);
      msg.addActiveArtifactsDeprecated(value);
      break;
    case 11:
      var value = new proto.ei.ArtifactsDB.ActiveArtifactSet;
      reader.readMessage(value,proto.ei.ArtifactsDB.ActiveArtifactSet.deserializeBinaryFromReader);
      msg.addActiveArtifactSets(value);
      break;
    case 13:
      var value = new proto.ei.ArtifactsDB.ActiveArtifactSet;
      reader.readMessage(value,proto.ei.ArtifactsDB.ActiveArtifactSet.deserializeBinaryFromReader);
      msg.addSavedArtifactSets(value);
      break;
    case 12:
      var value = new proto.ei.ArtifactsDB.CraftableArtifact;
      reader.readMessage(value,proto.ei.ArtifactsDB.CraftableArtifact.deserializeBinaryFromReader);
      msg.addArtifactStatus(value);
      break;
    case 14:
      var value = new proto.ei.MissionInfo;
      reader.readMessage(value,proto.ei.MissionInfo.deserializeBinaryFromReader);
      msg.setFuelingMission(value);
      break;
    case 4:
      var value = new proto.ei.MissionInfo;
      reader.readMessage(value,proto.ei.MissionInfo.deserializeBinaryFromReader);
      msg.addMissionInfos(value);
      break;
    case 5:
      var value = new proto.ei.MissionInfo;
      reader.readMessage(value,proto.ei.MissionInfo.deserializeBinaryFromReader);
      msg.addMissionArchive(value);
      break;
    case 8:
      var value = new proto.ei.ArtifactSpec;
      reader.readMessage(value,proto.ei.ArtifactSpec.deserializeBinaryFromReader);
      msg.addDiscoveredArtifactsDeprecated(value);
      break;
    case 9:
      var value = new proto.ei.ArtifactsDB.CraftableArtifact;
      reader.readMessage(value,proto.ei.ArtifactsDB.CraftableArtifact.deserializeBinaryFromReader);
      msg.addCraftableArtifactsDeprecated(value);
      break;
    case 10:
      var value = new proto.ei.ArtifactsDB.CraftableArtifact;
      reader.readMessage(value,proto.ei.ArtifactsDB.CraftableArtifact.deserializeBinaryFromReader);
      msg.addCraftingCountsDeprecated(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ei.ArtifactsDB.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ei.ArtifactsDB.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ei.ArtifactsDB} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.ArtifactsDB.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getInventoryItemsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.ei.ArtifactInventoryItem.serializeBinaryToWriter
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeUint64(
      2,
      f
    );
  }
  f = message.getInventorySlotsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      proto.ei.InventorySlot.serializeBinaryToWriter
    );
  }
  f = message.getActiveArtifactsDeprecatedList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      7,
      f,
      proto.ei.ArtifactsDB.ActiveArtifactSlot.serializeBinaryToWriter
    );
  }
  f = message.getActiveArtifactSetsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      11,
      f,
      proto.ei.ArtifactsDB.ActiveArtifactSet.serializeBinaryToWriter
    );
  }
  f = message.getSavedArtifactSetsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      13,
      f,
      proto.ei.ArtifactsDB.ActiveArtifactSet.serializeBinaryToWriter
    );
  }
  f = message.getArtifactStatusList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      12,
      f,
      proto.ei.ArtifactsDB.CraftableArtifact.serializeBinaryToWriter
    );
  }
  f = message.getFuelingMission();
  if (f != null) {
    writer.writeMessage(
      14,
      f,
      proto.ei.MissionInfo.serializeBinaryToWriter
    );
  }
  f = message.getMissionInfosList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      4,
      f,
      proto.ei.MissionInfo.serializeBinaryToWriter
    );
  }
  f = message.getMissionArchiveList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      5,
      f,
      proto.ei.MissionInfo.serializeBinaryToWriter
    );
  }
  f = message.getDiscoveredArtifactsDeprecatedList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      8,
      f,
      proto.ei.ArtifactSpec.serializeBinaryToWriter
    );
  }
  f = message.getCraftableArtifactsDeprecatedList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      9,
      f,
      proto.ei.ArtifactsDB.CraftableArtifact.serializeBinaryToWriter
    );
  }
  f = message.getCraftingCountsDeprecatedList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      10,
      f,
      proto.ei.ArtifactsDB.CraftableArtifact.serializeBinaryToWriter
    );
  }
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ei.ArtifactsDB.ActiveArtifactSlot.prototype.toObject = function(opt_includeInstance) {
  return proto.ei.ArtifactsDB.ActiveArtifactSlot.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ei.ArtifactsDB.ActiveArtifactSlot} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.ArtifactsDB.ActiveArtifactSlot.toObject = function(includeInstance, msg) {
  var f, obj = {
    occupied: (f = jspb.Message.getBooleanField(msg, 1)) == null ? undefined : f,
    itemId: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ei.ArtifactsDB.ActiveArtifactSlot}
 */
proto.ei.ArtifactsDB.ActiveArtifactSlot.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ei.ArtifactsDB.ActiveArtifactSlot;
  return proto.ei.ArtifactsDB.ActiveArtifactSlot.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ei.ArtifactsDB.ActiveArtifactSlot} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ei.ArtifactsDB.ActiveArtifactSlot}
 */
proto.ei.ArtifactsDB.ActiveArtifactSlot.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setOccupied(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setItemId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ei.ArtifactsDB.ActiveArtifactSlot.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ei.ArtifactsDB.ActiveArtifactSlot.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ei.ArtifactsDB.ActiveArtifactSlot} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.ArtifactsDB.ActiveArtifactSlot.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {boolean} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeBool(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeUint64(
      2,
      f
    );
  }
};


/**
 * optional bool occupied = 1;
 * @return {boolean}
 */
proto.ei.ArtifactsDB.ActiveArtifactSlot.prototype.getOccupied = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.ei.ArtifactsDB.ActiveArtifactSlot} returns this
 */
proto.ei.ArtifactsDB.ActiveArtifactSlot.prototype.setOccupied = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.ArtifactsDB.ActiveArtifactSlot} returns this
 */
proto.ei.ArtifactsDB.ActiveArtifactSlot.prototype.clearOccupied = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ArtifactsDB.ActiveArtifactSlot.prototype.hasOccupied = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional uint64 item_id = 2;
 * @return {number}
 */
proto.ei.ArtifactsDB.ActiveArtifactSlot.prototype.getItemId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.ei.ArtifactsDB.ActiveArtifactSlot} returns this
 */
proto.ei.ArtifactsDB.ActiveArtifactSlot.prototype.setItemId = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.ArtifactsDB.ActiveArtifactSlot} returns this
 */
proto.ei.ArtifactsDB.ActiveArtifactSlot.prototype.clearItemId = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ArtifactsDB.ActiveArtifactSlot.prototype.hasItemId = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.ei.ArtifactsDB.ActiveArtifactSet.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ei.ArtifactsDB.ActiveArtifactSet.prototype.toObject = function(opt_includeInstance) {
  return proto.ei.ArtifactsDB.ActiveArtifactSet.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ei.ArtifactsDB.ActiveArtifactSet} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.ArtifactsDB.ActiveArtifactSet.toObject = function(includeInstance, msg) {
  var f, obj = {
    slotsList: jspb.Message.toObjectList(msg.getSlotsList(),
    proto.ei.ArtifactsDB.ActiveArtifactSlot.toObject, includeInstance),
    uid: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ei.ArtifactsDB.ActiveArtifactSet}
 */
proto.ei.ArtifactsDB.ActiveArtifactSet.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ei.ArtifactsDB.ActiveArtifactSet;
  return proto.ei.ArtifactsDB.ActiveArtifactSet.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ei.ArtifactsDB.ActiveArtifactSet} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ei.ArtifactsDB.ActiveArtifactSet}
 */
proto.ei.ArtifactsDB.ActiveArtifactSet.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.ei.ArtifactsDB.ActiveArtifactSlot;
      reader.readMessage(value,proto.ei.ArtifactsDB.ActiveArtifactSlot.deserializeBinaryFromReader);
      msg.addSlots(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setUid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ei.ArtifactsDB.ActiveArtifactSet.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ei.ArtifactsDB.ActiveArtifactSet.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ei.ArtifactsDB.ActiveArtifactSet} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.ArtifactsDB.ActiveArtifactSet.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSlotsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.ei.ArtifactsDB.ActiveArtifactSlot.serializeBinaryToWriter
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeUint32(
      2,
      f
    );
  }
};


/**
 * repeated ActiveArtifactSlot slots = 1;
 * @return {!Array<!proto.ei.ArtifactsDB.ActiveArtifactSlot>}
 */
proto.ei.ArtifactsDB.ActiveArtifactSet.prototype.getSlotsList = function() {
  return /** @type{!Array<!proto.ei.ArtifactsDB.ActiveArtifactSlot>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.ei.ArtifactsDB.ActiveArtifactSlot, 1));
};


/**
 * @param {!Array<!proto.ei.ArtifactsDB.ActiveArtifactSlot>} value
 * @return {!proto.ei.ArtifactsDB.ActiveArtifactSet} returns this
*/
proto.ei.ArtifactsDB.ActiveArtifactSet.prototype.setSlotsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.ei.ArtifactsDB.ActiveArtifactSlot=} opt_value
 * @param {number=} opt_index
 * @return {!proto.ei.ArtifactsDB.ActiveArtifactSlot}
 */
proto.ei.ArtifactsDB.ActiveArtifactSet.prototype.addSlots = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.ei.ArtifactsDB.ActiveArtifactSlot, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.ei.ArtifactsDB.ActiveArtifactSet} returns this
 */
proto.ei.ArtifactsDB.ActiveArtifactSet.prototype.clearSlotsList = function() {
  return this.setSlotsList([]);
};


/**
 * optional uint32 uid = 2;
 * @return {number}
 */
proto.ei.ArtifactsDB.ActiveArtifactSet.prototype.getUid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.ei.ArtifactsDB.ActiveArtifactSet} returns this
 */
proto.ei.ArtifactsDB.ActiveArtifactSet.prototype.setUid = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.ArtifactsDB.ActiveArtifactSet} returns this
 */
proto.ei.ArtifactsDB.ActiveArtifactSet.prototype.clearUid = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ArtifactsDB.ActiveArtifactSet.prototype.hasUid = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ei.ArtifactsDB.CraftableArtifact.prototype.toObject = function(opt_includeInstance) {
  return proto.ei.ArtifactsDB.CraftableArtifact.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ei.ArtifactsDB.CraftableArtifact} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.ArtifactsDB.CraftableArtifact.toObject = function(includeInstance, msg) {
  var f, obj = {
    spec: (f = msg.getSpec()) && proto.ei.ArtifactSpec.toObject(includeInstance, f),
    discovered: (f = jspb.Message.getBooleanField(msg, 6)) == null ? undefined : f,
    craftable: (f = jspb.Message.getBooleanField(msg, 4)) == null ? undefined : f,
    recipeDiscovered: (f = jspb.Message.getBooleanField(msg, 5)) == null ? undefined : f,
    seen: (f = jspb.Message.getBooleanField(msg, 2)) == null ? undefined : f,
    count: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ei.ArtifactsDB.CraftableArtifact}
 */
proto.ei.ArtifactsDB.CraftableArtifact.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ei.ArtifactsDB.CraftableArtifact;
  return proto.ei.ArtifactsDB.CraftableArtifact.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ei.ArtifactsDB.CraftableArtifact} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ei.ArtifactsDB.CraftableArtifact}
 */
proto.ei.ArtifactsDB.CraftableArtifact.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.ei.ArtifactSpec;
      reader.readMessage(value,proto.ei.ArtifactSpec.deserializeBinaryFromReader);
      msg.setSpec(value);
      break;
    case 6:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setDiscovered(value);
      break;
    case 4:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setCraftable(value);
      break;
    case 5:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setRecipeDiscovered(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setSeen(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setCount(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ei.ArtifactsDB.CraftableArtifact.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ei.ArtifactsDB.CraftableArtifact.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ei.ArtifactsDB.CraftableArtifact} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.ArtifactsDB.CraftableArtifact.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSpec();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.ei.ArtifactSpec.serializeBinaryToWriter
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeBool(
      6,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeBool(
      4,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeBool(
      5,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeBool(
      2,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeUint32(
      3,
      f
    );
  }
};


/**
 * optional ArtifactSpec spec = 1;
 * @return {?proto.ei.ArtifactSpec}
 */
proto.ei.ArtifactsDB.CraftableArtifact.prototype.getSpec = function() {
  return /** @type{?proto.ei.ArtifactSpec} */ (
    jspb.Message.getWrapperField(this, proto.ei.ArtifactSpec, 1));
};


/**
 * @param {?proto.ei.ArtifactSpec|undefined} value
 * @return {!proto.ei.ArtifactsDB.CraftableArtifact} returns this
*/
proto.ei.ArtifactsDB.CraftableArtifact.prototype.setSpec = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.ei.ArtifactsDB.CraftableArtifact} returns this
 */
proto.ei.ArtifactsDB.CraftableArtifact.prototype.clearSpec = function() {
  return this.setSpec(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ArtifactsDB.CraftableArtifact.prototype.hasSpec = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional bool discovered = 6;
 * @return {boolean}
 */
proto.ei.ArtifactsDB.CraftableArtifact.prototype.getDiscovered = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 6, false));
};


/**
 * @param {boolean} value
 * @return {!proto.ei.ArtifactsDB.CraftableArtifact} returns this
 */
proto.ei.ArtifactsDB.CraftableArtifact.prototype.setDiscovered = function(value) {
  return jspb.Message.setField(this, 6, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.ArtifactsDB.CraftableArtifact} returns this
 */
proto.ei.ArtifactsDB.CraftableArtifact.prototype.clearDiscovered = function() {
  return jspb.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ArtifactsDB.CraftableArtifact.prototype.hasDiscovered = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional bool craftable = 4;
 * @return {boolean}
 */
proto.ei.ArtifactsDB.CraftableArtifact.prototype.getCraftable = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 4, false));
};


/**
 * @param {boolean} value
 * @return {!proto.ei.ArtifactsDB.CraftableArtifact} returns this
 */
proto.ei.ArtifactsDB.CraftableArtifact.prototype.setCraftable = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.ArtifactsDB.CraftableArtifact} returns this
 */
proto.ei.ArtifactsDB.CraftableArtifact.prototype.clearCraftable = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ArtifactsDB.CraftableArtifact.prototype.hasCraftable = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional bool recipe_discovered = 5;
 * @return {boolean}
 */
proto.ei.ArtifactsDB.CraftableArtifact.prototype.getRecipeDiscovered = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 5, false));
};


/**
 * @param {boolean} value
 * @return {!proto.ei.ArtifactsDB.CraftableArtifact} returns this
 */
proto.ei.ArtifactsDB.CraftableArtifact.prototype.setRecipeDiscovered = function(value) {
  return jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.ArtifactsDB.CraftableArtifact} returns this
 */
proto.ei.ArtifactsDB.CraftableArtifact.prototype.clearRecipeDiscovered = function() {
  return jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ArtifactsDB.CraftableArtifact.prototype.hasRecipeDiscovered = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional bool seen = 2;
 * @return {boolean}
 */
proto.ei.ArtifactsDB.CraftableArtifact.prototype.getSeen = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));
};


/**
 * @param {boolean} value
 * @return {!proto.ei.ArtifactsDB.CraftableArtifact} returns this
 */
proto.ei.ArtifactsDB.CraftableArtifact.prototype.setSeen = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.ArtifactsDB.CraftableArtifact} returns this
 */
proto.ei.ArtifactsDB.CraftableArtifact.prototype.clearSeen = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ArtifactsDB.CraftableArtifact.prototype.hasSeen = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional uint32 count = 3;
 * @return {number}
 */
proto.ei.ArtifactsDB.CraftableArtifact.prototype.getCount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.ei.ArtifactsDB.CraftableArtifact} returns this
 */
proto.ei.ArtifactsDB.CraftableArtifact.prototype.setCount = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.ArtifactsDB.CraftableArtifact} returns this
 */
proto.ei.ArtifactsDB.CraftableArtifact.prototype.clearCount = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ArtifactsDB.CraftableArtifact.prototype.hasCount = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * repeated ArtifactInventoryItem inventory_items = 1;
 * @return {!Array<!proto.ei.ArtifactInventoryItem>}
 */
proto.ei.ArtifactsDB.prototype.getInventoryItemsList = function() {
  return /** @type{!Array<!proto.ei.ArtifactInventoryItem>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.ei.ArtifactInventoryItem, 1));
};


/**
 * @param {!Array<!proto.ei.ArtifactInventoryItem>} value
 * @return {!proto.ei.ArtifactsDB} returns this
*/
proto.ei.ArtifactsDB.prototype.setInventoryItemsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.ei.ArtifactInventoryItem=} opt_value
 * @param {number=} opt_index
 * @return {!proto.ei.ArtifactInventoryItem}
 */
proto.ei.ArtifactsDB.prototype.addInventoryItems = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.ei.ArtifactInventoryItem, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.ei.ArtifactsDB} returns this
 */
proto.ei.ArtifactsDB.prototype.clearInventoryItemsList = function() {
  return this.setInventoryItemsList([]);
};


/**
 * optional uint64 item_sequence = 2;
 * @return {number}
 */
proto.ei.ArtifactsDB.prototype.getItemSequence = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.ei.ArtifactsDB} returns this
 */
proto.ei.ArtifactsDB.prototype.setItemSequence = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.ArtifactsDB} returns this
 */
proto.ei.ArtifactsDB.prototype.clearItemSequence = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ArtifactsDB.prototype.hasItemSequence = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * repeated InventorySlot inventory_slots = 3;
 * @return {!Array<!proto.ei.InventorySlot>}
 */
proto.ei.ArtifactsDB.prototype.getInventorySlotsList = function() {
  return /** @type{!Array<!proto.ei.InventorySlot>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.ei.InventorySlot, 3));
};


/**
 * @param {!Array<!proto.ei.InventorySlot>} value
 * @return {!proto.ei.ArtifactsDB} returns this
*/
proto.ei.ArtifactsDB.prototype.setInventorySlotsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.ei.InventorySlot=} opt_value
 * @param {number=} opt_index
 * @return {!proto.ei.InventorySlot}
 */
proto.ei.ArtifactsDB.prototype.addInventorySlots = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.ei.InventorySlot, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.ei.ArtifactsDB} returns this
 */
proto.ei.ArtifactsDB.prototype.clearInventorySlotsList = function() {
  return this.setInventorySlotsList([]);
};


/**
 * repeated ActiveArtifactSlot active_artifacts_DEPRECATED = 7;
 * @return {!Array<!proto.ei.ArtifactsDB.ActiveArtifactSlot>}
 */
proto.ei.ArtifactsDB.prototype.getActiveArtifactsDeprecatedList = function() {
  return /** @type{!Array<!proto.ei.ArtifactsDB.ActiveArtifactSlot>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.ei.ArtifactsDB.ActiveArtifactSlot, 7));
};


/**
 * @param {!Array<!proto.ei.ArtifactsDB.ActiveArtifactSlot>} value
 * @return {!proto.ei.ArtifactsDB} returns this
*/
proto.ei.ArtifactsDB.prototype.setActiveArtifactsDeprecatedList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 7, value);
};


/**
 * @param {!proto.ei.ArtifactsDB.ActiveArtifactSlot=} opt_value
 * @param {number=} opt_index
 * @return {!proto.ei.ArtifactsDB.ActiveArtifactSlot}
 */
proto.ei.ArtifactsDB.prototype.addActiveArtifactsDeprecated = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 7, opt_value, proto.ei.ArtifactsDB.ActiveArtifactSlot, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.ei.ArtifactsDB} returns this
 */
proto.ei.ArtifactsDB.prototype.clearActiveArtifactsDeprecatedList = function() {
  return this.setActiveArtifactsDeprecatedList([]);
};


/**
 * repeated ActiveArtifactSet active_artifact_sets = 11;
 * @return {!Array<!proto.ei.ArtifactsDB.ActiveArtifactSet>}
 */
proto.ei.ArtifactsDB.prototype.getActiveArtifactSetsList = function() {
  return /** @type{!Array<!proto.ei.ArtifactsDB.ActiveArtifactSet>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.ei.ArtifactsDB.ActiveArtifactSet, 11));
};


/**
 * @param {!Array<!proto.ei.ArtifactsDB.ActiveArtifactSet>} value
 * @return {!proto.ei.ArtifactsDB} returns this
*/
proto.ei.ArtifactsDB.prototype.setActiveArtifactSetsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 11, value);
};


/**
 * @param {!proto.ei.ArtifactsDB.ActiveArtifactSet=} opt_value
 * @param {number=} opt_index
 * @return {!proto.ei.ArtifactsDB.ActiveArtifactSet}
 */
proto.ei.ArtifactsDB.prototype.addActiveArtifactSets = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 11, opt_value, proto.ei.ArtifactsDB.ActiveArtifactSet, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.ei.ArtifactsDB} returns this
 */
proto.ei.ArtifactsDB.prototype.clearActiveArtifactSetsList = function() {
  return this.setActiveArtifactSetsList([]);
};


/**
 * repeated ActiveArtifactSet saved_artifact_sets = 13;
 * @return {!Array<!proto.ei.ArtifactsDB.ActiveArtifactSet>}
 */
proto.ei.ArtifactsDB.prototype.getSavedArtifactSetsList = function() {
  return /** @type{!Array<!proto.ei.ArtifactsDB.ActiveArtifactSet>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.ei.ArtifactsDB.ActiveArtifactSet, 13));
};


/**
 * @param {!Array<!proto.ei.ArtifactsDB.ActiveArtifactSet>} value
 * @return {!proto.ei.ArtifactsDB} returns this
*/
proto.ei.ArtifactsDB.prototype.setSavedArtifactSetsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 13, value);
};


/**
 * @param {!proto.ei.ArtifactsDB.ActiveArtifactSet=} opt_value
 * @param {number=} opt_index
 * @return {!proto.ei.ArtifactsDB.ActiveArtifactSet}
 */
proto.ei.ArtifactsDB.prototype.addSavedArtifactSets = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 13, opt_value, proto.ei.ArtifactsDB.ActiveArtifactSet, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.ei.ArtifactsDB} returns this
 */
proto.ei.ArtifactsDB.prototype.clearSavedArtifactSetsList = function() {
  return this.setSavedArtifactSetsList([]);
};


/**
 * repeated CraftableArtifact artifact_status = 12;
 * @return {!Array<!proto.ei.ArtifactsDB.CraftableArtifact>}
 */
proto.ei.ArtifactsDB.prototype.getArtifactStatusList = function() {
  return /** @type{!Array<!proto.ei.ArtifactsDB.CraftableArtifact>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.ei.ArtifactsDB.CraftableArtifact, 12));
};


/**
 * @param {!Array<!proto.ei.ArtifactsDB.CraftableArtifact>} value
 * @return {!proto.ei.ArtifactsDB} returns this
*/
proto.ei.ArtifactsDB.prototype.setArtifactStatusList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 12, value);
};


/**
 * @param {!proto.ei.ArtifactsDB.CraftableArtifact=} opt_value
 * @param {number=} opt_index
 * @return {!proto.ei.ArtifactsDB.CraftableArtifact}
 */
proto.ei.ArtifactsDB.prototype.addArtifactStatus = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 12, opt_value, proto.ei.ArtifactsDB.CraftableArtifact, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.ei.ArtifactsDB} returns this
 */
proto.ei.ArtifactsDB.prototype.clearArtifactStatusList = function() {
  return this.setArtifactStatusList([]);
};


/**
 * optional MissionInfo fueling_mission = 14;
 * @return {?proto.ei.MissionInfo}
 */
proto.ei.ArtifactsDB.prototype.getFuelingMission = function() {
  return /** @type{?proto.ei.MissionInfo} */ (
    jspb.Message.getWrapperField(this, proto.ei.MissionInfo, 14));
};


/**
 * @param {?proto.ei.MissionInfo|undefined} value
 * @return {!proto.ei.ArtifactsDB} returns this
*/
proto.ei.ArtifactsDB.prototype.setFuelingMission = function(value) {
  return jspb.Message.setWrapperField(this, 14, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.ei.ArtifactsDB} returns this
 */
proto.ei.ArtifactsDB.prototype.clearFuelingMission = function() {
  return this.setFuelingMission(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ArtifactsDB.prototype.hasFuelingMission = function() {
  return jspb.Message.getField(this, 14) != null;
};


/**
 * repeated MissionInfo mission_infos = 4;
 * @return {!Array<!proto.ei.MissionInfo>}
 */
proto.ei.ArtifactsDB.prototype.getMissionInfosList = function() {
  return /** @type{!Array<!proto.ei.MissionInfo>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.ei.MissionInfo, 4));
};


/**
 * @param {!Array<!proto.ei.MissionInfo>} value
 * @return {!proto.ei.ArtifactsDB} returns this
*/
proto.ei.ArtifactsDB.prototype.setMissionInfosList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 4, value);
};


/**
 * @param {!proto.ei.MissionInfo=} opt_value
 * @param {number=} opt_index
 * @return {!proto.ei.MissionInfo}
 */
proto.ei.ArtifactsDB.prototype.addMissionInfos = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 4, opt_value, proto.ei.MissionInfo, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.ei.ArtifactsDB} returns this
 */
proto.ei.ArtifactsDB.prototype.clearMissionInfosList = function() {
  return this.setMissionInfosList([]);
};


/**
 * repeated MissionInfo mission_archive = 5;
 * @return {!Array<!proto.ei.MissionInfo>}
 */
proto.ei.ArtifactsDB.prototype.getMissionArchiveList = function() {
  return /** @type{!Array<!proto.ei.MissionInfo>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.ei.MissionInfo, 5));
};


/**
 * @param {!Array<!proto.ei.MissionInfo>} value
 * @return {!proto.ei.ArtifactsDB} returns this
*/
proto.ei.ArtifactsDB.prototype.setMissionArchiveList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 5, value);
};


/**
 * @param {!proto.ei.MissionInfo=} opt_value
 * @param {number=} opt_index
 * @return {!proto.ei.MissionInfo}
 */
proto.ei.ArtifactsDB.prototype.addMissionArchive = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 5, opt_value, proto.ei.MissionInfo, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.ei.ArtifactsDB} returns this
 */
proto.ei.ArtifactsDB.prototype.clearMissionArchiveList = function() {
  return this.setMissionArchiveList([]);
};


/**
 * repeated ArtifactSpec discovered_artifacts_DEPRECATED = 8;
 * @return {!Array<!proto.ei.ArtifactSpec>}
 */
proto.ei.ArtifactsDB.prototype.getDiscoveredArtifactsDeprecatedList = function() {
  return /** @type{!Array<!proto.ei.ArtifactSpec>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.ei.ArtifactSpec, 8));
};


/**
 * @param {!Array<!proto.ei.ArtifactSpec>} value
 * @return {!proto.ei.ArtifactsDB} returns this
*/
proto.ei.ArtifactsDB.prototype.setDiscoveredArtifactsDeprecatedList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 8, value);
};


/**
 * @param {!proto.ei.ArtifactSpec=} opt_value
 * @param {number=} opt_index
 * @return {!proto.ei.ArtifactSpec}
 */
proto.ei.ArtifactsDB.prototype.addDiscoveredArtifactsDeprecated = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 8, opt_value, proto.ei.ArtifactSpec, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.ei.ArtifactsDB} returns this
 */
proto.ei.ArtifactsDB.prototype.clearDiscoveredArtifactsDeprecatedList = function() {
  return this.setDiscoveredArtifactsDeprecatedList([]);
};


/**
 * repeated CraftableArtifact craftable_artifacts_DEPRECATED = 9;
 * @return {!Array<!proto.ei.ArtifactsDB.CraftableArtifact>}
 */
proto.ei.ArtifactsDB.prototype.getCraftableArtifactsDeprecatedList = function() {
  return /** @type{!Array<!proto.ei.ArtifactsDB.CraftableArtifact>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.ei.ArtifactsDB.CraftableArtifact, 9));
};


/**
 * @param {!Array<!proto.ei.ArtifactsDB.CraftableArtifact>} value
 * @return {!proto.ei.ArtifactsDB} returns this
*/
proto.ei.ArtifactsDB.prototype.setCraftableArtifactsDeprecatedList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 9, value);
};


/**
 * @param {!proto.ei.ArtifactsDB.CraftableArtifact=} opt_value
 * @param {number=} opt_index
 * @return {!proto.ei.ArtifactsDB.CraftableArtifact}
 */
proto.ei.ArtifactsDB.prototype.addCraftableArtifactsDeprecated = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 9, opt_value, proto.ei.ArtifactsDB.CraftableArtifact, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.ei.ArtifactsDB} returns this
 */
proto.ei.ArtifactsDB.prototype.clearCraftableArtifactsDeprecatedList = function() {
  return this.setCraftableArtifactsDeprecatedList([]);
};


/**
 * repeated CraftableArtifact crafting_counts_DEPRECATED = 10;
 * @return {!Array<!proto.ei.ArtifactsDB.CraftableArtifact>}
 */
proto.ei.ArtifactsDB.prototype.getCraftingCountsDeprecatedList = function() {
  return /** @type{!Array<!proto.ei.ArtifactsDB.CraftableArtifact>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.ei.ArtifactsDB.CraftableArtifact, 10));
};


/**
 * @param {!Array<!proto.ei.ArtifactsDB.CraftableArtifact>} value
 * @return {!proto.ei.ArtifactsDB} returns this
*/
proto.ei.ArtifactsDB.prototype.setCraftingCountsDeprecatedList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 10, value);
};


/**
 * @param {!proto.ei.ArtifactsDB.CraftableArtifact=} opt_value
 * @param {number=} opt_index
 * @return {!proto.ei.ArtifactsDB.CraftableArtifact}
 */
proto.ei.ArtifactsDB.prototype.addCraftingCountsDeprecated = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 10, opt_value, proto.ei.ArtifactsDB.CraftableArtifact, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.ei.ArtifactsDB} returns this
 */
proto.ei.ArtifactsDB.prototype.clearCraftingCountsDeprecatedList = function() {
  return this.setCraftingCountsDeprecatedList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ei.AuthenticatedMessage.prototype.toObject = function(opt_includeInstance) {
  return proto.ei.AuthenticatedMessage.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ei.AuthenticatedMessage} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.AuthenticatedMessage.toObject = function(includeInstance, msg) {
  var f, obj = {
    message: msg.getMessage_asB64(),
    version: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f,
    code: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,
    compressed: (f = jspb.Message.getBooleanField(msg, 4)) == null ? undefined : f,
    originalSize: (f = jspb.Message.getField(msg, 5)) == null ? undefined : f,
    userId: (f = jspb.Message.getField(msg, 6)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ei.AuthenticatedMessage}
 */
proto.ei.AuthenticatedMessage.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ei.AuthenticatedMessage;
  return proto.ei.AuthenticatedMessage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ei.AuthenticatedMessage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ei.AuthenticatedMessage}
 */
proto.ei.AuthenticatedMessage.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setMessage(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setVersion(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setCode(value);
      break;
    case 4:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setCompressed(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setOriginalSize(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ei.AuthenticatedMessage.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ei.AuthenticatedMessage.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ei.AuthenticatedMessage} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.AuthenticatedMessage.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeBytes(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeUint32(
      3,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeBool(
      4,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeUint32(
      5,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeString(
      6,
      f
    );
  }
};


/**
 * optional bytes message = 1;
 * @return {string}
 */
proto.ei.AuthenticatedMessage.prototype.getMessage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * optional bytes message = 1;
 * This is a type-conversion wrapper around `getMessage()`
 * @return {string}
 */
proto.ei.AuthenticatedMessage.prototype.getMessage_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getMessage()));
};


/**
 * optional bytes message = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getMessage()`
 * @return {!Uint8Array}
 */
proto.ei.AuthenticatedMessage.prototype.getMessage_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getMessage()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.ei.AuthenticatedMessage} returns this
 */
proto.ei.AuthenticatedMessage.prototype.setMessage = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.AuthenticatedMessage} returns this
 */
proto.ei.AuthenticatedMessage.prototype.clearMessage = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.AuthenticatedMessage.prototype.hasMessage = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional uint32 version = 3;
 * @return {number}
 */
proto.ei.AuthenticatedMessage.prototype.getVersion = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.ei.AuthenticatedMessage} returns this
 */
proto.ei.AuthenticatedMessage.prototype.setVersion = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.AuthenticatedMessage} returns this
 */
proto.ei.AuthenticatedMessage.prototype.clearVersion = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.AuthenticatedMessage.prototype.hasVersion = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional string code = 2;
 * @return {string}
 */
proto.ei.AuthenticatedMessage.prototype.getCode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.ei.AuthenticatedMessage} returns this
 */
proto.ei.AuthenticatedMessage.prototype.setCode = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.AuthenticatedMessage} returns this
 */
proto.ei.AuthenticatedMessage.prototype.clearCode = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.AuthenticatedMessage.prototype.hasCode = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional bool compressed = 4;
 * @return {boolean}
 */
proto.ei.AuthenticatedMessage.prototype.getCompressed = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 4, false));
};


/**
 * @param {boolean} value
 * @return {!proto.ei.AuthenticatedMessage} returns this
 */
proto.ei.AuthenticatedMessage.prototype.setCompressed = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.AuthenticatedMessage} returns this
 */
proto.ei.AuthenticatedMessage.prototype.clearCompressed = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.AuthenticatedMessage.prototype.hasCompressed = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional uint32 original_size = 5;
 * @return {number}
 */
proto.ei.AuthenticatedMessage.prototype.getOriginalSize = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.ei.AuthenticatedMessage} returns this
 */
proto.ei.AuthenticatedMessage.prototype.setOriginalSize = function(value) {
  return jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.AuthenticatedMessage} returns this
 */
proto.ei.AuthenticatedMessage.prototype.clearOriginalSize = function() {
  return jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.AuthenticatedMessage.prototype.hasOriginalSize = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional string user_id = 6;
 * @return {string}
 */
proto.ei.AuthenticatedMessage.prototype.getUserId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.ei.AuthenticatedMessage} returns this
 */
proto.ei.AuthenticatedMessage.prototype.setUserId = function(value) {
  return jspb.Message.setField(this, 6, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.AuthenticatedMessage} returns this
 */
proto.ei.AuthenticatedMessage.prototype.clearUserId = function() {
  return jspb.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.AuthenticatedMessage.prototype.hasUserId = function() {
  return jspb.Message.getField(this, 6) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ei.LogCompleteMissionPayload.prototype.toObject = function(opt_includeInstance) {
  return proto.ei.LogCompleteMissionPayload.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ei.LogCompleteMissionPayload} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.LogCompleteMissionPayload.toObject = function(includeInstance, msg) {
  var f, obj = {
    req: (f = msg.getReq()) && proto.ei.MissionRequest.toObject(includeInstance, f),
    res: (f = msg.getRes()) && proto.ei.CompleteMissionResponse.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ei.LogCompleteMissionPayload}
 */
proto.ei.LogCompleteMissionPayload.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ei.LogCompleteMissionPayload;
  return proto.ei.LogCompleteMissionPayload.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ei.LogCompleteMissionPayload} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ei.LogCompleteMissionPayload}
 */
proto.ei.LogCompleteMissionPayload.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.ei.MissionRequest;
      reader.readMessage(value,proto.ei.MissionRequest.deserializeBinaryFromReader);
      msg.setReq(value);
      break;
    case 2:
      var value = new proto.ei.CompleteMissionResponse;
      reader.readMessage(value,proto.ei.CompleteMissionResponse.deserializeBinaryFromReader);
      msg.setRes(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ei.LogCompleteMissionPayload.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ei.LogCompleteMissionPayload.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ei.LogCompleteMissionPayload} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.LogCompleteMissionPayload.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getReq();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.ei.MissionRequest.serializeBinaryToWriter
    );
  }
  f = message.getRes();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.ei.CompleteMissionResponse.serializeBinaryToWriter
    );
  }
};


/**
 * optional MissionRequest req = 1;
 * @return {?proto.ei.MissionRequest}
 */
proto.ei.LogCompleteMissionPayload.prototype.getReq = function() {
  return /** @type{?proto.ei.MissionRequest} */ (
    jspb.Message.getWrapperField(this, proto.ei.MissionRequest, 1));
};


/**
 * @param {?proto.ei.MissionRequest|undefined} value
 * @return {!proto.ei.LogCompleteMissionPayload} returns this
*/
proto.ei.LogCompleteMissionPayload.prototype.setReq = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.ei.LogCompleteMissionPayload} returns this
 */
proto.ei.LogCompleteMissionPayload.prototype.clearReq = function() {
  return this.setReq(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.LogCompleteMissionPayload.prototype.hasReq = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional CompleteMissionResponse res = 2;
 * @return {?proto.ei.CompleteMissionResponse}
 */
proto.ei.LogCompleteMissionPayload.prototype.getRes = function() {
  return /** @type{?proto.ei.CompleteMissionResponse} */ (
    jspb.Message.getWrapperField(this, proto.ei.CompleteMissionResponse, 2));
};


/**
 * @param {?proto.ei.CompleteMissionResponse|undefined} value
 * @return {!proto.ei.LogCompleteMissionPayload} returns this
*/
proto.ei.LogCompleteMissionPayload.prototype.setRes = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.ei.LogCompleteMissionPayload} returns this
 */
proto.ei.LogCompleteMissionPayload.prototype.clearRes = function() {
  return this.setRes(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.LogCompleteMissionPayload.prototype.hasRes = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ei.LogCraftArtifactPayload.prototype.toObject = function(opt_includeInstance) {
  return proto.ei.LogCraftArtifactPayload.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ei.LogCraftArtifactPayload} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.LogCraftArtifactPayload.toObject = function(includeInstance, msg) {
  var f, obj = {
    req: (f = msg.getReq()) && proto.ei.CraftArtifactRequest.toObject(includeInstance, f),
    res: (f = msg.getRes()) && proto.ei.CraftArtifactResponse.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ei.LogCraftArtifactPayload}
 */
proto.ei.LogCraftArtifactPayload.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ei.LogCraftArtifactPayload;
  return proto.ei.LogCraftArtifactPayload.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ei.LogCraftArtifactPayload} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ei.LogCraftArtifactPayload}
 */
proto.ei.LogCraftArtifactPayload.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.ei.CraftArtifactRequest;
      reader.readMessage(value,proto.ei.CraftArtifactRequest.deserializeBinaryFromReader);
      msg.setReq(value);
      break;
    case 2:
      var value = new proto.ei.CraftArtifactResponse;
      reader.readMessage(value,proto.ei.CraftArtifactResponse.deserializeBinaryFromReader);
      msg.setRes(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ei.LogCraftArtifactPayload.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ei.LogCraftArtifactPayload.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ei.LogCraftArtifactPayload} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.LogCraftArtifactPayload.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getReq();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.ei.CraftArtifactRequest.serializeBinaryToWriter
    );
  }
  f = message.getRes();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.ei.CraftArtifactResponse.serializeBinaryToWriter
    );
  }
};


/**
 * optional CraftArtifactRequest req = 1;
 * @return {?proto.ei.CraftArtifactRequest}
 */
proto.ei.LogCraftArtifactPayload.prototype.getReq = function() {
  return /** @type{?proto.ei.CraftArtifactRequest} */ (
    jspb.Message.getWrapperField(this, proto.ei.CraftArtifactRequest, 1));
};


/**
 * @param {?proto.ei.CraftArtifactRequest|undefined} value
 * @return {!proto.ei.LogCraftArtifactPayload} returns this
*/
proto.ei.LogCraftArtifactPayload.prototype.setReq = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.ei.LogCraftArtifactPayload} returns this
 */
proto.ei.LogCraftArtifactPayload.prototype.clearReq = function() {
  return this.setReq(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.LogCraftArtifactPayload.prototype.hasReq = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional CraftArtifactResponse res = 2;
 * @return {?proto.ei.CraftArtifactResponse}
 */
proto.ei.LogCraftArtifactPayload.prototype.getRes = function() {
  return /** @type{?proto.ei.CraftArtifactResponse} */ (
    jspb.Message.getWrapperField(this, proto.ei.CraftArtifactResponse, 2));
};


/**
 * @param {?proto.ei.CraftArtifactResponse|undefined} value
 * @return {!proto.ei.LogCraftArtifactPayload} returns this
*/
proto.ei.LogCraftArtifactPayload.prototype.setRes = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.ei.LogCraftArtifactPayload} returns this
 */
proto.ei.LogCraftArtifactPayload.prototype.clearRes = function() {
  return this.setRes(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.LogCraftArtifactPayload.prototype.hasRes = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ei.LogConsumeArtifactPayload.prototype.toObject = function(opt_includeInstance) {
  return proto.ei.LogConsumeArtifactPayload.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ei.LogConsumeArtifactPayload} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.LogConsumeArtifactPayload.toObject = function(includeInstance, msg) {
  var f, obj = {
    req: (f = msg.getReq()) && proto.ei.ConsumeArtifactRequest.toObject(includeInstance, f),
    res: (f = msg.getRes()) && proto.ei.ConsumeArtifactResponse.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ei.LogConsumeArtifactPayload}
 */
proto.ei.LogConsumeArtifactPayload.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ei.LogConsumeArtifactPayload;
  return proto.ei.LogConsumeArtifactPayload.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ei.LogConsumeArtifactPayload} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ei.LogConsumeArtifactPayload}
 */
proto.ei.LogConsumeArtifactPayload.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.ei.ConsumeArtifactRequest;
      reader.readMessage(value,proto.ei.ConsumeArtifactRequest.deserializeBinaryFromReader);
      msg.setReq(value);
      break;
    case 2:
      var value = new proto.ei.ConsumeArtifactResponse;
      reader.readMessage(value,proto.ei.ConsumeArtifactResponse.deserializeBinaryFromReader);
      msg.setRes(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ei.LogConsumeArtifactPayload.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ei.LogConsumeArtifactPayload.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ei.LogConsumeArtifactPayload} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.LogConsumeArtifactPayload.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getReq();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.ei.ConsumeArtifactRequest.serializeBinaryToWriter
    );
  }
  f = message.getRes();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.ei.ConsumeArtifactResponse.serializeBinaryToWriter
    );
  }
};


/**
 * optional ConsumeArtifactRequest req = 1;
 * @return {?proto.ei.ConsumeArtifactRequest}
 */
proto.ei.LogConsumeArtifactPayload.prototype.getReq = function() {
  return /** @type{?proto.ei.ConsumeArtifactRequest} */ (
    jspb.Message.getWrapperField(this, proto.ei.ConsumeArtifactRequest, 1));
};


/**
 * @param {?proto.ei.ConsumeArtifactRequest|undefined} value
 * @return {!proto.ei.LogConsumeArtifactPayload} returns this
*/
proto.ei.LogConsumeArtifactPayload.prototype.setReq = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.ei.LogConsumeArtifactPayload} returns this
 */
proto.ei.LogConsumeArtifactPayload.prototype.clearReq = function() {
  return this.setReq(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.LogConsumeArtifactPayload.prototype.hasReq = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional ConsumeArtifactResponse res = 2;
 * @return {?proto.ei.ConsumeArtifactResponse}
 */
proto.ei.LogConsumeArtifactPayload.prototype.getRes = function() {
  return /** @type{?proto.ei.ConsumeArtifactResponse} */ (
    jspb.Message.getWrapperField(this, proto.ei.ConsumeArtifactResponse, 2));
};


/**
 * @param {?proto.ei.ConsumeArtifactResponse|undefined} value
 * @return {!proto.ei.LogConsumeArtifactPayload} returns this
*/
proto.ei.LogConsumeArtifactPayload.prototype.setRes = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.ei.LogConsumeArtifactPayload} returns this
 */
proto.ei.LogConsumeArtifactPayload.prototype.clearRes = function() {
  return this.setRes(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.LogConsumeArtifactPayload.prototype.hasRes = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ei.LogSetArtifactPayload.prototype.toObject = function(opt_includeInstance) {
  return proto.ei.LogSetArtifactPayload.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ei.LogSetArtifactPayload} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.LogSetArtifactPayload.toObject = function(includeInstance, msg) {
  var f, obj = {
    req: (f = msg.getReq()) && proto.ei.SetArtifactRequest.toObject(includeInstance, f),
    res: (f = msg.getRes()) && proto.ei.SetArtifactResponse.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ei.LogSetArtifactPayload}
 */
proto.ei.LogSetArtifactPayload.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ei.LogSetArtifactPayload;
  return proto.ei.LogSetArtifactPayload.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ei.LogSetArtifactPayload} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ei.LogSetArtifactPayload}
 */
proto.ei.LogSetArtifactPayload.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.ei.SetArtifactRequest;
      reader.readMessage(value,proto.ei.SetArtifactRequest.deserializeBinaryFromReader);
      msg.setReq(value);
      break;
    case 2:
      var value = new proto.ei.SetArtifactResponse;
      reader.readMessage(value,proto.ei.SetArtifactResponse.deserializeBinaryFromReader);
      msg.setRes(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ei.LogSetArtifactPayload.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ei.LogSetArtifactPayload.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ei.LogSetArtifactPayload} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.LogSetArtifactPayload.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getReq();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.ei.SetArtifactRequest.serializeBinaryToWriter
    );
  }
  f = message.getRes();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.ei.SetArtifactResponse.serializeBinaryToWriter
    );
  }
};


/**
 * optional SetArtifactRequest req = 1;
 * @return {?proto.ei.SetArtifactRequest}
 */
proto.ei.LogSetArtifactPayload.prototype.getReq = function() {
  return /** @type{?proto.ei.SetArtifactRequest} */ (
    jspb.Message.getWrapperField(this, proto.ei.SetArtifactRequest, 1));
};


/**
 * @param {?proto.ei.SetArtifactRequest|undefined} value
 * @return {!proto.ei.LogSetArtifactPayload} returns this
*/
proto.ei.LogSetArtifactPayload.prototype.setReq = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.ei.LogSetArtifactPayload} returns this
 */
proto.ei.LogSetArtifactPayload.prototype.clearReq = function() {
  return this.setReq(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.LogSetArtifactPayload.prototype.hasReq = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional SetArtifactResponse res = 2;
 * @return {?proto.ei.SetArtifactResponse}
 */
proto.ei.LogSetArtifactPayload.prototype.getRes = function() {
  return /** @type{?proto.ei.SetArtifactResponse} */ (
    jspb.Message.getWrapperField(this, proto.ei.SetArtifactResponse, 2));
};


/**
 * @param {?proto.ei.SetArtifactResponse|undefined} value
 * @return {!proto.ei.LogSetArtifactPayload} returns this
*/
proto.ei.LogSetArtifactPayload.prototype.setRes = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.ei.LogSetArtifactPayload} returns this
 */
proto.ei.LogSetArtifactPayload.prototype.clearRes = function() {
  return this.setRes(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.LogSetArtifactPayload.prototype.hasRes = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ei.AccountTransferPayload.prototype.toObject = function(opt_includeInstance) {
  return proto.ei.AccountTransferPayload.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ei.AccountTransferPayload} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.AccountTransferPayload.toObject = function(includeInstance, msg) {
  var f, obj = {
    fromId: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    toEiUserId: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ei.AccountTransferPayload}
 */
proto.ei.AccountTransferPayload.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ei.AccountTransferPayload;
  return proto.ei.AccountTransferPayload.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ei.AccountTransferPayload} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ei.AccountTransferPayload}
 */
proto.ei.AccountTransferPayload.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setFromId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setToEiUserId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ei.AccountTransferPayload.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ei.AccountTransferPayload.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ei.AccountTransferPayload} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.AccountTransferPayload.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string from_id = 1;
 * @return {string}
 */
proto.ei.AccountTransferPayload.prototype.getFromId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.ei.AccountTransferPayload} returns this
 */
proto.ei.AccountTransferPayload.prototype.setFromId = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.AccountTransferPayload} returns this
 */
proto.ei.AccountTransferPayload.prototype.clearFromId = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.AccountTransferPayload.prototype.hasFromId = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string to_ei_user_id = 2;
 * @return {string}
 */
proto.ei.AccountTransferPayload.prototype.getToEiUserId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.ei.AccountTransferPayload} returns this
 */
proto.ei.AccountTransferPayload.prototype.setToEiUserId = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.AccountTransferPayload} returns this
 */
proto.ei.AccountTransferPayload.prototype.clearToEiUserId = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.AccountTransferPayload.prototype.hasToEiUserId = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ei.SaveBackupResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.ei.SaveBackupResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ei.SaveBackupResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.SaveBackupResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    success: (f = jspb.Message.getBooleanField(msg, 1)) == null ? undefined : f,
    errorCode: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,
    message: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f,
    existingBackup: (f = msg.getExistingBackup()) && proto.ei.Backup.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ei.SaveBackupResponse}
 */
proto.ei.SaveBackupResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ei.SaveBackupResponse;
  return proto.ei.SaveBackupResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ei.SaveBackupResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ei.SaveBackupResponse}
 */
proto.ei.SaveBackupResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setSuccess(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setErrorCode(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setMessage(value);
      break;
    case 4:
      var value = new proto.ei.Backup;
      reader.readMessage(value,proto.ei.Backup.deserializeBinaryFromReader);
      msg.setExistingBackup(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ei.SaveBackupResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ei.SaveBackupResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ei.SaveBackupResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.SaveBackupResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {boolean} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeBool(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeUint32(
      2,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getExistingBackup();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.ei.Backup.serializeBinaryToWriter
    );
  }
};


/**
 * @enum {number}
 */
proto.ei.SaveBackupResponse.ErrorCodes = {
  NO_ERROR: 0,
  USER_NOT_FOUND: 1,
  COULD_NOT_OVERWRITE: 2,
  BACKUP_OFFERED: 3,
  BAD_USER_ID: 4
};

/**
 * optional bool success = 1;
 * @return {boolean}
 */
proto.ei.SaveBackupResponse.prototype.getSuccess = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.ei.SaveBackupResponse} returns this
 */
proto.ei.SaveBackupResponse.prototype.setSuccess = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.SaveBackupResponse} returns this
 */
proto.ei.SaveBackupResponse.prototype.clearSuccess = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.SaveBackupResponse.prototype.hasSuccess = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional uint32 error_code = 2;
 * @return {number}
 */
proto.ei.SaveBackupResponse.prototype.getErrorCode = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.ei.SaveBackupResponse} returns this
 */
proto.ei.SaveBackupResponse.prototype.setErrorCode = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.SaveBackupResponse} returns this
 */
proto.ei.SaveBackupResponse.prototype.clearErrorCode = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.SaveBackupResponse.prototype.hasErrorCode = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string message = 3;
 * @return {string}
 */
proto.ei.SaveBackupResponse.prototype.getMessage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.ei.SaveBackupResponse} returns this
 */
proto.ei.SaveBackupResponse.prototype.setMessage = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.SaveBackupResponse} returns this
 */
proto.ei.SaveBackupResponse.prototype.clearMessage = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.SaveBackupResponse.prototype.hasMessage = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional Backup existing_backup = 4;
 * @return {?proto.ei.Backup}
 */
proto.ei.SaveBackupResponse.prototype.getExistingBackup = function() {
  return /** @type{?proto.ei.Backup} */ (
    jspb.Message.getWrapperField(this, proto.ei.Backup, 4));
};


/**
 * @param {?proto.ei.Backup|undefined} value
 * @return {!proto.ei.SaveBackupResponse} returns this
*/
proto.ei.SaveBackupResponse.prototype.setExistingBackup = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.ei.SaveBackupResponse} returns this
 */
proto.ei.SaveBackupResponse.prototype.clearExistingBackup = function() {
  return this.setExistingBackup(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.SaveBackupResponse.prototype.hasExistingBackup = function() {
  return jspb.Message.getField(this, 4) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ei.CleanAccountRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.ei.CleanAccountRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ei.CleanAccountRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.CleanAccountRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    eiUserIdToKeep: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    gameServicesId: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ei.CleanAccountRequest}
 */
proto.ei.CleanAccountRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ei.CleanAccountRequest;
  return proto.ei.CleanAccountRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ei.CleanAccountRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ei.CleanAccountRequest}
 */
proto.ei.CleanAccountRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setEiUserIdToKeep(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setGameServicesId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ei.CleanAccountRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ei.CleanAccountRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ei.CleanAccountRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.CleanAccountRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string ei_user_id_to_keep = 1;
 * @return {string}
 */
proto.ei.CleanAccountRequest.prototype.getEiUserIdToKeep = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.ei.CleanAccountRequest} returns this
 */
proto.ei.CleanAccountRequest.prototype.setEiUserIdToKeep = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.CleanAccountRequest} returns this
 */
proto.ei.CleanAccountRequest.prototype.clearEiUserIdToKeep = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.CleanAccountRequest.prototype.hasEiUserIdToKeep = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string game_services_id = 2;
 * @return {string}
 */
proto.ei.CleanAccountRequest.prototype.getGameServicesId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.ei.CleanAccountRequest} returns this
 */
proto.ei.CleanAccountRequest.prototype.setGameServicesId = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.CleanAccountRequest} returns this
 */
proto.ei.CleanAccountRequest.prototype.clearGameServicesId = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.CleanAccountRequest.prototype.hasGameServicesId = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ei.ReturnEDTPayload.prototype.toObject = function(opt_includeInstance) {
  return proto.ei.ReturnEDTPayload.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ei.ReturnEDTPayload} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.ReturnEDTPayload.toObject = function(includeInstance, msg) {
  var f, obj = {
    eiUserId: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ei.ReturnEDTPayload}
 */
proto.ei.ReturnEDTPayload.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ei.ReturnEDTPayload;
  return proto.ei.ReturnEDTPayload.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ei.ReturnEDTPayload} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ei.ReturnEDTPayload}
 */
proto.ei.ReturnEDTPayload.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setEiUserId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ei.ReturnEDTPayload.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ei.ReturnEDTPayload.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ei.ReturnEDTPayload} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.ReturnEDTPayload.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string ei_user_id = 1;
 * @return {string}
 */
proto.ei.ReturnEDTPayload.prototype.getEiUserId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.ei.ReturnEDTPayload} returns this
 */
proto.ei.ReturnEDTPayload.prototype.setEiUserId = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.ReturnEDTPayload} returns this
 */
proto.ei.ReturnEDTPayload.prototype.clearEiUserId = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ReturnEDTPayload.prototype.hasEiUserId = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ei.DLCItem.prototype.toObject = function(opt_includeInstance) {
  return proto.ei.DLCItem.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ei.DLCItem} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.DLCItem.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    directory: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,
    ext: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f,
    compressed: (f = jspb.Message.getBooleanField(msg, 6)) == null ? undefined : f,
    originalSize: (f = jspb.Message.getField(msg, 7)) == null ? undefined : f,
    url: (f = jspb.Message.getField(msg, 4)) == null ? undefined : f,
    checksum: (f = jspb.Message.getField(msg, 5)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ei.DLCItem}
 */
proto.ei.DLCItem.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ei.DLCItem;
  return proto.ei.DLCItem.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ei.DLCItem} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ei.DLCItem}
 */
proto.ei.DLCItem.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setDirectory(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setExt(value);
      break;
    case 6:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setCompressed(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setOriginalSize(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setUrl(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setChecksum(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ei.DLCItem.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ei.DLCItem.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ei.DLCItem} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.DLCItem.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeString(
      3,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeBool(
      6,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 7));
  if (f != null) {
    writer.writeUint64(
      7,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeString(
      4,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeString(
      5,
      f
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.ei.DLCItem.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.ei.DLCItem} returns this
 */
proto.ei.DLCItem.prototype.setName = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.DLCItem} returns this
 */
proto.ei.DLCItem.prototype.clearName = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.DLCItem.prototype.hasName = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string directory = 2;
 * @return {string}
 */
proto.ei.DLCItem.prototype.getDirectory = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.ei.DLCItem} returns this
 */
proto.ei.DLCItem.prototype.setDirectory = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.DLCItem} returns this
 */
proto.ei.DLCItem.prototype.clearDirectory = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.DLCItem.prototype.hasDirectory = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string ext = 3;
 * @return {string}
 */
proto.ei.DLCItem.prototype.getExt = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.ei.DLCItem} returns this
 */
proto.ei.DLCItem.prototype.setExt = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.DLCItem} returns this
 */
proto.ei.DLCItem.prototype.clearExt = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.DLCItem.prototype.hasExt = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional bool compressed = 6;
 * @return {boolean}
 */
proto.ei.DLCItem.prototype.getCompressed = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 6, false));
};


/**
 * @param {boolean} value
 * @return {!proto.ei.DLCItem} returns this
 */
proto.ei.DLCItem.prototype.setCompressed = function(value) {
  return jspb.Message.setField(this, 6, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.DLCItem} returns this
 */
proto.ei.DLCItem.prototype.clearCompressed = function() {
  return jspb.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.DLCItem.prototype.hasCompressed = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional uint64 original_size = 7;
 * @return {number}
 */
proto.ei.DLCItem.prototype.getOriginalSize = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {number} value
 * @return {!proto.ei.DLCItem} returns this
 */
proto.ei.DLCItem.prototype.setOriginalSize = function(value) {
  return jspb.Message.setField(this, 7, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.DLCItem} returns this
 */
proto.ei.DLCItem.prototype.clearOriginalSize = function() {
  return jspb.Message.setField(this, 7, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.DLCItem.prototype.hasOriginalSize = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional string url = 4;
 * @return {string}
 */
proto.ei.DLCItem.prototype.getUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.ei.DLCItem} returns this
 */
proto.ei.DLCItem.prototype.setUrl = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.DLCItem} returns this
 */
proto.ei.DLCItem.prototype.clearUrl = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.DLCItem.prototype.hasUrl = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional string checksum = 5;
 * @return {string}
 */
proto.ei.DLCItem.prototype.getChecksum = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.ei.DLCItem} returns this
 */
proto.ei.DLCItem.prototype.setChecksum = function(value) {
  return jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.DLCItem} returns this
 */
proto.ei.DLCItem.prototype.clearChecksum = function() {
  return jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.DLCItem.prototype.hasChecksum = function() {
  return jspb.Message.getField(this, 5) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.ei.ShellSpec.repeatedFields_ = [11,18];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ei.ShellSpec.prototype.toObject = function(opt_includeInstance) {
  return proto.ei.ShellSpec.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ei.ShellSpec} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.ShellSpec.toObject = function(includeInstance, msg) {
  var f, obj = {
    identifier: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    primaryPiece: (f = msg.getPrimaryPiece()) && proto.ei.ShellSpec.ShellPiece.toObject(includeInstance, f),
    piecesList: jspb.Message.toObjectList(msg.getPiecesList(),
    proto.ei.ShellSpec.ShellPiece.toObject, includeInstance),
    altAssetsList: jspb.Message.toObjectList(msg.getAltAssetsList(),
    proto.ei.DLCItem.toObject, includeInstance),
    name: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f,
    setIdentifier: (f = jspb.Message.getField(msg, 13)) == null ? undefined : f,
    modifiedGeometry: (f = jspb.Message.getBooleanField(msg, 19)) == null ? undefined : f,
    price: (f = jspb.Message.getField(msg, 4)) == null ? undefined : f,
    requiredEop: (f = jspb.Message.getField(msg, 5)) == null ? undefined : f,
    requiredSoulEggs: (f = jspb.Message.getOptionalFloatingPointField(msg, 6)) == null ? undefined : f,
    requiredParentShell: (f = jspb.Message.getField(msg, 20)) == null ? undefined : f,
    isNew: (f = jspb.Message.getBooleanField(msg, 14)) == null ? undefined : f,
    expires: (f = jspb.Message.getBooleanField(msg, 15)) == null ? undefined : f,
    secondsUntilAvailable: (f = jspb.Message.getOptionalFloatingPointField(msg, 17)) == null ? undefined : f,
    secondsRemaining: (f = jspb.Message.getOptionalFloatingPointField(msg, 16)) == null ? undefined : f,
    popularity: (f = jspb.Message.getField(msg, 21)) == null ? undefined : f,
    defaultAppearance: (f = jspb.Message.getBooleanField(msg, 8)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ei.ShellSpec}
 */
proto.ei.ShellSpec.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ei.ShellSpec;
  return proto.ei.ShellSpec.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ei.ShellSpec} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ei.ShellSpec}
 */
proto.ei.ShellSpec.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setIdentifier(value);
      break;
    case 12:
      var value = new proto.ei.ShellSpec.ShellPiece;
      reader.readMessage(value,proto.ei.ShellSpec.ShellPiece.deserializeBinaryFromReader);
      msg.setPrimaryPiece(value);
      break;
    case 11:
      var value = new proto.ei.ShellSpec.ShellPiece;
      reader.readMessage(value,proto.ei.ShellSpec.ShellPiece.deserializeBinaryFromReader);
      msg.addPieces(value);
      break;
    case 18:
      var value = new proto.ei.DLCItem;
      reader.readMessage(value,proto.ei.DLCItem.deserializeBinaryFromReader);
      msg.addAltAssets(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 13:
      var value = /** @type {string} */ (reader.readString());
      msg.setSetIdentifier(value);
      break;
    case 19:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setModifiedGeometry(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setPrice(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setRequiredEop(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setRequiredSoulEggs(value);
      break;
    case 20:
      var value = /** @type {string} */ (reader.readString());
      msg.setRequiredParentShell(value);
      break;
    case 14:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsNew(value);
      break;
    case 15:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setExpires(value);
      break;
    case 17:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setSecondsUntilAvailable(value);
      break;
    case 16:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setSecondsRemaining(value);
      break;
    case 21:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setPopularity(value);
      break;
    case 8:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setDefaultAppearance(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ei.ShellSpec.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ei.ShellSpec.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ei.ShellSpec} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.ShellSpec.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getPrimaryPiece();
  if (f != null) {
    writer.writeMessage(
      12,
      f,
      proto.ei.ShellSpec.ShellPiece.serializeBinaryToWriter
    );
  }
  f = message.getPiecesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      11,
      f,
      proto.ei.ShellSpec.ShellPiece.serializeBinaryToWriter
    );
  }
  f = message.getAltAssetsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      18,
      f,
      proto.ei.DLCItem.serializeBinaryToWriter
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeString(
      3,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 13));
  if (f != null) {
    writer.writeString(
      13,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 19));
  if (f != null) {
    writer.writeBool(
      19,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeUint32(
      4,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeUint32(
      5,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeDouble(
      6,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 20));
  if (f != null) {
    writer.writeString(
      20,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 14));
  if (f != null) {
    writer.writeBool(
      14,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 15));
  if (f != null) {
    writer.writeBool(
      15,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 17));
  if (f != null) {
    writer.writeDouble(
      17,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 16));
  if (f != null) {
    writer.writeDouble(
      16,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 21));
  if (f != null) {
    writer.writeUint64(
      21,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 8));
  if (f != null) {
    writer.writeBool(
      8,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.ei.ShellSpec.AssetType = {
  COOP: 1,
  SHACK: 2,
  SUPER_SHACK: 3,
  SHORT_HOUSE: 4,
  THE_STANDARD: 5,
  LONG_HOUSE: 6,
  DOUBLE_DECKER: 7,
  WAREHOUSE: 8,
  CENTER: 9,
  BUNKER: 10,
  EGGKEA: 11,
  HAB_1K: 12,
  HANGAR: 13,
  TOWER: 14,
  HAB_10K: 15,
  EGGTOPIA: 16,
  MONOLITH: 17,
  PLANET_PORTAL: 18,
  CHICKEN_UNIVERSE: 19,
  SILO_0_SMALL: 50,
  SILO_0_MED: 51,
  SILO_0_LARGE: 52,
  SILO_1_SMALL: 53,
  SILO_1_MED: 54,
  SILO_1_LARGE: 55,
  SILO_ALL: 59,
  MAILBOX: 70,
  TROPHY_CASE: 71,
  GROUND: 72,
  HARDSCAPE: 73,
  HYPERLOOP: 74,
  DEPOT_1: 100,
  DEPOT_2: 101,
  DEPOT_3: 102,
  DEPOT_4: 103,
  DEPOT_5: 104,
  DEPOT_6: 105,
  DEPOT_7: 106,
  LAB_1: 110,
  LAB_2: 111,
  LAB_3: 112,
  LAB_4: 113,
  LAB_5: 114,
  LAB_6: 115,
  HATCHERY_EDIBLE: 120,
  HATCHERY_SUPERFOOD: 121,
  HATCHERY_MEDICAL: 122,
  HATCHERY_ROCKET_FUEL: 123,
  HATCHERY_SUPERMATERIAL: 124,
  HATCHERY_FUSION: 125,
  HATCHERY_QUANTUM: 126,
  HATCHERY_IMMORTALITY: 127,
  HATCHERY_TACHYON: 128,
  HATCHERY_GRAVITON: 129,
  HATCHERY_DILITHIUM: 130,
  HATCHERY_PRODIGY: 131,
  HATCHERY_TERRAFORM: 132,
  HATCHERY_ANTIMATTER: 133,
  HATCHERY_DARK_MATTER: 134,
  HATCHERY_AI: 135,
  HATCHERY_NEBULA: 136,
  HATCHERY_UNIVERSE: 137,
  HATCHERY_ENLIGHTENMENT: 138,
  HATCHERY_CHOCOLATE: 139,
  HATCHERY_EASTER: 140,
  HATCHERY_WATERBALLOON: 141,
  HATCHERY_FIREWORK: 142,
  HATCHERY_PUMPKIN: 143,
  HOA_1: 170,
  HOA_2: 171,
  HOA_3: 172,
  MISSION_CONTROL_1: 180,
  MISSION_CONTROL_2: 181,
  MISSION_CONTROL_3: 182,
  FUEL_TANK_1: 200,
  FUEL_TANK_2: 201,
  FUEL_TANK_3: 202,
  FUEL_TANK_4: 203,
  HATCHERY_GRAVITON_TOP: 500,
  HATCHERY_NEBULA_MIDDLE: 501,
  HATCHERY_NEBULA_TOP: 502,
  HATCHERY_DARK_MATTER_RING_1: 505,
  HATCHERY_DARK_MATTER_RING_2: 506,
  HATCHERY_DARK_MATTER_RING_3: 507,
  HATCHERY_AI_TOP_1: 510,
  HATCHERY_AI_TOP_2: 511,
  HATCHERY_AI_TOP_3: 512,
  HATCHERY_AI_TOP_4: 513,
  HATCHERY_UNIVERSE_PROBE: 515,
  HATCHERY_UNIVERSE_BOLT: 516,
  HATCHERY_ENLIGHTENMENT_ORB: 520,
  HYPERLOOP_TRACK: 570,
  MAILBOX_FULL: 600,
  CHICKEN: 1000,
  HAT: 1010,
  UNKNOWN: 9999
};




if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ei.ShellSpec.ShellPiece.prototype.toObject = function(opt_includeInstance) {
  return proto.ei.ShellSpec.ShellPiece.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ei.ShellSpec.ShellPiece} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.ShellSpec.ShellPiece.toObject = function(includeInstance, msg) {
  var f, obj = {
    assetType: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    dlc: (f = msg.getDlc()) && proto.ei.DLCItem.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ei.ShellSpec.ShellPiece}
 */
proto.ei.ShellSpec.ShellPiece.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ei.ShellSpec.ShellPiece;
  return proto.ei.ShellSpec.ShellPiece.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ei.ShellSpec.ShellPiece} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ei.ShellSpec.ShellPiece}
 */
proto.ei.ShellSpec.ShellPiece.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.ei.ShellSpec.AssetType} */ (reader.readEnum());
      msg.setAssetType(value);
      break;
    case 2:
      var value = new proto.ei.DLCItem;
      reader.readMessage(value,proto.ei.DLCItem.deserializeBinaryFromReader);
      msg.setDlc(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ei.ShellSpec.ShellPiece.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ei.ShellSpec.ShellPiece.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ei.ShellSpec.ShellPiece} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.ShellSpec.ShellPiece.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {!proto.ei.ShellSpec.AssetType} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getDlc();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.ei.DLCItem.serializeBinaryToWriter
    );
  }
};


/**
 * optional AssetType asset_type = 1;
 * @return {!proto.ei.ShellSpec.AssetType}
 */
proto.ei.ShellSpec.ShellPiece.prototype.getAssetType = function() {
  return /** @type {!proto.ei.ShellSpec.AssetType} */ (jspb.Message.getFieldWithDefault(this, 1, 1));
};


/**
 * @param {!proto.ei.ShellSpec.AssetType} value
 * @return {!proto.ei.ShellSpec.ShellPiece} returns this
 */
proto.ei.ShellSpec.ShellPiece.prototype.setAssetType = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.ShellSpec.ShellPiece} returns this
 */
proto.ei.ShellSpec.ShellPiece.prototype.clearAssetType = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ShellSpec.ShellPiece.prototype.hasAssetType = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional DLCItem dlc = 2;
 * @return {?proto.ei.DLCItem}
 */
proto.ei.ShellSpec.ShellPiece.prototype.getDlc = function() {
  return /** @type{?proto.ei.DLCItem} */ (
    jspb.Message.getWrapperField(this, proto.ei.DLCItem, 2));
};


/**
 * @param {?proto.ei.DLCItem|undefined} value
 * @return {!proto.ei.ShellSpec.ShellPiece} returns this
*/
proto.ei.ShellSpec.ShellPiece.prototype.setDlc = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.ei.ShellSpec.ShellPiece} returns this
 */
proto.ei.ShellSpec.ShellPiece.prototype.clearDlc = function() {
  return this.setDlc(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ShellSpec.ShellPiece.prototype.hasDlc = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string identifier = 1;
 * @return {string}
 */
proto.ei.ShellSpec.prototype.getIdentifier = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.ei.ShellSpec} returns this
 */
proto.ei.ShellSpec.prototype.setIdentifier = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.ShellSpec} returns this
 */
proto.ei.ShellSpec.prototype.clearIdentifier = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ShellSpec.prototype.hasIdentifier = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional ShellPiece primary_piece = 12;
 * @return {?proto.ei.ShellSpec.ShellPiece}
 */
proto.ei.ShellSpec.prototype.getPrimaryPiece = function() {
  return /** @type{?proto.ei.ShellSpec.ShellPiece} */ (
    jspb.Message.getWrapperField(this, proto.ei.ShellSpec.ShellPiece, 12));
};


/**
 * @param {?proto.ei.ShellSpec.ShellPiece|undefined} value
 * @return {!proto.ei.ShellSpec} returns this
*/
proto.ei.ShellSpec.prototype.setPrimaryPiece = function(value) {
  return jspb.Message.setWrapperField(this, 12, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.ei.ShellSpec} returns this
 */
proto.ei.ShellSpec.prototype.clearPrimaryPiece = function() {
  return this.setPrimaryPiece(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ShellSpec.prototype.hasPrimaryPiece = function() {
  return jspb.Message.getField(this, 12) != null;
};


/**
 * repeated ShellPiece pieces = 11;
 * @return {!Array<!proto.ei.ShellSpec.ShellPiece>}
 */
proto.ei.ShellSpec.prototype.getPiecesList = function() {
  return /** @type{!Array<!proto.ei.ShellSpec.ShellPiece>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.ei.ShellSpec.ShellPiece, 11));
};


/**
 * @param {!Array<!proto.ei.ShellSpec.ShellPiece>} value
 * @return {!proto.ei.ShellSpec} returns this
*/
proto.ei.ShellSpec.prototype.setPiecesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 11, value);
};


/**
 * @param {!proto.ei.ShellSpec.ShellPiece=} opt_value
 * @param {number=} opt_index
 * @return {!proto.ei.ShellSpec.ShellPiece}
 */
proto.ei.ShellSpec.prototype.addPieces = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 11, opt_value, proto.ei.ShellSpec.ShellPiece, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.ei.ShellSpec} returns this
 */
proto.ei.ShellSpec.prototype.clearPiecesList = function() {
  return this.setPiecesList([]);
};


/**
 * repeated DLCItem alt_assets = 18;
 * @return {!Array<!proto.ei.DLCItem>}
 */
proto.ei.ShellSpec.prototype.getAltAssetsList = function() {
  return /** @type{!Array<!proto.ei.DLCItem>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.ei.DLCItem, 18));
};


/**
 * @param {!Array<!proto.ei.DLCItem>} value
 * @return {!proto.ei.ShellSpec} returns this
*/
proto.ei.ShellSpec.prototype.setAltAssetsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 18, value);
};


/**
 * @param {!proto.ei.DLCItem=} opt_value
 * @param {number=} opt_index
 * @return {!proto.ei.DLCItem}
 */
proto.ei.ShellSpec.prototype.addAltAssets = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 18, opt_value, proto.ei.DLCItem, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.ei.ShellSpec} returns this
 */
proto.ei.ShellSpec.prototype.clearAltAssetsList = function() {
  return this.setAltAssetsList([]);
};


/**
 * optional string name = 3;
 * @return {string}
 */
proto.ei.ShellSpec.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.ei.ShellSpec} returns this
 */
proto.ei.ShellSpec.prototype.setName = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.ShellSpec} returns this
 */
proto.ei.ShellSpec.prototype.clearName = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ShellSpec.prototype.hasName = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional string set_identifier = 13;
 * @return {string}
 */
proto.ei.ShellSpec.prototype.getSetIdentifier = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 13, ""));
};


/**
 * @param {string} value
 * @return {!proto.ei.ShellSpec} returns this
 */
proto.ei.ShellSpec.prototype.setSetIdentifier = function(value) {
  return jspb.Message.setField(this, 13, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.ShellSpec} returns this
 */
proto.ei.ShellSpec.prototype.clearSetIdentifier = function() {
  return jspb.Message.setField(this, 13, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ShellSpec.prototype.hasSetIdentifier = function() {
  return jspb.Message.getField(this, 13) != null;
};


/**
 * optional bool modified_geometry = 19;
 * @return {boolean}
 */
proto.ei.ShellSpec.prototype.getModifiedGeometry = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 19, false));
};


/**
 * @param {boolean} value
 * @return {!proto.ei.ShellSpec} returns this
 */
proto.ei.ShellSpec.prototype.setModifiedGeometry = function(value) {
  return jspb.Message.setField(this, 19, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.ShellSpec} returns this
 */
proto.ei.ShellSpec.prototype.clearModifiedGeometry = function() {
  return jspb.Message.setField(this, 19, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ShellSpec.prototype.hasModifiedGeometry = function() {
  return jspb.Message.getField(this, 19) != null;
};


/**
 * optional uint32 price = 4;
 * @return {number}
 */
proto.ei.ShellSpec.prototype.getPrice = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.ei.ShellSpec} returns this
 */
proto.ei.ShellSpec.prototype.setPrice = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.ShellSpec} returns this
 */
proto.ei.ShellSpec.prototype.clearPrice = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ShellSpec.prototype.hasPrice = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional uint32 required_eop = 5;
 * @return {number}
 */
proto.ei.ShellSpec.prototype.getRequiredEop = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.ei.ShellSpec} returns this
 */
proto.ei.ShellSpec.prototype.setRequiredEop = function(value) {
  return jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.ShellSpec} returns this
 */
proto.ei.ShellSpec.prototype.clearRequiredEop = function() {
  return jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ShellSpec.prototype.hasRequiredEop = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional double required_soul_eggs = 6;
 * @return {number}
 */
proto.ei.ShellSpec.prototype.getRequiredSoulEggs = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 6, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.ei.ShellSpec} returns this
 */
proto.ei.ShellSpec.prototype.setRequiredSoulEggs = function(value) {
  return jspb.Message.setField(this, 6, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.ShellSpec} returns this
 */
proto.ei.ShellSpec.prototype.clearRequiredSoulEggs = function() {
  return jspb.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ShellSpec.prototype.hasRequiredSoulEggs = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional string required_parent_shell = 20;
 * @return {string}
 */
proto.ei.ShellSpec.prototype.getRequiredParentShell = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 20, ""));
};


/**
 * @param {string} value
 * @return {!proto.ei.ShellSpec} returns this
 */
proto.ei.ShellSpec.prototype.setRequiredParentShell = function(value) {
  return jspb.Message.setField(this, 20, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.ShellSpec} returns this
 */
proto.ei.ShellSpec.prototype.clearRequiredParentShell = function() {
  return jspb.Message.setField(this, 20, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ShellSpec.prototype.hasRequiredParentShell = function() {
  return jspb.Message.getField(this, 20) != null;
};


/**
 * optional bool is_new = 14;
 * @return {boolean}
 */
proto.ei.ShellSpec.prototype.getIsNew = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 14, false));
};


/**
 * @param {boolean} value
 * @return {!proto.ei.ShellSpec} returns this
 */
proto.ei.ShellSpec.prototype.setIsNew = function(value) {
  return jspb.Message.setField(this, 14, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.ShellSpec} returns this
 */
proto.ei.ShellSpec.prototype.clearIsNew = function() {
  return jspb.Message.setField(this, 14, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ShellSpec.prototype.hasIsNew = function() {
  return jspb.Message.getField(this, 14) != null;
};


/**
 * optional bool expires = 15;
 * @return {boolean}
 */
proto.ei.ShellSpec.prototype.getExpires = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 15, false));
};


/**
 * @param {boolean} value
 * @return {!proto.ei.ShellSpec} returns this
 */
proto.ei.ShellSpec.prototype.setExpires = function(value) {
  return jspb.Message.setField(this, 15, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.ShellSpec} returns this
 */
proto.ei.ShellSpec.prototype.clearExpires = function() {
  return jspb.Message.setField(this, 15, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ShellSpec.prototype.hasExpires = function() {
  return jspb.Message.getField(this, 15) != null;
};


/**
 * optional double seconds_until_available = 17;
 * @return {number}
 */
proto.ei.ShellSpec.prototype.getSecondsUntilAvailable = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 17, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.ei.ShellSpec} returns this
 */
proto.ei.ShellSpec.prototype.setSecondsUntilAvailable = function(value) {
  return jspb.Message.setField(this, 17, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.ShellSpec} returns this
 */
proto.ei.ShellSpec.prototype.clearSecondsUntilAvailable = function() {
  return jspb.Message.setField(this, 17, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ShellSpec.prototype.hasSecondsUntilAvailable = function() {
  return jspb.Message.getField(this, 17) != null;
};


/**
 * optional double seconds_remaining = 16;
 * @return {number}
 */
proto.ei.ShellSpec.prototype.getSecondsRemaining = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 16, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.ei.ShellSpec} returns this
 */
proto.ei.ShellSpec.prototype.setSecondsRemaining = function(value) {
  return jspb.Message.setField(this, 16, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.ShellSpec} returns this
 */
proto.ei.ShellSpec.prototype.clearSecondsRemaining = function() {
  return jspb.Message.setField(this, 16, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ShellSpec.prototype.hasSecondsRemaining = function() {
  return jspb.Message.getField(this, 16) != null;
};


/**
 * optional uint64 popularity = 21;
 * @return {number}
 */
proto.ei.ShellSpec.prototype.getPopularity = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 21, 0));
};


/**
 * @param {number} value
 * @return {!proto.ei.ShellSpec} returns this
 */
proto.ei.ShellSpec.prototype.setPopularity = function(value) {
  return jspb.Message.setField(this, 21, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.ShellSpec} returns this
 */
proto.ei.ShellSpec.prototype.clearPopularity = function() {
  return jspb.Message.setField(this, 21, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ShellSpec.prototype.hasPopularity = function() {
  return jspb.Message.getField(this, 21) != null;
};


/**
 * optional bool default_appearance = 8;
 * @return {boolean}
 */
proto.ei.ShellSpec.prototype.getDefaultAppearance = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 8, false));
};


/**
 * @param {boolean} value
 * @return {!proto.ei.ShellSpec} returns this
 */
proto.ei.ShellSpec.prototype.setDefaultAppearance = function(value) {
  return jspb.Message.setField(this, 8, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.ShellSpec} returns this
 */
proto.ei.ShellSpec.prototype.clearDefaultAppearance = function() {
  return jspb.Message.setField(this, 8, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ShellSpec.prototype.hasDefaultAppearance = function() {
  return jspb.Message.getField(this, 8) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.ei.ShellSetSpec.repeatedFields_ = [15];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ei.ShellSetSpec.prototype.toObject = function(opt_includeInstance) {
  return proto.ei.ShellSetSpec.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ei.ShellSetSpec} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.ShellSetSpec.toObject = function(includeInstance, msg) {
  var f, obj = {
    identifier: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    name: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,
    price: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f,
    priceMultDeprecated: jspb.Message.getFloatingPointFieldWithDefault(msg, 8, 1.0),
    discount: (f = jspb.Message.getOptionalFloatingPointField(msg, 17)) == null ? undefined : f,
    requiredEop: (f = jspb.Message.getField(msg, 4)) == null ? undefined : f,
    requiredSoulEggs: (f = jspb.Message.getOptionalFloatingPointField(msg, 5)) == null ? undefined : f,
    requiredParentSet: (f = jspb.Message.getField(msg, 20)) == null ? undefined : f,
    isNew: (f = jspb.Message.getBooleanField(msg, 9)) == null ? undefined : f,
    expires: (f = jspb.Message.getBooleanField(msg, 10)) == null ? undefined : f,
    secondsUntilAvailable: (f = jspb.Message.getOptionalFloatingPointField(msg, 18)) == null ? undefined : f,
    secondsRemaining: (f = jspb.Message.getOptionalFloatingPointField(msg, 11)) == null ? undefined : f,
    popularity: (f = jspb.Message.getField(msg, 21)) == null ? undefined : f,
    decorator: (f = jspb.Message.getBooleanField(msg, 14)) == null ? undefined : f,
    modifiedGeometry: (f = jspb.Message.getBooleanField(msg, 13)) == null ? undefined : f,
    elementSet: (f = jspb.Message.getBooleanField(msg, 7)) == null ? undefined : f,
    hexBaseColor: (f = jspb.Message.getField(msg, 16)) == null ? undefined : f,
    variationsList: jspb.Message.toObjectList(msg.getVariationsList(),
    proto.ei.ShellSetSpec.VariationSpec.toObject, includeInstance),
    icon: (f = msg.getIcon()) && proto.ei.DLCItem.toObject(includeInstance, f),
    defaultAppearance: (f = jspb.Message.getBooleanField(msg, 6)) == null ? undefined : f,
    customAppearance: (f = jspb.Message.getBooleanField(msg, 12)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ei.ShellSetSpec}
 */
proto.ei.ShellSetSpec.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ei.ShellSetSpec;
  return proto.ei.ShellSetSpec.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ei.ShellSetSpec} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ei.ShellSetSpec}
 */
proto.ei.ShellSetSpec.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setIdentifier(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setPrice(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setPriceMultDeprecated(value);
      break;
    case 17:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setDiscount(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setRequiredEop(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setRequiredSoulEggs(value);
      break;
    case 20:
      var value = /** @type {string} */ (reader.readString());
      msg.setRequiredParentSet(value);
      break;
    case 9:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsNew(value);
      break;
    case 10:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setExpires(value);
      break;
    case 18:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setSecondsUntilAvailable(value);
      break;
    case 11:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setSecondsRemaining(value);
      break;
    case 21:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setPopularity(value);
      break;
    case 14:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setDecorator(value);
      break;
    case 13:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setModifiedGeometry(value);
      break;
    case 7:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setElementSet(value);
      break;
    case 16:
      var value = /** @type {string} */ (reader.readString());
      msg.setHexBaseColor(value);
      break;
    case 15:
      var value = new proto.ei.ShellSetSpec.VariationSpec;
      reader.readMessage(value,proto.ei.ShellSetSpec.VariationSpec.deserializeBinaryFromReader);
      msg.addVariations(value);
      break;
    case 19:
      var value = new proto.ei.DLCItem;
      reader.readMessage(value,proto.ei.DLCItem.deserializeBinaryFromReader);
      msg.setIcon(value);
      break;
    case 6:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setDefaultAppearance(value);
      break;
    case 12:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setCustomAppearance(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ei.ShellSetSpec.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ei.ShellSetSpec.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ei.ShellSetSpec} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.ShellSetSpec.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeUint32(
      3,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 8));
  if (f != null) {
    writer.writeDouble(
      8,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 17));
  if (f != null) {
    writer.writeDouble(
      17,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeUint32(
      4,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeDouble(
      5,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 20));
  if (f != null) {
    writer.writeString(
      20,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 9));
  if (f != null) {
    writer.writeBool(
      9,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 10));
  if (f != null) {
    writer.writeBool(
      10,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 18));
  if (f != null) {
    writer.writeDouble(
      18,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 11));
  if (f != null) {
    writer.writeDouble(
      11,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 21));
  if (f != null) {
    writer.writeUint64(
      21,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 14));
  if (f != null) {
    writer.writeBool(
      14,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 13));
  if (f != null) {
    writer.writeBool(
      13,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 7));
  if (f != null) {
    writer.writeBool(
      7,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 16));
  if (f != null) {
    writer.writeString(
      16,
      f
    );
  }
  f = message.getVariationsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      15,
      f,
      proto.ei.ShellSetSpec.VariationSpec.serializeBinaryToWriter
    );
  }
  f = message.getIcon();
  if (f != null) {
    writer.writeMessage(
      19,
      f,
      proto.ei.DLCItem.serializeBinaryToWriter
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeBool(
      6,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 12));
  if (f != null) {
    writer.writeBool(
      12,
      f
    );
  }
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ei.ShellSetSpec.VariationSpec.prototype.toObject = function(opt_includeInstance) {
  return proto.ei.ShellSetSpec.VariationSpec.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ei.ShellSetSpec.VariationSpec} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.ShellSetSpec.VariationSpec.toObject = function(includeInstance, msg) {
  var f, obj = {
    identifier: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    hexColor: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,
    price: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f,
    sortPriority: (f = jspb.Message.getField(msg, 6)) == null ? undefined : f,
    defaultAppearance: (f = jspb.Message.getBooleanField(msg, 4)) == null ? undefined : f,
    customAppearance: (f = jspb.Message.getBooleanField(msg, 5)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ei.ShellSetSpec.VariationSpec}
 */
proto.ei.ShellSetSpec.VariationSpec.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ei.ShellSetSpec.VariationSpec;
  return proto.ei.ShellSetSpec.VariationSpec.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ei.ShellSetSpec.VariationSpec} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ei.ShellSetSpec.VariationSpec}
 */
proto.ei.ShellSetSpec.VariationSpec.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setIdentifier(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setHexColor(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setPrice(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setSortPriority(value);
      break;
    case 4:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setDefaultAppearance(value);
      break;
    case 5:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setCustomAppearance(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ei.ShellSetSpec.VariationSpec.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ei.ShellSetSpec.VariationSpec.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ei.ShellSetSpec.VariationSpec} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.ShellSetSpec.VariationSpec.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeUint32(
      3,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeInt32(
      6,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeBool(
      4,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeBool(
      5,
      f
    );
  }
};


/**
 * optional string identifier = 1;
 * @return {string}
 */
proto.ei.ShellSetSpec.VariationSpec.prototype.getIdentifier = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.ei.ShellSetSpec.VariationSpec} returns this
 */
proto.ei.ShellSetSpec.VariationSpec.prototype.setIdentifier = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.ShellSetSpec.VariationSpec} returns this
 */
proto.ei.ShellSetSpec.VariationSpec.prototype.clearIdentifier = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ShellSetSpec.VariationSpec.prototype.hasIdentifier = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string hex_color = 2;
 * @return {string}
 */
proto.ei.ShellSetSpec.VariationSpec.prototype.getHexColor = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.ei.ShellSetSpec.VariationSpec} returns this
 */
proto.ei.ShellSetSpec.VariationSpec.prototype.setHexColor = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.ShellSetSpec.VariationSpec} returns this
 */
proto.ei.ShellSetSpec.VariationSpec.prototype.clearHexColor = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ShellSetSpec.VariationSpec.prototype.hasHexColor = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional uint32 price = 3;
 * @return {number}
 */
proto.ei.ShellSetSpec.VariationSpec.prototype.getPrice = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.ei.ShellSetSpec.VariationSpec} returns this
 */
proto.ei.ShellSetSpec.VariationSpec.prototype.setPrice = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.ShellSetSpec.VariationSpec} returns this
 */
proto.ei.ShellSetSpec.VariationSpec.prototype.clearPrice = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ShellSetSpec.VariationSpec.prototype.hasPrice = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional int32 sort_priority = 6;
 * @return {number}
 */
proto.ei.ShellSetSpec.VariationSpec.prototype.getSortPriority = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.ei.ShellSetSpec.VariationSpec} returns this
 */
proto.ei.ShellSetSpec.VariationSpec.prototype.setSortPriority = function(value) {
  return jspb.Message.setField(this, 6, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.ShellSetSpec.VariationSpec} returns this
 */
proto.ei.ShellSetSpec.VariationSpec.prototype.clearSortPriority = function() {
  return jspb.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ShellSetSpec.VariationSpec.prototype.hasSortPriority = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional bool default_appearance = 4;
 * @return {boolean}
 */
proto.ei.ShellSetSpec.VariationSpec.prototype.getDefaultAppearance = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 4, false));
};


/**
 * @param {boolean} value
 * @return {!proto.ei.ShellSetSpec.VariationSpec} returns this
 */
proto.ei.ShellSetSpec.VariationSpec.prototype.setDefaultAppearance = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.ShellSetSpec.VariationSpec} returns this
 */
proto.ei.ShellSetSpec.VariationSpec.prototype.clearDefaultAppearance = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ShellSetSpec.VariationSpec.prototype.hasDefaultAppearance = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional bool custom_appearance = 5;
 * @return {boolean}
 */
proto.ei.ShellSetSpec.VariationSpec.prototype.getCustomAppearance = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 5, false));
};


/**
 * @param {boolean} value
 * @return {!proto.ei.ShellSetSpec.VariationSpec} returns this
 */
proto.ei.ShellSetSpec.VariationSpec.prototype.setCustomAppearance = function(value) {
  return jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.ShellSetSpec.VariationSpec} returns this
 */
proto.ei.ShellSetSpec.VariationSpec.prototype.clearCustomAppearance = function() {
  return jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ShellSetSpec.VariationSpec.prototype.hasCustomAppearance = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional string identifier = 1;
 * @return {string}
 */
proto.ei.ShellSetSpec.prototype.getIdentifier = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.ei.ShellSetSpec} returns this
 */
proto.ei.ShellSetSpec.prototype.setIdentifier = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.ShellSetSpec} returns this
 */
proto.ei.ShellSetSpec.prototype.clearIdentifier = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ShellSetSpec.prototype.hasIdentifier = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string name = 2;
 * @return {string}
 */
proto.ei.ShellSetSpec.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.ei.ShellSetSpec} returns this
 */
proto.ei.ShellSetSpec.prototype.setName = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.ShellSetSpec} returns this
 */
proto.ei.ShellSetSpec.prototype.clearName = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ShellSetSpec.prototype.hasName = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional uint32 price = 3;
 * @return {number}
 */
proto.ei.ShellSetSpec.prototype.getPrice = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.ei.ShellSetSpec} returns this
 */
proto.ei.ShellSetSpec.prototype.setPrice = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.ShellSetSpec} returns this
 */
proto.ei.ShellSetSpec.prototype.clearPrice = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ShellSetSpec.prototype.hasPrice = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional double price_mult_DEPRECATED = 8;
 * @return {number}
 */
proto.ei.ShellSetSpec.prototype.getPriceMultDeprecated = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 8, 1.0));
};


/**
 * @param {number} value
 * @return {!proto.ei.ShellSetSpec} returns this
 */
proto.ei.ShellSetSpec.prototype.setPriceMultDeprecated = function(value) {
  return jspb.Message.setField(this, 8, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.ShellSetSpec} returns this
 */
proto.ei.ShellSetSpec.prototype.clearPriceMultDeprecated = function() {
  return jspb.Message.setField(this, 8, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ShellSetSpec.prototype.hasPriceMultDeprecated = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional double discount = 17;
 * @return {number}
 */
proto.ei.ShellSetSpec.prototype.getDiscount = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 17, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.ei.ShellSetSpec} returns this
 */
proto.ei.ShellSetSpec.prototype.setDiscount = function(value) {
  return jspb.Message.setField(this, 17, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.ShellSetSpec} returns this
 */
proto.ei.ShellSetSpec.prototype.clearDiscount = function() {
  return jspb.Message.setField(this, 17, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ShellSetSpec.prototype.hasDiscount = function() {
  return jspb.Message.getField(this, 17) != null;
};


/**
 * optional uint32 required_eop = 4;
 * @return {number}
 */
proto.ei.ShellSetSpec.prototype.getRequiredEop = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.ei.ShellSetSpec} returns this
 */
proto.ei.ShellSetSpec.prototype.setRequiredEop = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.ShellSetSpec} returns this
 */
proto.ei.ShellSetSpec.prototype.clearRequiredEop = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ShellSetSpec.prototype.hasRequiredEop = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional double required_soul_eggs = 5;
 * @return {number}
 */
proto.ei.ShellSetSpec.prototype.getRequiredSoulEggs = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 5, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.ei.ShellSetSpec} returns this
 */
proto.ei.ShellSetSpec.prototype.setRequiredSoulEggs = function(value) {
  return jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.ShellSetSpec} returns this
 */
proto.ei.ShellSetSpec.prototype.clearRequiredSoulEggs = function() {
  return jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ShellSetSpec.prototype.hasRequiredSoulEggs = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional string required_parent_set = 20;
 * @return {string}
 */
proto.ei.ShellSetSpec.prototype.getRequiredParentSet = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 20, ""));
};


/**
 * @param {string} value
 * @return {!proto.ei.ShellSetSpec} returns this
 */
proto.ei.ShellSetSpec.prototype.setRequiredParentSet = function(value) {
  return jspb.Message.setField(this, 20, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.ShellSetSpec} returns this
 */
proto.ei.ShellSetSpec.prototype.clearRequiredParentSet = function() {
  return jspb.Message.setField(this, 20, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ShellSetSpec.prototype.hasRequiredParentSet = function() {
  return jspb.Message.getField(this, 20) != null;
};


/**
 * optional bool is_new = 9;
 * @return {boolean}
 */
proto.ei.ShellSetSpec.prototype.getIsNew = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 9, false));
};


/**
 * @param {boolean} value
 * @return {!proto.ei.ShellSetSpec} returns this
 */
proto.ei.ShellSetSpec.prototype.setIsNew = function(value) {
  return jspb.Message.setField(this, 9, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.ShellSetSpec} returns this
 */
proto.ei.ShellSetSpec.prototype.clearIsNew = function() {
  return jspb.Message.setField(this, 9, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ShellSetSpec.prototype.hasIsNew = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional bool expires = 10;
 * @return {boolean}
 */
proto.ei.ShellSetSpec.prototype.getExpires = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 10, false));
};


/**
 * @param {boolean} value
 * @return {!proto.ei.ShellSetSpec} returns this
 */
proto.ei.ShellSetSpec.prototype.setExpires = function(value) {
  return jspb.Message.setField(this, 10, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.ShellSetSpec} returns this
 */
proto.ei.ShellSetSpec.prototype.clearExpires = function() {
  return jspb.Message.setField(this, 10, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ShellSetSpec.prototype.hasExpires = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * optional double seconds_until_available = 18;
 * @return {number}
 */
proto.ei.ShellSetSpec.prototype.getSecondsUntilAvailable = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 18, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.ei.ShellSetSpec} returns this
 */
proto.ei.ShellSetSpec.prototype.setSecondsUntilAvailable = function(value) {
  return jspb.Message.setField(this, 18, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.ShellSetSpec} returns this
 */
proto.ei.ShellSetSpec.prototype.clearSecondsUntilAvailable = function() {
  return jspb.Message.setField(this, 18, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ShellSetSpec.prototype.hasSecondsUntilAvailable = function() {
  return jspb.Message.getField(this, 18) != null;
};


/**
 * optional double seconds_remaining = 11;
 * @return {number}
 */
proto.ei.ShellSetSpec.prototype.getSecondsRemaining = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 11, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.ei.ShellSetSpec} returns this
 */
proto.ei.ShellSetSpec.prototype.setSecondsRemaining = function(value) {
  return jspb.Message.setField(this, 11, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.ShellSetSpec} returns this
 */
proto.ei.ShellSetSpec.prototype.clearSecondsRemaining = function() {
  return jspb.Message.setField(this, 11, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ShellSetSpec.prototype.hasSecondsRemaining = function() {
  return jspb.Message.getField(this, 11) != null;
};


/**
 * optional uint64 popularity = 21;
 * @return {number}
 */
proto.ei.ShellSetSpec.prototype.getPopularity = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 21, 0));
};


/**
 * @param {number} value
 * @return {!proto.ei.ShellSetSpec} returns this
 */
proto.ei.ShellSetSpec.prototype.setPopularity = function(value) {
  return jspb.Message.setField(this, 21, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.ShellSetSpec} returns this
 */
proto.ei.ShellSetSpec.prototype.clearPopularity = function() {
  return jspb.Message.setField(this, 21, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ShellSetSpec.prototype.hasPopularity = function() {
  return jspb.Message.getField(this, 21) != null;
};


/**
 * optional bool decorator = 14;
 * @return {boolean}
 */
proto.ei.ShellSetSpec.prototype.getDecorator = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 14, false));
};


/**
 * @param {boolean} value
 * @return {!proto.ei.ShellSetSpec} returns this
 */
proto.ei.ShellSetSpec.prototype.setDecorator = function(value) {
  return jspb.Message.setField(this, 14, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.ShellSetSpec} returns this
 */
proto.ei.ShellSetSpec.prototype.clearDecorator = function() {
  return jspb.Message.setField(this, 14, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ShellSetSpec.prototype.hasDecorator = function() {
  return jspb.Message.getField(this, 14) != null;
};


/**
 * optional bool modified_geometry = 13;
 * @return {boolean}
 */
proto.ei.ShellSetSpec.prototype.getModifiedGeometry = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 13, false));
};


/**
 * @param {boolean} value
 * @return {!proto.ei.ShellSetSpec} returns this
 */
proto.ei.ShellSetSpec.prototype.setModifiedGeometry = function(value) {
  return jspb.Message.setField(this, 13, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.ShellSetSpec} returns this
 */
proto.ei.ShellSetSpec.prototype.clearModifiedGeometry = function() {
  return jspb.Message.setField(this, 13, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ShellSetSpec.prototype.hasModifiedGeometry = function() {
  return jspb.Message.getField(this, 13) != null;
};


/**
 * optional bool element_set = 7;
 * @return {boolean}
 */
proto.ei.ShellSetSpec.prototype.getElementSet = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 7, false));
};


/**
 * @param {boolean} value
 * @return {!proto.ei.ShellSetSpec} returns this
 */
proto.ei.ShellSetSpec.prototype.setElementSet = function(value) {
  return jspb.Message.setField(this, 7, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.ShellSetSpec} returns this
 */
proto.ei.ShellSetSpec.prototype.clearElementSet = function() {
  return jspb.Message.setField(this, 7, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ShellSetSpec.prototype.hasElementSet = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional string hex_base_color = 16;
 * @return {string}
 */
proto.ei.ShellSetSpec.prototype.getHexBaseColor = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 16, ""));
};


/**
 * @param {string} value
 * @return {!proto.ei.ShellSetSpec} returns this
 */
proto.ei.ShellSetSpec.prototype.setHexBaseColor = function(value) {
  return jspb.Message.setField(this, 16, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.ShellSetSpec} returns this
 */
proto.ei.ShellSetSpec.prototype.clearHexBaseColor = function() {
  return jspb.Message.setField(this, 16, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ShellSetSpec.prototype.hasHexBaseColor = function() {
  return jspb.Message.getField(this, 16) != null;
};


/**
 * repeated VariationSpec variations = 15;
 * @return {!Array<!proto.ei.ShellSetSpec.VariationSpec>}
 */
proto.ei.ShellSetSpec.prototype.getVariationsList = function() {
  return /** @type{!Array<!proto.ei.ShellSetSpec.VariationSpec>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.ei.ShellSetSpec.VariationSpec, 15));
};


/**
 * @param {!Array<!proto.ei.ShellSetSpec.VariationSpec>} value
 * @return {!proto.ei.ShellSetSpec} returns this
*/
proto.ei.ShellSetSpec.prototype.setVariationsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 15, value);
};


/**
 * @param {!proto.ei.ShellSetSpec.VariationSpec=} opt_value
 * @param {number=} opt_index
 * @return {!proto.ei.ShellSetSpec.VariationSpec}
 */
proto.ei.ShellSetSpec.prototype.addVariations = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 15, opt_value, proto.ei.ShellSetSpec.VariationSpec, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.ei.ShellSetSpec} returns this
 */
proto.ei.ShellSetSpec.prototype.clearVariationsList = function() {
  return this.setVariationsList([]);
};


/**
 * optional DLCItem icon = 19;
 * @return {?proto.ei.DLCItem}
 */
proto.ei.ShellSetSpec.prototype.getIcon = function() {
  return /** @type{?proto.ei.DLCItem} */ (
    jspb.Message.getWrapperField(this, proto.ei.DLCItem, 19));
};


/**
 * @param {?proto.ei.DLCItem|undefined} value
 * @return {!proto.ei.ShellSetSpec} returns this
*/
proto.ei.ShellSetSpec.prototype.setIcon = function(value) {
  return jspb.Message.setWrapperField(this, 19, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.ei.ShellSetSpec} returns this
 */
proto.ei.ShellSetSpec.prototype.clearIcon = function() {
  return this.setIcon(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ShellSetSpec.prototype.hasIcon = function() {
  return jspb.Message.getField(this, 19) != null;
};


/**
 * optional bool default_appearance = 6;
 * @return {boolean}
 */
proto.ei.ShellSetSpec.prototype.getDefaultAppearance = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 6, false));
};


/**
 * @param {boolean} value
 * @return {!proto.ei.ShellSetSpec} returns this
 */
proto.ei.ShellSetSpec.prototype.setDefaultAppearance = function(value) {
  return jspb.Message.setField(this, 6, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.ShellSetSpec} returns this
 */
proto.ei.ShellSetSpec.prototype.clearDefaultAppearance = function() {
  return jspb.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ShellSetSpec.prototype.hasDefaultAppearance = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional bool custom_appearance = 12;
 * @return {boolean}
 */
proto.ei.ShellSetSpec.prototype.getCustomAppearance = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 12, false));
};


/**
 * @param {boolean} value
 * @return {!proto.ei.ShellSetSpec} returns this
 */
proto.ei.ShellSetSpec.prototype.setCustomAppearance = function(value) {
  return jspb.Message.setField(this, 12, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.ShellSetSpec} returns this
 */
proto.ei.ShellSetSpec.prototype.clearCustomAppearance = function() {
  return jspb.Message.setField(this, 12, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ShellSetSpec.prototype.hasCustomAppearance = function() {
  return jspb.Message.getField(this, 12) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.ei.ShellObjectSpec.repeatedFields_ = [15,7,8];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ei.ShellObjectSpec.prototype.toObject = function(opt_includeInstance) {
  return proto.ei.ShellObjectSpec.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ei.ShellObjectSpec} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.ShellObjectSpec.toObject = function(includeInstance, msg) {
  var f, obj = {
    identifier: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    name: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,
    assetType: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f,
    objectClass: (f = jspb.Message.getField(msg, 14)) == null ? undefined : f,
    iconColorsList: (f = jspb.Message.getRepeatedField(msg, 15)) == null ? undefined : f,
    price: (f = jspb.Message.getField(msg, 4)) == null ? undefined : f,
    requiredEop: (f = jspb.Message.getField(msg, 5)) == null ? undefined : f,
    requiredSoulEggs: (f = jspb.Message.getOptionalFloatingPointField(msg, 6)) == null ? undefined : f,
    isNew: (f = jspb.Message.getBooleanField(msg, 10)) == null ? undefined : f,
    expires: (f = jspb.Message.getBooleanField(msg, 11)) == null ? undefined : f,
    secondsUntilAvailable: (f = jspb.Message.getOptionalFloatingPointField(msg, 18)) == null ? undefined : f,
    secondsRemaining: (f = jspb.Message.getOptionalFloatingPointField(msg, 12)) == null ? undefined : f,
    popularity: (f = jspb.Message.getField(msg, 19)) == null ? undefined : f,
    metadataList: (f = jspb.Message.getRepeatedFloatingPointField(msg, 7)) == null ? undefined : f,
    noHats: (f = jspb.Message.getBooleanField(msg, 13)) == null ? undefined : f,
    chickenAnimation: (f = jspb.Message.getField(msg, 16)) == null ? undefined : f,
    sortPriority: (f = jspb.Message.getField(msg, 17)) == null ? undefined : f,
    piecesList: jspb.Message.toObjectList(msg.getPiecesList(),
    proto.ei.ShellObjectSpec.LODPiece.toObject, includeInstance),
    defaultAppearance: (f = jspb.Message.getBooleanField(msg, 9)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ei.ShellObjectSpec}
 */
proto.ei.ShellObjectSpec.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ei.ShellObjectSpec;
  return proto.ei.ShellObjectSpec.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ei.ShellObjectSpec} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ei.ShellObjectSpec}
 */
proto.ei.ShellObjectSpec.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setIdentifier(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 3:
      var value = /** @type {!proto.ei.ShellSpec.AssetType} */ (reader.readEnum());
      msg.setAssetType(value);
      break;
    case 14:
      var value = /** @type {string} */ (reader.readString());
      msg.setObjectClass(value);
      break;
    case 15:
      var value = /** @type {string} */ (reader.readString());
      msg.addIconColors(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setPrice(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setRequiredEop(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setRequiredSoulEggs(value);
      break;
    case 10:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsNew(value);
      break;
    case 11:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setExpires(value);
      break;
    case 18:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setSecondsUntilAvailable(value);
      break;
    case 12:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setSecondsRemaining(value);
      break;
    case 19:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setPopularity(value);
      break;
    case 7:
      var values = /** @type {!Array<number>} */ (reader.isDelimited() ? reader.readPackedDouble() : [reader.readDouble()]);
      for (var i = 0; i < values.length; i++) {
        msg.addMetadata(values[i]);
      }
      break;
    case 13:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setNoHats(value);
      break;
    case 16:
      var value = /** @type {!proto.ei.ShellObjectSpec.ChickenAnimation} */ (reader.readEnum());
      msg.setChickenAnimation(value);
      break;
    case 17:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setSortPriority(value);
      break;
    case 8:
      var value = new proto.ei.ShellObjectSpec.LODPiece;
      reader.readMessage(value,proto.ei.ShellObjectSpec.LODPiece.deserializeBinaryFromReader);
      msg.addPieces(value);
      break;
    case 9:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setDefaultAppearance(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ei.ShellObjectSpec.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ei.ShellObjectSpec.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ei.ShellObjectSpec} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.ShellObjectSpec.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
  f = /** @type {!proto.ei.ShellSpec.AssetType} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeEnum(
      3,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 14));
  if (f != null) {
    writer.writeString(
      14,
      f
    );
  }
  f = message.getIconColorsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      15,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeUint32(
      4,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeUint32(
      5,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeDouble(
      6,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 10));
  if (f != null) {
    writer.writeBool(
      10,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 11));
  if (f != null) {
    writer.writeBool(
      11,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 18));
  if (f != null) {
    writer.writeDouble(
      18,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 12));
  if (f != null) {
    writer.writeDouble(
      12,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 19));
  if (f != null) {
    writer.writeUint64(
      19,
      f
    );
  }
  f = message.getMetadataList();
  if (f.length > 0) {
    writer.writeRepeatedDouble(
      7,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 13));
  if (f != null) {
    writer.writeBool(
      13,
      f
    );
  }
  f = /** @type {!proto.ei.ShellObjectSpec.ChickenAnimation} */ (jspb.Message.getField(message, 16));
  if (f != null) {
    writer.writeEnum(
      16,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 17));
  if (f != null) {
    writer.writeInt32(
      17,
      f
    );
  }
  f = message.getPiecesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      8,
      f,
      proto.ei.ShellObjectSpec.LODPiece.serializeBinaryToWriter
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 9));
  if (f != null) {
    writer.writeBool(
      9,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.ei.ShellObjectSpec.ChickenAnimation = {
  STANDARD_RUN: 0,
  SLOWMO: 7,
  WOBBLE: 1,
  WOBBLE_LEAN: 5,
  SMOOTH: 2,
  SMOOTH_LEAN: 6,
  HOVER: 3,
  SIDEWAYS_SMOOTH: 4,
  SIDEWAYS_LEAN: 8
};




if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ei.ShellObjectSpec.LODPiece.prototype.toObject = function(opt_includeInstance) {
  return proto.ei.ShellObjectSpec.LODPiece.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ei.ShellObjectSpec.LODPiece} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.ShellObjectSpec.LODPiece.toObject = function(includeInstance, msg) {
  var f, obj = {
    dlc: (f = msg.getDlc()) && proto.ei.DLCItem.toObject(includeInstance, f),
    lod: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ei.ShellObjectSpec.LODPiece}
 */
proto.ei.ShellObjectSpec.LODPiece.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ei.ShellObjectSpec.LODPiece;
  return proto.ei.ShellObjectSpec.LODPiece.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ei.ShellObjectSpec.LODPiece} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ei.ShellObjectSpec.LODPiece}
 */
proto.ei.ShellObjectSpec.LODPiece.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.ei.DLCItem;
      reader.readMessage(value,proto.ei.DLCItem.deserializeBinaryFromReader);
      msg.setDlc(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setLod(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ei.ShellObjectSpec.LODPiece.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ei.ShellObjectSpec.LODPiece.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ei.ShellObjectSpec.LODPiece} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.ShellObjectSpec.LODPiece.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDlc();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.ei.DLCItem.serializeBinaryToWriter
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeUint32(
      2,
      f
    );
  }
};


/**
 * optional DLCItem dlc = 1;
 * @return {?proto.ei.DLCItem}
 */
proto.ei.ShellObjectSpec.LODPiece.prototype.getDlc = function() {
  return /** @type{?proto.ei.DLCItem} */ (
    jspb.Message.getWrapperField(this, proto.ei.DLCItem, 1));
};


/**
 * @param {?proto.ei.DLCItem|undefined} value
 * @return {!proto.ei.ShellObjectSpec.LODPiece} returns this
*/
proto.ei.ShellObjectSpec.LODPiece.prototype.setDlc = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.ei.ShellObjectSpec.LODPiece} returns this
 */
proto.ei.ShellObjectSpec.LODPiece.prototype.clearDlc = function() {
  return this.setDlc(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ShellObjectSpec.LODPiece.prototype.hasDlc = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional uint32 lod = 2;
 * @return {number}
 */
proto.ei.ShellObjectSpec.LODPiece.prototype.getLod = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.ei.ShellObjectSpec.LODPiece} returns this
 */
proto.ei.ShellObjectSpec.LODPiece.prototype.setLod = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.ShellObjectSpec.LODPiece} returns this
 */
proto.ei.ShellObjectSpec.LODPiece.prototype.clearLod = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ShellObjectSpec.LODPiece.prototype.hasLod = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string identifier = 1;
 * @return {string}
 */
proto.ei.ShellObjectSpec.prototype.getIdentifier = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.ei.ShellObjectSpec} returns this
 */
proto.ei.ShellObjectSpec.prototype.setIdentifier = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.ShellObjectSpec} returns this
 */
proto.ei.ShellObjectSpec.prototype.clearIdentifier = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ShellObjectSpec.prototype.hasIdentifier = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string name = 2;
 * @return {string}
 */
proto.ei.ShellObjectSpec.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.ei.ShellObjectSpec} returns this
 */
proto.ei.ShellObjectSpec.prototype.setName = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.ShellObjectSpec} returns this
 */
proto.ei.ShellObjectSpec.prototype.clearName = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ShellObjectSpec.prototype.hasName = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional ShellSpec.AssetType asset_type = 3;
 * @return {!proto.ei.ShellSpec.AssetType}
 */
proto.ei.ShellObjectSpec.prototype.getAssetType = function() {
  return /** @type {!proto.ei.ShellSpec.AssetType} */ (jspb.Message.getFieldWithDefault(this, 3, 1));
};


/**
 * @param {!proto.ei.ShellSpec.AssetType} value
 * @return {!proto.ei.ShellObjectSpec} returns this
 */
proto.ei.ShellObjectSpec.prototype.setAssetType = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.ShellObjectSpec} returns this
 */
proto.ei.ShellObjectSpec.prototype.clearAssetType = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ShellObjectSpec.prototype.hasAssetType = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional string object_class = 14;
 * @return {string}
 */
proto.ei.ShellObjectSpec.prototype.getObjectClass = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 14, ""));
};


/**
 * @param {string} value
 * @return {!proto.ei.ShellObjectSpec} returns this
 */
proto.ei.ShellObjectSpec.prototype.setObjectClass = function(value) {
  return jspb.Message.setField(this, 14, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.ShellObjectSpec} returns this
 */
proto.ei.ShellObjectSpec.prototype.clearObjectClass = function() {
  return jspb.Message.setField(this, 14, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ShellObjectSpec.prototype.hasObjectClass = function() {
  return jspb.Message.getField(this, 14) != null;
};


/**
 * repeated string icon_colors = 15;
 * @return {!Array<string>}
 */
proto.ei.ShellObjectSpec.prototype.getIconColorsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 15));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.ei.ShellObjectSpec} returns this
 */
proto.ei.ShellObjectSpec.prototype.setIconColorsList = function(value) {
  return jspb.Message.setField(this, 15, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.ei.ShellObjectSpec} returns this
 */
proto.ei.ShellObjectSpec.prototype.addIconColors = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 15, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.ei.ShellObjectSpec} returns this
 */
proto.ei.ShellObjectSpec.prototype.clearIconColorsList = function() {
  return this.setIconColorsList([]);
};


/**
 * optional uint32 price = 4;
 * @return {number}
 */
proto.ei.ShellObjectSpec.prototype.getPrice = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.ei.ShellObjectSpec} returns this
 */
proto.ei.ShellObjectSpec.prototype.setPrice = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.ShellObjectSpec} returns this
 */
proto.ei.ShellObjectSpec.prototype.clearPrice = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ShellObjectSpec.prototype.hasPrice = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional uint32 required_eop = 5;
 * @return {number}
 */
proto.ei.ShellObjectSpec.prototype.getRequiredEop = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.ei.ShellObjectSpec} returns this
 */
proto.ei.ShellObjectSpec.prototype.setRequiredEop = function(value) {
  return jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.ShellObjectSpec} returns this
 */
proto.ei.ShellObjectSpec.prototype.clearRequiredEop = function() {
  return jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ShellObjectSpec.prototype.hasRequiredEop = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional double required_soul_eggs = 6;
 * @return {number}
 */
proto.ei.ShellObjectSpec.prototype.getRequiredSoulEggs = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 6, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.ei.ShellObjectSpec} returns this
 */
proto.ei.ShellObjectSpec.prototype.setRequiredSoulEggs = function(value) {
  return jspb.Message.setField(this, 6, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.ShellObjectSpec} returns this
 */
proto.ei.ShellObjectSpec.prototype.clearRequiredSoulEggs = function() {
  return jspb.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ShellObjectSpec.prototype.hasRequiredSoulEggs = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional bool is_new = 10;
 * @return {boolean}
 */
proto.ei.ShellObjectSpec.prototype.getIsNew = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 10, false));
};


/**
 * @param {boolean} value
 * @return {!proto.ei.ShellObjectSpec} returns this
 */
proto.ei.ShellObjectSpec.prototype.setIsNew = function(value) {
  return jspb.Message.setField(this, 10, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.ShellObjectSpec} returns this
 */
proto.ei.ShellObjectSpec.prototype.clearIsNew = function() {
  return jspb.Message.setField(this, 10, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ShellObjectSpec.prototype.hasIsNew = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * optional bool expires = 11;
 * @return {boolean}
 */
proto.ei.ShellObjectSpec.prototype.getExpires = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 11, false));
};


/**
 * @param {boolean} value
 * @return {!proto.ei.ShellObjectSpec} returns this
 */
proto.ei.ShellObjectSpec.prototype.setExpires = function(value) {
  return jspb.Message.setField(this, 11, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.ShellObjectSpec} returns this
 */
proto.ei.ShellObjectSpec.prototype.clearExpires = function() {
  return jspb.Message.setField(this, 11, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ShellObjectSpec.prototype.hasExpires = function() {
  return jspb.Message.getField(this, 11) != null;
};


/**
 * optional double seconds_until_available = 18;
 * @return {number}
 */
proto.ei.ShellObjectSpec.prototype.getSecondsUntilAvailable = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 18, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.ei.ShellObjectSpec} returns this
 */
proto.ei.ShellObjectSpec.prototype.setSecondsUntilAvailable = function(value) {
  return jspb.Message.setField(this, 18, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.ShellObjectSpec} returns this
 */
proto.ei.ShellObjectSpec.prototype.clearSecondsUntilAvailable = function() {
  return jspb.Message.setField(this, 18, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ShellObjectSpec.prototype.hasSecondsUntilAvailable = function() {
  return jspb.Message.getField(this, 18) != null;
};


/**
 * optional double seconds_remaining = 12;
 * @return {number}
 */
proto.ei.ShellObjectSpec.prototype.getSecondsRemaining = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 12, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.ei.ShellObjectSpec} returns this
 */
proto.ei.ShellObjectSpec.prototype.setSecondsRemaining = function(value) {
  return jspb.Message.setField(this, 12, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.ShellObjectSpec} returns this
 */
proto.ei.ShellObjectSpec.prototype.clearSecondsRemaining = function() {
  return jspb.Message.setField(this, 12, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ShellObjectSpec.prototype.hasSecondsRemaining = function() {
  return jspb.Message.getField(this, 12) != null;
};


/**
 * optional uint64 popularity = 19;
 * @return {number}
 */
proto.ei.ShellObjectSpec.prototype.getPopularity = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 19, 0));
};


/**
 * @param {number} value
 * @return {!proto.ei.ShellObjectSpec} returns this
 */
proto.ei.ShellObjectSpec.prototype.setPopularity = function(value) {
  return jspb.Message.setField(this, 19, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.ShellObjectSpec} returns this
 */
proto.ei.ShellObjectSpec.prototype.clearPopularity = function() {
  return jspb.Message.setField(this, 19, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ShellObjectSpec.prototype.hasPopularity = function() {
  return jspb.Message.getField(this, 19) != null;
};


/**
 * repeated double metadata = 7;
 * @return {!Array<number>}
 */
proto.ei.ShellObjectSpec.prototype.getMetadataList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedFloatingPointField(this, 7));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.ei.ShellObjectSpec} returns this
 */
proto.ei.ShellObjectSpec.prototype.setMetadataList = function(value) {
  return jspb.Message.setField(this, 7, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.ei.ShellObjectSpec} returns this
 */
proto.ei.ShellObjectSpec.prototype.addMetadata = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 7, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.ei.ShellObjectSpec} returns this
 */
proto.ei.ShellObjectSpec.prototype.clearMetadataList = function() {
  return this.setMetadataList([]);
};


/**
 * optional bool no_hats = 13;
 * @return {boolean}
 */
proto.ei.ShellObjectSpec.prototype.getNoHats = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 13, false));
};


/**
 * @param {boolean} value
 * @return {!proto.ei.ShellObjectSpec} returns this
 */
proto.ei.ShellObjectSpec.prototype.setNoHats = function(value) {
  return jspb.Message.setField(this, 13, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.ShellObjectSpec} returns this
 */
proto.ei.ShellObjectSpec.prototype.clearNoHats = function() {
  return jspb.Message.setField(this, 13, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ShellObjectSpec.prototype.hasNoHats = function() {
  return jspb.Message.getField(this, 13) != null;
};


/**
 * optional ChickenAnimation chicken_animation = 16;
 * @return {!proto.ei.ShellObjectSpec.ChickenAnimation}
 */
proto.ei.ShellObjectSpec.prototype.getChickenAnimation = function() {
  return /** @type {!proto.ei.ShellObjectSpec.ChickenAnimation} */ (jspb.Message.getFieldWithDefault(this, 16, 0));
};


/**
 * @param {!proto.ei.ShellObjectSpec.ChickenAnimation} value
 * @return {!proto.ei.ShellObjectSpec} returns this
 */
proto.ei.ShellObjectSpec.prototype.setChickenAnimation = function(value) {
  return jspb.Message.setField(this, 16, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.ShellObjectSpec} returns this
 */
proto.ei.ShellObjectSpec.prototype.clearChickenAnimation = function() {
  return jspb.Message.setField(this, 16, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ShellObjectSpec.prototype.hasChickenAnimation = function() {
  return jspb.Message.getField(this, 16) != null;
};


/**
 * optional int32 sort_priority = 17;
 * @return {number}
 */
proto.ei.ShellObjectSpec.prototype.getSortPriority = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 17, 0));
};


/**
 * @param {number} value
 * @return {!proto.ei.ShellObjectSpec} returns this
 */
proto.ei.ShellObjectSpec.prototype.setSortPriority = function(value) {
  return jspb.Message.setField(this, 17, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.ShellObjectSpec} returns this
 */
proto.ei.ShellObjectSpec.prototype.clearSortPriority = function() {
  return jspb.Message.setField(this, 17, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ShellObjectSpec.prototype.hasSortPriority = function() {
  return jspb.Message.getField(this, 17) != null;
};


/**
 * repeated LODPiece pieces = 8;
 * @return {!Array<!proto.ei.ShellObjectSpec.LODPiece>}
 */
proto.ei.ShellObjectSpec.prototype.getPiecesList = function() {
  return /** @type{!Array<!proto.ei.ShellObjectSpec.LODPiece>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.ei.ShellObjectSpec.LODPiece, 8));
};


/**
 * @param {!Array<!proto.ei.ShellObjectSpec.LODPiece>} value
 * @return {!proto.ei.ShellObjectSpec} returns this
*/
proto.ei.ShellObjectSpec.prototype.setPiecesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 8, value);
};


/**
 * @param {!proto.ei.ShellObjectSpec.LODPiece=} opt_value
 * @param {number=} opt_index
 * @return {!proto.ei.ShellObjectSpec.LODPiece}
 */
proto.ei.ShellObjectSpec.prototype.addPieces = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 8, opt_value, proto.ei.ShellObjectSpec.LODPiece, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.ei.ShellObjectSpec} returns this
 */
proto.ei.ShellObjectSpec.prototype.clearPiecesList = function() {
  return this.setPiecesList([]);
};


/**
 * optional bool default_appearance = 9;
 * @return {boolean}
 */
proto.ei.ShellObjectSpec.prototype.getDefaultAppearance = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 9, false));
};


/**
 * @param {boolean} value
 * @return {!proto.ei.ShellObjectSpec} returns this
 */
proto.ei.ShellObjectSpec.prototype.setDefaultAppearance = function(value) {
  return jspb.Message.setField(this, 9, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.ShellObjectSpec} returns this
 */
proto.ei.ShellObjectSpec.prototype.clearDefaultAppearance = function() {
  return jspb.Message.setField(this, 9, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ShellObjectSpec.prototype.hasDefaultAppearance = function() {
  return jspb.Message.getField(this, 9) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.ei.ShellGroupSpec.repeatedFields_ = [3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ei.ShellGroupSpec.prototype.toObject = function(opt_includeInstance) {
  return proto.ei.ShellGroupSpec.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ei.ShellGroupSpec} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.ShellGroupSpec.toObject = function(includeInstance, msg) {
  var f, obj = {
    identifier: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    name: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,
    assetType: (f = jspb.Message.getField(msg, 5)) == null ? undefined : f,
    memberIdsList: (f = jspb.Message.getRepeatedField(msg, 3)) == null ? undefined : f,
    priceMultDeprecated: (f = jspb.Message.getOptionalFloatingPointField(msg, 4)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ei.ShellGroupSpec}
 */
proto.ei.ShellGroupSpec.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ei.ShellGroupSpec;
  return proto.ei.ShellGroupSpec.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ei.ShellGroupSpec} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ei.ShellGroupSpec}
 */
proto.ei.ShellGroupSpec.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setIdentifier(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 5:
      var value = /** @type {!proto.ei.ShellSpec.AssetType} */ (reader.readEnum());
      msg.setAssetType(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.addMemberIds(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setPriceMultDeprecated(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ei.ShellGroupSpec.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ei.ShellGroupSpec.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ei.ShellGroupSpec} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.ShellGroupSpec.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
  f = /** @type {!proto.ei.ShellSpec.AssetType} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeEnum(
      5,
      f
    );
  }
  f = message.getMemberIdsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      3,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeDouble(
      4,
      f
    );
  }
};


/**
 * optional string identifier = 1;
 * @return {string}
 */
proto.ei.ShellGroupSpec.prototype.getIdentifier = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.ei.ShellGroupSpec} returns this
 */
proto.ei.ShellGroupSpec.prototype.setIdentifier = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.ShellGroupSpec} returns this
 */
proto.ei.ShellGroupSpec.prototype.clearIdentifier = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ShellGroupSpec.prototype.hasIdentifier = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string name = 2;
 * @return {string}
 */
proto.ei.ShellGroupSpec.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.ei.ShellGroupSpec} returns this
 */
proto.ei.ShellGroupSpec.prototype.setName = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.ShellGroupSpec} returns this
 */
proto.ei.ShellGroupSpec.prototype.clearName = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ShellGroupSpec.prototype.hasName = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional ShellSpec.AssetType asset_type = 5;
 * @return {!proto.ei.ShellSpec.AssetType}
 */
proto.ei.ShellGroupSpec.prototype.getAssetType = function() {
  return /** @type {!proto.ei.ShellSpec.AssetType} */ (jspb.Message.getFieldWithDefault(this, 5, 1));
};


/**
 * @param {!proto.ei.ShellSpec.AssetType} value
 * @return {!proto.ei.ShellGroupSpec} returns this
 */
proto.ei.ShellGroupSpec.prototype.setAssetType = function(value) {
  return jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.ShellGroupSpec} returns this
 */
proto.ei.ShellGroupSpec.prototype.clearAssetType = function() {
  return jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ShellGroupSpec.prototype.hasAssetType = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * repeated string member_ids = 3;
 * @return {!Array<string>}
 */
proto.ei.ShellGroupSpec.prototype.getMemberIdsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 3));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.ei.ShellGroupSpec} returns this
 */
proto.ei.ShellGroupSpec.prototype.setMemberIdsList = function(value) {
  return jspb.Message.setField(this, 3, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.ei.ShellGroupSpec} returns this
 */
proto.ei.ShellGroupSpec.prototype.addMemberIds = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 3, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.ei.ShellGroupSpec} returns this
 */
proto.ei.ShellGroupSpec.prototype.clearMemberIdsList = function() {
  return this.setMemberIdsList([]);
};


/**
 * optional double price_mult_DEPRECATED = 4;
 * @return {number}
 */
proto.ei.ShellGroupSpec.prototype.getPriceMultDeprecated = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 4, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.ei.ShellGroupSpec} returns this
 */
proto.ei.ShellGroupSpec.prototype.setPriceMultDeprecated = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.ShellGroupSpec} returns this
 */
proto.ei.ShellGroupSpec.prototype.clearPriceMultDeprecated = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ShellGroupSpec.prototype.hasPriceMultDeprecated = function() {
  return jspb.Message.getField(this, 4) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.ei.DLCCatalog.repeatedFields_ = [1,2,3,6,4,5];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ei.DLCCatalog.prototype.toObject = function(opt_includeInstance) {
  return proto.ei.DLCCatalog.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ei.DLCCatalog} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.DLCCatalog.toObject = function(includeInstance, msg) {
  var f, obj = {
    itemsList: jspb.Message.toObjectList(msg.getItemsList(),
    proto.ei.DLCItem.toObject, includeInstance),
    shellsList: jspb.Message.toObjectList(msg.getShellsList(),
    proto.ei.ShellSpec.toObject, includeInstance),
    shellSetsList: jspb.Message.toObjectList(msg.getShellSetsList(),
    proto.ei.ShellSetSpec.toObject, includeInstance),
    decoratorsList: jspb.Message.toObjectList(msg.getDecoratorsList(),
    proto.ei.ShellSetSpec.toObject, includeInstance),
    shellObjectsList: jspb.Message.toObjectList(msg.getShellObjectsList(),
    proto.ei.ShellObjectSpec.toObject, includeInstance),
    shellGroupsList: jspb.Message.toObjectList(msg.getShellGroupsList(),
    proto.ei.ShellGroupSpec.toObject, includeInstance),
    shellsShowcaseLastFeaturedTime: (f = jspb.Message.getOptionalFloatingPointField(msg, 7)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ei.DLCCatalog}
 */
proto.ei.DLCCatalog.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ei.DLCCatalog;
  return proto.ei.DLCCatalog.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ei.DLCCatalog} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ei.DLCCatalog}
 */
proto.ei.DLCCatalog.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.ei.DLCItem;
      reader.readMessage(value,proto.ei.DLCItem.deserializeBinaryFromReader);
      msg.addItems(value);
      break;
    case 2:
      var value = new proto.ei.ShellSpec;
      reader.readMessage(value,proto.ei.ShellSpec.deserializeBinaryFromReader);
      msg.addShells(value);
      break;
    case 3:
      var value = new proto.ei.ShellSetSpec;
      reader.readMessage(value,proto.ei.ShellSetSpec.deserializeBinaryFromReader);
      msg.addShellSets(value);
      break;
    case 6:
      var value = new proto.ei.ShellSetSpec;
      reader.readMessage(value,proto.ei.ShellSetSpec.deserializeBinaryFromReader);
      msg.addDecorators(value);
      break;
    case 4:
      var value = new proto.ei.ShellObjectSpec;
      reader.readMessage(value,proto.ei.ShellObjectSpec.deserializeBinaryFromReader);
      msg.addShellObjects(value);
      break;
    case 5:
      var value = new proto.ei.ShellGroupSpec;
      reader.readMessage(value,proto.ei.ShellGroupSpec.deserializeBinaryFromReader);
      msg.addShellGroups(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setShellsShowcaseLastFeaturedTime(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ei.DLCCatalog.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ei.DLCCatalog.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ei.DLCCatalog} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.DLCCatalog.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getItemsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.ei.DLCItem.serializeBinaryToWriter
    );
  }
  f = message.getShellsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.ei.ShellSpec.serializeBinaryToWriter
    );
  }
  f = message.getShellSetsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      proto.ei.ShellSetSpec.serializeBinaryToWriter
    );
  }
  f = message.getDecoratorsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      6,
      f,
      proto.ei.ShellSetSpec.serializeBinaryToWriter
    );
  }
  f = message.getShellObjectsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      4,
      f,
      proto.ei.ShellObjectSpec.serializeBinaryToWriter
    );
  }
  f = message.getShellGroupsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      5,
      f,
      proto.ei.ShellGroupSpec.serializeBinaryToWriter
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 7));
  if (f != null) {
    writer.writeDouble(
      7,
      f
    );
  }
};


/**
 * repeated DLCItem items = 1;
 * @return {!Array<!proto.ei.DLCItem>}
 */
proto.ei.DLCCatalog.prototype.getItemsList = function() {
  return /** @type{!Array<!proto.ei.DLCItem>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.ei.DLCItem, 1));
};


/**
 * @param {!Array<!proto.ei.DLCItem>} value
 * @return {!proto.ei.DLCCatalog} returns this
*/
proto.ei.DLCCatalog.prototype.setItemsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.ei.DLCItem=} opt_value
 * @param {number=} opt_index
 * @return {!proto.ei.DLCItem}
 */
proto.ei.DLCCatalog.prototype.addItems = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.ei.DLCItem, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.ei.DLCCatalog} returns this
 */
proto.ei.DLCCatalog.prototype.clearItemsList = function() {
  return this.setItemsList([]);
};


/**
 * repeated ShellSpec shells = 2;
 * @return {!Array<!proto.ei.ShellSpec>}
 */
proto.ei.DLCCatalog.prototype.getShellsList = function() {
  return /** @type{!Array<!proto.ei.ShellSpec>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.ei.ShellSpec, 2));
};


/**
 * @param {!Array<!proto.ei.ShellSpec>} value
 * @return {!proto.ei.DLCCatalog} returns this
*/
proto.ei.DLCCatalog.prototype.setShellsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.ei.ShellSpec=} opt_value
 * @param {number=} opt_index
 * @return {!proto.ei.ShellSpec}
 */
proto.ei.DLCCatalog.prototype.addShells = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.ei.ShellSpec, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.ei.DLCCatalog} returns this
 */
proto.ei.DLCCatalog.prototype.clearShellsList = function() {
  return this.setShellsList([]);
};


/**
 * repeated ShellSetSpec shell_sets = 3;
 * @return {!Array<!proto.ei.ShellSetSpec>}
 */
proto.ei.DLCCatalog.prototype.getShellSetsList = function() {
  return /** @type{!Array<!proto.ei.ShellSetSpec>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.ei.ShellSetSpec, 3));
};


/**
 * @param {!Array<!proto.ei.ShellSetSpec>} value
 * @return {!proto.ei.DLCCatalog} returns this
*/
proto.ei.DLCCatalog.prototype.setShellSetsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.ei.ShellSetSpec=} opt_value
 * @param {number=} opt_index
 * @return {!proto.ei.ShellSetSpec}
 */
proto.ei.DLCCatalog.prototype.addShellSets = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.ei.ShellSetSpec, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.ei.DLCCatalog} returns this
 */
proto.ei.DLCCatalog.prototype.clearShellSetsList = function() {
  return this.setShellSetsList([]);
};


/**
 * repeated ShellSetSpec decorators = 6;
 * @return {!Array<!proto.ei.ShellSetSpec>}
 */
proto.ei.DLCCatalog.prototype.getDecoratorsList = function() {
  return /** @type{!Array<!proto.ei.ShellSetSpec>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.ei.ShellSetSpec, 6));
};


/**
 * @param {!Array<!proto.ei.ShellSetSpec>} value
 * @return {!proto.ei.DLCCatalog} returns this
*/
proto.ei.DLCCatalog.prototype.setDecoratorsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 6, value);
};


/**
 * @param {!proto.ei.ShellSetSpec=} opt_value
 * @param {number=} opt_index
 * @return {!proto.ei.ShellSetSpec}
 */
proto.ei.DLCCatalog.prototype.addDecorators = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 6, opt_value, proto.ei.ShellSetSpec, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.ei.DLCCatalog} returns this
 */
proto.ei.DLCCatalog.prototype.clearDecoratorsList = function() {
  return this.setDecoratorsList([]);
};


/**
 * repeated ShellObjectSpec shell_objects = 4;
 * @return {!Array<!proto.ei.ShellObjectSpec>}
 */
proto.ei.DLCCatalog.prototype.getShellObjectsList = function() {
  return /** @type{!Array<!proto.ei.ShellObjectSpec>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.ei.ShellObjectSpec, 4));
};


/**
 * @param {!Array<!proto.ei.ShellObjectSpec>} value
 * @return {!proto.ei.DLCCatalog} returns this
*/
proto.ei.DLCCatalog.prototype.setShellObjectsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 4, value);
};


/**
 * @param {!proto.ei.ShellObjectSpec=} opt_value
 * @param {number=} opt_index
 * @return {!proto.ei.ShellObjectSpec}
 */
proto.ei.DLCCatalog.prototype.addShellObjects = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 4, opt_value, proto.ei.ShellObjectSpec, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.ei.DLCCatalog} returns this
 */
proto.ei.DLCCatalog.prototype.clearShellObjectsList = function() {
  return this.setShellObjectsList([]);
};


/**
 * repeated ShellGroupSpec shell_groups = 5;
 * @return {!Array<!proto.ei.ShellGroupSpec>}
 */
proto.ei.DLCCatalog.prototype.getShellGroupsList = function() {
  return /** @type{!Array<!proto.ei.ShellGroupSpec>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.ei.ShellGroupSpec, 5));
};


/**
 * @param {!Array<!proto.ei.ShellGroupSpec>} value
 * @return {!proto.ei.DLCCatalog} returns this
*/
proto.ei.DLCCatalog.prototype.setShellGroupsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 5, value);
};


/**
 * @param {!proto.ei.ShellGroupSpec=} opt_value
 * @param {number=} opt_index
 * @return {!proto.ei.ShellGroupSpec}
 */
proto.ei.DLCCatalog.prototype.addShellGroups = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 5, opt_value, proto.ei.ShellGroupSpec, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.ei.DLCCatalog} returns this
 */
proto.ei.DLCCatalog.prototype.clearShellGroupsList = function() {
  return this.setShellGroupsList([]);
};


/**
 * optional double shells_showcase_last_featured_time = 7;
 * @return {number}
 */
proto.ei.DLCCatalog.prototype.getShellsShowcaseLastFeaturedTime = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 7, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.ei.DLCCatalog} returns this
 */
proto.ei.DLCCatalog.prototype.setShellsShowcaseLastFeaturedTime = function(value) {
  return jspb.Message.setField(this, 7, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.DLCCatalog} returns this
 */
proto.ei.DLCCatalog.prototype.clearShellsShowcaseLastFeaturedTime = function() {
  return jspb.Message.setField(this, 7, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.DLCCatalog.prototype.hasShellsShowcaseLastFeaturedTime = function() {
  return jspb.Message.getField(this, 7) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.ei.ShellDB.repeatedFields_ = [1,5,8,2,4,3,9,6,7];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ei.ShellDB.prototype.toObject = function(opt_includeInstance) {
  return proto.ei.ShellDB.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ei.ShellDB} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.ShellDB.toObject = function(includeInstance, msg) {
  var f, obj = {
    shellInventoryList: jspb.Message.toObjectList(msg.getShellInventoryList(),
    proto.ei.ShellDB.ShellStatus.toObject, includeInstance),
    shellElementInventoryList: jspb.Message.toObjectList(msg.getShellElementInventoryList(),
    proto.ei.ShellDB.ShellElementStatus.toObject, includeInstance),
    shellVariationInventoryList: jspb.Message.toObjectList(msg.getShellVariationInventoryList(),
    proto.ei.ShellDB.ShellSetVariationStatus.toObject, includeInstance),
    shellSetInventoryList: jspb.Message.toObjectList(msg.getShellSetInventoryList(),
    proto.ei.ShellDB.ShellStatus.toObject, includeInstance),
    shellObjectInventoryList: jspb.Message.toObjectList(msg.getShellObjectInventoryList(),
    proto.ei.ShellDB.ShellStatus.toObject, includeInstance),
    farmConfigsList: jspb.Message.toObjectList(msg.getFarmConfigsList(),
    proto.ei.ShellDB.FarmConfiguration.toObject, includeInstance),
    savedConfigsList: jspb.Message.toObjectList(msg.getSavedConfigsList(),
    proto.ei.ShellDB.SavedFarmConfiguration.toObject, includeInstance),
    newShellsDownloadedList: (f = jspb.Message.getRepeatedField(msg, 6)) == null ? undefined : f,
    newShellsSeenList: (f = jspb.Message.getRepeatedField(msg, 7)) == null ? undefined : f,
    lastShowcaseFeaturedTimeSeen: (f = jspb.Message.getOptionalFloatingPointField(msg, 11)) == null ? undefined : f,
    lightingControlsUnlocked: (f = jspb.Message.getBooleanField(msg, 10)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ei.ShellDB}
 */
proto.ei.ShellDB.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ei.ShellDB;
  return proto.ei.ShellDB.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ei.ShellDB} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ei.ShellDB}
 */
proto.ei.ShellDB.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.ei.ShellDB.ShellStatus;
      reader.readMessage(value,proto.ei.ShellDB.ShellStatus.deserializeBinaryFromReader);
      msg.addShellInventory(value);
      break;
    case 5:
      var value = new proto.ei.ShellDB.ShellElementStatus;
      reader.readMessage(value,proto.ei.ShellDB.ShellElementStatus.deserializeBinaryFromReader);
      msg.addShellElementInventory(value);
      break;
    case 8:
      var value = new proto.ei.ShellDB.ShellSetVariationStatus;
      reader.readMessage(value,proto.ei.ShellDB.ShellSetVariationStatus.deserializeBinaryFromReader);
      msg.addShellVariationInventory(value);
      break;
    case 2:
      var value = new proto.ei.ShellDB.ShellStatus;
      reader.readMessage(value,proto.ei.ShellDB.ShellStatus.deserializeBinaryFromReader);
      msg.addShellSetInventory(value);
      break;
    case 4:
      var value = new proto.ei.ShellDB.ShellStatus;
      reader.readMessage(value,proto.ei.ShellDB.ShellStatus.deserializeBinaryFromReader);
      msg.addShellObjectInventory(value);
      break;
    case 3:
      var value = new proto.ei.ShellDB.FarmConfiguration;
      reader.readMessage(value,proto.ei.ShellDB.FarmConfiguration.deserializeBinaryFromReader);
      msg.addFarmConfigs(value);
      break;
    case 9:
      var value = new proto.ei.ShellDB.SavedFarmConfiguration;
      reader.readMessage(value,proto.ei.ShellDB.SavedFarmConfiguration.deserializeBinaryFromReader);
      msg.addSavedConfigs(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.addNewShellsDownloaded(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.addNewShellsSeen(value);
      break;
    case 11:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setLastShowcaseFeaturedTimeSeen(value);
      break;
    case 10:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setLightingControlsUnlocked(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ei.ShellDB.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ei.ShellDB.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ei.ShellDB} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.ShellDB.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getShellInventoryList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.ei.ShellDB.ShellStatus.serializeBinaryToWriter
    );
  }
  f = message.getShellElementInventoryList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      5,
      f,
      proto.ei.ShellDB.ShellElementStatus.serializeBinaryToWriter
    );
  }
  f = message.getShellVariationInventoryList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      8,
      f,
      proto.ei.ShellDB.ShellSetVariationStatus.serializeBinaryToWriter
    );
  }
  f = message.getShellSetInventoryList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.ei.ShellDB.ShellStatus.serializeBinaryToWriter
    );
  }
  f = message.getShellObjectInventoryList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      4,
      f,
      proto.ei.ShellDB.ShellStatus.serializeBinaryToWriter
    );
  }
  f = message.getFarmConfigsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      proto.ei.ShellDB.FarmConfiguration.serializeBinaryToWriter
    );
  }
  f = message.getSavedConfigsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      9,
      f,
      proto.ei.ShellDB.SavedFarmConfiguration.serializeBinaryToWriter
    );
  }
  f = message.getNewShellsDownloadedList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      6,
      f
    );
  }
  f = message.getNewShellsSeenList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      7,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 11));
  if (f != null) {
    writer.writeDouble(
      11,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 10));
  if (f != null) {
    writer.writeBool(
      10,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.ei.ShellDB.FarmElement = {
  HEN_HOUSE: 1,
  SILO: 2,
  MAILBOX: 3,
  TROPHY_CASE: 4,
  GROUND: 5,
  HARDSCAPE: 6,
  HYPERLOOP: 7,
  DEPOT: 8,
  LAB: 9,
  HATCHERY: 10,
  HOA: 11,
  MISSION_CONTROL: 12,
  FUEL_TANK: 13,
  CHICKEN: 14,
  HAT: 15,
  UNKNOWN: 99
};




if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ei.ShellDB.ShellStatus.prototype.toObject = function(opt_includeInstance) {
  return proto.ei.ShellDB.ShellStatus.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ei.ShellDB.ShellStatus} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.ShellDB.ShellStatus.toObject = function(includeInstance, msg) {
  var f, obj = {
    identifier: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    owned: (f = jspb.Message.getBooleanField(msg, 2)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ei.ShellDB.ShellStatus}
 */
proto.ei.ShellDB.ShellStatus.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ei.ShellDB.ShellStatus;
  return proto.ei.ShellDB.ShellStatus.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ei.ShellDB.ShellStatus} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ei.ShellDB.ShellStatus}
 */
proto.ei.ShellDB.ShellStatus.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setIdentifier(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setOwned(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ei.ShellDB.ShellStatus.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ei.ShellDB.ShellStatus.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ei.ShellDB.ShellStatus} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.ShellDB.ShellStatus.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeBool(
      2,
      f
    );
  }
};


/**
 * optional string identifier = 1;
 * @return {string}
 */
proto.ei.ShellDB.ShellStatus.prototype.getIdentifier = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.ei.ShellDB.ShellStatus} returns this
 */
proto.ei.ShellDB.ShellStatus.prototype.setIdentifier = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.ShellDB.ShellStatus} returns this
 */
proto.ei.ShellDB.ShellStatus.prototype.clearIdentifier = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ShellDB.ShellStatus.prototype.hasIdentifier = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional bool owned = 2;
 * @return {boolean}
 */
proto.ei.ShellDB.ShellStatus.prototype.getOwned = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));
};


/**
 * @param {boolean} value
 * @return {!proto.ei.ShellDB.ShellStatus} returns this
 */
proto.ei.ShellDB.ShellStatus.prototype.setOwned = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.ShellDB.ShellStatus} returns this
 */
proto.ei.ShellDB.ShellStatus.prototype.clearOwned = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ShellDB.ShellStatus.prototype.hasOwned = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ei.ShellDB.ShellElementStatus.prototype.toObject = function(opt_includeInstance) {
  return proto.ei.ShellDB.ShellElementStatus.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ei.ShellDB.ShellElementStatus} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.ShellDB.ShellElementStatus.toObject = function(includeInstance, msg) {
  var f, obj = {
    element: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    setIdentifier: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ei.ShellDB.ShellElementStatus}
 */
proto.ei.ShellDB.ShellElementStatus.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ei.ShellDB.ShellElementStatus;
  return proto.ei.ShellDB.ShellElementStatus.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ei.ShellDB.ShellElementStatus} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ei.ShellDB.ShellElementStatus}
 */
proto.ei.ShellDB.ShellElementStatus.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.ei.ShellDB.FarmElement} */ (reader.readEnum());
      msg.setElement(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setSetIdentifier(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ei.ShellDB.ShellElementStatus.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ei.ShellDB.ShellElementStatus.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ei.ShellDB.ShellElementStatus} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.ShellDB.ShellElementStatus.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {!proto.ei.ShellDB.FarmElement} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional FarmElement element = 1;
 * @return {!proto.ei.ShellDB.FarmElement}
 */
proto.ei.ShellDB.ShellElementStatus.prototype.getElement = function() {
  return /** @type {!proto.ei.ShellDB.FarmElement} */ (jspb.Message.getFieldWithDefault(this, 1, 1));
};


/**
 * @param {!proto.ei.ShellDB.FarmElement} value
 * @return {!proto.ei.ShellDB.ShellElementStatus} returns this
 */
proto.ei.ShellDB.ShellElementStatus.prototype.setElement = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.ShellDB.ShellElementStatus} returns this
 */
proto.ei.ShellDB.ShellElementStatus.prototype.clearElement = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ShellDB.ShellElementStatus.prototype.hasElement = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string set_identifier = 2;
 * @return {string}
 */
proto.ei.ShellDB.ShellElementStatus.prototype.getSetIdentifier = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.ei.ShellDB.ShellElementStatus} returns this
 */
proto.ei.ShellDB.ShellElementStatus.prototype.setSetIdentifier = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.ShellDB.ShellElementStatus} returns this
 */
proto.ei.ShellDB.ShellElementStatus.prototype.clearSetIdentifier = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ShellDB.ShellElementStatus.prototype.hasSetIdentifier = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.ei.ShellDB.ShellSetVariationStatus.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ei.ShellDB.ShellSetVariationStatus.prototype.toObject = function(opt_includeInstance) {
  return proto.ei.ShellDB.ShellSetVariationStatus.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ei.ShellDB.ShellSetVariationStatus} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.ShellDB.ShellSetVariationStatus.toObject = function(includeInstance, msg) {
  var f, obj = {
    setIdentifier: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    ownedVariationsList: (f = jspb.Message.getRepeatedField(msg, 2)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ei.ShellDB.ShellSetVariationStatus}
 */
proto.ei.ShellDB.ShellSetVariationStatus.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ei.ShellDB.ShellSetVariationStatus;
  return proto.ei.ShellDB.ShellSetVariationStatus.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ei.ShellDB.ShellSetVariationStatus} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ei.ShellDB.ShellSetVariationStatus}
 */
proto.ei.ShellDB.ShellSetVariationStatus.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setSetIdentifier(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.addOwnedVariations(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ei.ShellDB.ShellSetVariationStatus.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ei.ShellDB.ShellSetVariationStatus.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ei.ShellDB.ShellSetVariationStatus} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.ShellDB.ShellSetVariationStatus.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getOwnedVariationsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      2,
      f
    );
  }
};


/**
 * optional string set_identifier = 1;
 * @return {string}
 */
proto.ei.ShellDB.ShellSetVariationStatus.prototype.getSetIdentifier = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.ei.ShellDB.ShellSetVariationStatus} returns this
 */
proto.ei.ShellDB.ShellSetVariationStatus.prototype.setSetIdentifier = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.ShellDB.ShellSetVariationStatus} returns this
 */
proto.ei.ShellDB.ShellSetVariationStatus.prototype.clearSetIdentifier = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ShellDB.ShellSetVariationStatus.prototype.hasSetIdentifier = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * repeated string owned_variations = 2;
 * @return {!Array<string>}
 */
proto.ei.ShellDB.ShellSetVariationStatus.prototype.getOwnedVariationsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 2));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.ei.ShellDB.ShellSetVariationStatus} returns this
 */
proto.ei.ShellDB.ShellSetVariationStatus.prototype.setOwnedVariationsList = function(value) {
  return jspb.Message.setField(this, 2, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.ei.ShellDB.ShellSetVariationStatus} returns this
 */
proto.ei.ShellDB.ShellSetVariationStatus.prototype.addOwnedVariations = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 2, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.ei.ShellDB.ShellSetVariationStatus} returns this
 */
proto.ei.ShellDB.ShellSetVariationStatus.prototype.clearOwnedVariationsList = function() {
  return this.setOwnedVariationsList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.ei.ShellDB.FarmConfiguration.repeatedFields_ = [10,1,2,8,9];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ei.ShellDB.FarmConfiguration.prototype.toObject = function(opt_includeInstance) {
  return proto.ei.ShellDB.FarmConfiguration.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ei.ShellDB.FarmConfiguration} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.ShellDB.FarmConfiguration.toObject = function(includeInstance, msg) {
  var f, obj = {
    lockedElementsList: (f = jspb.Message.getRepeatedField(msg, 10)) == null ? undefined : f,
    shellConfigsList: jspb.Message.toObjectList(msg.getShellConfigsList(),
    proto.ei.ShellDB.ShellConfiguration.toObject, includeInstance),
    shellSetConfigsList: jspb.Message.toObjectList(msg.getShellSetConfigsList(),
    proto.ei.ShellDB.ShellSetConfiguration.toObject, includeInstance),
    configureChickensByGroup: (f = jspb.Message.getBooleanField(msg, 7)) == null ? undefined : f,
    groupConfigsList: jspb.Message.toObjectList(msg.getGroupConfigsList(),
    proto.ei.ShellDB.ShellGroupConfiguration.toObject, includeInstance),
    chickenConfigsList: jspb.Message.toObjectList(msg.getChickenConfigsList(),
    proto.ei.ShellDB.ChickenConfig.toObject, includeInstance),
    lightingConfigEnabled: (f = jspb.Message.getBooleanField(msg, 11)) == null ? undefined : f,
    lightingConfig: (f = msg.getLightingConfig()) && proto.ei.ShellDB.LightingConfig.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ei.ShellDB.FarmConfiguration}
 */
proto.ei.ShellDB.FarmConfiguration.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ei.ShellDB.FarmConfiguration;
  return proto.ei.ShellDB.FarmConfiguration.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ei.ShellDB.FarmConfiguration} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ei.ShellDB.FarmConfiguration}
 */
proto.ei.ShellDB.FarmConfiguration.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 10:
      var values = /** @type {!Array<!proto.ei.ShellDB.FarmElement>} */ (reader.isDelimited() ? reader.readPackedEnum() : [reader.readEnum()]);
      for (var i = 0; i < values.length; i++) {
        msg.addLockedElements(values[i]);
      }
      break;
    case 1:
      var value = new proto.ei.ShellDB.ShellConfiguration;
      reader.readMessage(value,proto.ei.ShellDB.ShellConfiguration.deserializeBinaryFromReader);
      msg.addShellConfigs(value);
      break;
    case 2:
      var value = new proto.ei.ShellDB.ShellSetConfiguration;
      reader.readMessage(value,proto.ei.ShellDB.ShellSetConfiguration.deserializeBinaryFromReader);
      msg.addShellSetConfigs(value);
      break;
    case 7:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setConfigureChickensByGroup(value);
      break;
    case 8:
      var value = new proto.ei.ShellDB.ShellGroupConfiguration;
      reader.readMessage(value,proto.ei.ShellDB.ShellGroupConfiguration.deserializeBinaryFromReader);
      msg.addGroupConfigs(value);
      break;
    case 9:
      var value = new proto.ei.ShellDB.ChickenConfig;
      reader.readMessage(value,proto.ei.ShellDB.ChickenConfig.deserializeBinaryFromReader);
      msg.addChickenConfigs(value);
      break;
    case 11:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setLightingConfigEnabled(value);
      break;
    case 12:
      var value = new proto.ei.ShellDB.LightingConfig;
      reader.readMessage(value,proto.ei.ShellDB.LightingConfig.deserializeBinaryFromReader);
      msg.setLightingConfig(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ei.ShellDB.FarmConfiguration.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ei.ShellDB.FarmConfiguration.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ei.ShellDB.FarmConfiguration} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.ShellDB.FarmConfiguration.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getLockedElementsList();
  if (f.length > 0) {
    writer.writeRepeatedEnum(
      10,
      f
    );
  }
  f = message.getShellConfigsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.ei.ShellDB.ShellConfiguration.serializeBinaryToWriter
    );
  }
  f = message.getShellSetConfigsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.ei.ShellDB.ShellSetConfiguration.serializeBinaryToWriter
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 7));
  if (f != null) {
    writer.writeBool(
      7,
      f
    );
  }
  f = message.getGroupConfigsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      8,
      f,
      proto.ei.ShellDB.ShellGroupConfiguration.serializeBinaryToWriter
    );
  }
  f = message.getChickenConfigsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      9,
      f,
      proto.ei.ShellDB.ChickenConfig.serializeBinaryToWriter
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 11));
  if (f != null) {
    writer.writeBool(
      11,
      f
    );
  }
  f = message.getLightingConfig();
  if (f != null) {
    writer.writeMessage(
      12,
      f,
      proto.ei.ShellDB.LightingConfig.serializeBinaryToWriter
    );
  }
};


/**
 * repeated FarmElement locked_elements = 10;
 * @return {!Array<!proto.ei.ShellDB.FarmElement>}
 */
proto.ei.ShellDB.FarmConfiguration.prototype.getLockedElementsList = function() {
  return /** @type {!Array<!proto.ei.ShellDB.FarmElement>} */ (jspb.Message.getRepeatedField(this, 10));
};


/**
 * @param {!Array<!proto.ei.ShellDB.FarmElement>} value
 * @return {!proto.ei.ShellDB.FarmConfiguration} returns this
 */
proto.ei.ShellDB.FarmConfiguration.prototype.setLockedElementsList = function(value) {
  return jspb.Message.setField(this, 10, value || []);
};


/**
 * @param {!proto.ei.ShellDB.FarmElement} value
 * @param {number=} opt_index
 * @return {!proto.ei.ShellDB.FarmConfiguration} returns this
 */
proto.ei.ShellDB.FarmConfiguration.prototype.addLockedElements = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 10, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.ei.ShellDB.FarmConfiguration} returns this
 */
proto.ei.ShellDB.FarmConfiguration.prototype.clearLockedElementsList = function() {
  return this.setLockedElementsList([]);
};


/**
 * repeated ShellConfiguration shell_configs = 1;
 * @return {!Array<!proto.ei.ShellDB.ShellConfiguration>}
 */
proto.ei.ShellDB.FarmConfiguration.prototype.getShellConfigsList = function() {
  return /** @type{!Array<!proto.ei.ShellDB.ShellConfiguration>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.ei.ShellDB.ShellConfiguration, 1));
};


/**
 * @param {!Array<!proto.ei.ShellDB.ShellConfiguration>} value
 * @return {!proto.ei.ShellDB.FarmConfiguration} returns this
*/
proto.ei.ShellDB.FarmConfiguration.prototype.setShellConfigsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.ei.ShellDB.ShellConfiguration=} opt_value
 * @param {number=} opt_index
 * @return {!proto.ei.ShellDB.ShellConfiguration}
 */
proto.ei.ShellDB.FarmConfiguration.prototype.addShellConfigs = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.ei.ShellDB.ShellConfiguration, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.ei.ShellDB.FarmConfiguration} returns this
 */
proto.ei.ShellDB.FarmConfiguration.prototype.clearShellConfigsList = function() {
  return this.setShellConfigsList([]);
};


/**
 * repeated ShellSetConfiguration shell_set_configs = 2;
 * @return {!Array<!proto.ei.ShellDB.ShellSetConfiguration>}
 */
proto.ei.ShellDB.FarmConfiguration.prototype.getShellSetConfigsList = function() {
  return /** @type{!Array<!proto.ei.ShellDB.ShellSetConfiguration>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.ei.ShellDB.ShellSetConfiguration, 2));
};


/**
 * @param {!Array<!proto.ei.ShellDB.ShellSetConfiguration>} value
 * @return {!proto.ei.ShellDB.FarmConfiguration} returns this
*/
proto.ei.ShellDB.FarmConfiguration.prototype.setShellSetConfigsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.ei.ShellDB.ShellSetConfiguration=} opt_value
 * @param {number=} opt_index
 * @return {!proto.ei.ShellDB.ShellSetConfiguration}
 */
proto.ei.ShellDB.FarmConfiguration.prototype.addShellSetConfigs = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.ei.ShellDB.ShellSetConfiguration, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.ei.ShellDB.FarmConfiguration} returns this
 */
proto.ei.ShellDB.FarmConfiguration.prototype.clearShellSetConfigsList = function() {
  return this.setShellSetConfigsList([]);
};


/**
 * optional bool configure_chickens_by_group = 7;
 * @return {boolean}
 */
proto.ei.ShellDB.FarmConfiguration.prototype.getConfigureChickensByGroup = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 7, false));
};


/**
 * @param {boolean} value
 * @return {!proto.ei.ShellDB.FarmConfiguration} returns this
 */
proto.ei.ShellDB.FarmConfiguration.prototype.setConfigureChickensByGroup = function(value) {
  return jspb.Message.setField(this, 7, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.ShellDB.FarmConfiguration} returns this
 */
proto.ei.ShellDB.FarmConfiguration.prototype.clearConfigureChickensByGroup = function() {
  return jspb.Message.setField(this, 7, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ShellDB.FarmConfiguration.prototype.hasConfigureChickensByGroup = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * repeated ShellGroupConfiguration group_configs = 8;
 * @return {!Array<!proto.ei.ShellDB.ShellGroupConfiguration>}
 */
proto.ei.ShellDB.FarmConfiguration.prototype.getGroupConfigsList = function() {
  return /** @type{!Array<!proto.ei.ShellDB.ShellGroupConfiguration>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.ei.ShellDB.ShellGroupConfiguration, 8));
};


/**
 * @param {!Array<!proto.ei.ShellDB.ShellGroupConfiguration>} value
 * @return {!proto.ei.ShellDB.FarmConfiguration} returns this
*/
proto.ei.ShellDB.FarmConfiguration.prototype.setGroupConfigsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 8, value);
};


/**
 * @param {!proto.ei.ShellDB.ShellGroupConfiguration=} opt_value
 * @param {number=} opt_index
 * @return {!proto.ei.ShellDB.ShellGroupConfiguration}
 */
proto.ei.ShellDB.FarmConfiguration.prototype.addGroupConfigs = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 8, opt_value, proto.ei.ShellDB.ShellGroupConfiguration, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.ei.ShellDB.FarmConfiguration} returns this
 */
proto.ei.ShellDB.FarmConfiguration.prototype.clearGroupConfigsList = function() {
  return this.setGroupConfigsList([]);
};


/**
 * repeated ChickenConfig chicken_configs = 9;
 * @return {!Array<!proto.ei.ShellDB.ChickenConfig>}
 */
proto.ei.ShellDB.FarmConfiguration.prototype.getChickenConfigsList = function() {
  return /** @type{!Array<!proto.ei.ShellDB.ChickenConfig>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.ei.ShellDB.ChickenConfig, 9));
};


/**
 * @param {!Array<!proto.ei.ShellDB.ChickenConfig>} value
 * @return {!proto.ei.ShellDB.FarmConfiguration} returns this
*/
proto.ei.ShellDB.FarmConfiguration.prototype.setChickenConfigsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 9, value);
};


/**
 * @param {!proto.ei.ShellDB.ChickenConfig=} opt_value
 * @param {number=} opt_index
 * @return {!proto.ei.ShellDB.ChickenConfig}
 */
proto.ei.ShellDB.FarmConfiguration.prototype.addChickenConfigs = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 9, opt_value, proto.ei.ShellDB.ChickenConfig, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.ei.ShellDB.FarmConfiguration} returns this
 */
proto.ei.ShellDB.FarmConfiguration.prototype.clearChickenConfigsList = function() {
  return this.setChickenConfigsList([]);
};


/**
 * optional bool lighting_config_enabled = 11;
 * @return {boolean}
 */
proto.ei.ShellDB.FarmConfiguration.prototype.getLightingConfigEnabled = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 11, false));
};


/**
 * @param {boolean} value
 * @return {!proto.ei.ShellDB.FarmConfiguration} returns this
 */
proto.ei.ShellDB.FarmConfiguration.prototype.setLightingConfigEnabled = function(value) {
  return jspb.Message.setField(this, 11, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.ShellDB.FarmConfiguration} returns this
 */
proto.ei.ShellDB.FarmConfiguration.prototype.clearLightingConfigEnabled = function() {
  return jspb.Message.setField(this, 11, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ShellDB.FarmConfiguration.prototype.hasLightingConfigEnabled = function() {
  return jspb.Message.getField(this, 11) != null;
};


/**
 * optional LightingConfig lighting_config = 12;
 * @return {?proto.ei.ShellDB.LightingConfig}
 */
proto.ei.ShellDB.FarmConfiguration.prototype.getLightingConfig = function() {
  return /** @type{?proto.ei.ShellDB.LightingConfig} */ (
    jspb.Message.getWrapperField(this, proto.ei.ShellDB.LightingConfig, 12));
};


/**
 * @param {?proto.ei.ShellDB.LightingConfig|undefined} value
 * @return {!proto.ei.ShellDB.FarmConfiguration} returns this
*/
proto.ei.ShellDB.FarmConfiguration.prototype.setLightingConfig = function(value) {
  return jspb.Message.setWrapperField(this, 12, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.ei.ShellDB.FarmConfiguration} returns this
 */
proto.ei.ShellDB.FarmConfiguration.prototype.clearLightingConfig = function() {
  return this.setLightingConfig(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ShellDB.FarmConfiguration.prototype.hasLightingConfig = function() {
  return jspb.Message.getField(this, 12) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ei.ShellDB.SavedFarmConfiguration.prototype.toObject = function(opt_includeInstance) {
  return proto.ei.ShellDB.SavedFarmConfiguration.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ei.ShellDB.SavedFarmConfiguration} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.ShellDB.SavedFarmConfiguration.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    config: (f = msg.getConfig()) && proto.ei.ShellDB.FarmConfiguration.toObject(includeInstance, f),
    clientSaveTime: (f = jspb.Message.getOptionalFloatingPointField(msg, 3)) == null ? undefined : f,
    serverId: (f = jspb.Message.getField(msg, 4)) == null ? undefined : f,
    displayName: (f = jspb.Message.getField(msg, 5)) == null ? undefined : f,
    purchased: (f = jspb.Message.getBooleanField(msg, 6)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ei.ShellDB.SavedFarmConfiguration}
 */
proto.ei.ShellDB.SavedFarmConfiguration.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ei.ShellDB.SavedFarmConfiguration;
  return proto.ei.ShellDB.SavedFarmConfiguration.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ei.ShellDB.SavedFarmConfiguration} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ei.ShellDB.SavedFarmConfiguration}
 */
proto.ei.ShellDB.SavedFarmConfiguration.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = new proto.ei.ShellDB.FarmConfiguration;
      reader.readMessage(value,proto.ei.ShellDB.FarmConfiguration.deserializeBinaryFromReader);
      msg.setConfig(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setClientSaveTime(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setServerId(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setDisplayName(value);
      break;
    case 6:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setPurchased(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ei.ShellDB.SavedFarmConfiguration.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ei.ShellDB.SavedFarmConfiguration.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ei.ShellDB.SavedFarmConfiguration} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.ShellDB.SavedFarmConfiguration.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getConfig();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.ei.ShellDB.FarmConfiguration.serializeBinaryToWriter
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeDouble(
      3,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeString(
      4,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeString(
      5,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeBool(
      6,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.ei.ShellDB.SavedFarmConfiguration.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.ei.ShellDB.SavedFarmConfiguration} returns this
 */
proto.ei.ShellDB.SavedFarmConfiguration.prototype.setId = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.ShellDB.SavedFarmConfiguration} returns this
 */
proto.ei.ShellDB.SavedFarmConfiguration.prototype.clearId = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ShellDB.SavedFarmConfiguration.prototype.hasId = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional FarmConfiguration config = 2;
 * @return {?proto.ei.ShellDB.FarmConfiguration}
 */
proto.ei.ShellDB.SavedFarmConfiguration.prototype.getConfig = function() {
  return /** @type{?proto.ei.ShellDB.FarmConfiguration} */ (
    jspb.Message.getWrapperField(this, proto.ei.ShellDB.FarmConfiguration, 2));
};


/**
 * @param {?proto.ei.ShellDB.FarmConfiguration|undefined} value
 * @return {!proto.ei.ShellDB.SavedFarmConfiguration} returns this
*/
proto.ei.ShellDB.SavedFarmConfiguration.prototype.setConfig = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.ei.ShellDB.SavedFarmConfiguration} returns this
 */
proto.ei.ShellDB.SavedFarmConfiguration.prototype.clearConfig = function() {
  return this.setConfig(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ShellDB.SavedFarmConfiguration.prototype.hasConfig = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional double client_save_time = 3;
 * @return {number}
 */
proto.ei.ShellDB.SavedFarmConfiguration.prototype.getClientSaveTime = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 3, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.ei.ShellDB.SavedFarmConfiguration} returns this
 */
proto.ei.ShellDB.SavedFarmConfiguration.prototype.setClientSaveTime = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.ShellDB.SavedFarmConfiguration} returns this
 */
proto.ei.ShellDB.SavedFarmConfiguration.prototype.clearClientSaveTime = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ShellDB.SavedFarmConfiguration.prototype.hasClientSaveTime = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional string server_id = 4;
 * @return {string}
 */
proto.ei.ShellDB.SavedFarmConfiguration.prototype.getServerId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.ei.ShellDB.SavedFarmConfiguration} returns this
 */
proto.ei.ShellDB.SavedFarmConfiguration.prototype.setServerId = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.ShellDB.SavedFarmConfiguration} returns this
 */
proto.ei.ShellDB.SavedFarmConfiguration.prototype.clearServerId = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ShellDB.SavedFarmConfiguration.prototype.hasServerId = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional string display_name = 5;
 * @return {string}
 */
proto.ei.ShellDB.SavedFarmConfiguration.prototype.getDisplayName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.ei.ShellDB.SavedFarmConfiguration} returns this
 */
proto.ei.ShellDB.SavedFarmConfiguration.prototype.setDisplayName = function(value) {
  return jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.ShellDB.SavedFarmConfiguration} returns this
 */
proto.ei.ShellDB.SavedFarmConfiguration.prototype.clearDisplayName = function() {
  return jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ShellDB.SavedFarmConfiguration.prototype.hasDisplayName = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional bool purchased = 6;
 * @return {boolean}
 */
proto.ei.ShellDB.SavedFarmConfiguration.prototype.getPurchased = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 6, false));
};


/**
 * @param {boolean} value
 * @return {!proto.ei.ShellDB.SavedFarmConfiguration} returns this
 */
proto.ei.ShellDB.SavedFarmConfiguration.prototype.setPurchased = function(value) {
  return jspb.Message.setField(this, 6, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.ShellDB.SavedFarmConfiguration} returns this
 */
proto.ei.ShellDB.SavedFarmConfiguration.prototype.clearPurchased = function() {
  return jspb.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ShellDB.SavedFarmConfiguration.prototype.hasPurchased = function() {
  return jspb.Message.getField(this, 6) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ei.ShellDB.ShellConfiguration.prototype.toObject = function(opt_includeInstance) {
  return proto.ei.ShellDB.ShellConfiguration.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ei.ShellDB.ShellConfiguration} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.ShellDB.ShellConfiguration.toObject = function(includeInstance, msg) {
  var f, obj = {
    assetType: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    index: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,
    shellIdentifier: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ei.ShellDB.ShellConfiguration}
 */
proto.ei.ShellDB.ShellConfiguration.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ei.ShellDB.ShellConfiguration;
  return proto.ei.ShellDB.ShellConfiguration.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ei.ShellDB.ShellConfiguration} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ei.ShellDB.ShellConfiguration}
 */
proto.ei.ShellDB.ShellConfiguration.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.ei.ShellSpec.AssetType} */ (reader.readEnum());
      msg.setAssetType(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setIndex(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setShellIdentifier(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ei.ShellDB.ShellConfiguration.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ei.ShellDB.ShellConfiguration.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ei.ShellDB.ShellConfiguration} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.ShellDB.ShellConfiguration.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {!proto.ei.ShellSpec.AssetType} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeUint32(
      2,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional ShellSpec.AssetType asset_type = 1;
 * @return {!proto.ei.ShellSpec.AssetType}
 */
proto.ei.ShellDB.ShellConfiguration.prototype.getAssetType = function() {
  return /** @type {!proto.ei.ShellSpec.AssetType} */ (jspb.Message.getFieldWithDefault(this, 1, 1));
};


/**
 * @param {!proto.ei.ShellSpec.AssetType} value
 * @return {!proto.ei.ShellDB.ShellConfiguration} returns this
 */
proto.ei.ShellDB.ShellConfiguration.prototype.setAssetType = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.ShellDB.ShellConfiguration} returns this
 */
proto.ei.ShellDB.ShellConfiguration.prototype.clearAssetType = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ShellDB.ShellConfiguration.prototype.hasAssetType = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional uint32 index = 2;
 * @return {number}
 */
proto.ei.ShellDB.ShellConfiguration.prototype.getIndex = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.ei.ShellDB.ShellConfiguration} returns this
 */
proto.ei.ShellDB.ShellConfiguration.prototype.setIndex = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.ShellDB.ShellConfiguration} returns this
 */
proto.ei.ShellDB.ShellConfiguration.prototype.clearIndex = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ShellDB.ShellConfiguration.prototype.hasIndex = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string shell_identifier = 3;
 * @return {string}
 */
proto.ei.ShellDB.ShellConfiguration.prototype.getShellIdentifier = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.ei.ShellDB.ShellConfiguration} returns this
 */
proto.ei.ShellDB.ShellConfiguration.prototype.setShellIdentifier = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.ShellDB.ShellConfiguration} returns this
 */
proto.ei.ShellDB.ShellConfiguration.prototype.clearShellIdentifier = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ShellDB.ShellConfiguration.prototype.hasShellIdentifier = function() {
  return jspb.Message.getField(this, 3) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ei.ShellDB.ShellSetConfiguration.prototype.toObject = function(opt_includeInstance) {
  return proto.ei.ShellDB.ShellSetConfiguration.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ei.ShellDB.ShellSetConfiguration} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.ShellDB.ShellSetConfiguration.toObject = function(includeInstance, msg) {
  var f, obj = {
    element: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    index: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,
    shellSetIdentifier: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f,
    variationIdentifier: (f = jspb.Message.getField(msg, 4)) == null ? undefined : f,
    decoratorIdentifier: (f = jspb.Message.getField(msg, 5)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ei.ShellDB.ShellSetConfiguration}
 */
proto.ei.ShellDB.ShellSetConfiguration.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ei.ShellDB.ShellSetConfiguration;
  return proto.ei.ShellDB.ShellSetConfiguration.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ei.ShellDB.ShellSetConfiguration} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ei.ShellDB.ShellSetConfiguration}
 */
proto.ei.ShellDB.ShellSetConfiguration.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.ei.ShellDB.FarmElement} */ (reader.readEnum());
      msg.setElement(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setIndex(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setShellSetIdentifier(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setVariationIdentifier(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setDecoratorIdentifier(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ei.ShellDB.ShellSetConfiguration.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ei.ShellDB.ShellSetConfiguration.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ei.ShellDB.ShellSetConfiguration} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.ShellDB.ShellSetConfiguration.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {!proto.ei.ShellDB.FarmElement} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeUint32(
      2,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeString(
      3,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeString(
      4,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeString(
      5,
      f
    );
  }
};


/**
 * optional FarmElement element = 1;
 * @return {!proto.ei.ShellDB.FarmElement}
 */
proto.ei.ShellDB.ShellSetConfiguration.prototype.getElement = function() {
  return /** @type {!proto.ei.ShellDB.FarmElement} */ (jspb.Message.getFieldWithDefault(this, 1, 1));
};


/**
 * @param {!proto.ei.ShellDB.FarmElement} value
 * @return {!proto.ei.ShellDB.ShellSetConfiguration} returns this
 */
proto.ei.ShellDB.ShellSetConfiguration.prototype.setElement = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.ShellDB.ShellSetConfiguration} returns this
 */
proto.ei.ShellDB.ShellSetConfiguration.prototype.clearElement = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ShellDB.ShellSetConfiguration.prototype.hasElement = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional uint32 index = 2;
 * @return {number}
 */
proto.ei.ShellDB.ShellSetConfiguration.prototype.getIndex = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.ei.ShellDB.ShellSetConfiguration} returns this
 */
proto.ei.ShellDB.ShellSetConfiguration.prototype.setIndex = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.ShellDB.ShellSetConfiguration} returns this
 */
proto.ei.ShellDB.ShellSetConfiguration.prototype.clearIndex = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ShellDB.ShellSetConfiguration.prototype.hasIndex = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string shell_set_identifier = 3;
 * @return {string}
 */
proto.ei.ShellDB.ShellSetConfiguration.prototype.getShellSetIdentifier = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.ei.ShellDB.ShellSetConfiguration} returns this
 */
proto.ei.ShellDB.ShellSetConfiguration.prototype.setShellSetIdentifier = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.ShellDB.ShellSetConfiguration} returns this
 */
proto.ei.ShellDB.ShellSetConfiguration.prototype.clearShellSetIdentifier = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ShellDB.ShellSetConfiguration.prototype.hasShellSetIdentifier = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional string variation_identifier = 4;
 * @return {string}
 */
proto.ei.ShellDB.ShellSetConfiguration.prototype.getVariationIdentifier = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.ei.ShellDB.ShellSetConfiguration} returns this
 */
proto.ei.ShellDB.ShellSetConfiguration.prototype.setVariationIdentifier = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.ShellDB.ShellSetConfiguration} returns this
 */
proto.ei.ShellDB.ShellSetConfiguration.prototype.clearVariationIdentifier = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ShellDB.ShellSetConfiguration.prototype.hasVariationIdentifier = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional string decorator_identifier = 5;
 * @return {string}
 */
proto.ei.ShellDB.ShellSetConfiguration.prototype.getDecoratorIdentifier = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.ei.ShellDB.ShellSetConfiguration} returns this
 */
proto.ei.ShellDB.ShellSetConfiguration.prototype.setDecoratorIdentifier = function(value) {
  return jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.ShellDB.ShellSetConfiguration} returns this
 */
proto.ei.ShellDB.ShellSetConfiguration.prototype.clearDecoratorIdentifier = function() {
  return jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ShellDB.ShellSetConfiguration.prototype.hasDecoratorIdentifier = function() {
  return jspb.Message.getField(this, 5) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ei.ShellDB.ShellGroupConfiguration.prototype.toObject = function(opt_includeInstance) {
  return proto.ei.ShellDB.ShellGroupConfiguration.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ei.ShellDB.ShellGroupConfiguration} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.ShellDB.ShellGroupConfiguration.toObject = function(includeInstance, msg) {
  var f, obj = {
    assetType: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    groupIdentifier: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ei.ShellDB.ShellGroupConfiguration}
 */
proto.ei.ShellDB.ShellGroupConfiguration.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ei.ShellDB.ShellGroupConfiguration;
  return proto.ei.ShellDB.ShellGroupConfiguration.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ei.ShellDB.ShellGroupConfiguration} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ei.ShellDB.ShellGroupConfiguration}
 */
proto.ei.ShellDB.ShellGroupConfiguration.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.ei.ShellSpec.AssetType} */ (reader.readEnum());
      msg.setAssetType(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setGroupIdentifier(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ei.ShellDB.ShellGroupConfiguration.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ei.ShellDB.ShellGroupConfiguration.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ei.ShellDB.ShellGroupConfiguration} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.ShellDB.ShellGroupConfiguration.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {!proto.ei.ShellSpec.AssetType} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional ShellSpec.AssetType asset_type = 1;
 * @return {!proto.ei.ShellSpec.AssetType}
 */
proto.ei.ShellDB.ShellGroupConfiguration.prototype.getAssetType = function() {
  return /** @type {!proto.ei.ShellSpec.AssetType} */ (jspb.Message.getFieldWithDefault(this, 1, 1));
};


/**
 * @param {!proto.ei.ShellSpec.AssetType} value
 * @return {!proto.ei.ShellDB.ShellGroupConfiguration} returns this
 */
proto.ei.ShellDB.ShellGroupConfiguration.prototype.setAssetType = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.ShellDB.ShellGroupConfiguration} returns this
 */
proto.ei.ShellDB.ShellGroupConfiguration.prototype.clearAssetType = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ShellDB.ShellGroupConfiguration.prototype.hasAssetType = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string group_identifier = 2;
 * @return {string}
 */
proto.ei.ShellDB.ShellGroupConfiguration.prototype.getGroupIdentifier = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.ei.ShellDB.ShellGroupConfiguration} returns this
 */
proto.ei.ShellDB.ShellGroupConfiguration.prototype.setGroupIdentifier = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.ShellDB.ShellGroupConfiguration} returns this
 */
proto.ei.ShellDB.ShellGroupConfiguration.prototype.clearGroupIdentifier = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ShellDB.ShellGroupConfiguration.prototype.hasGroupIdentifier = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ei.ShellDB.ChickenConfig.prototype.toObject = function(opt_includeInstance) {
  return proto.ei.ShellDB.ChickenConfig.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ei.ShellDB.ChickenConfig} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.ShellDB.ChickenConfig.toObject = function(includeInstance, msg) {
  var f, obj = {
    chickenIdentifier: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    hatIdentifier: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ei.ShellDB.ChickenConfig}
 */
proto.ei.ShellDB.ChickenConfig.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ei.ShellDB.ChickenConfig;
  return proto.ei.ShellDB.ChickenConfig.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ei.ShellDB.ChickenConfig} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ei.ShellDB.ChickenConfig}
 */
proto.ei.ShellDB.ChickenConfig.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setChickenIdentifier(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setHatIdentifier(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ei.ShellDB.ChickenConfig.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ei.ShellDB.ChickenConfig.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ei.ShellDB.ChickenConfig} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.ShellDB.ChickenConfig.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string chicken_identifier = 1;
 * @return {string}
 */
proto.ei.ShellDB.ChickenConfig.prototype.getChickenIdentifier = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.ei.ShellDB.ChickenConfig} returns this
 */
proto.ei.ShellDB.ChickenConfig.prototype.setChickenIdentifier = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.ShellDB.ChickenConfig} returns this
 */
proto.ei.ShellDB.ChickenConfig.prototype.clearChickenIdentifier = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ShellDB.ChickenConfig.prototype.hasChickenIdentifier = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string hat_identifier = 2;
 * @return {string}
 */
proto.ei.ShellDB.ChickenConfig.prototype.getHatIdentifier = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.ei.ShellDB.ChickenConfig} returns this
 */
proto.ei.ShellDB.ChickenConfig.prototype.setHatIdentifier = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.ShellDB.ChickenConfig} returns this
 */
proto.ei.ShellDB.ChickenConfig.prototype.clearHatIdentifier = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ShellDB.ChickenConfig.prototype.hasHatIdentifier = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ei.ShellDB.LightingConfig.prototype.toObject = function(opt_includeInstance) {
  return proto.ei.ShellDB.LightingConfig.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ei.ShellDB.LightingConfig} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.ShellDB.LightingConfig.toObject = function(includeInstance, msg) {
  var f, obj = {
    lightDir: (f = msg.getLightDir()) && proto.ei.Vector3.toObject(includeInstance, f),
    lightDirectColor: (f = msg.getLightDirectColor()) && proto.ei.Vector4.toObject(includeInstance, f),
    lightDirectIntensity: (f = jspb.Message.getOptionalFloatingPointField(msg, 3)) == null ? undefined : f,
    lightAmbientColor: (f = msg.getLightAmbientColor()) && proto.ei.Vector4.toObject(includeInstance, f),
    lightAmbientIntensity: (f = jspb.Message.getOptionalFloatingPointField(msg, 5)) == null ? undefined : f,
    fogColor: (f = msg.getFogColor()) && proto.ei.Vector4.toObject(includeInstance, f),
    fogNear: (f = jspb.Message.getOptionalFloatingPointField(msg, 7)) == null ? undefined : f,
    fogFar: (f = jspb.Message.getOptionalFloatingPointField(msg, 8)) == null ? undefined : f,
    fogDensity: (f = jspb.Message.getOptionalFloatingPointField(msg, 9)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ei.ShellDB.LightingConfig}
 */
proto.ei.ShellDB.LightingConfig.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ei.ShellDB.LightingConfig;
  return proto.ei.ShellDB.LightingConfig.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ei.ShellDB.LightingConfig} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ei.ShellDB.LightingConfig}
 */
proto.ei.ShellDB.LightingConfig.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.ei.Vector3;
      reader.readMessage(value,proto.ei.Vector3.deserializeBinaryFromReader);
      msg.setLightDir(value);
      break;
    case 2:
      var value = new proto.ei.Vector4;
      reader.readMessage(value,proto.ei.Vector4.deserializeBinaryFromReader);
      msg.setLightDirectColor(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setLightDirectIntensity(value);
      break;
    case 4:
      var value = new proto.ei.Vector4;
      reader.readMessage(value,proto.ei.Vector4.deserializeBinaryFromReader);
      msg.setLightAmbientColor(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setLightAmbientIntensity(value);
      break;
    case 6:
      var value = new proto.ei.Vector4;
      reader.readMessage(value,proto.ei.Vector4.deserializeBinaryFromReader);
      msg.setFogColor(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setFogNear(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setFogFar(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setFogDensity(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ei.ShellDB.LightingConfig.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ei.ShellDB.LightingConfig.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ei.ShellDB.LightingConfig} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.ShellDB.LightingConfig.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getLightDir();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.ei.Vector3.serializeBinaryToWriter
    );
  }
  f = message.getLightDirectColor();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.ei.Vector4.serializeBinaryToWriter
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeFloat(
      3,
      f
    );
  }
  f = message.getLightAmbientColor();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.ei.Vector4.serializeBinaryToWriter
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeFloat(
      5,
      f
    );
  }
  f = message.getFogColor();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      proto.ei.Vector4.serializeBinaryToWriter
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 7));
  if (f != null) {
    writer.writeFloat(
      7,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 8));
  if (f != null) {
    writer.writeFloat(
      8,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 9));
  if (f != null) {
    writer.writeFloat(
      9,
      f
    );
  }
};


/**
 * optional Vector3 light_dir = 1;
 * @return {?proto.ei.Vector3}
 */
proto.ei.ShellDB.LightingConfig.prototype.getLightDir = function() {
  return /** @type{?proto.ei.Vector3} */ (
    jspb.Message.getWrapperField(this, proto.ei.Vector3, 1));
};


/**
 * @param {?proto.ei.Vector3|undefined} value
 * @return {!proto.ei.ShellDB.LightingConfig} returns this
*/
proto.ei.ShellDB.LightingConfig.prototype.setLightDir = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.ei.ShellDB.LightingConfig} returns this
 */
proto.ei.ShellDB.LightingConfig.prototype.clearLightDir = function() {
  return this.setLightDir(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ShellDB.LightingConfig.prototype.hasLightDir = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional Vector4 light_direct_color = 2;
 * @return {?proto.ei.Vector4}
 */
proto.ei.ShellDB.LightingConfig.prototype.getLightDirectColor = function() {
  return /** @type{?proto.ei.Vector4} */ (
    jspb.Message.getWrapperField(this, proto.ei.Vector4, 2));
};


/**
 * @param {?proto.ei.Vector4|undefined} value
 * @return {!proto.ei.ShellDB.LightingConfig} returns this
*/
proto.ei.ShellDB.LightingConfig.prototype.setLightDirectColor = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.ei.ShellDB.LightingConfig} returns this
 */
proto.ei.ShellDB.LightingConfig.prototype.clearLightDirectColor = function() {
  return this.setLightDirectColor(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ShellDB.LightingConfig.prototype.hasLightDirectColor = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional float light_direct_intensity = 3;
 * @return {number}
 */
proto.ei.ShellDB.LightingConfig.prototype.getLightDirectIntensity = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 3, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.ei.ShellDB.LightingConfig} returns this
 */
proto.ei.ShellDB.LightingConfig.prototype.setLightDirectIntensity = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.ShellDB.LightingConfig} returns this
 */
proto.ei.ShellDB.LightingConfig.prototype.clearLightDirectIntensity = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ShellDB.LightingConfig.prototype.hasLightDirectIntensity = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional Vector4 light_ambient_color = 4;
 * @return {?proto.ei.Vector4}
 */
proto.ei.ShellDB.LightingConfig.prototype.getLightAmbientColor = function() {
  return /** @type{?proto.ei.Vector4} */ (
    jspb.Message.getWrapperField(this, proto.ei.Vector4, 4));
};


/**
 * @param {?proto.ei.Vector4|undefined} value
 * @return {!proto.ei.ShellDB.LightingConfig} returns this
*/
proto.ei.ShellDB.LightingConfig.prototype.setLightAmbientColor = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.ei.ShellDB.LightingConfig} returns this
 */
proto.ei.ShellDB.LightingConfig.prototype.clearLightAmbientColor = function() {
  return this.setLightAmbientColor(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ShellDB.LightingConfig.prototype.hasLightAmbientColor = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional float light_ambient_intensity = 5;
 * @return {number}
 */
proto.ei.ShellDB.LightingConfig.prototype.getLightAmbientIntensity = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 5, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.ei.ShellDB.LightingConfig} returns this
 */
proto.ei.ShellDB.LightingConfig.prototype.setLightAmbientIntensity = function(value) {
  return jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.ShellDB.LightingConfig} returns this
 */
proto.ei.ShellDB.LightingConfig.prototype.clearLightAmbientIntensity = function() {
  return jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ShellDB.LightingConfig.prototype.hasLightAmbientIntensity = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional Vector4 fog_color = 6;
 * @return {?proto.ei.Vector4}
 */
proto.ei.ShellDB.LightingConfig.prototype.getFogColor = function() {
  return /** @type{?proto.ei.Vector4} */ (
    jspb.Message.getWrapperField(this, proto.ei.Vector4, 6));
};


/**
 * @param {?proto.ei.Vector4|undefined} value
 * @return {!proto.ei.ShellDB.LightingConfig} returns this
*/
proto.ei.ShellDB.LightingConfig.prototype.setFogColor = function(value) {
  return jspb.Message.setWrapperField(this, 6, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.ei.ShellDB.LightingConfig} returns this
 */
proto.ei.ShellDB.LightingConfig.prototype.clearFogColor = function() {
  return this.setFogColor(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ShellDB.LightingConfig.prototype.hasFogColor = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional float fog_near = 7;
 * @return {number}
 */
proto.ei.ShellDB.LightingConfig.prototype.getFogNear = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 7, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.ei.ShellDB.LightingConfig} returns this
 */
proto.ei.ShellDB.LightingConfig.prototype.setFogNear = function(value) {
  return jspb.Message.setField(this, 7, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.ShellDB.LightingConfig} returns this
 */
proto.ei.ShellDB.LightingConfig.prototype.clearFogNear = function() {
  return jspb.Message.setField(this, 7, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ShellDB.LightingConfig.prototype.hasFogNear = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional float fog_far = 8;
 * @return {number}
 */
proto.ei.ShellDB.LightingConfig.prototype.getFogFar = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 8, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.ei.ShellDB.LightingConfig} returns this
 */
proto.ei.ShellDB.LightingConfig.prototype.setFogFar = function(value) {
  return jspb.Message.setField(this, 8, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.ShellDB.LightingConfig} returns this
 */
proto.ei.ShellDB.LightingConfig.prototype.clearFogFar = function() {
  return jspb.Message.setField(this, 8, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ShellDB.LightingConfig.prototype.hasFogFar = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional float fog_density = 9;
 * @return {number}
 */
proto.ei.ShellDB.LightingConfig.prototype.getFogDensity = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 9, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.ei.ShellDB.LightingConfig} returns this
 */
proto.ei.ShellDB.LightingConfig.prototype.setFogDensity = function(value) {
  return jspb.Message.setField(this, 9, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.ShellDB.LightingConfig} returns this
 */
proto.ei.ShellDB.LightingConfig.prototype.clearFogDensity = function() {
  return jspb.Message.setField(this, 9, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ShellDB.LightingConfig.prototype.hasFogDensity = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * repeated ShellStatus shell_inventory = 1;
 * @return {!Array<!proto.ei.ShellDB.ShellStatus>}
 */
proto.ei.ShellDB.prototype.getShellInventoryList = function() {
  return /** @type{!Array<!proto.ei.ShellDB.ShellStatus>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.ei.ShellDB.ShellStatus, 1));
};


/**
 * @param {!Array<!proto.ei.ShellDB.ShellStatus>} value
 * @return {!proto.ei.ShellDB} returns this
*/
proto.ei.ShellDB.prototype.setShellInventoryList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.ei.ShellDB.ShellStatus=} opt_value
 * @param {number=} opt_index
 * @return {!proto.ei.ShellDB.ShellStatus}
 */
proto.ei.ShellDB.prototype.addShellInventory = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.ei.ShellDB.ShellStatus, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.ei.ShellDB} returns this
 */
proto.ei.ShellDB.prototype.clearShellInventoryList = function() {
  return this.setShellInventoryList([]);
};


/**
 * repeated ShellElementStatus shell_element_inventory = 5;
 * @return {!Array<!proto.ei.ShellDB.ShellElementStatus>}
 */
proto.ei.ShellDB.prototype.getShellElementInventoryList = function() {
  return /** @type{!Array<!proto.ei.ShellDB.ShellElementStatus>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.ei.ShellDB.ShellElementStatus, 5));
};


/**
 * @param {!Array<!proto.ei.ShellDB.ShellElementStatus>} value
 * @return {!proto.ei.ShellDB} returns this
*/
proto.ei.ShellDB.prototype.setShellElementInventoryList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 5, value);
};


/**
 * @param {!proto.ei.ShellDB.ShellElementStatus=} opt_value
 * @param {number=} opt_index
 * @return {!proto.ei.ShellDB.ShellElementStatus}
 */
proto.ei.ShellDB.prototype.addShellElementInventory = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 5, opt_value, proto.ei.ShellDB.ShellElementStatus, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.ei.ShellDB} returns this
 */
proto.ei.ShellDB.prototype.clearShellElementInventoryList = function() {
  return this.setShellElementInventoryList([]);
};


/**
 * repeated ShellSetVariationStatus shell_variation_inventory = 8;
 * @return {!Array<!proto.ei.ShellDB.ShellSetVariationStatus>}
 */
proto.ei.ShellDB.prototype.getShellVariationInventoryList = function() {
  return /** @type{!Array<!proto.ei.ShellDB.ShellSetVariationStatus>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.ei.ShellDB.ShellSetVariationStatus, 8));
};


/**
 * @param {!Array<!proto.ei.ShellDB.ShellSetVariationStatus>} value
 * @return {!proto.ei.ShellDB} returns this
*/
proto.ei.ShellDB.prototype.setShellVariationInventoryList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 8, value);
};


/**
 * @param {!proto.ei.ShellDB.ShellSetVariationStatus=} opt_value
 * @param {number=} opt_index
 * @return {!proto.ei.ShellDB.ShellSetVariationStatus}
 */
proto.ei.ShellDB.prototype.addShellVariationInventory = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 8, opt_value, proto.ei.ShellDB.ShellSetVariationStatus, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.ei.ShellDB} returns this
 */
proto.ei.ShellDB.prototype.clearShellVariationInventoryList = function() {
  return this.setShellVariationInventoryList([]);
};


/**
 * repeated ShellStatus shell_set_inventory = 2;
 * @return {!Array<!proto.ei.ShellDB.ShellStatus>}
 */
proto.ei.ShellDB.prototype.getShellSetInventoryList = function() {
  return /** @type{!Array<!proto.ei.ShellDB.ShellStatus>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.ei.ShellDB.ShellStatus, 2));
};


/**
 * @param {!Array<!proto.ei.ShellDB.ShellStatus>} value
 * @return {!proto.ei.ShellDB} returns this
*/
proto.ei.ShellDB.prototype.setShellSetInventoryList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.ei.ShellDB.ShellStatus=} opt_value
 * @param {number=} opt_index
 * @return {!proto.ei.ShellDB.ShellStatus}
 */
proto.ei.ShellDB.prototype.addShellSetInventory = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.ei.ShellDB.ShellStatus, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.ei.ShellDB} returns this
 */
proto.ei.ShellDB.prototype.clearShellSetInventoryList = function() {
  return this.setShellSetInventoryList([]);
};


/**
 * repeated ShellStatus shell_object_inventory = 4;
 * @return {!Array<!proto.ei.ShellDB.ShellStatus>}
 */
proto.ei.ShellDB.prototype.getShellObjectInventoryList = function() {
  return /** @type{!Array<!proto.ei.ShellDB.ShellStatus>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.ei.ShellDB.ShellStatus, 4));
};


/**
 * @param {!Array<!proto.ei.ShellDB.ShellStatus>} value
 * @return {!proto.ei.ShellDB} returns this
*/
proto.ei.ShellDB.prototype.setShellObjectInventoryList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 4, value);
};


/**
 * @param {!proto.ei.ShellDB.ShellStatus=} opt_value
 * @param {number=} opt_index
 * @return {!proto.ei.ShellDB.ShellStatus}
 */
proto.ei.ShellDB.prototype.addShellObjectInventory = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 4, opt_value, proto.ei.ShellDB.ShellStatus, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.ei.ShellDB} returns this
 */
proto.ei.ShellDB.prototype.clearShellObjectInventoryList = function() {
  return this.setShellObjectInventoryList([]);
};


/**
 * repeated FarmConfiguration farm_configs = 3;
 * @return {!Array<!proto.ei.ShellDB.FarmConfiguration>}
 */
proto.ei.ShellDB.prototype.getFarmConfigsList = function() {
  return /** @type{!Array<!proto.ei.ShellDB.FarmConfiguration>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.ei.ShellDB.FarmConfiguration, 3));
};


/**
 * @param {!Array<!proto.ei.ShellDB.FarmConfiguration>} value
 * @return {!proto.ei.ShellDB} returns this
*/
proto.ei.ShellDB.prototype.setFarmConfigsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.ei.ShellDB.FarmConfiguration=} opt_value
 * @param {number=} opt_index
 * @return {!proto.ei.ShellDB.FarmConfiguration}
 */
proto.ei.ShellDB.prototype.addFarmConfigs = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.ei.ShellDB.FarmConfiguration, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.ei.ShellDB} returns this
 */
proto.ei.ShellDB.prototype.clearFarmConfigsList = function() {
  return this.setFarmConfigsList([]);
};


/**
 * repeated SavedFarmConfiguration saved_configs = 9;
 * @return {!Array<!proto.ei.ShellDB.SavedFarmConfiguration>}
 */
proto.ei.ShellDB.prototype.getSavedConfigsList = function() {
  return /** @type{!Array<!proto.ei.ShellDB.SavedFarmConfiguration>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.ei.ShellDB.SavedFarmConfiguration, 9));
};


/**
 * @param {!Array<!proto.ei.ShellDB.SavedFarmConfiguration>} value
 * @return {!proto.ei.ShellDB} returns this
*/
proto.ei.ShellDB.prototype.setSavedConfigsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 9, value);
};


/**
 * @param {!proto.ei.ShellDB.SavedFarmConfiguration=} opt_value
 * @param {number=} opt_index
 * @return {!proto.ei.ShellDB.SavedFarmConfiguration}
 */
proto.ei.ShellDB.prototype.addSavedConfigs = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 9, opt_value, proto.ei.ShellDB.SavedFarmConfiguration, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.ei.ShellDB} returns this
 */
proto.ei.ShellDB.prototype.clearSavedConfigsList = function() {
  return this.setSavedConfigsList([]);
};


/**
 * repeated string new_shells_downloaded = 6;
 * @return {!Array<string>}
 */
proto.ei.ShellDB.prototype.getNewShellsDownloadedList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 6));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.ei.ShellDB} returns this
 */
proto.ei.ShellDB.prototype.setNewShellsDownloadedList = function(value) {
  return jspb.Message.setField(this, 6, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.ei.ShellDB} returns this
 */
proto.ei.ShellDB.prototype.addNewShellsDownloaded = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 6, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.ei.ShellDB} returns this
 */
proto.ei.ShellDB.prototype.clearNewShellsDownloadedList = function() {
  return this.setNewShellsDownloadedList([]);
};


/**
 * repeated string new_shells_seen = 7;
 * @return {!Array<string>}
 */
proto.ei.ShellDB.prototype.getNewShellsSeenList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 7));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.ei.ShellDB} returns this
 */
proto.ei.ShellDB.prototype.setNewShellsSeenList = function(value) {
  return jspb.Message.setField(this, 7, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.ei.ShellDB} returns this
 */
proto.ei.ShellDB.prototype.addNewShellsSeen = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 7, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.ei.ShellDB} returns this
 */
proto.ei.ShellDB.prototype.clearNewShellsSeenList = function() {
  return this.setNewShellsSeenList([]);
};


/**
 * optional double last_showcase_featured_time_seen = 11;
 * @return {number}
 */
proto.ei.ShellDB.prototype.getLastShowcaseFeaturedTimeSeen = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 11, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.ei.ShellDB} returns this
 */
proto.ei.ShellDB.prototype.setLastShowcaseFeaturedTimeSeen = function(value) {
  return jspb.Message.setField(this, 11, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.ShellDB} returns this
 */
proto.ei.ShellDB.prototype.clearLastShowcaseFeaturedTimeSeen = function() {
  return jspb.Message.setField(this, 11, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ShellDB.prototype.hasLastShowcaseFeaturedTimeSeen = function() {
  return jspb.Message.getField(this, 11) != null;
};


/**
 * optional bool lighting_controls_unlocked = 10;
 * @return {boolean}
 */
proto.ei.ShellDB.prototype.getLightingControlsUnlocked = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 10, false));
};


/**
 * @param {boolean} value
 * @return {!proto.ei.ShellDB} returns this
 */
proto.ei.ShellDB.prototype.setLightingControlsUnlocked = function(value) {
  return jspb.Message.setField(this, 10, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.ShellDB} returns this
 */
proto.ei.ShellDB.prototype.clearLightingControlsUnlocked = function() {
  return jspb.Message.setField(this, 10, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ShellDB.prototype.hasLightingControlsUnlocked = function() {
  return jspb.Message.getField(this, 10) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.ei.ShellPopularityStats.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ei.ShellPopularityStats.prototype.toObject = function(opt_includeInstance) {
  return proto.ei.ShellPopularityStats.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ei.ShellPopularityStats} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.ShellPopularityStats.toObject = function(includeInstance, msg) {
  var f, obj = {
    dataList: jspb.Message.toObjectList(msg.getDataList(),
    proto.ei.ShellPopularityStats.Entry.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ei.ShellPopularityStats}
 */
proto.ei.ShellPopularityStats.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ei.ShellPopularityStats;
  return proto.ei.ShellPopularityStats.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ei.ShellPopularityStats} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ei.ShellPopularityStats}
 */
proto.ei.ShellPopularityStats.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.ei.ShellPopularityStats.Entry;
      reader.readMessage(value,proto.ei.ShellPopularityStats.Entry.deserializeBinaryFromReader);
      msg.addData(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ei.ShellPopularityStats.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ei.ShellPopularityStats.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ei.ShellPopularityStats} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.ShellPopularityStats.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDataList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.ei.ShellPopularityStats.Entry.serializeBinaryToWriter
    );
  }
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ei.ShellPopularityStats.Entry.prototype.toObject = function(opt_includeInstance) {
  return proto.ei.ShellPopularityStats.Entry.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ei.ShellPopularityStats.Entry} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.ShellPopularityStats.Entry.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    element: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,
    spent: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f,
    count: (f = jspb.Message.getField(msg, 4)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ei.ShellPopularityStats.Entry}
 */
proto.ei.ShellPopularityStats.Entry.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ei.ShellPopularityStats.Entry;
  return proto.ei.ShellPopularityStats.Entry.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ei.ShellPopularityStats.Entry} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ei.ShellPopularityStats.Entry}
 */
proto.ei.ShellPopularityStats.Entry.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {!proto.ei.ShellDB.FarmElement} */ (reader.readEnum());
      msg.setElement(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setSpent(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setCount(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ei.ShellPopularityStats.Entry.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ei.ShellPopularityStats.Entry.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ei.ShellPopularityStats.Entry} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.ShellPopularityStats.Entry.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {!proto.ei.ShellDB.FarmElement} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeEnum(
      2,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeUint64(
      3,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeUint64(
      4,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.ei.ShellPopularityStats.Entry.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.ei.ShellPopularityStats.Entry} returns this
 */
proto.ei.ShellPopularityStats.Entry.prototype.setId = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.ShellPopularityStats.Entry} returns this
 */
proto.ei.ShellPopularityStats.Entry.prototype.clearId = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ShellPopularityStats.Entry.prototype.hasId = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional ShellDB.FarmElement element = 2;
 * @return {!proto.ei.ShellDB.FarmElement}
 */
proto.ei.ShellPopularityStats.Entry.prototype.getElement = function() {
  return /** @type {!proto.ei.ShellDB.FarmElement} */ (jspb.Message.getFieldWithDefault(this, 2, 1));
};


/**
 * @param {!proto.ei.ShellDB.FarmElement} value
 * @return {!proto.ei.ShellPopularityStats.Entry} returns this
 */
proto.ei.ShellPopularityStats.Entry.prototype.setElement = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.ShellPopularityStats.Entry} returns this
 */
proto.ei.ShellPopularityStats.Entry.prototype.clearElement = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ShellPopularityStats.Entry.prototype.hasElement = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional uint64 spent = 3;
 * @return {number}
 */
proto.ei.ShellPopularityStats.Entry.prototype.getSpent = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.ei.ShellPopularityStats.Entry} returns this
 */
proto.ei.ShellPopularityStats.Entry.prototype.setSpent = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.ShellPopularityStats.Entry} returns this
 */
proto.ei.ShellPopularityStats.Entry.prototype.clearSpent = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ShellPopularityStats.Entry.prototype.hasSpent = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional uint64 count = 4;
 * @return {number}
 */
proto.ei.ShellPopularityStats.Entry.prototype.getCount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.ei.ShellPopularityStats.Entry} returns this
 */
proto.ei.ShellPopularityStats.Entry.prototype.setCount = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.ShellPopularityStats.Entry} returns this
 */
proto.ei.ShellPopularityStats.Entry.prototype.clearCount = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ShellPopularityStats.Entry.prototype.hasCount = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * repeated Entry data = 1;
 * @return {!Array<!proto.ei.ShellPopularityStats.Entry>}
 */
proto.ei.ShellPopularityStats.prototype.getDataList = function() {
  return /** @type{!Array<!proto.ei.ShellPopularityStats.Entry>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.ei.ShellPopularityStats.Entry, 1));
};


/**
 * @param {!Array<!proto.ei.ShellPopularityStats.Entry>} value
 * @return {!proto.ei.ShellPopularityStats} returns this
*/
proto.ei.ShellPopularityStats.prototype.setDataList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.ei.ShellPopularityStats.Entry=} opt_value
 * @param {number=} opt_index
 * @return {!proto.ei.ShellPopularityStats.Entry}
 */
proto.ei.ShellPopularityStats.prototype.addData = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.ei.ShellPopularityStats.Entry, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.ei.ShellPopularityStats} returns this
 */
proto.ei.ShellPopularityStats.prototype.clearDataList = function() {
  return this.setDataList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ei.ShellsActionLog.prototype.toObject = function(opt_includeInstance) {
  return proto.ei.ShellsActionLog.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ei.ShellsActionLog} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.ShellsActionLog.toObject = function(includeInstance, msg) {
  var f, obj = {
    rinfo: (f = msg.getRinfo()) && proto.ei.BasicRequestInfo.toObject(includeInstance, f),
    userId: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    action: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,
    subId: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f,
    farmElement: (f = jspb.Message.getField(msg, 9)) == null ? undefined : f,
    cost: (f = jspb.Message.getField(msg, 4)) == null ? undefined : f,
    approxTime: (f = jspb.Message.getOptionalFloatingPointField(msg, 5)) == null ? undefined : f,
    version: (f = jspb.Message.getField(msg, 6)) == null ? undefined : f,
    farmIndex: (f = jspb.Message.getField(msg, 7)) == null ? undefined : f,
    soulEggs: (f = jspb.Message.getOptionalFloatingPointField(msg, 10)) == null ? undefined : f,
    ticketsSpent: (f = jspb.Message.getField(msg, 11)) == null ? undefined : f,
    goldSpent: (f = jspb.Message.getField(msg, 12)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ei.ShellsActionLog}
 */
proto.ei.ShellsActionLog.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ei.ShellsActionLog;
  return proto.ei.ShellsActionLog.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ei.ShellsActionLog} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ei.ShellsActionLog}
 */
proto.ei.ShellsActionLog.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 8:
      var value = new proto.ei.BasicRequestInfo;
      reader.readMessage(value,proto.ei.BasicRequestInfo.deserializeBinaryFromReader);
      msg.setRinfo(value);
      break;
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setAction(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setSubId(value);
      break;
    case 9:
      var value = /** @type {!proto.ei.ShellDB.FarmElement} */ (reader.readEnum());
      msg.setFarmElement(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setCost(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setApproxTime(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setVersion(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setFarmIndex(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setSoulEggs(value);
      break;
    case 11:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setTicketsSpent(value);
      break;
    case 12:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setGoldSpent(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ei.ShellsActionLog.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ei.ShellsActionLog.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ei.ShellsActionLog} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.ShellsActionLog.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRinfo();
  if (f != null) {
    writer.writeMessage(
      8,
      f,
      proto.ei.BasicRequestInfo.serializeBinaryToWriter
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeString(
      3,
      f
    );
  }
  f = /** @type {!proto.ei.ShellDB.FarmElement} */ (jspb.Message.getField(message, 9));
  if (f != null) {
    writer.writeEnum(
      9,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeUint32(
      4,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeDouble(
      5,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeString(
      6,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 7));
  if (f != null) {
    writer.writeInt32(
      7,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 10));
  if (f != null) {
    writer.writeDouble(
      10,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 11));
  if (f != null) {
    writer.writeUint64(
      11,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 12));
  if (f != null) {
    writer.writeUint64(
      12,
      f
    );
  }
};


/**
 * optional BasicRequestInfo rinfo = 8;
 * @return {?proto.ei.BasicRequestInfo}
 */
proto.ei.ShellsActionLog.prototype.getRinfo = function() {
  return /** @type{?proto.ei.BasicRequestInfo} */ (
    jspb.Message.getWrapperField(this, proto.ei.BasicRequestInfo, 8));
};


/**
 * @param {?proto.ei.BasicRequestInfo|undefined} value
 * @return {!proto.ei.ShellsActionLog} returns this
*/
proto.ei.ShellsActionLog.prototype.setRinfo = function(value) {
  return jspb.Message.setWrapperField(this, 8, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.ei.ShellsActionLog} returns this
 */
proto.ei.ShellsActionLog.prototype.clearRinfo = function() {
  return this.setRinfo(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ShellsActionLog.prototype.hasRinfo = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional string user_id = 1;
 * @return {string}
 */
proto.ei.ShellsActionLog.prototype.getUserId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.ei.ShellsActionLog} returns this
 */
proto.ei.ShellsActionLog.prototype.setUserId = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.ShellsActionLog} returns this
 */
proto.ei.ShellsActionLog.prototype.clearUserId = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ShellsActionLog.prototype.hasUserId = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string action = 2;
 * @return {string}
 */
proto.ei.ShellsActionLog.prototype.getAction = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.ei.ShellsActionLog} returns this
 */
proto.ei.ShellsActionLog.prototype.setAction = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.ShellsActionLog} returns this
 */
proto.ei.ShellsActionLog.prototype.clearAction = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ShellsActionLog.prototype.hasAction = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string sub_id = 3;
 * @return {string}
 */
proto.ei.ShellsActionLog.prototype.getSubId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.ei.ShellsActionLog} returns this
 */
proto.ei.ShellsActionLog.prototype.setSubId = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.ShellsActionLog} returns this
 */
proto.ei.ShellsActionLog.prototype.clearSubId = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ShellsActionLog.prototype.hasSubId = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional ShellDB.FarmElement farm_element = 9;
 * @return {!proto.ei.ShellDB.FarmElement}
 */
proto.ei.ShellsActionLog.prototype.getFarmElement = function() {
  return /** @type {!proto.ei.ShellDB.FarmElement} */ (jspb.Message.getFieldWithDefault(this, 9, 1));
};


/**
 * @param {!proto.ei.ShellDB.FarmElement} value
 * @return {!proto.ei.ShellsActionLog} returns this
 */
proto.ei.ShellsActionLog.prototype.setFarmElement = function(value) {
  return jspb.Message.setField(this, 9, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.ShellsActionLog} returns this
 */
proto.ei.ShellsActionLog.prototype.clearFarmElement = function() {
  return jspb.Message.setField(this, 9, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ShellsActionLog.prototype.hasFarmElement = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional uint32 cost = 4;
 * @return {number}
 */
proto.ei.ShellsActionLog.prototype.getCost = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.ei.ShellsActionLog} returns this
 */
proto.ei.ShellsActionLog.prototype.setCost = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.ShellsActionLog} returns this
 */
proto.ei.ShellsActionLog.prototype.clearCost = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ShellsActionLog.prototype.hasCost = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional double approx_time = 5;
 * @return {number}
 */
proto.ei.ShellsActionLog.prototype.getApproxTime = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 5, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.ei.ShellsActionLog} returns this
 */
proto.ei.ShellsActionLog.prototype.setApproxTime = function(value) {
  return jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.ShellsActionLog} returns this
 */
proto.ei.ShellsActionLog.prototype.clearApproxTime = function() {
  return jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ShellsActionLog.prototype.hasApproxTime = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional string version = 6;
 * @return {string}
 */
proto.ei.ShellsActionLog.prototype.getVersion = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.ei.ShellsActionLog} returns this
 */
proto.ei.ShellsActionLog.prototype.setVersion = function(value) {
  return jspb.Message.setField(this, 6, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.ShellsActionLog} returns this
 */
proto.ei.ShellsActionLog.prototype.clearVersion = function() {
  return jspb.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ShellsActionLog.prototype.hasVersion = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional int32 farm_index = 7;
 * @return {number}
 */
proto.ei.ShellsActionLog.prototype.getFarmIndex = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {number} value
 * @return {!proto.ei.ShellsActionLog} returns this
 */
proto.ei.ShellsActionLog.prototype.setFarmIndex = function(value) {
  return jspb.Message.setField(this, 7, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.ShellsActionLog} returns this
 */
proto.ei.ShellsActionLog.prototype.clearFarmIndex = function() {
  return jspb.Message.setField(this, 7, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ShellsActionLog.prototype.hasFarmIndex = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional double soul_eggs = 10;
 * @return {number}
 */
proto.ei.ShellsActionLog.prototype.getSoulEggs = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 10, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.ei.ShellsActionLog} returns this
 */
proto.ei.ShellsActionLog.prototype.setSoulEggs = function(value) {
  return jspb.Message.setField(this, 10, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.ShellsActionLog} returns this
 */
proto.ei.ShellsActionLog.prototype.clearSoulEggs = function() {
  return jspb.Message.setField(this, 10, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ShellsActionLog.prototype.hasSoulEggs = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * optional uint64 tickets_spent = 11;
 * @return {number}
 */
proto.ei.ShellsActionLog.prototype.getTicketsSpent = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 11, 0));
};


/**
 * @param {number} value
 * @return {!proto.ei.ShellsActionLog} returns this
 */
proto.ei.ShellsActionLog.prototype.setTicketsSpent = function(value) {
  return jspb.Message.setField(this, 11, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.ShellsActionLog} returns this
 */
proto.ei.ShellsActionLog.prototype.clearTicketsSpent = function() {
  return jspb.Message.setField(this, 11, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ShellsActionLog.prototype.hasTicketsSpent = function() {
  return jspb.Message.getField(this, 11) != null;
};


/**
 * optional uint64 gold_spent = 12;
 * @return {number}
 */
proto.ei.ShellsActionLog.prototype.getGoldSpent = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 12, 0));
};


/**
 * @param {number} value
 * @return {!proto.ei.ShellsActionLog} returns this
 */
proto.ei.ShellsActionLog.prototype.setGoldSpent = function(value) {
  return jspb.Message.setField(this, 12, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.ShellsActionLog} returns this
 */
proto.ei.ShellsActionLog.prototype.clearGoldSpent = function() {
  return jspb.Message.setField(this, 12, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ShellsActionLog.prototype.hasGoldSpent = function() {
  return jspb.Message.getField(this, 12) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ei.SubmitShellShowcaseRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.ei.SubmitShellShowcaseRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ei.SubmitShellShowcaseRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.SubmitShellShowcaseRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    rinfo: (f = msg.getRinfo()) && proto.ei.BasicRequestInfo.toObject(includeInstance, f),
    localId: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    userId: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,
    publicUsername: (f = jspb.Message.getBooleanField(msg, 5)) == null ? undefined : f,
    farmConfig: (f = msg.getFarmConfig()) && proto.ei.ShellDB.FarmConfiguration.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ei.SubmitShellShowcaseRequest}
 */
proto.ei.SubmitShellShowcaseRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ei.SubmitShellShowcaseRequest;
  return proto.ei.SubmitShellShowcaseRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ei.SubmitShellShowcaseRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ei.SubmitShellShowcaseRequest}
 */
proto.ei.SubmitShellShowcaseRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 4:
      var value = new proto.ei.BasicRequestInfo;
      reader.readMessage(value,proto.ei.BasicRequestInfo.deserializeBinaryFromReader);
      msg.setRinfo(value);
      break;
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setLocalId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserId(value);
      break;
    case 5:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setPublicUsername(value);
      break;
    case 3:
      var value = new proto.ei.ShellDB.FarmConfiguration;
      reader.readMessage(value,proto.ei.ShellDB.FarmConfiguration.deserializeBinaryFromReader);
      msg.setFarmConfig(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ei.SubmitShellShowcaseRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ei.SubmitShellShowcaseRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ei.SubmitShellShowcaseRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.SubmitShellShowcaseRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRinfo();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.ei.BasicRequestInfo.serializeBinaryToWriter
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeBool(
      5,
      f
    );
  }
  f = message.getFarmConfig();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.ei.ShellDB.FarmConfiguration.serializeBinaryToWriter
    );
  }
};


/**
 * optional BasicRequestInfo rinfo = 4;
 * @return {?proto.ei.BasicRequestInfo}
 */
proto.ei.SubmitShellShowcaseRequest.prototype.getRinfo = function() {
  return /** @type{?proto.ei.BasicRequestInfo} */ (
    jspb.Message.getWrapperField(this, proto.ei.BasicRequestInfo, 4));
};


/**
 * @param {?proto.ei.BasicRequestInfo|undefined} value
 * @return {!proto.ei.SubmitShellShowcaseRequest} returns this
*/
proto.ei.SubmitShellShowcaseRequest.prototype.setRinfo = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.ei.SubmitShellShowcaseRequest} returns this
 */
proto.ei.SubmitShellShowcaseRequest.prototype.clearRinfo = function() {
  return this.setRinfo(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.SubmitShellShowcaseRequest.prototype.hasRinfo = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional string local_id = 1;
 * @return {string}
 */
proto.ei.SubmitShellShowcaseRequest.prototype.getLocalId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.ei.SubmitShellShowcaseRequest} returns this
 */
proto.ei.SubmitShellShowcaseRequest.prototype.setLocalId = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.SubmitShellShowcaseRequest} returns this
 */
proto.ei.SubmitShellShowcaseRequest.prototype.clearLocalId = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.SubmitShellShowcaseRequest.prototype.hasLocalId = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string user_id = 2;
 * @return {string}
 */
proto.ei.SubmitShellShowcaseRequest.prototype.getUserId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.ei.SubmitShellShowcaseRequest} returns this
 */
proto.ei.SubmitShellShowcaseRequest.prototype.setUserId = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.SubmitShellShowcaseRequest} returns this
 */
proto.ei.SubmitShellShowcaseRequest.prototype.clearUserId = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.SubmitShellShowcaseRequest.prototype.hasUserId = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional bool public_username = 5;
 * @return {boolean}
 */
proto.ei.SubmitShellShowcaseRequest.prototype.getPublicUsername = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 5, false));
};


/**
 * @param {boolean} value
 * @return {!proto.ei.SubmitShellShowcaseRequest} returns this
 */
proto.ei.SubmitShellShowcaseRequest.prototype.setPublicUsername = function(value) {
  return jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.SubmitShellShowcaseRequest} returns this
 */
proto.ei.SubmitShellShowcaseRequest.prototype.clearPublicUsername = function() {
  return jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.SubmitShellShowcaseRequest.prototype.hasPublicUsername = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional ShellDB.FarmConfiguration farm_config = 3;
 * @return {?proto.ei.ShellDB.FarmConfiguration}
 */
proto.ei.SubmitShellShowcaseRequest.prototype.getFarmConfig = function() {
  return /** @type{?proto.ei.ShellDB.FarmConfiguration} */ (
    jspb.Message.getWrapperField(this, proto.ei.ShellDB.FarmConfiguration, 3));
};


/**
 * @param {?proto.ei.ShellDB.FarmConfiguration|undefined} value
 * @return {!proto.ei.SubmitShellShowcaseRequest} returns this
*/
proto.ei.SubmitShellShowcaseRequest.prototype.setFarmConfig = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.ei.SubmitShellShowcaseRequest} returns this
 */
proto.ei.SubmitShellShowcaseRequest.prototype.clearFarmConfig = function() {
  return this.setFarmConfig(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.SubmitShellShowcaseRequest.prototype.hasFarmConfig = function() {
  return jspb.Message.getField(this, 3) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.ei.ShellShowcase.repeatedFields_ = [1,2,3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ei.ShellShowcase.prototype.toObject = function(opt_includeInstance) {
  return proto.ei.ShellShowcase.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ei.ShellShowcase} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.ShellShowcase.toObject = function(includeInstance, msg) {
  var f, obj = {
    topList: jspb.Message.toObjectList(msg.getTopList(),
    proto.ei.ShellShowcaseListingInfo.toObject, includeInstance),
    featuredList: jspb.Message.toObjectList(msg.getFeaturedList(),
    proto.ei.ShellShowcaseListingInfo.toObject, includeInstance),
    freshList: jspb.Message.toObjectList(msg.getFreshList(),
    proto.ei.ShellShowcaseListingInfo.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ei.ShellShowcase}
 */
proto.ei.ShellShowcase.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ei.ShellShowcase;
  return proto.ei.ShellShowcase.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ei.ShellShowcase} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ei.ShellShowcase}
 */
proto.ei.ShellShowcase.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.ei.ShellShowcaseListingInfo;
      reader.readMessage(value,proto.ei.ShellShowcaseListingInfo.deserializeBinaryFromReader);
      msg.addTop(value);
      break;
    case 2:
      var value = new proto.ei.ShellShowcaseListingInfo;
      reader.readMessage(value,proto.ei.ShellShowcaseListingInfo.deserializeBinaryFromReader);
      msg.addFeatured(value);
      break;
    case 3:
      var value = new proto.ei.ShellShowcaseListingInfo;
      reader.readMessage(value,proto.ei.ShellShowcaseListingInfo.deserializeBinaryFromReader);
      msg.addFresh(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ei.ShellShowcase.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ei.ShellShowcase.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ei.ShellShowcase} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.ShellShowcase.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTopList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.ei.ShellShowcaseListingInfo.serializeBinaryToWriter
    );
  }
  f = message.getFeaturedList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.ei.ShellShowcaseListingInfo.serializeBinaryToWriter
    );
  }
  f = message.getFreshList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      proto.ei.ShellShowcaseListingInfo.serializeBinaryToWriter
    );
  }
};


/**
 * repeated ShellShowcaseListingInfo top = 1;
 * @return {!Array<!proto.ei.ShellShowcaseListingInfo>}
 */
proto.ei.ShellShowcase.prototype.getTopList = function() {
  return /** @type{!Array<!proto.ei.ShellShowcaseListingInfo>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.ei.ShellShowcaseListingInfo, 1));
};


/**
 * @param {!Array<!proto.ei.ShellShowcaseListingInfo>} value
 * @return {!proto.ei.ShellShowcase} returns this
*/
proto.ei.ShellShowcase.prototype.setTopList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.ei.ShellShowcaseListingInfo=} opt_value
 * @param {number=} opt_index
 * @return {!proto.ei.ShellShowcaseListingInfo}
 */
proto.ei.ShellShowcase.prototype.addTop = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.ei.ShellShowcaseListingInfo, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.ei.ShellShowcase} returns this
 */
proto.ei.ShellShowcase.prototype.clearTopList = function() {
  return this.setTopList([]);
};


/**
 * repeated ShellShowcaseListingInfo featured = 2;
 * @return {!Array<!proto.ei.ShellShowcaseListingInfo>}
 */
proto.ei.ShellShowcase.prototype.getFeaturedList = function() {
  return /** @type{!Array<!proto.ei.ShellShowcaseListingInfo>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.ei.ShellShowcaseListingInfo, 2));
};


/**
 * @param {!Array<!proto.ei.ShellShowcaseListingInfo>} value
 * @return {!proto.ei.ShellShowcase} returns this
*/
proto.ei.ShellShowcase.prototype.setFeaturedList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.ei.ShellShowcaseListingInfo=} opt_value
 * @param {number=} opt_index
 * @return {!proto.ei.ShellShowcaseListingInfo}
 */
proto.ei.ShellShowcase.prototype.addFeatured = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.ei.ShellShowcaseListingInfo, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.ei.ShellShowcase} returns this
 */
proto.ei.ShellShowcase.prototype.clearFeaturedList = function() {
  return this.setFeaturedList([]);
};


/**
 * repeated ShellShowcaseListingInfo fresh = 3;
 * @return {!Array<!proto.ei.ShellShowcaseListingInfo>}
 */
proto.ei.ShellShowcase.prototype.getFreshList = function() {
  return /** @type{!Array<!proto.ei.ShellShowcaseListingInfo>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.ei.ShellShowcaseListingInfo, 3));
};


/**
 * @param {!Array<!proto.ei.ShellShowcaseListingInfo>} value
 * @return {!proto.ei.ShellShowcase} returns this
*/
proto.ei.ShellShowcase.prototype.setFreshList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.ei.ShellShowcaseListingInfo=} opt_value
 * @param {number=} opt_index
 * @return {!proto.ei.ShellShowcaseListingInfo}
 */
proto.ei.ShellShowcase.prototype.addFresh = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.ei.ShellShowcaseListingInfo, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.ei.ShellShowcase} returns this
 */
proto.ei.ShellShowcase.prototype.clearFreshList = function() {
  return this.setFreshList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ei.ShellShowcaseListingInfo.prototype.toObject = function(opt_includeInstance) {
  return proto.ei.ShellShowcaseListingInfo.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ei.ShellShowcaseListingInfo} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.ShellShowcaseListingInfo.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    localId: (f = jspb.Message.getField(msg, 12)) == null ? undefined : f,
    name: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,
    description: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f,
    isNew: (f = jspb.Message.getBooleanField(msg, 15)) == null ? undefined : f,
    creatorName: (f = jspb.Message.getField(msg, 14)) == null ? undefined : f,
    status: (f = jspb.Message.getField(msg, 11)) == null ? undefined : f,
    farmConfig: (f = msg.getFarmConfig()) && proto.ei.ShellDB.FarmConfiguration.toObject(includeInstance, f),
    sales: (f = jspb.Message.getField(msg, 5)) == null ? undefined : f,
    gross: (f = jspb.Message.getField(msg, 6)) == null ? undefined : f,
    views: (f = jspb.Message.getField(msg, 7)) == null ? undefined : f,
    equips: (f = jspb.Message.getField(msg, 13)) == null ? undefined : f,
    likes: (f = jspb.Message.getField(msg, 8)) == null ? undefined : f,
    dislikes: (f = jspb.Message.getField(msg, 9)) == null ? undefined : f,
    shareUrl: (f = jspb.Message.getField(msg, 10)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ei.ShellShowcaseListingInfo}
 */
proto.ei.ShellShowcaseListingInfo.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ei.ShellShowcaseListingInfo;
  return proto.ei.ShellShowcaseListingInfo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ei.ShellShowcaseListingInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ei.ShellShowcaseListingInfo}
 */
proto.ei.ShellShowcaseListingInfo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 12:
      var value = /** @type {string} */ (reader.readString());
      msg.setLocalId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 15:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsNew(value);
      break;
    case 14:
      var value = /** @type {string} */ (reader.readString());
      msg.setCreatorName(value);
      break;
    case 11:
      var value = /** @type {!proto.ei.ShellShowcaseListingInfo.Status} */ (reader.readEnum());
      msg.setStatus(value);
      break;
    case 4:
      var value = new proto.ei.ShellDB.FarmConfiguration;
      reader.readMessage(value,proto.ei.ShellDB.FarmConfiguration.deserializeBinaryFromReader);
      msg.setFarmConfig(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setSales(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setGross(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setViews(value);
      break;
    case 13:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setEquips(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setLikes(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setDislikes(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.setShareUrl(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ei.ShellShowcaseListingInfo.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ei.ShellShowcaseListingInfo.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ei.ShellShowcaseListingInfo} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.ShellShowcaseListingInfo.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 12));
  if (f != null) {
    writer.writeString(
      12,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeString(
      3,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 15));
  if (f != null) {
    writer.writeBool(
      15,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 14));
  if (f != null) {
    writer.writeString(
      14,
      f
    );
  }
  f = /** @type {!proto.ei.ShellShowcaseListingInfo.Status} */ (jspb.Message.getField(message, 11));
  if (f != null) {
    writer.writeEnum(
      11,
      f
    );
  }
  f = message.getFarmConfig();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.ei.ShellDB.FarmConfiguration.serializeBinaryToWriter
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeUint32(
      5,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeUint64(
      6,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 7));
  if (f != null) {
    writer.writeUint64(
      7,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 13));
  if (f != null) {
    writer.writeUint64(
      13,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 8));
  if (f != null) {
    writer.writeUint32(
      8,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 9));
  if (f != null) {
    writer.writeUint32(
      9,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 10));
  if (f != null) {
    writer.writeString(
      10,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.ei.ShellShowcaseListingInfo.Status = {
  NONE: 0,
  SUBMITTED: 1,
  LIVE: 2,
  FEATURED: 3,
  FEATURED_ALUM: 5,
  ARCHIVED: 6,
  INVALID: 4
};

/**
 * optional string id = 1;
 * @return {string}
 */
proto.ei.ShellShowcaseListingInfo.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.ei.ShellShowcaseListingInfo} returns this
 */
proto.ei.ShellShowcaseListingInfo.prototype.setId = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.ShellShowcaseListingInfo} returns this
 */
proto.ei.ShellShowcaseListingInfo.prototype.clearId = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ShellShowcaseListingInfo.prototype.hasId = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string local_id = 12;
 * @return {string}
 */
proto.ei.ShellShowcaseListingInfo.prototype.getLocalId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 12, ""));
};


/**
 * @param {string} value
 * @return {!proto.ei.ShellShowcaseListingInfo} returns this
 */
proto.ei.ShellShowcaseListingInfo.prototype.setLocalId = function(value) {
  return jspb.Message.setField(this, 12, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.ShellShowcaseListingInfo} returns this
 */
proto.ei.ShellShowcaseListingInfo.prototype.clearLocalId = function() {
  return jspb.Message.setField(this, 12, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ShellShowcaseListingInfo.prototype.hasLocalId = function() {
  return jspb.Message.getField(this, 12) != null;
};


/**
 * optional string name = 2;
 * @return {string}
 */
proto.ei.ShellShowcaseListingInfo.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.ei.ShellShowcaseListingInfo} returns this
 */
proto.ei.ShellShowcaseListingInfo.prototype.setName = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.ShellShowcaseListingInfo} returns this
 */
proto.ei.ShellShowcaseListingInfo.prototype.clearName = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ShellShowcaseListingInfo.prototype.hasName = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string description = 3;
 * @return {string}
 */
proto.ei.ShellShowcaseListingInfo.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.ei.ShellShowcaseListingInfo} returns this
 */
proto.ei.ShellShowcaseListingInfo.prototype.setDescription = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.ShellShowcaseListingInfo} returns this
 */
proto.ei.ShellShowcaseListingInfo.prototype.clearDescription = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ShellShowcaseListingInfo.prototype.hasDescription = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional bool is_new = 15;
 * @return {boolean}
 */
proto.ei.ShellShowcaseListingInfo.prototype.getIsNew = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 15, false));
};


/**
 * @param {boolean} value
 * @return {!proto.ei.ShellShowcaseListingInfo} returns this
 */
proto.ei.ShellShowcaseListingInfo.prototype.setIsNew = function(value) {
  return jspb.Message.setField(this, 15, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.ShellShowcaseListingInfo} returns this
 */
proto.ei.ShellShowcaseListingInfo.prototype.clearIsNew = function() {
  return jspb.Message.setField(this, 15, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ShellShowcaseListingInfo.prototype.hasIsNew = function() {
  return jspb.Message.getField(this, 15) != null;
};


/**
 * optional string creator_name = 14;
 * @return {string}
 */
proto.ei.ShellShowcaseListingInfo.prototype.getCreatorName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 14, ""));
};


/**
 * @param {string} value
 * @return {!proto.ei.ShellShowcaseListingInfo} returns this
 */
proto.ei.ShellShowcaseListingInfo.prototype.setCreatorName = function(value) {
  return jspb.Message.setField(this, 14, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.ShellShowcaseListingInfo} returns this
 */
proto.ei.ShellShowcaseListingInfo.prototype.clearCreatorName = function() {
  return jspb.Message.setField(this, 14, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ShellShowcaseListingInfo.prototype.hasCreatorName = function() {
  return jspb.Message.getField(this, 14) != null;
};


/**
 * optional Status status = 11;
 * @return {!proto.ei.ShellShowcaseListingInfo.Status}
 */
proto.ei.ShellShowcaseListingInfo.prototype.getStatus = function() {
  return /** @type {!proto.ei.ShellShowcaseListingInfo.Status} */ (jspb.Message.getFieldWithDefault(this, 11, 0));
};


/**
 * @param {!proto.ei.ShellShowcaseListingInfo.Status} value
 * @return {!proto.ei.ShellShowcaseListingInfo} returns this
 */
proto.ei.ShellShowcaseListingInfo.prototype.setStatus = function(value) {
  return jspb.Message.setField(this, 11, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.ShellShowcaseListingInfo} returns this
 */
proto.ei.ShellShowcaseListingInfo.prototype.clearStatus = function() {
  return jspb.Message.setField(this, 11, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ShellShowcaseListingInfo.prototype.hasStatus = function() {
  return jspb.Message.getField(this, 11) != null;
};


/**
 * optional ShellDB.FarmConfiguration farm_config = 4;
 * @return {?proto.ei.ShellDB.FarmConfiguration}
 */
proto.ei.ShellShowcaseListingInfo.prototype.getFarmConfig = function() {
  return /** @type{?proto.ei.ShellDB.FarmConfiguration} */ (
    jspb.Message.getWrapperField(this, proto.ei.ShellDB.FarmConfiguration, 4));
};


/**
 * @param {?proto.ei.ShellDB.FarmConfiguration|undefined} value
 * @return {!proto.ei.ShellShowcaseListingInfo} returns this
*/
proto.ei.ShellShowcaseListingInfo.prototype.setFarmConfig = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.ei.ShellShowcaseListingInfo} returns this
 */
proto.ei.ShellShowcaseListingInfo.prototype.clearFarmConfig = function() {
  return this.setFarmConfig(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ShellShowcaseListingInfo.prototype.hasFarmConfig = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional uint32 sales = 5;
 * @return {number}
 */
proto.ei.ShellShowcaseListingInfo.prototype.getSales = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.ei.ShellShowcaseListingInfo} returns this
 */
proto.ei.ShellShowcaseListingInfo.prototype.setSales = function(value) {
  return jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.ShellShowcaseListingInfo} returns this
 */
proto.ei.ShellShowcaseListingInfo.prototype.clearSales = function() {
  return jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ShellShowcaseListingInfo.prototype.hasSales = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional uint64 gross = 6;
 * @return {number}
 */
proto.ei.ShellShowcaseListingInfo.prototype.getGross = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.ei.ShellShowcaseListingInfo} returns this
 */
proto.ei.ShellShowcaseListingInfo.prototype.setGross = function(value) {
  return jspb.Message.setField(this, 6, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.ShellShowcaseListingInfo} returns this
 */
proto.ei.ShellShowcaseListingInfo.prototype.clearGross = function() {
  return jspb.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ShellShowcaseListingInfo.prototype.hasGross = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional uint64 views = 7;
 * @return {number}
 */
proto.ei.ShellShowcaseListingInfo.prototype.getViews = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {number} value
 * @return {!proto.ei.ShellShowcaseListingInfo} returns this
 */
proto.ei.ShellShowcaseListingInfo.prototype.setViews = function(value) {
  return jspb.Message.setField(this, 7, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.ShellShowcaseListingInfo} returns this
 */
proto.ei.ShellShowcaseListingInfo.prototype.clearViews = function() {
  return jspb.Message.setField(this, 7, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ShellShowcaseListingInfo.prototype.hasViews = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional uint64 equips = 13;
 * @return {number}
 */
proto.ei.ShellShowcaseListingInfo.prototype.getEquips = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 13, 0));
};


/**
 * @param {number} value
 * @return {!proto.ei.ShellShowcaseListingInfo} returns this
 */
proto.ei.ShellShowcaseListingInfo.prototype.setEquips = function(value) {
  return jspb.Message.setField(this, 13, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.ShellShowcaseListingInfo} returns this
 */
proto.ei.ShellShowcaseListingInfo.prototype.clearEquips = function() {
  return jspb.Message.setField(this, 13, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ShellShowcaseListingInfo.prototype.hasEquips = function() {
  return jspb.Message.getField(this, 13) != null;
};


/**
 * optional uint32 likes = 8;
 * @return {number}
 */
proto.ei.ShellShowcaseListingInfo.prototype.getLikes = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/**
 * @param {number} value
 * @return {!proto.ei.ShellShowcaseListingInfo} returns this
 */
proto.ei.ShellShowcaseListingInfo.prototype.setLikes = function(value) {
  return jspb.Message.setField(this, 8, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.ShellShowcaseListingInfo} returns this
 */
proto.ei.ShellShowcaseListingInfo.prototype.clearLikes = function() {
  return jspb.Message.setField(this, 8, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ShellShowcaseListingInfo.prototype.hasLikes = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional uint32 dislikes = 9;
 * @return {number}
 */
proto.ei.ShellShowcaseListingInfo.prototype.getDislikes = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};


/**
 * @param {number} value
 * @return {!proto.ei.ShellShowcaseListingInfo} returns this
 */
proto.ei.ShellShowcaseListingInfo.prototype.setDislikes = function(value) {
  return jspb.Message.setField(this, 9, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.ShellShowcaseListingInfo} returns this
 */
proto.ei.ShellShowcaseListingInfo.prototype.clearDislikes = function() {
  return jspb.Message.setField(this, 9, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ShellShowcaseListingInfo.prototype.hasDislikes = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional string share_url = 10;
 * @return {string}
 */
proto.ei.ShellShowcaseListingInfo.prototype.getShareUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/**
 * @param {string} value
 * @return {!proto.ei.ShellShowcaseListingInfo} returns this
 */
proto.ei.ShellShowcaseListingInfo.prototype.setShareUrl = function(value) {
  return jspb.Message.setField(this, 10, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.ShellShowcaseListingInfo} returns this
 */
proto.ei.ShellShowcaseListingInfo.prototype.clearShareUrl = function() {
  return jspb.Message.setField(this, 10, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ShellShowcaseListingInfo.prototype.hasShareUrl = function() {
  return jspb.Message.getField(this, 10) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.ei.ShowcaseRoyaltyDeliveryConfirmation.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ei.ShowcaseRoyaltyDeliveryConfirmation.prototype.toObject = function(opt_includeInstance) {
  return proto.ei.ShowcaseRoyaltyDeliveryConfirmation.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ei.ShowcaseRoyaltyDeliveryConfirmation} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.ShowcaseRoyaltyDeliveryConfirmation.toObject = function(includeInstance, msg) {
  var f, obj = {
    rinfo: (f = msg.getRinfo()) && proto.ei.BasicRequestInfo.toObject(includeInstance, f),
    idsList: (f = jspb.Message.getRepeatedField(msg, 1)) == null ? undefined : f,
    amount: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ei.ShowcaseRoyaltyDeliveryConfirmation}
 */
proto.ei.ShowcaseRoyaltyDeliveryConfirmation.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ei.ShowcaseRoyaltyDeliveryConfirmation;
  return proto.ei.ShowcaseRoyaltyDeliveryConfirmation.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ei.ShowcaseRoyaltyDeliveryConfirmation} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ei.ShowcaseRoyaltyDeliveryConfirmation}
 */
proto.ei.ShowcaseRoyaltyDeliveryConfirmation.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 3:
      var value = new proto.ei.BasicRequestInfo;
      reader.readMessage(value,proto.ei.BasicRequestInfo.deserializeBinaryFromReader);
      msg.setRinfo(value);
      break;
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.addIds(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setAmount(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ei.ShowcaseRoyaltyDeliveryConfirmation.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ei.ShowcaseRoyaltyDeliveryConfirmation.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ei.ShowcaseRoyaltyDeliveryConfirmation} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.ShowcaseRoyaltyDeliveryConfirmation.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRinfo();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.ei.BasicRequestInfo.serializeBinaryToWriter
    );
  }
  f = message.getIdsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeUint32(
      2,
      f
    );
  }
};


/**
 * optional BasicRequestInfo rinfo = 3;
 * @return {?proto.ei.BasicRequestInfo}
 */
proto.ei.ShowcaseRoyaltyDeliveryConfirmation.prototype.getRinfo = function() {
  return /** @type{?proto.ei.BasicRequestInfo} */ (
    jspb.Message.getWrapperField(this, proto.ei.BasicRequestInfo, 3));
};


/**
 * @param {?proto.ei.BasicRequestInfo|undefined} value
 * @return {!proto.ei.ShowcaseRoyaltyDeliveryConfirmation} returns this
*/
proto.ei.ShowcaseRoyaltyDeliveryConfirmation.prototype.setRinfo = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.ei.ShowcaseRoyaltyDeliveryConfirmation} returns this
 */
proto.ei.ShowcaseRoyaltyDeliveryConfirmation.prototype.clearRinfo = function() {
  return this.setRinfo(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ShowcaseRoyaltyDeliveryConfirmation.prototype.hasRinfo = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * repeated string ids = 1;
 * @return {!Array<string>}
 */
proto.ei.ShowcaseRoyaltyDeliveryConfirmation.prototype.getIdsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 1));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.ei.ShowcaseRoyaltyDeliveryConfirmation} returns this
 */
proto.ei.ShowcaseRoyaltyDeliveryConfirmation.prototype.setIdsList = function(value) {
  return jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.ei.ShowcaseRoyaltyDeliveryConfirmation} returns this
 */
proto.ei.ShowcaseRoyaltyDeliveryConfirmation.prototype.addIds = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.ei.ShowcaseRoyaltyDeliveryConfirmation} returns this
 */
proto.ei.ShowcaseRoyaltyDeliveryConfirmation.prototype.clearIdsList = function() {
  return this.setIdsList([]);
};


/**
 * optional uint32 amount = 2;
 * @return {number}
 */
proto.ei.ShowcaseRoyaltyDeliveryConfirmation.prototype.getAmount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.ei.ShowcaseRoyaltyDeliveryConfirmation} returns this
 */
proto.ei.ShowcaseRoyaltyDeliveryConfirmation.prototype.setAmount = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.ShowcaseRoyaltyDeliveryConfirmation} returns this
 */
proto.ei.ShowcaseRoyaltyDeliveryConfirmation.prototype.clearAmount = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ShowcaseRoyaltyDeliveryConfirmation.prototype.hasAmount = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.ei.ShellShowcaseListingSet.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ei.ShellShowcaseListingSet.prototype.toObject = function(opt_includeInstance) {
  return proto.ei.ShellShowcaseListingSet.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ei.ShellShowcaseListingSet} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.ShellShowcaseListingSet.toObject = function(includeInstance, msg) {
  var f, obj = {
    listingsList: jspb.Message.toObjectList(msg.getListingsList(),
    proto.ei.ShellShowcaseListingInfo.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ei.ShellShowcaseListingSet}
 */
proto.ei.ShellShowcaseListingSet.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ei.ShellShowcaseListingSet;
  return proto.ei.ShellShowcaseListingSet.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ei.ShellShowcaseListingSet} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ei.ShellShowcaseListingSet}
 */
proto.ei.ShellShowcaseListingSet.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.ei.ShellShowcaseListingInfo;
      reader.readMessage(value,proto.ei.ShellShowcaseListingInfo.deserializeBinaryFromReader);
      msg.addListings(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ei.ShellShowcaseListingSet.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ei.ShellShowcaseListingSet.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ei.ShellShowcaseListingSet} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.ShellShowcaseListingSet.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getListingsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.ei.ShellShowcaseListingInfo.serializeBinaryToWriter
    );
  }
};


/**
 * repeated ShellShowcaseListingInfo listings = 1;
 * @return {!Array<!proto.ei.ShellShowcaseListingInfo>}
 */
proto.ei.ShellShowcaseListingSet.prototype.getListingsList = function() {
  return /** @type{!Array<!proto.ei.ShellShowcaseListingInfo>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.ei.ShellShowcaseListingInfo, 1));
};


/**
 * @param {!Array<!proto.ei.ShellShowcaseListingInfo>} value
 * @return {!proto.ei.ShellShowcaseListingSet} returns this
*/
proto.ei.ShellShowcaseListingSet.prototype.setListingsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.ei.ShellShowcaseListingInfo=} opt_value
 * @param {number=} opt_index
 * @return {!proto.ei.ShellShowcaseListingInfo}
 */
proto.ei.ShellShowcaseListingSet.prototype.addListings = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.ei.ShellShowcaseListingInfo, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.ei.ShellShowcaseListingSet} returns this
 */
proto.ei.ShellShowcaseListingSet.prototype.clearListingsList = function() {
  return this.setListingsList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.ei.ShellsActionBatch.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ei.ShellsActionBatch.prototype.toObject = function(opt_includeInstance) {
  return proto.ei.ShellsActionBatch.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ei.ShellsActionBatch} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.ShellsActionBatch.toObject = function(includeInstance, msg) {
  var f, obj = {
    rinfo: (f = msg.getRinfo()) && proto.ei.BasicRequestInfo.toObject(includeInstance, f),
    actionsList: jspb.Message.toObjectList(msg.getActionsList(),
    proto.ei.ShellsActionLog.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ei.ShellsActionBatch}
 */
proto.ei.ShellsActionBatch.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ei.ShellsActionBatch;
  return proto.ei.ShellsActionBatch.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ei.ShellsActionBatch} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ei.ShellsActionBatch}
 */
proto.ei.ShellsActionBatch.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.ei.BasicRequestInfo;
      reader.readMessage(value,proto.ei.BasicRequestInfo.deserializeBinaryFromReader);
      msg.setRinfo(value);
      break;
    case 2:
      var value = new proto.ei.ShellsActionLog;
      reader.readMessage(value,proto.ei.ShellsActionLog.deserializeBinaryFromReader);
      msg.addActions(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ei.ShellsActionBatch.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ei.ShellsActionBatch.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ei.ShellsActionBatch} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.ShellsActionBatch.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRinfo();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.ei.BasicRequestInfo.serializeBinaryToWriter
    );
  }
  f = message.getActionsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.ei.ShellsActionLog.serializeBinaryToWriter
    );
  }
};


/**
 * optional BasicRequestInfo rinfo = 1;
 * @return {?proto.ei.BasicRequestInfo}
 */
proto.ei.ShellsActionBatch.prototype.getRinfo = function() {
  return /** @type{?proto.ei.BasicRequestInfo} */ (
    jspb.Message.getWrapperField(this, proto.ei.BasicRequestInfo, 1));
};


/**
 * @param {?proto.ei.BasicRequestInfo|undefined} value
 * @return {!proto.ei.ShellsActionBatch} returns this
*/
proto.ei.ShellsActionBatch.prototype.setRinfo = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.ei.ShellsActionBatch} returns this
 */
proto.ei.ShellsActionBatch.prototype.clearRinfo = function() {
  return this.setRinfo(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ShellsActionBatch.prototype.hasRinfo = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * repeated ShellsActionLog actions = 2;
 * @return {!Array<!proto.ei.ShellsActionLog>}
 */
proto.ei.ShellsActionBatch.prototype.getActionsList = function() {
  return /** @type{!Array<!proto.ei.ShellsActionLog>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.ei.ShellsActionLog, 2));
};


/**
 * @param {!Array<!proto.ei.ShellsActionLog>} value
 * @return {!proto.ei.ShellsActionBatch} returns this
*/
proto.ei.ShellsActionBatch.prototype.setActionsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.ei.ShellsActionLog=} opt_value
 * @param {number=} opt_index
 * @return {!proto.ei.ShellsActionLog}
 */
proto.ei.ShellsActionBatch.prototype.addActions = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.ei.ShellsActionLog, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.ei.ShellsActionBatch} returns this
 */
proto.ei.ShellsActionBatch.prototype.clearActionsList = function() {
  return this.setActionsList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.ei.UserVerificationAnalysis.repeatedFields_ = [17];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ei.UserVerificationAnalysis.prototype.toObject = function(opt_includeInstance) {
  return proto.ei.UserVerificationAnalysis.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ei.UserVerificationAnalysis} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.UserVerificationAnalysis.toObject = function(includeInstance, msg) {
  var f, obj = {
    overallStatus: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    startTime: (f = jspb.Message.getOptionalFloatingPointField(msg, 2)) == null ? undefined : f,
    completionTime: (f = jspb.Message.getOptionalFloatingPointField(msg, 3)) == null ? undefined : f,
    numPrestiges: (f = jspb.Message.getOptionalFloatingPointField(msg, 14)) == null ? undefined : f,
    soulEggs: (f = jspb.Message.getOptionalFloatingPointField(msg, 15)) == null ? undefined : f,
    eggsOfProphecy: (f = jspb.Message.getField(msg, 27)) == null ? undefined : f,
    iapStatus: (f = jspb.Message.getField(msg, 18)) == null ? undefined : f,
    verifiedProPermit: (f = jspb.Message.getBooleanField(msg, 4)) == null ? undefined : f,
    verifiedPiggyBreaks: (f = jspb.Message.getField(msg, 5)) == null ? undefined : f,
    verifiedOtherIap: (f = jspb.Message.getField(msg, 6)) == null ? undefined : f,
    unverifiedIap: (f = jspb.Message.getField(msg, 7)) == null ? undefined : f,
    goldEarned: (f = jspb.Message.getOptionalFloatingPointField(msg, 13)) == null ? undefined : f,
    regularIapBuyer: (f = jspb.Message.getBooleanField(msg, 22)) == null ? undefined : f,
    regularIapCheater: (f = jspb.Message.getBooleanField(msg, 23)) == null ? undefined : f,
    artifactsStatus: (f = jspb.Message.getField(msg, 19)) == null ? undefined : f,
    missionsCompleted: (f = jspb.Message.getField(msg, 8)) == null ? undefined : f,
    artifactsCollected: (f = jspb.Message.getOptionalFloatingPointField(msg, 9)) == null ? undefined : f,
    artifactsConsumed: (f = jspb.Message.getOptionalFloatingPointField(msg, 10)) == null ? undefined : f,
    artifactsInInventory: (f = jspb.Message.getOptionalFloatingPointField(msg, 11)) == null ? undefined : f,
    rareArtifactsInInventory: (f = jspb.Message.getField(msg, 33)) == null ? undefined : f,
    rareArtifactsOnServer: (f = jspb.Message.getField(msg, 34)) == null ? undefined : f,
    legendaryArtifactsInInventory: (f = jspb.Message.getField(msg, 35)) == null ? undefined : f,
    legendaryArtifactsOnServer: (f = jspb.Message.getField(msg, 36)) == null ? undefined : f,
    goldSpentCrafting: (f = jspb.Message.getOptionalFloatingPointField(msg, 21)) == null ? undefined : f,
    excessiveConsumes: (f = jspb.Message.getBooleanField(msg, 24)) == null ? undefined : f,
    excessiveInventory: (f = jspb.Message.getBooleanField(msg, 25)) == null ? undefined : f,
    excessiveSpend: (f = jspb.Message.getBooleanField(msg, 26)) == null ? undefined : f,
    contractsStatus: (f = jspb.Message.getField(msg, 20)) == null ? undefined : f,
    numCoopMemberships: (f = jspb.Message.getField(msg, 12)) == null ? undefined : f,
    validContracts: (f = jspb.Message.getField(msg, 16)) == null ? undefined : f,
    invalidContractsList: (f = jspb.Message.getRepeatedField(msg, 17)) == null ? undefined : f,
    excessiveEop: (f = jspb.Message.getBooleanField(msg, 28)) == null ? undefined : f,
    excessiveInvalidContracts: (f = jspb.Message.getBooleanField(msg, 29)) == null ? undefined : f,
    verified: (f = jspb.Message.getBooleanField(msg, 30)) == null ? undefined : f,
    verificationOverride: (f = jspb.Message.getBooleanField(msg, 31)) == null ? undefined : f,
    verificationOverrideValue: (f = jspb.Message.getBooleanField(msg, 32)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ei.UserVerificationAnalysis}
 */
proto.ei.UserVerificationAnalysis.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ei.UserVerificationAnalysis;
  return proto.ei.UserVerificationAnalysis.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ei.UserVerificationAnalysis} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ei.UserVerificationAnalysis}
 */
proto.ei.UserVerificationAnalysis.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.ei.UserVerificationAnalysis.Status} */ (reader.readEnum());
      msg.setOverallStatus(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setStartTime(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setCompletionTime(value);
      break;
    case 14:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setNumPrestiges(value);
      break;
    case 15:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setSoulEggs(value);
      break;
    case 27:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setEggsOfProphecy(value);
      break;
    case 18:
      var value = /** @type {!proto.ei.UserVerificationAnalysis.Status} */ (reader.readEnum());
      msg.setIapStatus(value);
      break;
    case 4:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setVerifiedProPermit(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setVerifiedPiggyBreaks(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setVerifiedOtherIap(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setUnverifiedIap(value);
      break;
    case 13:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setGoldEarned(value);
      break;
    case 22:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setRegularIapBuyer(value);
      break;
    case 23:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setRegularIapCheater(value);
      break;
    case 19:
      var value = /** @type {!proto.ei.UserVerificationAnalysis.Status} */ (reader.readEnum());
      msg.setArtifactsStatus(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setMissionsCompleted(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setArtifactsCollected(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setArtifactsConsumed(value);
      break;
    case 11:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setArtifactsInInventory(value);
      break;
    case 33:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setRareArtifactsInInventory(value);
      break;
    case 34:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setRareArtifactsOnServer(value);
      break;
    case 35:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setLegendaryArtifactsInInventory(value);
      break;
    case 36:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setLegendaryArtifactsOnServer(value);
      break;
    case 21:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setGoldSpentCrafting(value);
      break;
    case 24:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setExcessiveConsumes(value);
      break;
    case 25:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setExcessiveInventory(value);
      break;
    case 26:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setExcessiveSpend(value);
      break;
    case 20:
      var value = /** @type {!proto.ei.UserVerificationAnalysis.Status} */ (reader.readEnum());
      msg.setContractsStatus(value);
      break;
    case 12:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setNumCoopMemberships(value);
      break;
    case 16:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setValidContracts(value);
      break;
    case 17:
      var value = /** @type {string} */ (reader.readString());
      msg.addInvalidContracts(value);
      break;
    case 28:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setExcessiveEop(value);
      break;
    case 29:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setExcessiveInvalidContracts(value);
      break;
    case 30:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setVerified(value);
      break;
    case 31:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setVerificationOverride(value);
      break;
    case 32:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setVerificationOverrideValue(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ei.UserVerificationAnalysis.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ei.UserVerificationAnalysis.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ei.UserVerificationAnalysis} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.UserVerificationAnalysis.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {!proto.ei.UserVerificationAnalysis.Status} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeDouble(
      2,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeDouble(
      3,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 14));
  if (f != null) {
    writer.writeDouble(
      14,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 15));
  if (f != null) {
    writer.writeDouble(
      15,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 27));
  if (f != null) {
    writer.writeUint32(
      27,
      f
    );
  }
  f = /** @type {!proto.ei.UserVerificationAnalysis.Status} */ (jspb.Message.getField(message, 18));
  if (f != null) {
    writer.writeEnum(
      18,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeBool(
      4,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeUint32(
      5,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeUint32(
      6,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 7));
  if (f != null) {
    writer.writeUint32(
      7,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 13));
  if (f != null) {
    writer.writeDouble(
      13,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 22));
  if (f != null) {
    writer.writeBool(
      22,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 23));
  if (f != null) {
    writer.writeBool(
      23,
      f
    );
  }
  f = /** @type {!proto.ei.UserVerificationAnalysis.Status} */ (jspb.Message.getField(message, 19));
  if (f != null) {
    writer.writeEnum(
      19,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 8));
  if (f != null) {
    writer.writeUint32(
      8,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 9));
  if (f != null) {
    writer.writeDouble(
      9,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 10));
  if (f != null) {
    writer.writeDouble(
      10,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 11));
  if (f != null) {
    writer.writeDouble(
      11,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 33));
  if (f != null) {
    writer.writeUint64(
      33,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 34));
  if (f != null) {
    writer.writeUint64(
      34,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 35));
  if (f != null) {
    writer.writeUint64(
      35,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 36));
  if (f != null) {
    writer.writeUint64(
      36,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 21));
  if (f != null) {
    writer.writeDouble(
      21,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 24));
  if (f != null) {
    writer.writeBool(
      24,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 25));
  if (f != null) {
    writer.writeBool(
      25,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 26));
  if (f != null) {
    writer.writeBool(
      26,
      f
    );
  }
  f = /** @type {!proto.ei.UserVerificationAnalysis.Status} */ (jspb.Message.getField(message, 20));
  if (f != null) {
    writer.writeEnum(
      20,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 12));
  if (f != null) {
    writer.writeUint32(
      12,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 16));
  if (f != null) {
    writer.writeUint32(
      16,
      f
    );
  }
  f = message.getInvalidContractsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      17,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 28));
  if (f != null) {
    writer.writeBool(
      28,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 29));
  if (f != null) {
    writer.writeBool(
      29,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 30));
  if (f != null) {
    writer.writeBool(
      30,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 31));
  if (f != null) {
    writer.writeBool(
      31,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 32));
  if (f != null) {
    writer.writeBool(
      32,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.ei.UserVerificationAnalysis.Status = {
  UNKNOWN: 0,
  PROCESSING: 1,
  COMPLETE: 2
};

/**
 * optional Status overall_status = 1;
 * @return {!proto.ei.UserVerificationAnalysis.Status}
 */
proto.ei.UserVerificationAnalysis.prototype.getOverallStatus = function() {
  return /** @type {!proto.ei.UserVerificationAnalysis.Status} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.ei.UserVerificationAnalysis.Status} value
 * @return {!proto.ei.UserVerificationAnalysis} returns this
 */
proto.ei.UserVerificationAnalysis.prototype.setOverallStatus = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.UserVerificationAnalysis} returns this
 */
proto.ei.UserVerificationAnalysis.prototype.clearOverallStatus = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.UserVerificationAnalysis.prototype.hasOverallStatus = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional double start_time = 2;
 * @return {number}
 */
proto.ei.UserVerificationAnalysis.prototype.getStartTime = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 2, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.ei.UserVerificationAnalysis} returns this
 */
proto.ei.UserVerificationAnalysis.prototype.setStartTime = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.UserVerificationAnalysis} returns this
 */
proto.ei.UserVerificationAnalysis.prototype.clearStartTime = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.UserVerificationAnalysis.prototype.hasStartTime = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional double completion_time = 3;
 * @return {number}
 */
proto.ei.UserVerificationAnalysis.prototype.getCompletionTime = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 3, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.ei.UserVerificationAnalysis} returns this
 */
proto.ei.UserVerificationAnalysis.prototype.setCompletionTime = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.UserVerificationAnalysis} returns this
 */
proto.ei.UserVerificationAnalysis.prototype.clearCompletionTime = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.UserVerificationAnalysis.prototype.hasCompletionTime = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional double num_prestiges = 14;
 * @return {number}
 */
proto.ei.UserVerificationAnalysis.prototype.getNumPrestiges = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 14, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.ei.UserVerificationAnalysis} returns this
 */
proto.ei.UserVerificationAnalysis.prototype.setNumPrestiges = function(value) {
  return jspb.Message.setField(this, 14, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.UserVerificationAnalysis} returns this
 */
proto.ei.UserVerificationAnalysis.prototype.clearNumPrestiges = function() {
  return jspb.Message.setField(this, 14, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.UserVerificationAnalysis.prototype.hasNumPrestiges = function() {
  return jspb.Message.getField(this, 14) != null;
};


/**
 * optional double soul_eggs = 15;
 * @return {number}
 */
proto.ei.UserVerificationAnalysis.prototype.getSoulEggs = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 15, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.ei.UserVerificationAnalysis} returns this
 */
proto.ei.UserVerificationAnalysis.prototype.setSoulEggs = function(value) {
  return jspb.Message.setField(this, 15, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.UserVerificationAnalysis} returns this
 */
proto.ei.UserVerificationAnalysis.prototype.clearSoulEggs = function() {
  return jspb.Message.setField(this, 15, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.UserVerificationAnalysis.prototype.hasSoulEggs = function() {
  return jspb.Message.getField(this, 15) != null;
};


/**
 * optional uint32 eggs_of_prophecy = 27;
 * @return {number}
 */
proto.ei.UserVerificationAnalysis.prototype.getEggsOfProphecy = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 27, 0));
};


/**
 * @param {number} value
 * @return {!proto.ei.UserVerificationAnalysis} returns this
 */
proto.ei.UserVerificationAnalysis.prototype.setEggsOfProphecy = function(value) {
  return jspb.Message.setField(this, 27, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.UserVerificationAnalysis} returns this
 */
proto.ei.UserVerificationAnalysis.prototype.clearEggsOfProphecy = function() {
  return jspb.Message.setField(this, 27, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.UserVerificationAnalysis.prototype.hasEggsOfProphecy = function() {
  return jspb.Message.getField(this, 27) != null;
};


/**
 * optional Status iap_status = 18;
 * @return {!proto.ei.UserVerificationAnalysis.Status}
 */
proto.ei.UserVerificationAnalysis.prototype.getIapStatus = function() {
  return /** @type {!proto.ei.UserVerificationAnalysis.Status} */ (jspb.Message.getFieldWithDefault(this, 18, 0));
};


/**
 * @param {!proto.ei.UserVerificationAnalysis.Status} value
 * @return {!proto.ei.UserVerificationAnalysis} returns this
 */
proto.ei.UserVerificationAnalysis.prototype.setIapStatus = function(value) {
  return jspb.Message.setField(this, 18, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.UserVerificationAnalysis} returns this
 */
proto.ei.UserVerificationAnalysis.prototype.clearIapStatus = function() {
  return jspb.Message.setField(this, 18, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.UserVerificationAnalysis.prototype.hasIapStatus = function() {
  return jspb.Message.getField(this, 18) != null;
};


/**
 * optional bool verified_pro_permit = 4;
 * @return {boolean}
 */
proto.ei.UserVerificationAnalysis.prototype.getVerifiedProPermit = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 4, false));
};


/**
 * @param {boolean} value
 * @return {!proto.ei.UserVerificationAnalysis} returns this
 */
proto.ei.UserVerificationAnalysis.prototype.setVerifiedProPermit = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.UserVerificationAnalysis} returns this
 */
proto.ei.UserVerificationAnalysis.prototype.clearVerifiedProPermit = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.UserVerificationAnalysis.prototype.hasVerifiedProPermit = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional uint32 verified_piggy_breaks = 5;
 * @return {number}
 */
proto.ei.UserVerificationAnalysis.prototype.getVerifiedPiggyBreaks = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.ei.UserVerificationAnalysis} returns this
 */
proto.ei.UserVerificationAnalysis.prototype.setVerifiedPiggyBreaks = function(value) {
  return jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.UserVerificationAnalysis} returns this
 */
proto.ei.UserVerificationAnalysis.prototype.clearVerifiedPiggyBreaks = function() {
  return jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.UserVerificationAnalysis.prototype.hasVerifiedPiggyBreaks = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional uint32 verified_other_iap = 6;
 * @return {number}
 */
proto.ei.UserVerificationAnalysis.prototype.getVerifiedOtherIap = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.ei.UserVerificationAnalysis} returns this
 */
proto.ei.UserVerificationAnalysis.prototype.setVerifiedOtherIap = function(value) {
  return jspb.Message.setField(this, 6, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.UserVerificationAnalysis} returns this
 */
proto.ei.UserVerificationAnalysis.prototype.clearVerifiedOtherIap = function() {
  return jspb.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.UserVerificationAnalysis.prototype.hasVerifiedOtherIap = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional uint32 unverified_iap = 7;
 * @return {number}
 */
proto.ei.UserVerificationAnalysis.prototype.getUnverifiedIap = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {number} value
 * @return {!proto.ei.UserVerificationAnalysis} returns this
 */
proto.ei.UserVerificationAnalysis.prototype.setUnverifiedIap = function(value) {
  return jspb.Message.setField(this, 7, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.UserVerificationAnalysis} returns this
 */
proto.ei.UserVerificationAnalysis.prototype.clearUnverifiedIap = function() {
  return jspb.Message.setField(this, 7, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.UserVerificationAnalysis.prototype.hasUnverifiedIap = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional double gold_earned = 13;
 * @return {number}
 */
proto.ei.UserVerificationAnalysis.prototype.getGoldEarned = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 13, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.ei.UserVerificationAnalysis} returns this
 */
proto.ei.UserVerificationAnalysis.prototype.setGoldEarned = function(value) {
  return jspb.Message.setField(this, 13, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.UserVerificationAnalysis} returns this
 */
proto.ei.UserVerificationAnalysis.prototype.clearGoldEarned = function() {
  return jspb.Message.setField(this, 13, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.UserVerificationAnalysis.prototype.hasGoldEarned = function() {
  return jspb.Message.getField(this, 13) != null;
};


/**
 * optional bool regular_iap_buyer = 22;
 * @return {boolean}
 */
proto.ei.UserVerificationAnalysis.prototype.getRegularIapBuyer = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 22, false));
};


/**
 * @param {boolean} value
 * @return {!proto.ei.UserVerificationAnalysis} returns this
 */
proto.ei.UserVerificationAnalysis.prototype.setRegularIapBuyer = function(value) {
  return jspb.Message.setField(this, 22, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.UserVerificationAnalysis} returns this
 */
proto.ei.UserVerificationAnalysis.prototype.clearRegularIapBuyer = function() {
  return jspb.Message.setField(this, 22, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.UserVerificationAnalysis.prototype.hasRegularIapBuyer = function() {
  return jspb.Message.getField(this, 22) != null;
};


/**
 * optional bool regular_iap_cheater = 23;
 * @return {boolean}
 */
proto.ei.UserVerificationAnalysis.prototype.getRegularIapCheater = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 23, false));
};


/**
 * @param {boolean} value
 * @return {!proto.ei.UserVerificationAnalysis} returns this
 */
proto.ei.UserVerificationAnalysis.prototype.setRegularIapCheater = function(value) {
  return jspb.Message.setField(this, 23, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.UserVerificationAnalysis} returns this
 */
proto.ei.UserVerificationAnalysis.prototype.clearRegularIapCheater = function() {
  return jspb.Message.setField(this, 23, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.UserVerificationAnalysis.prototype.hasRegularIapCheater = function() {
  return jspb.Message.getField(this, 23) != null;
};


/**
 * optional Status artifacts_status = 19;
 * @return {!proto.ei.UserVerificationAnalysis.Status}
 */
proto.ei.UserVerificationAnalysis.prototype.getArtifactsStatus = function() {
  return /** @type {!proto.ei.UserVerificationAnalysis.Status} */ (jspb.Message.getFieldWithDefault(this, 19, 0));
};


/**
 * @param {!proto.ei.UserVerificationAnalysis.Status} value
 * @return {!proto.ei.UserVerificationAnalysis} returns this
 */
proto.ei.UserVerificationAnalysis.prototype.setArtifactsStatus = function(value) {
  return jspb.Message.setField(this, 19, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.UserVerificationAnalysis} returns this
 */
proto.ei.UserVerificationAnalysis.prototype.clearArtifactsStatus = function() {
  return jspb.Message.setField(this, 19, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.UserVerificationAnalysis.prototype.hasArtifactsStatus = function() {
  return jspb.Message.getField(this, 19) != null;
};


/**
 * optional uint32 missions_completed = 8;
 * @return {number}
 */
proto.ei.UserVerificationAnalysis.prototype.getMissionsCompleted = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/**
 * @param {number} value
 * @return {!proto.ei.UserVerificationAnalysis} returns this
 */
proto.ei.UserVerificationAnalysis.prototype.setMissionsCompleted = function(value) {
  return jspb.Message.setField(this, 8, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.UserVerificationAnalysis} returns this
 */
proto.ei.UserVerificationAnalysis.prototype.clearMissionsCompleted = function() {
  return jspb.Message.setField(this, 8, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.UserVerificationAnalysis.prototype.hasMissionsCompleted = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional double artifacts_collected = 9;
 * @return {number}
 */
proto.ei.UserVerificationAnalysis.prototype.getArtifactsCollected = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 9, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.ei.UserVerificationAnalysis} returns this
 */
proto.ei.UserVerificationAnalysis.prototype.setArtifactsCollected = function(value) {
  return jspb.Message.setField(this, 9, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.UserVerificationAnalysis} returns this
 */
proto.ei.UserVerificationAnalysis.prototype.clearArtifactsCollected = function() {
  return jspb.Message.setField(this, 9, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.UserVerificationAnalysis.prototype.hasArtifactsCollected = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional double artifacts_consumed = 10;
 * @return {number}
 */
proto.ei.UserVerificationAnalysis.prototype.getArtifactsConsumed = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 10, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.ei.UserVerificationAnalysis} returns this
 */
proto.ei.UserVerificationAnalysis.prototype.setArtifactsConsumed = function(value) {
  return jspb.Message.setField(this, 10, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.UserVerificationAnalysis} returns this
 */
proto.ei.UserVerificationAnalysis.prototype.clearArtifactsConsumed = function() {
  return jspb.Message.setField(this, 10, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.UserVerificationAnalysis.prototype.hasArtifactsConsumed = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * optional double artifacts_in_inventory = 11;
 * @return {number}
 */
proto.ei.UserVerificationAnalysis.prototype.getArtifactsInInventory = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 11, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.ei.UserVerificationAnalysis} returns this
 */
proto.ei.UserVerificationAnalysis.prototype.setArtifactsInInventory = function(value) {
  return jspb.Message.setField(this, 11, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.UserVerificationAnalysis} returns this
 */
proto.ei.UserVerificationAnalysis.prototype.clearArtifactsInInventory = function() {
  return jspb.Message.setField(this, 11, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.UserVerificationAnalysis.prototype.hasArtifactsInInventory = function() {
  return jspb.Message.getField(this, 11) != null;
};


/**
 * optional uint64 rare_artifacts_in_inventory = 33;
 * @return {number}
 */
proto.ei.UserVerificationAnalysis.prototype.getRareArtifactsInInventory = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 33, 0));
};


/**
 * @param {number} value
 * @return {!proto.ei.UserVerificationAnalysis} returns this
 */
proto.ei.UserVerificationAnalysis.prototype.setRareArtifactsInInventory = function(value) {
  return jspb.Message.setField(this, 33, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.UserVerificationAnalysis} returns this
 */
proto.ei.UserVerificationAnalysis.prototype.clearRareArtifactsInInventory = function() {
  return jspb.Message.setField(this, 33, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.UserVerificationAnalysis.prototype.hasRareArtifactsInInventory = function() {
  return jspb.Message.getField(this, 33) != null;
};


/**
 * optional uint64 rare_artifacts_on_server = 34;
 * @return {number}
 */
proto.ei.UserVerificationAnalysis.prototype.getRareArtifactsOnServer = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 34, 0));
};


/**
 * @param {number} value
 * @return {!proto.ei.UserVerificationAnalysis} returns this
 */
proto.ei.UserVerificationAnalysis.prototype.setRareArtifactsOnServer = function(value) {
  return jspb.Message.setField(this, 34, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.UserVerificationAnalysis} returns this
 */
proto.ei.UserVerificationAnalysis.prototype.clearRareArtifactsOnServer = function() {
  return jspb.Message.setField(this, 34, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.UserVerificationAnalysis.prototype.hasRareArtifactsOnServer = function() {
  return jspb.Message.getField(this, 34) != null;
};


/**
 * optional uint64 legendary_artifacts_in_inventory = 35;
 * @return {number}
 */
proto.ei.UserVerificationAnalysis.prototype.getLegendaryArtifactsInInventory = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 35, 0));
};


/**
 * @param {number} value
 * @return {!proto.ei.UserVerificationAnalysis} returns this
 */
proto.ei.UserVerificationAnalysis.prototype.setLegendaryArtifactsInInventory = function(value) {
  return jspb.Message.setField(this, 35, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.UserVerificationAnalysis} returns this
 */
proto.ei.UserVerificationAnalysis.prototype.clearLegendaryArtifactsInInventory = function() {
  return jspb.Message.setField(this, 35, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.UserVerificationAnalysis.prototype.hasLegendaryArtifactsInInventory = function() {
  return jspb.Message.getField(this, 35) != null;
};


/**
 * optional uint64 legendary_artifacts_on_server = 36;
 * @return {number}
 */
proto.ei.UserVerificationAnalysis.prototype.getLegendaryArtifactsOnServer = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 36, 0));
};


/**
 * @param {number} value
 * @return {!proto.ei.UserVerificationAnalysis} returns this
 */
proto.ei.UserVerificationAnalysis.prototype.setLegendaryArtifactsOnServer = function(value) {
  return jspb.Message.setField(this, 36, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.UserVerificationAnalysis} returns this
 */
proto.ei.UserVerificationAnalysis.prototype.clearLegendaryArtifactsOnServer = function() {
  return jspb.Message.setField(this, 36, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.UserVerificationAnalysis.prototype.hasLegendaryArtifactsOnServer = function() {
  return jspb.Message.getField(this, 36) != null;
};


/**
 * optional double gold_spent_crafting = 21;
 * @return {number}
 */
proto.ei.UserVerificationAnalysis.prototype.getGoldSpentCrafting = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 21, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.ei.UserVerificationAnalysis} returns this
 */
proto.ei.UserVerificationAnalysis.prototype.setGoldSpentCrafting = function(value) {
  return jspb.Message.setField(this, 21, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.UserVerificationAnalysis} returns this
 */
proto.ei.UserVerificationAnalysis.prototype.clearGoldSpentCrafting = function() {
  return jspb.Message.setField(this, 21, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.UserVerificationAnalysis.prototype.hasGoldSpentCrafting = function() {
  return jspb.Message.getField(this, 21) != null;
};


/**
 * optional bool excessive_consumes = 24;
 * @return {boolean}
 */
proto.ei.UserVerificationAnalysis.prototype.getExcessiveConsumes = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 24, false));
};


/**
 * @param {boolean} value
 * @return {!proto.ei.UserVerificationAnalysis} returns this
 */
proto.ei.UserVerificationAnalysis.prototype.setExcessiveConsumes = function(value) {
  return jspb.Message.setField(this, 24, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.UserVerificationAnalysis} returns this
 */
proto.ei.UserVerificationAnalysis.prototype.clearExcessiveConsumes = function() {
  return jspb.Message.setField(this, 24, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.UserVerificationAnalysis.prototype.hasExcessiveConsumes = function() {
  return jspb.Message.getField(this, 24) != null;
};


/**
 * optional bool excessive_inventory = 25;
 * @return {boolean}
 */
proto.ei.UserVerificationAnalysis.prototype.getExcessiveInventory = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 25, false));
};


/**
 * @param {boolean} value
 * @return {!proto.ei.UserVerificationAnalysis} returns this
 */
proto.ei.UserVerificationAnalysis.prototype.setExcessiveInventory = function(value) {
  return jspb.Message.setField(this, 25, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.UserVerificationAnalysis} returns this
 */
proto.ei.UserVerificationAnalysis.prototype.clearExcessiveInventory = function() {
  return jspb.Message.setField(this, 25, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.UserVerificationAnalysis.prototype.hasExcessiveInventory = function() {
  return jspb.Message.getField(this, 25) != null;
};


/**
 * optional bool excessive_spend = 26;
 * @return {boolean}
 */
proto.ei.UserVerificationAnalysis.prototype.getExcessiveSpend = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 26, false));
};


/**
 * @param {boolean} value
 * @return {!proto.ei.UserVerificationAnalysis} returns this
 */
proto.ei.UserVerificationAnalysis.prototype.setExcessiveSpend = function(value) {
  return jspb.Message.setField(this, 26, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.UserVerificationAnalysis} returns this
 */
proto.ei.UserVerificationAnalysis.prototype.clearExcessiveSpend = function() {
  return jspb.Message.setField(this, 26, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.UserVerificationAnalysis.prototype.hasExcessiveSpend = function() {
  return jspb.Message.getField(this, 26) != null;
};


/**
 * optional Status contracts_status = 20;
 * @return {!proto.ei.UserVerificationAnalysis.Status}
 */
proto.ei.UserVerificationAnalysis.prototype.getContractsStatus = function() {
  return /** @type {!proto.ei.UserVerificationAnalysis.Status} */ (jspb.Message.getFieldWithDefault(this, 20, 0));
};


/**
 * @param {!proto.ei.UserVerificationAnalysis.Status} value
 * @return {!proto.ei.UserVerificationAnalysis} returns this
 */
proto.ei.UserVerificationAnalysis.prototype.setContractsStatus = function(value) {
  return jspb.Message.setField(this, 20, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.UserVerificationAnalysis} returns this
 */
proto.ei.UserVerificationAnalysis.prototype.clearContractsStatus = function() {
  return jspb.Message.setField(this, 20, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.UserVerificationAnalysis.prototype.hasContractsStatus = function() {
  return jspb.Message.getField(this, 20) != null;
};


/**
 * optional uint32 num_coop_memberships = 12;
 * @return {number}
 */
proto.ei.UserVerificationAnalysis.prototype.getNumCoopMemberships = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 12, 0));
};


/**
 * @param {number} value
 * @return {!proto.ei.UserVerificationAnalysis} returns this
 */
proto.ei.UserVerificationAnalysis.prototype.setNumCoopMemberships = function(value) {
  return jspb.Message.setField(this, 12, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.UserVerificationAnalysis} returns this
 */
proto.ei.UserVerificationAnalysis.prototype.clearNumCoopMemberships = function() {
  return jspb.Message.setField(this, 12, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.UserVerificationAnalysis.prototype.hasNumCoopMemberships = function() {
  return jspb.Message.getField(this, 12) != null;
};


/**
 * optional uint32 valid_contracts = 16;
 * @return {number}
 */
proto.ei.UserVerificationAnalysis.prototype.getValidContracts = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 16, 0));
};


/**
 * @param {number} value
 * @return {!proto.ei.UserVerificationAnalysis} returns this
 */
proto.ei.UserVerificationAnalysis.prototype.setValidContracts = function(value) {
  return jspb.Message.setField(this, 16, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.UserVerificationAnalysis} returns this
 */
proto.ei.UserVerificationAnalysis.prototype.clearValidContracts = function() {
  return jspb.Message.setField(this, 16, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.UserVerificationAnalysis.prototype.hasValidContracts = function() {
  return jspb.Message.getField(this, 16) != null;
};


/**
 * repeated string invalid_contracts = 17;
 * @return {!Array<string>}
 */
proto.ei.UserVerificationAnalysis.prototype.getInvalidContractsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 17));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.ei.UserVerificationAnalysis} returns this
 */
proto.ei.UserVerificationAnalysis.prototype.setInvalidContractsList = function(value) {
  return jspb.Message.setField(this, 17, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.ei.UserVerificationAnalysis} returns this
 */
proto.ei.UserVerificationAnalysis.prototype.addInvalidContracts = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 17, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.ei.UserVerificationAnalysis} returns this
 */
proto.ei.UserVerificationAnalysis.prototype.clearInvalidContractsList = function() {
  return this.setInvalidContractsList([]);
};


/**
 * optional bool excessive_eop = 28;
 * @return {boolean}
 */
proto.ei.UserVerificationAnalysis.prototype.getExcessiveEop = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 28, false));
};


/**
 * @param {boolean} value
 * @return {!proto.ei.UserVerificationAnalysis} returns this
 */
proto.ei.UserVerificationAnalysis.prototype.setExcessiveEop = function(value) {
  return jspb.Message.setField(this, 28, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.UserVerificationAnalysis} returns this
 */
proto.ei.UserVerificationAnalysis.prototype.clearExcessiveEop = function() {
  return jspb.Message.setField(this, 28, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.UserVerificationAnalysis.prototype.hasExcessiveEop = function() {
  return jspb.Message.getField(this, 28) != null;
};


/**
 * optional bool excessive_invalid_contracts = 29;
 * @return {boolean}
 */
proto.ei.UserVerificationAnalysis.prototype.getExcessiveInvalidContracts = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 29, false));
};


/**
 * @param {boolean} value
 * @return {!proto.ei.UserVerificationAnalysis} returns this
 */
proto.ei.UserVerificationAnalysis.prototype.setExcessiveInvalidContracts = function(value) {
  return jspb.Message.setField(this, 29, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.UserVerificationAnalysis} returns this
 */
proto.ei.UserVerificationAnalysis.prototype.clearExcessiveInvalidContracts = function() {
  return jspb.Message.setField(this, 29, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.UserVerificationAnalysis.prototype.hasExcessiveInvalidContracts = function() {
  return jspb.Message.getField(this, 29) != null;
};


/**
 * optional bool verified = 30;
 * @return {boolean}
 */
proto.ei.UserVerificationAnalysis.prototype.getVerified = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 30, false));
};


/**
 * @param {boolean} value
 * @return {!proto.ei.UserVerificationAnalysis} returns this
 */
proto.ei.UserVerificationAnalysis.prototype.setVerified = function(value) {
  return jspb.Message.setField(this, 30, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.UserVerificationAnalysis} returns this
 */
proto.ei.UserVerificationAnalysis.prototype.clearVerified = function() {
  return jspb.Message.setField(this, 30, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.UserVerificationAnalysis.prototype.hasVerified = function() {
  return jspb.Message.getField(this, 30) != null;
};


/**
 * optional bool verification_override = 31;
 * @return {boolean}
 */
proto.ei.UserVerificationAnalysis.prototype.getVerificationOverride = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 31, false));
};


/**
 * @param {boolean} value
 * @return {!proto.ei.UserVerificationAnalysis} returns this
 */
proto.ei.UserVerificationAnalysis.prototype.setVerificationOverride = function(value) {
  return jspb.Message.setField(this, 31, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.UserVerificationAnalysis} returns this
 */
proto.ei.UserVerificationAnalysis.prototype.clearVerificationOverride = function() {
  return jspb.Message.setField(this, 31, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.UserVerificationAnalysis.prototype.hasVerificationOverride = function() {
  return jspb.Message.getField(this, 31) != null;
};


/**
 * optional bool verification_override_value = 32;
 * @return {boolean}
 */
proto.ei.UserVerificationAnalysis.prototype.getVerificationOverrideValue = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 32, false));
};


/**
 * @param {boolean} value
 * @return {!proto.ei.UserVerificationAnalysis} returns this
 */
proto.ei.UserVerificationAnalysis.prototype.setVerificationOverrideValue = function(value) {
  return jspb.Message.setField(this, 32, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.UserVerificationAnalysis} returns this
 */
proto.ei.UserVerificationAnalysis.prototype.clearVerificationOverrideValue = function() {
  return jspb.Message.setField(this, 32, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.UserVerificationAnalysis.prototype.hasVerificationOverrideValue = function() {
  return jspb.Message.getField(this, 32) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.ei.UserSubscriptionInfo.repeatedFields_ = [9,11];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ei.UserSubscriptionInfo.prototype.toObject = function(opt_includeInstance) {
  return proto.ei.UserSubscriptionInfo.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ei.UserSubscriptionInfo} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.UserSubscriptionInfo.toObject = function(includeInstance, msg) {
  var f, obj = {
    subscriptionLevel: (f = jspb.Message.getField(msg, 13)) == null ? undefined : f,
    nextSubscriptionLevel: (f = jspb.Message.getField(msg, 15)) == null ? undefined : f,
    lockNextSubscriptionLevel: (f = jspb.Message.getBooleanField(msg, 18)) == null ? undefined : f,
    platform: (f = jspb.Message.getField(msg, 10)) == null ? undefined : f,
    originalTransactionId: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    linkedTransactionId: (f = jspb.Message.getField(msg, 16)) == null ? undefined : f,
    acknowledged: (f = jspb.Message.getBooleanField(msg, 17)) == null ? undefined : f,
    firstSubscribed: (f = jspb.Message.getOptionalFloatingPointField(msg, 2)) == null ? undefined : f,
    periodEnd: (f = jspb.Message.getOptionalFloatingPointField(msg, 4)) == null ? undefined : f,
    status: (f = jspb.Message.getField(msg, 5)) == null ? undefined : f,
    storeStatus: (f = jspb.Message.getField(msg, 14)) == null ? undefined : f,
    autoRenew: (f = jspb.Message.getBooleanField(msg, 6)) == null ? undefined : f,
    sandbox: (f = jspb.Message.getBooleanField(msg, 19)) == null ? undefined : f,
    lastUpdated: (f = jspb.Message.getOptionalFloatingPointField(msg, 7)) == null ? undefined : f,
    historyList: jspb.Message.toObjectList(msg.getHistoryList(),
    proto.ei.UserSubscriptionInfo.HistoryEntry.toObject, includeInstance),
    pastUserIdsList: (f = jspb.Message.getRepeatedField(msg, 11)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ei.UserSubscriptionInfo}
 */
proto.ei.UserSubscriptionInfo.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ei.UserSubscriptionInfo;
  return proto.ei.UserSubscriptionInfo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ei.UserSubscriptionInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ei.UserSubscriptionInfo}
 */
proto.ei.UserSubscriptionInfo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 13:
      var value = /** @type {!proto.ei.UserSubscriptionInfo.Level} */ (reader.readEnum());
      msg.setSubscriptionLevel(value);
      break;
    case 15:
      var value = /** @type {!proto.ei.UserSubscriptionInfo.Level} */ (reader.readEnum());
      msg.setNextSubscriptionLevel(value);
      break;
    case 18:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setLockNextSubscriptionLevel(value);
      break;
    case 10:
      var value = /** @type {!proto.ei.Platform} */ (reader.readEnum());
      msg.setPlatform(value);
      break;
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setOriginalTransactionId(value);
      break;
    case 16:
      var value = /** @type {string} */ (reader.readString());
      msg.setLinkedTransactionId(value);
      break;
    case 17:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setAcknowledged(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setFirstSubscribed(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setPeriodEnd(value);
      break;
    case 5:
      var value = /** @type {!proto.ei.UserSubscriptionInfo.Status} */ (reader.readEnum());
      msg.setStatus(value);
      break;
    case 14:
      var value = /** @type {string} */ (reader.readString());
      msg.setStoreStatus(value);
      break;
    case 6:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setAutoRenew(value);
      break;
    case 19:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setSandbox(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setLastUpdated(value);
      break;
    case 9:
      var value = new proto.ei.UserSubscriptionInfo.HistoryEntry;
      reader.readMessage(value,proto.ei.UserSubscriptionInfo.HistoryEntry.deserializeBinaryFromReader);
      msg.addHistory(value);
      break;
    case 11:
      var value = /** @type {string} */ (reader.readString());
      msg.addPastUserIds(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ei.UserSubscriptionInfo.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ei.UserSubscriptionInfo.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ei.UserSubscriptionInfo} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.UserSubscriptionInfo.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {!proto.ei.UserSubscriptionInfo.Level} */ (jspb.Message.getField(message, 13));
  if (f != null) {
    writer.writeEnum(
      13,
      f
    );
  }
  f = /** @type {!proto.ei.UserSubscriptionInfo.Level} */ (jspb.Message.getField(message, 15));
  if (f != null) {
    writer.writeEnum(
      15,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 18));
  if (f != null) {
    writer.writeBool(
      18,
      f
    );
  }
  f = /** @type {!proto.ei.Platform} */ (jspb.Message.getField(message, 10));
  if (f != null) {
    writer.writeEnum(
      10,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 16));
  if (f != null) {
    writer.writeString(
      16,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 17));
  if (f != null) {
    writer.writeBool(
      17,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeDouble(
      2,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeDouble(
      4,
      f
    );
  }
  f = /** @type {!proto.ei.UserSubscriptionInfo.Status} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeEnum(
      5,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 14));
  if (f != null) {
    writer.writeString(
      14,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeBool(
      6,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 19));
  if (f != null) {
    writer.writeBool(
      19,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 7));
  if (f != null) {
    writer.writeDouble(
      7,
      f
    );
  }
  f = message.getHistoryList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      9,
      f,
      proto.ei.UserSubscriptionInfo.HistoryEntry.serializeBinaryToWriter
    );
  }
  f = message.getPastUserIdsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      11,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.ei.UserSubscriptionInfo.Level = {
  STANDARD: 0,
  PRO: 1
};

/**
 * @enum {number}
 */
proto.ei.UserSubscriptionInfo.Status = {
  UNKNOWN: 0,
  ACTIVE: 1,
  EXPIRED: 2,
  REVOKED: 3,
  GRACE_PERIOD: 4,
  PAUSE_HOLD: 5
};




if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ei.UserSubscriptionInfo.HistoryEntry.prototype.toObject = function(opt_includeInstance) {
  return proto.ei.UserSubscriptionInfo.HistoryEntry.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ei.UserSubscriptionInfo.HistoryEntry} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.UserSubscriptionInfo.HistoryEntry.toObject = function(includeInstance, msg) {
  var f, obj = {
    timestamp: (f = jspb.Message.getOptionalFloatingPointField(msg, 1)) == null ? undefined : f,
    messageId: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,
    message: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ei.UserSubscriptionInfo.HistoryEntry}
 */
proto.ei.UserSubscriptionInfo.HistoryEntry.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ei.UserSubscriptionInfo.HistoryEntry;
  return proto.ei.UserSubscriptionInfo.HistoryEntry.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ei.UserSubscriptionInfo.HistoryEntry} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ei.UserSubscriptionInfo.HistoryEntry}
 */
proto.ei.UserSubscriptionInfo.HistoryEntry.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setTimestamp(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setMessageId(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setMessage(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ei.UserSubscriptionInfo.HistoryEntry.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ei.UserSubscriptionInfo.HistoryEntry.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ei.UserSubscriptionInfo.HistoryEntry} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.UserSubscriptionInfo.HistoryEntry.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {number} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeDouble(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional double timestamp = 1;
 * @return {number}
 */
proto.ei.UserSubscriptionInfo.HistoryEntry.prototype.getTimestamp = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 1, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.ei.UserSubscriptionInfo.HistoryEntry} returns this
 */
proto.ei.UserSubscriptionInfo.HistoryEntry.prototype.setTimestamp = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.UserSubscriptionInfo.HistoryEntry} returns this
 */
proto.ei.UserSubscriptionInfo.HistoryEntry.prototype.clearTimestamp = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.UserSubscriptionInfo.HistoryEntry.prototype.hasTimestamp = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string message_id = 2;
 * @return {string}
 */
proto.ei.UserSubscriptionInfo.HistoryEntry.prototype.getMessageId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.ei.UserSubscriptionInfo.HistoryEntry} returns this
 */
proto.ei.UserSubscriptionInfo.HistoryEntry.prototype.setMessageId = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.UserSubscriptionInfo.HistoryEntry} returns this
 */
proto.ei.UserSubscriptionInfo.HistoryEntry.prototype.clearMessageId = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.UserSubscriptionInfo.HistoryEntry.prototype.hasMessageId = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string message = 3;
 * @return {string}
 */
proto.ei.UserSubscriptionInfo.HistoryEntry.prototype.getMessage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.ei.UserSubscriptionInfo.HistoryEntry} returns this
 */
proto.ei.UserSubscriptionInfo.HistoryEntry.prototype.setMessage = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.UserSubscriptionInfo.HistoryEntry} returns this
 */
proto.ei.UserSubscriptionInfo.HistoryEntry.prototype.clearMessage = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.UserSubscriptionInfo.HistoryEntry.prototype.hasMessage = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional Level subscription_level = 13;
 * @return {!proto.ei.UserSubscriptionInfo.Level}
 */
proto.ei.UserSubscriptionInfo.prototype.getSubscriptionLevel = function() {
  return /** @type {!proto.ei.UserSubscriptionInfo.Level} */ (jspb.Message.getFieldWithDefault(this, 13, 0));
};


/**
 * @param {!proto.ei.UserSubscriptionInfo.Level} value
 * @return {!proto.ei.UserSubscriptionInfo} returns this
 */
proto.ei.UserSubscriptionInfo.prototype.setSubscriptionLevel = function(value) {
  return jspb.Message.setField(this, 13, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.UserSubscriptionInfo} returns this
 */
proto.ei.UserSubscriptionInfo.prototype.clearSubscriptionLevel = function() {
  return jspb.Message.setField(this, 13, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.UserSubscriptionInfo.prototype.hasSubscriptionLevel = function() {
  return jspb.Message.getField(this, 13) != null;
};


/**
 * optional Level next_subscription_level = 15;
 * @return {!proto.ei.UserSubscriptionInfo.Level}
 */
proto.ei.UserSubscriptionInfo.prototype.getNextSubscriptionLevel = function() {
  return /** @type {!proto.ei.UserSubscriptionInfo.Level} */ (jspb.Message.getFieldWithDefault(this, 15, 0));
};


/**
 * @param {!proto.ei.UserSubscriptionInfo.Level} value
 * @return {!proto.ei.UserSubscriptionInfo} returns this
 */
proto.ei.UserSubscriptionInfo.prototype.setNextSubscriptionLevel = function(value) {
  return jspb.Message.setField(this, 15, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.UserSubscriptionInfo} returns this
 */
proto.ei.UserSubscriptionInfo.prototype.clearNextSubscriptionLevel = function() {
  return jspb.Message.setField(this, 15, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.UserSubscriptionInfo.prototype.hasNextSubscriptionLevel = function() {
  return jspb.Message.getField(this, 15) != null;
};


/**
 * optional bool lock_next_subscription_level = 18;
 * @return {boolean}
 */
proto.ei.UserSubscriptionInfo.prototype.getLockNextSubscriptionLevel = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 18, false));
};


/**
 * @param {boolean} value
 * @return {!proto.ei.UserSubscriptionInfo} returns this
 */
proto.ei.UserSubscriptionInfo.prototype.setLockNextSubscriptionLevel = function(value) {
  return jspb.Message.setField(this, 18, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.UserSubscriptionInfo} returns this
 */
proto.ei.UserSubscriptionInfo.prototype.clearLockNextSubscriptionLevel = function() {
  return jspb.Message.setField(this, 18, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.UserSubscriptionInfo.prototype.hasLockNextSubscriptionLevel = function() {
  return jspb.Message.getField(this, 18) != null;
};


/**
 * optional Platform platform = 10;
 * @return {!proto.ei.Platform}
 */
proto.ei.UserSubscriptionInfo.prototype.getPlatform = function() {
  return /** @type {!proto.ei.Platform} */ (jspb.Message.getFieldWithDefault(this, 10, 0));
};


/**
 * @param {!proto.ei.Platform} value
 * @return {!proto.ei.UserSubscriptionInfo} returns this
 */
proto.ei.UserSubscriptionInfo.prototype.setPlatform = function(value) {
  return jspb.Message.setField(this, 10, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.UserSubscriptionInfo} returns this
 */
proto.ei.UserSubscriptionInfo.prototype.clearPlatform = function() {
  return jspb.Message.setField(this, 10, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.UserSubscriptionInfo.prototype.hasPlatform = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * optional string original_transaction_id = 1;
 * @return {string}
 */
proto.ei.UserSubscriptionInfo.prototype.getOriginalTransactionId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.ei.UserSubscriptionInfo} returns this
 */
proto.ei.UserSubscriptionInfo.prototype.setOriginalTransactionId = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.UserSubscriptionInfo} returns this
 */
proto.ei.UserSubscriptionInfo.prototype.clearOriginalTransactionId = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.UserSubscriptionInfo.prototype.hasOriginalTransactionId = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string linked_transaction_id = 16;
 * @return {string}
 */
proto.ei.UserSubscriptionInfo.prototype.getLinkedTransactionId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 16, ""));
};


/**
 * @param {string} value
 * @return {!proto.ei.UserSubscriptionInfo} returns this
 */
proto.ei.UserSubscriptionInfo.prototype.setLinkedTransactionId = function(value) {
  return jspb.Message.setField(this, 16, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.UserSubscriptionInfo} returns this
 */
proto.ei.UserSubscriptionInfo.prototype.clearLinkedTransactionId = function() {
  return jspb.Message.setField(this, 16, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.UserSubscriptionInfo.prototype.hasLinkedTransactionId = function() {
  return jspb.Message.getField(this, 16) != null;
};


/**
 * optional bool acknowledged = 17;
 * @return {boolean}
 */
proto.ei.UserSubscriptionInfo.prototype.getAcknowledged = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 17, false));
};


/**
 * @param {boolean} value
 * @return {!proto.ei.UserSubscriptionInfo} returns this
 */
proto.ei.UserSubscriptionInfo.prototype.setAcknowledged = function(value) {
  return jspb.Message.setField(this, 17, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.UserSubscriptionInfo} returns this
 */
proto.ei.UserSubscriptionInfo.prototype.clearAcknowledged = function() {
  return jspb.Message.setField(this, 17, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.UserSubscriptionInfo.prototype.hasAcknowledged = function() {
  return jspb.Message.getField(this, 17) != null;
};


/**
 * optional double first_subscribed = 2;
 * @return {number}
 */
proto.ei.UserSubscriptionInfo.prototype.getFirstSubscribed = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 2, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.ei.UserSubscriptionInfo} returns this
 */
proto.ei.UserSubscriptionInfo.prototype.setFirstSubscribed = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.UserSubscriptionInfo} returns this
 */
proto.ei.UserSubscriptionInfo.prototype.clearFirstSubscribed = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.UserSubscriptionInfo.prototype.hasFirstSubscribed = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional double period_end = 4;
 * @return {number}
 */
proto.ei.UserSubscriptionInfo.prototype.getPeriodEnd = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 4, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.ei.UserSubscriptionInfo} returns this
 */
proto.ei.UserSubscriptionInfo.prototype.setPeriodEnd = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.UserSubscriptionInfo} returns this
 */
proto.ei.UserSubscriptionInfo.prototype.clearPeriodEnd = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.UserSubscriptionInfo.prototype.hasPeriodEnd = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional Status status = 5;
 * @return {!proto.ei.UserSubscriptionInfo.Status}
 */
proto.ei.UserSubscriptionInfo.prototype.getStatus = function() {
  return /** @type {!proto.ei.UserSubscriptionInfo.Status} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {!proto.ei.UserSubscriptionInfo.Status} value
 * @return {!proto.ei.UserSubscriptionInfo} returns this
 */
proto.ei.UserSubscriptionInfo.prototype.setStatus = function(value) {
  return jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.UserSubscriptionInfo} returns this
 */
proto.ei.UserSubscriptionInfo.prototype.clearStatus = function() {
  return jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.UserSubscriptionInfo.prototype.hasStatus = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional string store_status = 14;
 * @return {string}
 */
proto.ei.UserSubscriptionInfo.prototype.getStoreStatus = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 14, ""));
};


/**
 * @param {string} value
 * @return {!proto.ei.UserSubscriptionInfo} returns this
 */
proto.ei.UserSubscriptionInfo.prototype.setStoreStatus = function(value) {
  return jspb.Message.setField(this, 14, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.UserSubscriptionInfo} returns this
 */
proto.ei.UserSubscriptionInfo.prototype.clearStoreStatus = function() {
  return jspb.Message.setField(this, 14, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.UserSubscriptionInfo.prototype.hasStoreStatus = function() {
  return jspb.Message.getField(this, 14) != null;
};


/**
 * optional bool auto_renew = 6;
 * @return {boolean}
 */
proto.ei.UserSubscriptionInfo.prototype.getAutoRenew = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 6, false));
};


/**
 * @param {boolean} value
 * @return {!proto.ei.UserSubscriptionInfo} returns this
 */
proto.ei.UserSubscriptionInfo.prototype.setAutoRenew = function(value) {
  return jspb.Message.setField(this, 6, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.UserSubscriptionInfo} returns this
 */
proto.ei.UserSubscriptionInfo.prototype.clearAutoRenew = function() {
  return jspb.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.UserSubscriptionInfo.prototype.hasAutoRenew = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional bool sandbox = 19;
 * @return {boolean}
 */
proto.ei.UserSubscriptionInfo.prototype.getSandbox = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 19, false));
};


/**
 * @param {boolean} value
 * @return {!proto.ei.UserSubscriptionInfo} returns this
 */
proto.ei.UserSubscriptionInfo.prototype.setSandbox = function(value) {
  return jspb.Message.setField(this, 19, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.UserSubscriptionInfo} returns this
 */
proto.ei.UserSubscriptionInfo.prototype.clearSandbox = function() {
  return jspb.Message.setField(this, 19, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.UserSubscriptionInfo.prototype.hasSandbox = function() {
  return jspb.Message.getField(this, 19) != null;
};


/**
 * optional double last_updated = 7;
 * @return {number}
 */
proto.ei.UserSubscriptionInfo.prototype.getLastUpdated = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 7, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.ei.UserSubscriptionInfo} returns this
 */
proto.ei.UserSubscriptionInfo.prototype.setLastUpdated = function(value) {
  return jspb.Message.setField(this, 7, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.UserSubscriptionInfo} returns this
 */
proto.ei.UserSubscriptionInfo.prototype.clearLastUpdated = function() {
  return jspb.Message.setField(this, 7, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.UserSubscriptionInfo.prototype.hasLastUpdated = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * repeated HistoryEntry history = 9;
 * @return {!Array<!proto.ei.UserSubscriptionInfo.HistoryEntry>}
 */
proto.ei.UserSubscriptionInfo.prototype.getHistoryList = function() {
  return /** @type{!Array<!proto.ei.UserSubscriptionInfo.HistoryEntry>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.ei.UserSubscriptionInfo.HistoryEntry, 9));
};


/**
 * @param {!Array<!proto.ei.UserSubscriptionInfo.HistoryEntry>} value
 * @return {!proto.ei.UserSubscriptionInfo} returns this
*/
proto.ei.UserSubscriptionInfo.prototype.setHistoryList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 9, value);
};


/**
 * @param {!proto.ei.UserSubscriptionInfo.HistoryEntry=} opt_value
 * @param {number=} opt_index
 * @return {!proto.ei.UserSubscriptionInfo.HistoryEntry}
 */
proto.ei.UserSubscriptionInfo.prototype.addHistory = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 9, opt_value, proto.ei.UserSubscriptionInfo.HistoryEntry, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.ei.UserSubscriptionInfo} returns this
 */
proto.ei.UserSubscriptionInfo.prototype.clearHistoryList = function() {
  return this.setHistoryList([]);
};


/**
 * repeated string past_user_ids = 11;
 * @return {!Array<string>}
 */
proto.ei.UserSubscriptionInfo.prototype.getPastUserIdsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 11));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.ei.UserSubscriptionInfo} returns this
 */
proto.ei.UserSubscriptionInfo.prototype.setPastUserIdsList = function(value) {
  return jspb.Message.setField(this, 11, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.ei.UserSubscriptionInfo} returns this
 */
proto.ei.UserSubscriptionInfo.prototype.addPastUserIds = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 11, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.ei.UserSubscriptionInfo} returns this
 */
proto.ei.UserSubscriptionInfo.prototype.clearPastUserIdsList = function() {
  return this.setPastUserIdsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ei.SubscriptionChangeHintRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.ei.SubscriptionChangeHintRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ei.SubscriptionChangeHintRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.SubscriptionChangeHintRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    rinfo: (f = msg.getRinfo()) && proto.ei.BasicRequestInfo.toObject(includeInstance, f),
    originalTransactionId: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    nextSubscriptionLevel: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ei.SubscriptionChangeHintRequest}
 */
proto.ei.SubscriptionChangeHintRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ei.SubscriptionChangeHintRequest;
  return proto.ei.SubscriptionChangeHintRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ei.SubscriptionChangeHintRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ei.SubscriptionChangeHintRequest}
 */
proto.ei.SubscriptionChangeHintRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 3:
      var value = new proto.ei.BasicRequestInfo;
      reader.readMessage(value,proto.ei.BasicRequestInfo.deserializeBinaryFromReader);
      msg.setRinfo(value);
      break;
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setOriginalTransactionId(value);
      break;
    case 2:
      var value = /** @type {!proto.ei.UserSubscriptionInfo.Level} */ (reader.readEnum());
      msg.setNextSubscriptionLevel(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ei.SubscriptionChangeHintRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ei.SubscriptionChangeHintRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ei.SubscriptionChangeHintRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.SubscriptionChangeHintRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRinfo();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.ei.BasicRequestInfo.serializeBinaryToWriter
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {!proto.ei.UserSubscriptionInfo.Level} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeEnum(
      2,
      f
    );
  }
};


/**
 * optional BasicRequestInfo rinfo = 3;
 * @return {?proto.ei.BasicRequestInfo}
 */
proto.ei.SubscriptionChangeHintRequest.prototype.getRinfo = function() {
  return /** @type{?proto.ei.BasicRequestInfo} */ (
    jspb.Message.getWrapperField(this, proto.ei.BasicRequestInfo, 3));
};


/**
 * @param {?proto.ei.BasicRequestInfo|undefined} value
 * @return {!proto.ei.SubscriptionChangeHintRequest} returns this
*/
proto.ei.SubscriptionChangeHintRequest.prototype.setRinfo = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.ei.SubscriptionChangeHintRequest} returns this
 */
proto.ei.SubscriptionChangeHintRequest.prototype.clearRinfo = function() {
  return this.setRinfo(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.SubscriptionChangeHintRequest.prototype.hasRinfo = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional string original_transaction_id = 1;
 * @return {string}
 */
proto.ei.SubscriptionChangeHintRequest.prototype.getOriginalTransactionId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.ei.SubscriptionChangeHintRequest} returns this
 */
proto.ei.SubscriptionChangeHintRequest.prototype.setOriginalTransactionId = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.SubscriptionChangeHintRequest} returns this
 */
proto.ei.SubscriptionChangeHintRequest.prototype.clearOriginalTransactionId = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.SubscriptionChangeHintRequest.prototype.hasOriginalTransactionId = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional UserSubscriptionInfo.Level next_subscription_level = 2;
 * @return {!proto.ei.UserSubscriptionInfo.Level}
 */
proto.ei.SubscriptionChangeHintRequest.prototype.getNextSubscriptionLevel = function() {
  return /** @type {!proto.ei.UserSubscriptionInfo.Level} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {!proto.ei.UserSubscriptionInfo.Level} value
 * @return {!proto.ei.SubscriptionChangeHintRequest} returns this
 */
proto.ei.SubscriptionChangeHintRequest.prototype.setNextSubscriptionLevel = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.SubscriptionChangeHintRequest} returns this
 */
proto.ei.SubscriptionChangeHintRequest.prototype.clearNextSubscriptionLevel = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.SubscriptionChangeHintRequest.prototype.hasNextSubscriptionLevel = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ei.CXPEvalRolloutInfo.prototype.toObject = function(opt_includeInstance) {
  return proto.ei.CXPEvalRolloutInfo.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ei.CXPEvalRolloutInfo} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.CXPEvalRolloutInfo.toObject = function(includeInstance, msg) {
  var f, obj = {
    currentId: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    basisPoints: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ei.CXPEvalRolloutInfo}
 */
proto.ei.CXPEvalRolloutInfo.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ei.CXPEvalRolloutInfo;
  return proto.ei.CXPEvalRolloutInfo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ei.CXPEvalRolloutInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ei.CXPEvalRolloutInfo}
 */
proto.ei.CXPEvalRolloutInfo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setCurrentId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setBasisPoints(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ei.CXPEvalRolloutInfo.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ei.CXPEvalRolloutInfo.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ei.CXPEvalRolloutInfo} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.CXPEvalRolloutInfo.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeUint32(
      2,
      f
    );
  }
};


/**
 * optional string current_id = 1;
 * @return {string}
 */
proto.ei.CXPEvalRolloutInfo.prototype.getCurrentId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.ei.CXPEvalRolloutInfo} returns this
 */
proto.ei.CXPEvalRolloutInfo.prototype.setCurrentId = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.CXPEvalRolloutInfo} returns this
 */
proto.ei.CXPEvalRolloutInfo.prototype.clearCurrentId = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.CXPEvalRolloutInfo.prototype.hasCurrentId = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional uint32 basis_points = 2;
 * @return {number}
 */
proto.ei.CXPEvalRolloutInfo.prototype.getBasisPoints = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.ei.CXPEvalRolloutInfo} returns this
 */
proto.ei.CXPEvalRolloutInfo.prototype.setBasisPoints = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.CXPEvalRolloutInfo} returns this
 */
proto.ei.CXPEvalRolloutInfo.prototype.clearBasisPoints = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.CXPEvalRolloutInfo.prototype.hasBasisPoints = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * @enum {number}
 */
proto.ei.Platform = {
  UNKNOWN_PLATFORM: 0,
  IOS: 1,
  DROID: 2
};

/**
 * @enum {number}
 */
proto.ei.DeviceFormFactor = {
  UNKNOWN_DEVICE: 0,
  PHONE: 1,
  TABLET: 2
};

/**
 * @enum {number}
 */
proto.ei.AdNetwork = {
  VUNGLE: 0,
  CHARTBOOST: 1,
  AD_COLONY: 2,
  HYPER_MX: 3,
  UNITY: 4,
  FACEBOOK: 5,
  APPLOVIN: 6
};

/**
 * @enum {number}
 */
proto.ei.Egg = {
  EDIBLE: 1,
  SUPERFOOD: 2,
  MEDICAL: 3,
  ROCKET_FUEL: 4,
  SUPER_MATERIAL: 5,
  FUSION: 6,
  QUANTUM: 7,
  IMMORTALITY: 8,
  TACHYON: 9,
  GRAVITON: 10,
  DILITHIUM: 11,
  PRODIGY: 12,
  TERRAFORM: 13,
  ANTIMATTER: 14,
  DARK_MATTER: 15,
  AI: 16,
  NEBULA: 17,
  UNIVERSE: 18,
  ENLIGHTENMENT: 19,
  CHOCOLATE: 100,
  EASTER: 101,
  WATERBALLOON: 102,
  FIREWORK: 103,
  PUMPKIN: 104,
  UNKNOWN: 1000
};

/**
 * @enum {number}
 */
proto.ei.FarmType = {
  EMPTY: 1,
  HOME: 2,
  CONTRACT: 3
};

/**
 * @enum {number}
 */
proto.ei.GoalType = {
  EGGS_LAID: 1,
  UNKNOWN_GOAL: 100
};

/**
 * @enum {number}
 */
proto.ei.RewardType = {
  CASH: 1,
  GOLD: 2,
  SOUL_EGGS: 3,
  EGGS_OF_PROPHECY: 4,
  EPIC_RESEARCH_ITEM: 5,
  PIGGY_FILL: 6,
  PIGGY_MULTIPLIER: 7,
  PIGGY_LEVEL_BUMP: 8,
  BOOST: 9,
  BOOST_TOKEN: 10,
  ARTIFACT: 11,
  ARTIFACT_CASE: 12,
  CHICKEN: 13,
  SHELL_SCRIPT: 14,
  UNKNOWN_REWARD: 100
};

/**
 * @enum {number}
 */
proto.ei.UILocation = {
  NONE: 0,
  SHOP: 1,
  BOOST_SHOP: 2,
  PIGGY: 3,
  PRO_PERMIT: 4,
  ULTRA_SHOP: 10,
  SHELLS: 5,
  SHELL_SETS: 6,
  SHELLS_SHOWCASE: 12,
  CHICKENS: 7,
  CHICKEN_HATS: 11,
  EPIC_RESEARCH: 8,
  SETTINGS: 9,
  HELP: 13,
  UNIVERSITY: 14
};

/**
 * @enum {number}
 */
proto.ei.UserType = {
  ALL_USERS: 0,
  EGGED_UP: 15,
  CONTRACTS_UNLOCKED: 1,
  ARTIFACTS_UNLOCKED: 3,
  FUEL_TANK_UNLOCKED: 4,
  PRO_PERMIT_ACTIVE: 5,
  ULTRA_ACTIVE: 6,
  NO_PRO_PERMIT: 7,
  NO_ULTRA: 8,
  CONTRACTS_INACTIVE: 9,
  CONTRACTS_ACTIVE: 10,
  PLAYING_CONTRACT: 11,
  ARTIFACTS_INACTIVE: 12,
  ARTIFACTS_ACTIVE: 13,
  PRESTIGE_READY: 14,
  PIGGY_HESITANT: 16
};

/**
 * @enum {number}
 */
proto.ei.LeaderboardScope = {
  ALL_TIME: 0,
  CURRENT_SEASON: 1
};

goog.object.extend(exports, proto.ei);
